Search.setIndex({"docnames": ["_as_gen/cross_reference", "_as_gen/cross_reference.cross_match", "_as_gen/cross_reference.cross_match_table", "_as_gen/cross_reference.reduce_match_database", "_as_gen/schema", "_as_gen/schema.ReductionSchema", "_as_gen/schema.ReductionSchema.DBPATH", "_as_gen/schema.ReductionSchema.INSTRUMENTAL", "_as_gen/schema.ReductionSchema.INSTRUMENT_PARAMS", "_as_gen/schema.ReductionSchema.IO_PARAMS", "_as_gen/schema.ReductionSchema.OBJECT_PARAMS", "_as_gen/schema.ReductionSchema.OTYPES", "_as_gen/schema.ReductionSchema.POISSON", "_as_gen/schema.ReductionSchema.POISSON_PARAMS", "_as_gen/schema.ReductionSchema.PSF", "_as_gen/schema.ReductionSchema.REFDBS", "_as_gen/schema.ReductionSchema.RUN_PARAMS", "_as_gen/schema.ReductionSchema.__init__", "_as_gen/schema.ReductionSchema.clear", "_as_gen/schema.ReductionSchema.copy", "_as_gen/schema.ReductionSchema.from_file", "_as_gen/schema.ReductionSchema.fromkeys", "_as_gen/schema.ReductionSchema.get", "_as_gen/schema.ReductionSchema.isvalid", "_as_gen/schema.ReductionSchema.items", "_as_gen/schema.ReductionSchema.keys", "_as_gen/schema.ReductionSchema.pop", "_as_gen/schema.ReductionSchema.popitem", "_as_gen/schema.ReductionSchema.setdefault", "_as_gen/schema.ReductionSchema.update", "_as_gen/schema.ReductionSchema.values", "_as_gen/schema.Schema", "_as_gen/schema.Schema.__init__", "_as_gen/schema.Schema.clear", "_as_gen/schema.Schema.copy", "_as_gen/schema.Schema.from_file", "_as_gen/schema.Schema.fromkeys", "_as_gen/schema.Schema.get", "_as_gen/schema.Schema.isvalid", "_as_gen/schema.Schema.items", "_as_gen/schema.Schema.keys", "_as_gen/schema.Schema.pop", "_as_gen/schema.Schema.popitem", "_as_gen/schema.Schema.setdefault", "_as_gen/schema.Schema.update", "_as_gen/schema.Schema.values", "_as_gen/schema.SourceTableSchema", "_as_gen/schema.SourceTableSchema.__init__", "_as_gen/schema.SourceTableSchema.available_coordinate_frames", "_as_gen/schema.SourceTableSchema.clear", "_as_gen/schema.SourceTableSchema.column_map", "_as_gen/schema.SourceTableSchema.construct", "_as_gen/schema.SourceTableSchema.coordinate_columns", "_as_gen/schema.SourceTableSchema.coordinate_frame", "_as_gen/schema.SourceTableSchema.coordinate_system", "_as_gen/schema.SourceTableSchema.copy", "_as_gen/schema.SourceTableSchema.default_coord_system", "_as_gen/schema.SourceTableSchema.from_file", "_as_gen/schema.SourceTableSchema.fromkeys", "_as_gen/schema.SourceTableSchema.get", "_as_gen/schema.SourceTableSchema.inv_column_map", "_as_gen/schema.SourceTableSchema.isvalid", "_as_gen/schema.SourceTableSchema.items", "_as_gen/schema.SourceTableSchema.keys", "_as_gen/schema.SourceTableSchema.object_map", "_as_gen/schema.SourceTableSchema.pop", "_as_gen/schema.SourceTableSchema.popitem", "_as_gen/schema.SourceTableSchema.setdefault", "_as_gen/schema.SourceTableSchema.update", "_as_gen/schema.SourceTableSchema.values", "_as_gen/stats.utilities", "_as_gen/stats.utilities.uniform_sample_spherical", "_as_gen/structures.databases", "_as_gen/structures.databases.DBRegistry", "_as_gen/structures.databases.DBRegistry.__init__", "_as_gen/structures.databases.DBRegistry.clear", "_as_gen/structures.databases.DBRegistry.copy", "_as_gen/structures.databases.DBRegistry.fromkeys", "_as_gen/structures.databases.DBRegistry.get", "_as_gen/structures.databases.DBRegistry.items", "_as_gen/structures.databases.DBRegistry.keys", "_as_gen/structures.databases.DBRegistry.pop", "_as_gen/structures.databases.DBRegistry.popitem", "_as_gen/structures.databases.DBRegistry.setdefault", "_as_gen/structures.databases.DBRegistry.update", "_as_gen/structures.databases.DBRegistry.values", "_as_gen/structures.databases.LocalDatabase", "_as_gen/structures.databases.LocalDatabase.__init__", "_as_gen/structures.databases.LocalDatabase.add_sources_to_poisson", "_as_gen/structures.databases.LocalDatabase.class_table_schema", "_as_gen/structures.databases.LocalDatabase.count", "_as_gen/structures.databases.LocalDatabase.create_poisson_map", "_as_gen/structures.databases.LocalDatabase.default_poisson_map", "_as_gen/structures.databases.LocalDatabase.get_default_poisson_map", "_as_gen/structures.databases.LocalDatabase.get_poisson_map", "_as_gen/structures.databases.LocalDatabase.poisson_map", "_as_gen/structures.databases.LocalDatabase.query_radius", "_as_gen/structures.databases.LocalDatabase.random_sample_count", "_as_gen/structures.databases.LocalDatabase.set_poisson_map", "_as_gen/structures.databases.LocalDatabase.source_match", "_as_gen/structures.databases.NED", "_as_gen/structures.databases.NED.__init__", "_as_gen/structures.databases.NED.add_sources_to_poisson", "_as_gen/structures.databases.NED.class_table_schema", "_as_gen/structures.databases.NED.count", "_as_gen/structures.databases.NED.create_poisson_map", "_as_gen/structures.databases.NED.default_poisson_map", "_as_gen/structures.databases.NED.get_default_poisson_map", "_as_gen/structures.databases.NED.get_poisson_map", "_as_gen/structures.databases.NED.poisson_map", "_as_gen/structures.databases.NED.query_radius", "_as_gen/structures.databases.NED.random_sample_count", "_as_gen/structures.databases.NED.set_poisson_map", "_as_gen/structures.databases.NED.source_match", "_as_gen/structures.databases.RemoteDatabase", "_as_gen/structures.databases.RemoteDatabase.__init__", "_as_gen/structures.databases.RemoteDatabase.add_sources_to_poisson", "_as_gen/structures.databases.RemoteDatabase.class_table_schema", "_as_gen/structures.databases.RemoteDatabase.count", "_as_gen/structures.databases.RemoteDatabase.create_poisson_map", "_as_gen/structures.databases.RemoteDatabase.default_poisson_map", "_as_gen/structures.databases.RemoteDatabase.get_default_poisson_map", "_as_gen/structures.databases.RemoteDatabase.get_poisson_map", "_as_gen/structures.databases.RemoteDatabase.poisson_map", "_as_gen/structures.databases.RemoteDatabase.query_radius", "_as_gen/structures.databases.RemoteDatabase.random_sample_count", "_as_gen/structures.databases.RemoteDatabase.set_poisson_map", "_as_gen/structures.databases.RemoteDatabase.source_match", "_as_gen/structures.databases.SIMBAD", "_as_gen/structures.databases.SIMBAD.__init__", "_as_gen/structures.databases.SIMBAD.add_sources_to_poisson", "_as_gen/structures.databases.SIMBAD.class_table_schema", "_as_gen/structures.databases.SIMBAD.count", "_as_gen/structures.databases.SIMBAD.create_poisson_map", "_as_gen/structures.databases.SIMBAD.default_poisson_map", "_as_gen/structures.databases.SIMBAD.get_default_poisson_map", "_as_gen/structures.databases.SIMBAD.get_poisson_map", "_as_gen/structures.databases.SIMBAD.poisson_map", "_as_gen/structures.databases.SIMBAD.query_radius", "_as_gen/structures.databases.SIMBAD.random_sample_count", "_as_gen/structures.databases.SIMBAD.set_poisson_map", "_as_gen/structures.databases.SIMBAD.source_match", "_as_gen/structures.databases.SourceDatabase", "_as_gen/structures.databases.SourceDatabase.__init__", "_as_gen/structures.databases.SourceDatabase.add_sources_to_poisson", "_as_gen/structures.databases.SourceDatabase.class_table_schema", "_as_gen/structures.databases.SourceDatabase.count", "_as_gen/structures.databases.SourceDatabase.create_poisson_map", "_as_gen/structures.databases.SourceDatabase.default_poisson_map", "_as_gen/structures.databases.SourceDatabase.get_default_poisson_map", "_as_gen/structures.databases.SourceDatabase.get_poisson_map", "_as_gen/structures.databases.SourceDatabase.poisson_map", "_as_gen/structures.databases.SourceDatabase.query_radius", "_as_gen/structures.databases.SourceDatabase.random_sample_count", "_as_gen/structures.databases.SourceDatabase.set_poisson_map", "_as_gen/structures.databases.SourceDatabase.source_match", "_as_gen/structures.map", "_as_gen/structures.map.Map", "_as_gen/structures.map.Map.__init__", "_as_gen/structures.map.Map.coordinate_frame", "_as_gen/structures.map.MapAtlas", "_as_gen/structures.map.MapAtlas.__init__", "_as_gen/structures.map.MapAtlas.coordinate_frame", "_as_gen/structures.map.MapAtlas.generate", "_as_gen/structures.map.MapAtlas.get_map", "_as_gen/structures.map.MapAtlas.has_maps", "_as_gen/structures.map.MapAtlas.hdus", "_as_gen/structures.map.MapAtlas.map_names", "_as_gen/structures.map.MapAtlas.pixel_positions", "_as_gen/structures.map.MapAtlas.remove", "_as_gen/structures.map.MapAtlas.reshape_healpix", "_as_gen/structures.map.StatAtlas", "_as_gen/structures.map.StatAtlas.__init__", "_as_gen/structures.map.StatAtlas.append_to_fits", "_as_gen/structures.map.StatAtlas.build_poisson_map", "_as_gen/structures.map.StatAtlas.build_poisson_map_MAP", "_as_gen/structures.map.StatAtlas.build_poisson_map_NNR", "_as_gen/structures.map.StatAtlas.build_poisson_map_gp", "_as_gen/structures.map.StatAtlas.build_poisson_maps", "_as_gen/structures.map.StatAtlas.coordinate_frame", "_as_gen/structures.map.StatAtlas.generate", "_as_gen/structures.map.StatAtlas.get_map", "_as_gen/structures.map.StatAtlas.get_points", "_as_gen/structures.map.StatAtlas.has_maps", "_as_gen/structures.map.StatAtlas.hdus", "_as_gen/structures.map.StatAtlas.map_names", "_as_gen/structures.map.StatAtlas.pixel_positions", "_as_gen/structures.map.StatAtlas.remove", "_as_gen/structures.map.StatAtlas.reset", "_as_gen/structures.map.StatAtlas.reshape_healpix", "_as_gen/structures.map.StatAtlas.sample_from_database", "_as_gen/structures.table", "_as_gen/structures.table.SourceTable", "_as_gen/structures.table.SourceTable.ColumnClass", "_as_gen/structures.table.SourceTable.__init__", "_as_gen/structures.table.SourceTable.add_column", "_as_gen/structures.table.SourceTable.add_columns", "_as_gen/structures.table.SourceTable.add_index", "_as_gen/structures.table.SourceTable.add_row", "_as_gen/structures.table.SourceTable.append_to_fits", "_as_gen/structures.table.SourceTable.append_to_sql", "_as_gen/structures.table.SourceTable.argsort", "_as_gen/structures.table.SourceTable.as_array", "_as_gen/structures.table.SourceTable.colnames", "_as_gen/structures.table.SourceTable.convert_bytestring_to_unicode", "_as_gen/structures.table.SourceTable.convert_unicode_to_bytestring", "_as_gen/structures.table.SourceTable.copy", "_as_gen/structures.table.SourceTable.count_types", "_as_gen/structures.table.SourceTable.dtype", "_as_gen/structures.table.SourceTable.field", "_as_gen/structures.table.SourceTable.filled", "_as_gen/structures.table.SourceTable.from_pandas", "_as_gen/structures.table.SourceTable.generate_schema", "_as_gen/structures.table.SourceTable.get_coordinates", "_as_gen/structures.table.SourceTable.group_by", "_as_gen/structures.table.SourceTable.groups", "_as_gen/structures.table.SourceTable.has_masked_columns", "_as_gen/structures.table.SourceTable.has_masked_values", "_as_gen/structures.table.SourceTable.has_mixin_columns", "_as_gen/structures.table.SourceTable.iloc", "_as_gen/structures.table.SourceTable.index_column", "_as_gen/structures.table.SourceTable.index_mode", "_as_gen/structures.table.SourceTable.indices", "_as_gen/structures.table.SourceTable.info", "_as_gen/structures.table.SourceTable.insert_row", "_as_gen/structures.table.SourceTable.items", "_as_gen/structures.table.SourceTable.itercols", "_as_gen/structures.table.SourceTable.iterrows", "_as_gen/structures.table.SourceTable.keep_columns", "_as_gen/structures.table.SourceTable.keys", "_as_gen/structures.table.SourceTable.lat", "_as_gen/structures.table.SourceTable.loc", "_as_gen/structures.table.SourceTable.loc_indices", "_as_gen/structures.table.SourceTable.lon", "_as_gen/structures.table.SourceTable.mask", "_as_gen/structures.table.SourceTable.masked", "_as_gen/structures.table.SourceTable.meta", "_as_gen/structures.table.SourceTable.more", "_as_gen/structures.table.SourceTable.name", "_as_gen/structures.table.SourceTable.pformat", "_as_gen/structures.table.SourceTable.pformat_all", "_as_gen/structures.table.SourceTable.pprint", "_as_gen/structures.table.SourceTable.pprint_all", "_as_gen/structures.table.SourceTable.pprint_exclude_names", "_as_gen/structures.table.SourceTable.pprint_include_names", "_as_gen/structures.table.SourceTable.read", "_as_gen/structures.table.SourceTable.redshift", "_as_gen/structures.table.SourceTable.remove_column", "_as_gen/structures.table.SourceTable.remove_columns", "_as_gen/structures.table.SourceTable.remove_indices", "_as_gen/structures.table.SourceTable.remove_row", "_as_gen/structures.table.SourceTable.remove_rows", "_as_gen/structures.table.SourceTable.rename_column", "_as_gen/structures.table.SourceTable.rename_columns", "_as_gen/structures.table.SourceTable.replace_column", "_as_gen/structures.table.SourceTable.reverse", "_as_gen/structures.table.SourceTable.round", "_as_gen/structures.table.SourceTable.schema", "_as_gen/structures.table.SourceTable.show_in_browser", "_as_gen/structures.table.SourceTable.show_in_notebook", "_as_gen/structures.table.SourceTable.sort", "_as_gen/structures.table.SourceTable.to_pandas", "_as_gen/structures.table.SourceTable.type", "_as_gen/structures.table.SourceTable.type_native", "_as_gen/structures.table.SourceTable.update", "_as_gen/structures.table.SourceTable.values", "_as_gen/structures.table.SourceTable.values_equal", "_as_gen/structures.table.SourceTable.write", "_as_gen/utilities.core", "_as_gen/utilities.core.enforce_units", "_as_gen/utilities.core.getFromDict", "_as_gen/utilities.core.setInDict", "_as_gen/utilities.mp_utils", "_as_gen/utilities.mp_utils.split", "_as_gen/utilities.text", "_as_gen/utilities.text.Spinner", "_as_gen/utilities.text.Spinner.__init__", "_as_gen/utilities.text.Spinner.busy", "_as_gen/utilities.text.Spinner.delay", "_as_gen/utilities.text.Spinner.formatter", "_as_gen/utilities.text.Spinner.process", "_as_gen/utilities.text.Spinner.spinner_task", "_as_gen/utilities.text.Spinner.spinning_cursor", "_as_gen/utilities.text.Spinner.stream", "api", "data_structures", "examples", "getting_started", "index", "quickstart/install", "user_guide", "user_guides/configuration", "user_guides/cross_matching", "user_guides/databases", "user_guides/installation", "user_guides/logging", "user_guides/overview", "user_guides/plots", "user_guides/psf", "user_guides/schema", "user_guides/source_data"], "filenames": ["_as_gen/cross_reference.rst", "_as_gen/cross_reference.cross_match.rst", "_as_gen/cross_reference.cross_match_table.rst", "_as_gen/cross_reference.reduce_match_database.rst", "_as_gen/schema.rst", "_as_gen/schema.ReductionSchema.rst", "_as_gen/schema.ReductionSchema.DBPATH.rst", "_as_gen/schema.ReductionSchema.INSTRUMENTAL.rst", "_as_gen/schema.ReductionSchema.INSTRUMENT_PARAMS.rst", "_as_gen/schema.ReductionSchema.IO_PARAMS.rst", "_as_gen/schema.ReductionSchema.OBJECT_PARAMS.rst", "_as_gen/schema.ReductionSchema.OTYPES.rst", "_as_gen/schema.ReductionSchema.POISSON.rst", "_as_gen/schema.ReductionSchema.POISSON_PARAMS.rst", "_as_gen/schema.ReductionSchema.PSF.rst", "_as_gen/schema.ReductionSchema.REFDBS.rst", "_as_gen/schema.ReductionSchema.RUN_PARAMS.rst", "_as_gen/schema.ReductionSchema.__init__.rst", "_as_gen/schema.ReductionSchema.clear.rst", "_as_gen/schema.ReductionSchema.copy.rst", "_as_gen/schema.ReductionSchema.from_file.rst", "_as_gen/schema.ReductionSchema.fromkeys.rst", "_as_gen/schema.ReductionSchema.get.rst", "_as_gen/schema.ReductionSchema.isvalid.rst", "_as_gen/schema.ReductionSchema.items.rst", "_as_gen/schema.ReductionSchema.keys.rst", "_as_gen/schema.ReductionSchema.pop.rst", "_as_gen/schema.ReductionSchema.popitem.rst", "_as_gen/schema.ReductionSchema.setdefault.rst", "_as_gen/schema.ReductionSchema.update.rst", "_as_gen/schema.ReductionSchema.values.rst", "_as_gen/schema.Schema.rst", "_as_gen/schema.Schema.__init__.rst", "_as_gen/schema.Schema.clear.rst", "_as_gen/schema.Schema.copy.rst", "_as_gen/schema.Schema.from_file.rst", "_as_gen/schema.Schema.fromkeys.rst", "_as_gen/schema.Schema.get.rst", "_as_gen/schema.Schema.isvalid.rst", "_as_gen/schema.Schema.items.rst", "_as_gen/schema.Schema.keys.rst", "_as_gen/schema.Schema.pop.rst", "_as_gen/schema.Schema.popitem.rst", "_as_gen/schema.Schema.setdefault.rst", "_as_gen/schema.Schema.update.rst", "_as_gen/schema.Schema.values.rst", "_as_gen/schema.SourceTableSchema.rst", "_as_gen/schema.SourceTableSchema.__init__.rst", "_as_gen/schema.SourceTableSchema.available_coordinate_frames.rst", "_as_gen/schema.SourceTableSchema.clear.rst", "_as_gen/schema.SourceTableSchema.column_map.rst", "_as_gen/schema.SourceTableSchema.construct.rst", "_as_gen/schema.SourceTableSchema.coordinate_columns.rst", "_as_gen/schema.SourceTableSchema.coordinate_frame.rst", "_as_gen/schema.SourceTableSchema.coordinate_system.rst", "_as_gen/schema.SourceTableSchema.copy.rst", "_as_gen/schema.SourceTableSchema.default_coord_system.rst", "_as_gen/schema.SourceTableSchema.from_file.rst", "_as_gen/schema.SourceTableSchema.fromkeys.rst", "_as_gen/schema.SourceTableSchema.get.rst", "_as_gen/schema.SourceTableSchema.inv_column_map.rst", "_as_gen/schema.SourceTableSchema.isvalid.rst", "_as_gen/schema.SourceTableSchema.items.rst", "_as_gen/schema.SourceTableSchema.keys.rst", "_as_gen/schema.SourceTableSchema.object_map.rst", "_as_gen/schema.SourceTableSchema.pop.rst", "_as_gen/schema.SourceTableSchema.popitem.rst", "_as_gen/schema.SourceTableSchema.setdefault.rst", "_as_gen/schema.SourceTableSchema.update.rst", "_as_gen/schema.SourceTableSchema.values.rst", "_as_gen/stats.utilities.rst", "_as_gen/stats.utilities.uniform_sample_spherical.rst", "_as_gen/structures.databases.rst", "_as_gen/structures.databases.DBRegistry.rst", "_as_gen/structures.databases.DBRegistry.__init__.rst", "_as_gen/structures.databases.DBRegistry.clear.rst", "_as_gen/structures.databases.DBRegistry.copy.rst", "_as_gen/structures.databases.DBRegistry.fromkeys.rst", "_as_gen/structures.databases.DBRegistry.get.rst", "_as_gen/structures.databases.DBRegistry.items.rst", "_as_gen/structures.databases.DBRegistry.keys.rst", "_as_gen/structures.databases.DBRegistry.pop.rst", "_as_gen/structures.databases.DBRegistry.popitem.rst", "_as_gen/structures.databases.DBRegistry.setdefault.rst", "_as_gen/structures.databases.DBRegistry.update.rst", "_as_gen/structures.databases.DBRegistry.values.rst", "_as_gen/structures.databases.LocalDatabase.rst", "_as_gen/structures.databases.LocalDatabase.__init__.rst", "_as_gen/structures.databases.LocalDatabase.add_sources_to_poisson.rst", "_as_gen/structures.databases.LocalDatabase.class_table_schema.rst", "_as_gen/structures.databases.LocalDatabase.count.rst", "_as_gen/structures.databases.LocalDatabase.create_poisson_map.rst", "_as_gen/structures.databases.LocalDatabase.default_poisson_map.rst", "_as_gen/structures.databases.LocalDatabase.get_default_poisson_map.rst", "_as_gen/structures.databases.LocalDatabase.get_poisson_map.rst", "_as_gen/structures.databases.LocalDatabase.poisson_map.rst", "_as_gen/structures.databases.LocalDatabase.query_radius.rst", "_as_gen/structures.databases.LocalDatabase.random_sample_count.rst", "_as_gen/structures.databases.LocalDatabase.set_poisson_map.rst", "_as_gen/structures.databases.LocalDatabase.source_match.rst", "_as_gen/structures.databases.NED.rst", "_as_gen/structures.databases.NED.__init__.rst", "_as_gen/structures.databases.NED.add_sources_to_poisson.rst", "_as_gen/structures.databases.NED.class_table_schema.rst", "_as_gen/structures.databases.NED.count.rst", "_as_gen/structures.databases.NED.create_poisson_map.rst", "_as_gen/structures.databases.NED.default_poisson_map.rst", "_as_gen/structures.databases.NED.get_default_poisson_map.rst", "_as_gen/structures.databases.NED.get_poisson_map.rst", "_as_gen/structures.databases.NED.poisson_map.rst", "_as_gen/structures.databases.NED.query_radius.rst", "_as_gen/structures.databases.NED.random_sample_count.rst", "_as_gen/structures.databases.NED.set_poisson_map.rst", "_as_gen/structures.databases.NED.source_match.rst", "_as_gen/structures.databases.RemoteDatabase.rst", "_as_gen/structures.databases.RemoteDatabase.__init__.rst", "_as_gen/structures.databases.RemoteDatabase.add_sources_to_poisson.rst", "_as_gen/structures.databases.RemoteDatabase.class_table_schema.rst", "_as_gen/structures.databases.RemoteDatabase.count.rst", "_as_gen/structures.databases.RemoteDatabase.create_poisson_map.rst", "_as_gen/structures.databases.RemoteDatabase.default_poisson_map.rst", "_as_gen/structures.databases.RemoteDatabase.get_default_poisson_map.rst", "_as_gen/structures.databases.RemoteDatabase.get_poisson_map.rst", "_as_gen/structures.databases.RemoteDatabase.poisson_map.rst", "_as_gen/structures.databases.RemoteDatabase.query_radius.rst", "_as_gen/structures.databases.RemoteDatabase.random_sample_count.rst", "_as_gen/structures.databases.RemoteDatabase.set_poisson_map.rst", "_as_gen/structures.databases.RemoteDatabase.source_match.rst", "_as_gen/structures.databases.SIMBAD.rst", "_as_gen/structures.databases.SIMBAD.__init__.rst", "_as_gen/structures.databases.SIMBAD.add_sources_to_poisson.rst", "_as_gen/structures.databases.SIMBAD.class_table_schema.rst", "_as_gen/structures.databases.SIMBAD.count.rst", "_as_gen/structures.databases.SIMBAD.create_poisson_map.rst", "_as_gen/structures.databases.SIMBAD.default_poisson_map.rst", "_as_gen/structures.databases.SIMBAD.get_default_poisson_map.rst", "_as_gen/structures.databases.SIMBAD.get_poisson_map.rst", "_as_gen/structures.databases.SIMBAD.poisson_map.rst", "_as_gen/structures.databases.SIMBAD.query_radius.rst", "_as_gen/structures.databases.SIMBAD.random_sample_count.rst", "_as_gen/structures.databases.SIMBAD.set_poisson_map.rst", "_as_gen/structures.databases.SIMBAD.source_match.rst", "_as_gen/structures.databases.SourceDatabase.rst", "_as_gen/structures.databases.SourceDatabase.__init__.rst", "_as_gen/structures.databases.SourceDatabase.add_sources_to_poisson.rst", "_as_gen/structures.databases.SourceDatabase.class_table_schema.rst", "_as_gen/structures.databases.SourceDatabase.count.rst", "_as_gen/structures.databases.SourceDatabase.create_poisson_map.rst", "_as_gen/structures.databases.SourceDatabase.default_poisson_map.rst", "_as_gen/structures.databases.SourceDatabase.get_default_poisson_map.rst", "_as_gen/structures.databases.SourceDatabase.get_poisson_map.rst", "_as_gen/structures.databases.SourceDatabase.poisson_map.rst", "_as_gen/structures.databases.SourceDatabase.query_radius.rst", "_as_gen/structures.databases.SourceDatabase.random_sample_count.rst", "_as_gen/structures.databases.SourceDatabase.set_poisson_map.rst", "_as_gen/structures.databases.SourceDatabase.source_match.rst", "_as_gen/structures.map.rst", "_as_gen/structures.map.Map.rst", "_as_gen/structures.map.Map.__init__.rst", "_as_gen/structures.map.Map.coordinate_frame.rst", "_as_gen/structures.map.MapAtlas.rst", "_as_gen/structures.map.MapAtlas.__init__.rst", "_as_gen/structures.map.MapAtlas.coordinate_frame.rst", "_as_gen/structures.map.MapAtlas.generate.rst", "_as_gen/structures.map.MapAtlas.get_map.rst", "_as_gen/structures.map.MapAtlas.has_maps.rst", "_as_gen/structures.map.MapAtlas.hdus.rst", "_as_gen/structures.map.MapAtlas.map_names.rst", "_as_gen/structures.map.MapAtlas.pixel_positions.rst", "_as_gen/structures.map.MapAtlas.remove.rst", "_as_gen/structures.map.MapAtlas.reshape_healpix.rst", "_as_gen/structures.map.StatAtlas.rst", "_as_gen/structures.map.StatAtlas.__init__.rst", "_as_gen/structures.map.StatAtlas.append_to_fits.rst", "_as_gen/structures.map.StatAtlas.build_poisson_map.rst", "_as_gen/structures.map.StatAtlas.build_poisson_map_MAP.rst", "_as_gen/structures.map.StatAtlas.build_poisson_map_NNR.rst", "_as_gen/structures.map.StatAtlas.build_poisson_map_gp.rst", "_as_gen/structures.map.StatAtlas.build_poisson_maps.rst", "_as_gen/structures.map.StatAtlas.coordinate_frame.rst", "_as_gen/structures.map.StatAtlas.generate.rst", "_as_gen/structures.map.StatAtlas.get_map.rst", "_as_gen/structures.map.StatAtlas.get_points.rst", "_as_gen/structures.map.StatAtlas.has_maps.rst", "_as_gen/structures.map.StatAtlas.hdus.rst", "_as_gen/structures.map.StatAtlas.map_names.rst", "_as_gen/structures.map.StatAtlas.pixel_positions.rst", "_as_gen/structures.map.StatAtlas.remove.rst", "_as_gen/structures.map.StatAtlas.reset.rst", "_as_gen/structures.map.StatAtlas.reshape_healpix.rst", "_as_gen/structures.map.StatAtlas.sample_from_database.rst", "_as_gen/structures.table.rst", "_as_gen/structures.table.SourceTable.rst", "_as_gen/structures.table.SourceTable.ColumnClass.rst", "_as_gen/structures.table.SourceTable.__init__.rst", "_as_gen/structures.table.SourceTable.add_column.rst", "_as_gen/structures.table.SourceTable.add_columns.rst", "_as_gen/structures.table.SourceTable.add_index.rst", "_as_gen/structures.table.SourceTable.add_row.rst", "_as_gen/structures.table.SourceTable.append_to_fits.rst", "_as_gen/structures.table.SourceTable.append_to_sql.rst", "_as_gen/structures.table.SourceTable.argsort.rst", "_as_gen/structures.table.SourceTable.as_array.rst", "_as_gen/structures.table.SourceTable.colnames.rst", "_as_gen/structures.table.SourceTable.convert_bytestring_to_unicode.rst", "_as_gen/structures.table.SourceTable.convert_unicode_to_bytestring.rst", "_as_gen/structures.table.SourceTable.copy.rst", "_as_gen/structures.table.SourceTable.count_types.rst", "_as_gen/structures.table.SourceTable.dtype.rst", "_as_gen/structures.table.SourceTable.field.rst", "_as_gen/structures.table.SourceTable.filled.rst", "_as_gen/structures.table.SourceTable.from_pandas.rst", "_as_gen/structures.table.SourceTable.generate_schema.rst", "_as_gen/structures.table.SourceTable.get_coordinates.rst", "_as_gen/structures.table.SourceTable.group_by.rst", "_as_gen/structures.table.SourceTable.groups.rst", "_as_gen/structures.table.SourceTable.has_masked_columns.rst", "_as_gen/structures.table.SourceTable.has_masked_values.rst", "_as_gen/structures.table.SourceTable.has_mixin_columns.rst", "_as_gen/structures.table.SourceTable.iloc.rst", "_as_gen/structures.table.SourceTable.index_column.rst", "_as_gen/structures.table.SourceTable.index_mode.rst", "_as_gen/structures.table.SourceTable.indices.rst", "_as_gen/structures.table.SourceTable.info.rst", "_as_gen/structures.table.SourceTable.insert_row.rst", "_as_gen/structures.table.SourceTable.items.rst", "_as_gen/structures.table.SourceTable.itercols.rst", "_as_gen/structures.table.SourceTable.iterrows.rst", "_as_gen/structures.table.SourceTable.keep_columns.rst", "_as_gen/structures.table.SourceTable.keys.rst", "_as_gen/structures.table.SourceTable.lat.rst", "_as_gen/structures.table.SourceTable.loc.rst", "_as_gen/structures.table.SourceTable.loc_indices.rst", "_as_gen/structures.table.SourceTable.lon.rst", "_as_gen/structures.table.SourceTable.mask.rst", "_as_gen/structures.table.SourceTable.masked.rst", "_as_gen/structures.table.SourceTable.meta.rst", "_as_gen/structures.table.SourceTable.more.rst", "_as_gen/structures.table.SourceTable.name.rst", "_as_gen/structures.table.SourceTable.pformat.rst", "_as_gen/structures.table.SourceTable.pformat_all.rst", "_as_gen/structures.table.SourceTable.pprint.rst", "_as_gen/structures.table.SourceTable.pprint_all.rst", "_as_gen/structures.table.SourceTable.pprint_exclude_names.rst", "_as_gen/structures.table.SourceTable.pprint_include_names.rst", "_as_gen/structures.table.SourceTable.read.rst", "_as_gen/structures.table.SourceTable.redshift.rst", "_as_gen/structures.table.SourceTable.remove_column.rst", "_as_gen/structures.table.SourceTable.remove_columns.rst", "_as_gen/structures.table.SourceTable.remove_indices.rst", "_as_gen/structures.table.SourceTable.remove_row.rst", "_as_gen/structures.table.SourceTable.remove_rows.rst", "_as_gen/structures.table.SourceTable.rename_column.rst", "_as_gen/structures.table.SourceTable.rename_columns.rst", "_as_gen/structures.table.SourceTable.replace_column.rst", "_as_gen/structures.table.SourceTable.reverse.rst", "_as_gen/structures.table.SourceTable.round.rst", "_as_gen/structures.table.SourceTable.schema.rst", "_as_gen/structures.table.SourceTable.show_in_browser.rst", "_as_gen/structures.table.SourceTable.show_in_notebook.rst", "_as_gen/structures.table.SourceTable.sort.rst", "_as_gen/structures.table.SourceTable.to_pandas.rst", "_as_gen/structures.table.SourceTable.type.rst", "_as_gen/structures.table.SourceTable.type_native.rst", "_as_gen/structures.table.SourceTable.update.rst", "_as_gen/structures.table.SourceTable.values.rst", "_as_gen/structures.table.SourceTable.values_equal.rst", "_as_gen/structures.table.SourceTable.write.rst", "_as_gen/utilities.core.rst", "_as_gen/utilities.core.enforce_units.rst", "_as_gen/utilities.core.getFromDict.rst", "_as_gen/utilities.core.setInDict.rst", "_as_gen/utilities.mp_utils.rst", "_as_gen/utilities.mp_utils.split.rst", "_as_gen/utilities.text.rst", "_as_gen/utilities.text.Spinner.rst", "_as_gen/utilities.text.Spinner.__init__.rst", "_as_gen/utilities.text.Spinner.busy.rst", "_as_gen/utilities.text.Spinner.delay.rst", "_as_gen/utilities.text.Spinner.formatter.rst", "_as_gen/utilities.text.Spinner.process.rst", "_as_gen/utilities.text.Spinner.spinner_task.rst", "_as_gen/utilities.text.Spinner.spinning_cursor.rst", "_as_gen/utilities.text.Spinner.stream.rst", "api.rst", "data_structures.rst", "examples.rst", "getting_started.rst", "index.rst", "quickstart/install.rst", "user_guide.rst", "user_guides/configuration.rst", "user_guides/cross_matching.rst", "user_guides/databases.rst", "user_guides/installation.rst", "user_guides/logging.rst", "user_guides/overview.rst", "user_guides/plots.rst", "user_guides/psf.rst", "user_guides/schema.rst", "user_guides/source_data.rst"], "titles": ["cross_reference", "cross_reference.cross_match", "cross_reference.cross_match_table", "cross_reference.reduce_match_database", "schema", "schema.ReductionSchema", "schema.ReductionSchema.DBPATH", "schema.ReductionSchema.INSTRUMENTAL", "schema.ReductionSchema.INSTRUMENT_PARAMS", "schema.ReductionSchema.IO_PARAMS", "schema.ReductionSchema.OBJECT_PARAMS", "schema.ReductionSchema.OTYPES", "schema.ReductionSchema.POISSON", "schema.ReductionSchema.POISSON_PARAMS", "schema.ReductionSchema.PSF", "schema.ReductionSchema.REFDBS", "schema.ReductionSchema.RUN_PARAMS", "schema.ReductionSchema.__init__", "schema.ReductionSchema.clear", "schema.ReductionSchema.copy", "schema.ReductionSchema.from_file", "schema.ReductionSchema.fromkeys", "schema.ReductionSchema.get", "schema.ReductionSchema.isvalid", "schema.ReductionSchema.items", "schema.ReductionSchema.keys", "schema.ReductionSchema.pop", "schema.ReductionSchema.popitem", "schema.ReductionSchema.setdefault", "schema.ReductionSchema.update", "schema.ReductionSchema.values", "schema.Schema", "schema.Schema.__init__", "schema.Schema.clear", "schema.Schema.copy", "schema.Schema.from_file", "schema.Schema.fromkeys", "schema.Schema.get", "schema.Schema.isvalid", "schema.Schema.items", "schema.Schema.keys", "schema.Schema.pop", "schema.Schema.popitem", "schema.Schema.setdefault", "schema.Schema.update", "schema.Schema.values", "schema.SourceTableSchema", "schema.SourceTableSchema.__init__", "schema.SourceTableSchema.available_coordinate_frames", "schema.SourceTableSchema.clear", "schema.SourceTableSchema.column_map", "schema.SourceTableSchema.construct", "schema.SourceTableSchema.coordinate_columns", "schema.SourceTableSchema.coordinate_frame", "schema.SourceTableSchema.coordinate_system", "schema.SourceTableSchema.copy", "schema.SourceTableSchema.default_coord_system", "schema.SourceTableSchema.from_file", "schema.SourceTableSchema.fromkeys", "schema.SourceTableSchema.get", "schema.SourceTableSchema.inv_column_map", "schema.SourceTableSchema.isvalid", "schema.SourceTableSchema.items", "schema.SourceTableSchema.keys", "schema.SourceTableSchema.object_map", "schema.SourceTableSchema.pop", "schema.SourceTableSchema.popitem", "schema.SourceTableSchema.setdefault", "schema.SourceTableSchema.update", "schema.SourceTableSchema.values", "stats.utilities", "stats.utilities.uniform_sample_spherical", "structures.databases", "structures.databases.DBRegistry", "structures.databases.DBRegistry.__init__", "structures.databases.DBRegistry.clear", "structures.databases.DBRegistry.copy", "structures.databases.DBRegistry.fromkeys", "structures.databases.DBRegistry.get", "structures.databases.DBRegistry.items", "structures.databases.DBRegistry.keys", "structures.databases.DBRegistry.pop", "structures.databases.DBRegistry.popitem", "structures.databases.DBRegistry.setdefault", "structures.databases.DBRegistry.update", "structures.databases.DBRegistry.values", "structures.databases.LocalDatabase", "structures.databases.LocalDatabase.__init__", "structures.databases.LocalDatabase.add_sources_to_poisson", "structures.databases.LocalDatabase.class_table_schema", "structures.databases.LocalDatabase.count", "structures.databases.LocalDatabase.create_poisson_map", "structures.databases.LocalDatabase.default_poisson_map", "structures.databases.LocalDatabase.get_default_poisson_map", "structures.databases.LocalDatabase.get_poisson_map", "structures.databases.LocalDatabase.poisson_map", "structures.databases.LocalDatabase.query_radius", "structures.databases.LocalDatabase.random_sample_count", "structures.databases.LocalDatabase.set_poisson_map", "structures.databases.LocalDatabase.source_match", "structures.databases.NED", "structures.databases.NED.__init__", "structures.databases.NED.add_sources_to_poisson", "structures.databases.NED.class_table_schema", "structures.databases.NED.count", "structures.databases.NED.create_poisson_map", "structures.databases.NED.default_poisson_map", "structures.databases.NED.get_default_poisson_map", "structures.databases.NED.get_poisson_map", "structures.databases.NED.poisson_map", "structures.databases.NED.query_radius", "structures.databases.NED.random_sample_count", "structures.databases.NED.set_poisson_map", "structures.databases.NED.source_match", "structures.databases.RemoteDatabase", "structures.databases.RemoteDatabase.__init__", "structures.databases.RemoteDatabase.add_sources_to_poisson", "structures.databases.RemoteDatabase.class_table_schema", "structures.databases.RemoteDatabase.count", "structures.databases.RemoteDatabase.create_poisson_map", "structures.databases.RemoteDatabase.default_poisson_map", "structures.databases.RemoteDatabase.get_default_poisson_map", "structures.databases.RemoteDatabase.get_poisson_map", "structures.databases.RemoteDatabase.poisson_map", "structures.databases.RemoteDatabase.query_radius", "structures.databases.RemoteDatabase.random_sample_count", "structures.databases.RemoteDatabase.set_poisson_map", "structures.databases.RemoteDatabase.source_match", "structures.databases.SIMBAD", "structures.databases.SIMBAD.__init__", "structures.databases.SIMBAD.add_sources_to_poisson", "structures.databases.SIMBAD.class_table_schema", "structures.databases.SIMBAD.count", "structures.databases.SIMBAD.create_poisson_map", "structures.databases.SIMBAD.default_poisson_map", "structures.databases.SIMBAD.get_default_poisson_map", "structures.databases.SIMBAD.get_poisson_map", "structures.databases.SIMBAD.poisson_map", "structures.databases.SIMBAD.query_radius", "structures.databases.SIMBAD.random_sample_count", "structures.databases.SIMBAD.set_poisson_map", "structures.databases.SIMBAD.source_match", "structures.databases.SourceDatabase", "structures.databases.SourceDatabase.__init__", "structures.databases.SourceDatabase.add_sources_to_poisson", "structures.databases.SourceDatabase.class_table_schema", "structures.databases.SourceDatabase.count", "structures.databases.SourceDatabase.create_poisson_map", "structures.databases.SourceDatabase.default_poisson_map", "structures.databases.SourceDatabase.get_default_poisson_map", "structures.databases.SourceDatabase.get_poisson_map", "structures.databases.SourceDatabase.poisson_map", "structures.databases.SourceDatabase.query_radius", "structures.databases.SourceDatabase.random_sample_count", "structures.databases.SourceDatabase.set_poisson_map", "structures.databases.SourceDatabase.source_match", "structures.map", "structures.map.Map", "structures.map.Map.__init__", "structures.map.Map.coordinate_frame", "structures.map.MapAtlas", "structures.map.MapAtlas.__init__", "structures.map.MapAtlas.coordinate_frame", "structures.map.MapAtlas.generate", "structures.map.MapAtlas.get_map", "structures.map.MapAtlas.has_maps", "structures.map.MapAtlas.hdus", "structures.map.MapAtlas.map_names", "structures.map.MapAtlas.pixel_positions", "structures.map.MapAtlas.remove", "structures.map.MapAtlas.reshape_healpix", "structures.map.StatAtlas", "structures.map.StatAtlas.__init__", "structures.map.StatAtlas.append_to_fits", "structures.map.StatAtlas.build_poisson_map", "structures.map.StatAtlas.build_poisson_map_MAP", "structures.map.StatAtlas.build_poisson_map_NNR", "structures.map.StatAtlas.build_poisson_map_gp", "structures.map.StatAtlas.build_poisson_maps", "structures.map.StatAtlas.coordinate_frame", "structures.map.StatAtlas.generate", "structures.map.StatAtlas.get_map", "structures.map.StatAtlas.get_points", "structures.map.StatAtlas.has_maps", "structures.map.StatAtlas.hdus", "structures.map.StatAtlas.map_names", "structures.map.StatAtlas.pixel_positions", "structures.map.StatAtlas.remove", "structures.map.StatAtlas.reset", "structures.map.StatAtlas.reshape_healpix", "structures.map.StatAtlas.sample_from_database", "structures.table", "structures.table.SourceTable", "structures.table.SourceTable.ColumnClass", "structures.table.SourceTable.__init__", "structures.table.SourceTable.add_column", "structures.table.SourceTable.add_columns", "structures.table.SourceTable.add_index", "structures.table.SourceTable.add_row", "structures.table.SourceTable.append_to_fits", "structures.table.SourceTable.append_to_sql", "structures.table.SourceTable.argsort", "structures.table.SourceTable.as_array", "structures.table.SourceTable.colnames", "structures.table.SourceTable.convert_bytestring_to_unicode", "structures.table.SourceTable.convert_unicode_to_bytestring", "structures.table.SourceTable.copy", "structures.table.SourceTable.count_types", "structures.table.SourceTable.dtype", "structures.table.SourceTable.field", "structures.table.SourceTable.filled", "structures.table.SourceTable.from_pandas", "structures.table.SourceTable.generate_schema", "structures.table.SourceTable.get_coordinates", "structures.table.SourceTable.group_by", "structures.table.SourceTable.groups", "structures.table.SourceTable.has_masked_columns", "structures.table.SourceTable.has_masked_values", "structures.table.SourceTable.has_mixin_columns", "structures.table.SourceTable.iloc", "structures.table.SourceTable.index_column", "structures.table.SourceTable.index_mode", "structures.table.SourceTable.indices", "structures.table.SourceTable.info", "structures.table.SourceTable.insert_row", "structures.table.SourceTable.items", "structures.table.SourceTable.itercols", "structures.table.SourceTable.iterrows", "structures.table.SourceTable.keep_columns", "structures.table.SourceTable.keys", "structures.table.SourceTable.lat", "structures.table.SourceTable.loc", "structures.table.SourceTable.loc_indices", "structures.table.SourceTable.lon", "structures.table.SourceTable.mask", "structures.table.SourceTable.masked", "structures.table.SourceTable.meta", "structures.table.SourceTable.more", "structures.table.SourceTable.name", "structures.table.SourceTable.pformat", "structures.table.SourceTable.pformat_all", "structures.table.SourceTable.pprint", "structures.table.SourceTable.pprint_all", "structures.table.SourceTable.pprint_exclude_names", "structures.table.SourceTable.pprint_include_names", "structures.table.SourceTable.read", "structures.table.SourceTable.redshift", "structures.table.SourceTable.remove_column", "structures.table.SourceTable.remove_columns", "structures.table.SourceTable.remove_indices", "structures.table.SourceTable.remove_row", "structures.table.SourceTable.remove_rows", "structures.table.SourceTable.rename_column", "structures.table.SourceTable.rename_columns", "structures.table.SourceTable.replace_column", "structures.table.SourceTable.reverse", "structures.table.SourceTable.round", "structures.table.SourceTable.schema", "structures.table.SourceTable.show_in_browser", "structures.table.SourceTable.show_in_notebook", "structures.table.SourceTable.sort", "structures.table.SourceTable.to_pandas", "structures.table.SourceTable.type", "structures.table.SourceTable.type_native", "structures.table.SourceTable.update", "structures.table.SourceTable.values", "structures.table.SourceTable.values_equal", "structures.table.SourceTable.write", "utilities.core", "utilities.core.enforce_units", "utilities.core.getFromDict", "utilities.core.setInDict", "utilities.mp_utils", "utilities.mp_utils.split", "utilities.text", "utilities.text.Spinner", "utilities.text.Spinner.__init__", "utilities.text.Spinner.busy", "utilities.text.Spinner.delay", "utilities.text.Spinner.formatter", "utilities.text.Spinner.process", "utilities.text.Spinner.spinner_task", "utilities.text.Spinner.spinning_cursor", "utilities.text.Spinner.stream", "API", "Data Structures", "Examples", "pyXMIP Quickstart Guide", "Features", "&lt;no title&gt;", "Reference", "PyXMIP Configuration", "Cross Matching", "Databases", "Installing pyXMIP", "Logging", "PyXMIP Overview", "Creating Plots", "PSF Modeling", "pyXMIP Schema Classes", "Loading Source Data"], "terms": {"cross": [0, 99, 113, 127, 141, 155, 176, 177, 285, 288, 290, 293], "referenc": [0, 288, 292, 293], "toolkit": 0, "function": [0, 3, 31, 70, 71, 160, 201, 255, 268, 272, 292, 293], "input_path": 1, "output_path": [1, 2], "databas": [1, 2, 3, 171, 180, 190, 287, 288, 292], "none": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 28, 29, 33, 35, 36, 37, 43, 44, 49, 50, 56, 57, 58, 59, 64, 67, 68, 75, 77, 78, 83, 84, 88, 89, 92, 95, 97, 99, 102, 111, 113, 116, 117, 120, 123, 125, 127, 130, 139, 141, 144, 145, 148, 151, 153, 155, 170, 176, 177, 178, 180, 189, 190, 192, 194, 195, 196, 197, 198, 201, 202, 210, 211, 224, 236, 237, 239, 240, 241, 242, 258, 259, 260, 261, 275, 276, 280], "overwrit": [1, 2, 3, 163, 174, 178, 180], "fals": [1, 2, 3, 23, 38, 61, 163, 170, 174, 176, 177, 180, 189, 192, 194, 195, 196, 197, 198, 201, 202, 211, 237, 239, 240, 241, 242, 254, 258, 259, 260, 261, 266, 277, 292], "arg": [1, 2, 91, 105, 119, 133, 147, 174, 175, 176, 177, 178, 188, 190], "kwarg": [1, 2, 91, 97, 105, 111, 119, 125, 133, 139, 147, 153, 174, 175, 176, 177, 178, 188, 190, 192, 194], "sourc": [1, 2, 3, 5, 31, 32, 35, 38, 46, 48, 51, 71, 73, 74, 86, 96, 99, 100, 110, 113, 114, 124, 127, 128, 138, 141, 142, 144, 146, 147, 149, 150, 152, 153, 154, 155, 157, 158, 160, 161, 163, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 188, 190, 192, 199, 200, 207, 212, 213, 269, 270, 271, 273, 275, 276, 281, 282, 288, 290, 293], "tabl": [2, 3, 46, 51, 54, 90, 96, 97, 99, 104, 110, 111, 113, 118, 124, 125, 127, 132, 138, 139, 141, 146, 152, 153, 155, 160, 171, 173, 178, 190, 285, 287, 293], "schema": [3, 290], "reduc": 3, "direct": 3, "match": [3, 72, 99, 113, 127, 141, 155, 176, 177, 178, 195, 196, 198, 224, 264, 285, 288, 290, 293], "character": 3, "paramet": [3, 17, 20, 32, 35, 47, 51, 57, 71, 74, 90, 96, 97, 99, 104, 110, 111, 113, 118, 124, 125, 127, 132, 138, 139, 141, 146, 152, 153, 155, 158, 160, 161, 163, 164, 170, 171, 172, 174, 176, 177, 178, 180, 181, 189, 190, 195, 196, 197, 198, 201, 202, 206, 210, 211, 214, 220, 221, 224, 227, 228, 237, 239, 240, 241, 242, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 266, 292], "str": [3, 20, 35, 54, 57, 99, 113, 127, 141, 155, 158, 161, 163, 164, 172, 174, 178, 180, 181, 195, 196, 197, 201, 210, 214, 220, 221, 228, 239, 240, 241, 242, 247, 248, 249, 252, 254, 258, 259, 260, 261, 292], "pyxmip": [3, 46, 60, 92, 95, 106, 109, 120, 123, 134, 137, 148, 151, 156, 274, 285, 288, 290, 292, 293], "reductionschema": 3, "The": [3, 17, 20, 31, 32, 35, 46, 47, 48, 51, 52, 53, 54, 57, 60, 71, 74, 96, 97, 99, 110, 111, 113, 124, 125, 127, 138, 139, 141, 152, 153, 155, 158, 159, 160, 161, 162, 163, 164, 168, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 186, 189, 190, 195, 196, 198, 201, 206, 211, 214, 224, 227, 228, 239, 240, 241, 252, 254, 255, 259, 260, 261, 264, 285, 287, 288, 292, 293], "reduct": 3, "process": [3, 176, 177, 178, 272], "bool": [3, 97, 99, 111, 113, 125, 127, 139, 141, 153, 155, 163, 170, 174, 176, 177, 178, 180, 189, 195, 196, 197, 201, 202, 206, 211, 237, 239, 240, 241, 242, 254, 258, 260, 261, 264, 266, 292], "option": [3, 20, 35, 57, 97, 99, 111, 113, 125, 127, 139, 141, 153, 155, 170, 174, 178, 189, 201, 202, 258, 259, 260, 285, 292], "If": [3, 20, 26, 29, 35, 41, 44, 54, 57, 65, 68, 81, 84, 97, 99, 111, 113, 125, 127, 139, 141, 153, 155, 163, 170, 174, 176, 177, 178, 180, 189, 195, 196, 197, 206, 210, 211, 239, 240, 241, 249, 256, 258, 259, 260, 261, 264, 292], "true": [3, 23, 38, 61, 88, 97, 99, 102, 111, 113, 116, 125, 127, 130, 139, 141, 144, 153, 155, 160, 170, 174, 176, 177, 178, 189, 192, 194, 195, 196, 202, 206, 216, 217, 218, 237, 239, 240, 241, 242, 254, 258, 259, 260, 261, 264, 266, 292], "allow": [3, 163, 174, 176, 177, 178, 180, 204, 239, 240, 241, 242, 258, 293], "an": [3, 30, 45, 69, 85, 90, 104, 118, 132, 146, 157, 163, 164, 176, 177, 180, 181, 195, 198, 221, 224, 239, 240, 258, 259, 261, 288, 292, 293], "sql": 3, "return": [3, 22, 23, 26, 27, 28, 37, 38, 41, 42, 43, 48, 51, 54, 59, 60, 61, 65, 66, 67, 71, 78, 81, 82, 83, 90, 96, 97, 99, 104, 110, 111, 113, 118, 124, 125, 127, 132, 138, 139, 141, 146, 152, 153, 155, 163, 164, 166, 167, 170, 174, 180, 181, 184, 185, 189, 190, 201, 202, 206, 209, 210, 211, 214, 219, 220, 221, 222, 227, 231, 232, 239, 240, 260, 261, 266, 293], "type": [3, 31, 46, 48, 51, 60, 90, 96, 97, 99, 103, 104, 110, 111, 113, 118, 124, 125, 127, 131, 132, 138, 139, 141, 146, 152, 153, 155, 163, 164, 166, 167, 170, 174, 176, 177, 178, 180, 181, 184, 185, 189, 190, 191, 197, 198, 201, 202, 210, 211, 214, 220, 224, 227, 239, 240, 256, 261, 285, 288, 292], "class": [4, 5, 17, 31, 32, 46, 47, 72, 73, 74, 86, 100, 114, 128, 142, 156, 157, 160, 171, 191, 192, 197, 239, 240, 254, 258, 259, 274, 275, 285, 290, 292, 293], "backend": 4, "manag": [4, 221, 272, 292], "variou": [4, 285], "user": [4, 160, 174, 285, 287, 288, 292, 293], "face": 4, "data": [4, 48, 99, 113, 127, 141, 155, 160, 170, 171, 176, 177, 189, 190, 192, 194, 195, 196, 198, 206, 231, 251, 254, 258, 264, 290, 292, 293], "map": [5, 17, 31, 32, 46, 47, 60, 73, 74, 198, 211, 224, 285, 292, 293], "method": [5, 29, 31, 44, 46, 68, 73, 84, 86, 100, 114, 128, 142, 157, 160, 171, 174, 178, 192, 196, 198, 227, 242, 259, 275, 288, 293], "attribut": [5, 46, 86, 100, 114, 128, 142, 157, 160, 171, 192, 198, 224, 243, 244, 252, 275], "initi": [17, 32, 47, 74, 158, 161, 172, 176, 177, 198, 264], "gener": [17, 32, 47, 74, 86, 114, 142, 160, 174, 178, 211, 285], "dict": [17, 27, 29, 31, 32, 42, 44, 47, 60, 66, 68, 74, 82, 84, 97, 99, 111, 113, 125, 127, 139, 141, 153, 155, 176, 177, 178, 198, 211, 224, 256, 258], "dictionari": [17, 21, 22, 28, 32, 36, 37, 43, 47, 58, 59, 67, 74, 77, 78, 83, 99, 113, 127, 141, 155, 198, 224, 264], "underli": [17, 32, 47, 74, 160, 170, 171, 189, 198, 206, 285], "thi": [17, 29, 31, 32, 44, 47, 48, 53, 68, 71, 74, 84, 99, 113, 127, 141, 155, 160, 163, 164, 170, 174, 176, 177, 178, 180, 181, 189, 190, 195, 196, 197, 198, 201, 202, 204, 210, 211, 214, 216, 217, 221, 226, 227, 237, 242, 243, 244, 247, 248, 252, 258, 259, 260, 261, 264, 285, 287, 288, 292, 293], "remov": [18, 26, 27, 33, 41, 42, 49, 65, 66, 75, 81, 82, 228, 247, 248, 249, 250, 251], "all": [18, 20, 33, 35, 49, 57, 75, 96, 110, 124, 138, 152, 166, 178, 184, 198, 202, 210, 224, 227, 228, 239, 240, 241, 242, 249, 254, 256, 287, 288, 292], "item": [18, 33, 49, 75, 209, 239, 240, 241, 259], "from": [18, 20, 21, 29, 33, 35, 36, 44, 46, 49, 51, 57, 58, 60, 68, 71, 75, 77, 84, 158, 160, 161, 163, 164, 171, 172, 174, 177, 180, 181, 190, 196, 198, 211, 239, 240, 241, 243, 244, 247, 248, 250, 251, 258, 259, 261, 264, 285, 288, 292, 293], "d": [18, 19, 24, 25, 26, 29, 30, 33, 34, 39, 40, 41, 44, 45, 49, 55, 62, 63, 65, 68, 69, 71, 75, 76, 79, 80, 81, 84, 85, 131, 195, 196], "shallow": [19, 34, 55, 76], "classmethod": [20, 35, 51, 57, 88, 90, 91, 93, 94, 96, 97, 98, 99, 102, 104, 105, 107, 108, 110, 111, 112, 113, 116, 118, 119, 121, 122, 124, 125, 126, 127, 130, 132, 133, 135, 136, 138, 139, 140, 141, 144, 146, 147, 149, 150, 152, 153, 154, 155, 163, 180, 211], "path": [20, 35, 57, 98, 99, 112, 113, 126, 127, 140, 141, 154, 155, 157, 158, 161, 163, 172, 180, 199, 292], "format": [20, 23, 35, 38, 57, 61, 160, 171, 176, 177, 239, 240, 241, 242, 258, 259, 261], "load": [20, 35, 57, 158, 163, 180, 259, 290], "instanc": [20, 35, 54, 57, 94, 97, 108, 111, 122, 125, 136, 139, 150, 153, 158, 160, 164, 181, 211, 254, 261, 264, 285, 293], "file": [20, 35, 57, 160, 161, 163, 171, 172, 174, 180, 205, 259, 292], "being": [20, 35, 57, 178, 292], "read": [20, 35, 57, 161, 172, 287], "default": [20, 22, 26, 28, 35, 37, 41, 43, 46, 57, 59, 65, 67, 78, 81, 83, 174, 176, 177, 178, 195, 196, 197, 201, 202, 206, 211, 227, 237, 239, 240, 241, 242, 254, 258, 259, 260, 261, 285, 292], "i": [20, 22, 23, 26, 27, 28, 29, 31, 35, 37, 38, 41, 42, 43, 44, 54, 57, 59, 61, 65, 66, 67, 68, 78, 81, 82, 83, 84, 160, 163, 171, 174, 176, 177, 178, 180, 195, 196, 197, 198, 202, 204, 206, 210, 211, 214, 221, 224, 226, 227, 237, 239, 240, 241, 242, 243, 244, 249, 254, 255, 256, 258, 259, 261, 264, 285, 288, 292, 293], "determin": [20, 35, 51, 57, 160, 171, 239, 240, 241, 285, 292], "base": [20, 35, 57, 176, 177, 221, 285, 287, 292], "extens": [20, 35, 57], "current": [20, 35, 52, 53, 57, 94, 108, 122, 136, 150, 252, 259, 292], "yaml": [20, 35, 57, 292], "toml": [20, 35, 57], "json": [20, 35, 57], "ar": [20, 27, 31, 35, 42, 46, 57, 66, 82, 160, 163, 170, 178, 180, 189, 195, 196, 197, 202, 217, 218, 221, 227, 239, 240, 241, 242, 251, 255, 264, 285, 287, 292], "support": [20, 35, 57, 211, 237, 261], "valu": [21, 22, 26, 27, 28, 36, 37, 41, 42, 43, 54, 58, 59, 65, 66, 67, 77, 78, 81, 82, 83, 163, 176, 177, 180, 197, 198, 206, 210, 214, 216, 217, 221, 224, 226, 227, 232, 237, 239, 240, 241, 242, 243, 244, 256, 258, 266, 269, 271, 292], "creat": [21, 36, 58, 77, 160, 163, 171, 176, 177, 180, 195, 196, 198, 211, 220, 227, 228, 247, 248, 250, 251, 252, 253, 255, 256, 260, 261, 288, 292, 293], "new": [21, 36, 58, 77, 170, 189, 195, 196, 197, 198, 202, 210, 214, 224, 227, 249, 252, 253, 254, 258, 259, 260, 264, 287, 288], "kei": [21, 22, 26, 27, 28, 29, 36, 37, 41, 42, 43, 44, 46, 58, 59, 60, 65, 66, 67, 68, 77, 78, 81, 82, 83, 84, 176, 177, 190, 198, 201, 214, 224, 232, 237, 254, 260, 261, 285, 287, 293], "iter": [21, 29, 36, 44, 58, 68, 77, 84, 198, 224, 226, 227, 228, 248], "set": [21, 24, 25, 36, 39, 40, 46, 54, 58, 62, 63, 77, 79, 80, 90, 94, 103, 104, 108, 118, 122, 131, 132, 136, 146, 150, 176, 177, 201, 214, 239, 240, 241, 252, 258, 285, 287, 292], "els": [22, 28, 37, 43, 59, 67, 78, 83, 177], "valid": [23, 38, 61, 176, 177, 258, 259], "otherwis": [23, 26, 38, 41, 61, 65, 81, 176, 177, 195, 196, 206, 210], "like": [24, 25, 39, 40, 62, 63, 79, 80, 176, 177, 261, 264, 266, 292], "object": [24, 25, 30, 39, 40, 45, 46, 54, 62, 63, 69, 79, 80, 85, 90, 97, 103, 104, 111, 114, 118, 125, 132, 139, 146, 153, 160, 163, 171, 174, 178, 180, 195, 196, 198, 202, 214, 219, 222, 227, 231, 232, 239, 240, 245, 254, 258, 259, 261, 266, 267, 285, 292, 293], "provid": [24, 25, 30, 39, 40, 45, 62, 63, 69, 79, 80, 85, 176, 177, 227, 239, 240, 241, 242, 285, 287, 288, 292], "view": [24, 25, 30, 39, 40, 45, 62, 63, 69, 79, 80, 85, 258], "": [24, 25, 30, 39, 40, 45, 51, 62, 63, 69, 79, 80, 85, 131, 159, 160, 162, 171, 177, 179, 201, 204, 205, 211, 214, 260, 261, 279, 292, 293], "k": [26, 29, 41, 44, 65, 68, 71, 81, 84, 292], "v": [26, 29, 41, 44, 65, 68, 81, 84, 103, 131, 196], "specifi": [26, 41, 46, 54, 65, 81, 96, 110, 124, 138, 152, 158, 160, 161, 164, 171, 172, 178, 181, 190, 195, 196, 198, 201, 211, 214, 224, 228, 248, 256, 261, 285, 292, 293], "correspond": [26, 41, 46, 53, 54, 65, 81, 164, 181, 196, 198, 214, 224, 232, 261, 285, 292], "found": [26, 41, 65, 81, 258, 292], "given": [26, 41, 48, 65, 81, 96, 110, 124, 138, 152, 163, 180, 195, 196, 224, 231, 232, 249, 256, 258, 259, 285, 288, 292, 293], "rais": [26, 27, 41, 42, 65, 66, 81, 82, 211, 261], "keyerror": [26, 27, 41, 42, 65, 66, 81, 82], "pair": [27, 42, 66, 82], "2": [27, 42, 66, 82, 160, 176, 177, 195, 196, 198, 211, 220, 226, 227, 228, 247, 248, 250, 251, 252, 253, 254, 261, 264, 266, 292], "tupl": [27, 42, 66, 82, 176, 177, 198, 224, 227, 239, 240, 241, 242, 243, 244, 253], "lifo": [27, 42, 66, 82], "last": [27, 42, 66, 82, 160, 171], "first": [27, 42, 66, 82, 260], "out": [27, 42, 66, 82, 131, 214, 288], "order": [27, 42, 66, 82, 176, 177, 198, 201, 202, 219, 224, 255, 260], "empti": [27, 42, 66, 82, 163, 178, 180], "insert": [28, 43, 67, 83, 195, 196, 197], "e": [29, 44, 68, 84, 198, 224, 227, 258], "f": [29, 44, 68, 84, 237], "present": [29, 44, 68, 84, 292], "ha": [29, 44, 68, 71, 84, 160, 171, 176, 177, 202, 216, 217, 218, 237, 239, 240, 241, 242, 261, 292], "doe": [29, 44, 68, 84, 216, 258, 259, 260, 261], "lack": [29, 44, 68, 84], "In": [29, 44, 68, 84, 160, 171, 198, 211, 221, 261, 264, 285, 292], "either": [29, 44, 54, 68, 84, 197, 221], "case": [29, 44, 68, 84, 216, 261, 264, 268, 288], "follow": [29, 44, 68, 84, 285, 292], "archetyp": 31, "effect": [31, 214, 292, 293], "wrapper": [31, 160], "few": [31, 160, 171, 261], "addit": [31, 97, 99, 111, 113, 125, 127, 139, 141, 153, 155, 160, 171, 174, 176, 177, 178, 190, 211, 221, 261, 287, 292], "util": [31, 176, 177, 288, 292, 293], "most": [31, 249, 285, 288], "onli": [31, 71, 227, 228, 231, 237, 239, 240, 241, 242, 248, 254, 261, 285, 292], "sub": [31, 178], "repres": [46, 52, 160, 204, 285, 292], "name": [46, 54, 103, 131, 157, 158, 164, 167, 171, 174, 178, 181, 185, 192, 194, 195, 196, 197, 198, 201, 202, 211, 214, 220, 224, 227, 228, 237, 239, 240, 241, 242, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 264, 266, 279, 283, 285, 292], "convent": [46, 160, 285, 292], "sourcet": [46, 51, 96, 99, 110, 113, 124, 127, 138, 141, 152, 155], "inform": [46, 285, 287, 292], "special": [46, 60, 160, 171, 191, 259, 285, 292], "role": 46, "particular": [46, 174, 178, 198, 292], "column": [46, 51, 52, 54, 60, 195, 196, 197, 198, 201, 202, 204, 205, 209, 210, 211, 214, 216, 217, 218, 220, 221, 222, 224, 226, 227, 228, 231, 237, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 264, 266, 285, 292], "dataset": [46, 292], "addition": 46, "control": [46, 243, 244, 261, 292], "nativ": [46, 60, 160, 171, 202], "coordin": [46, 48, 52, 53, 54, 71, 90, 96, 104, 110, 118, 124, 132, 138, 146, 152, 159, 160, 162, 171, 176, 177, 179, 261, 285, 293], "system": [46, 52, 53, 54, 159, 160, 162, 171, 179, 258, 285, 292], "simbad": [46, 292], "adopt": 46, "contain": [46, 90, 104, 118, 132, 146, 160, 171, 176, 177, 178, 214, 266, 285, 288, 292], "3": [46, 196, 198, 211, 220, 227, 228, 247, 248, 250, 251, 252, 253, 254, 260, 261, 279], "top": 46, "level": 46, "header": [46, 160, 171, 237, 239, 240, 241, 242, 258, 292], "column_map": [46, 103, 131, 285], "equival": [46, 160, 171, 204], "z": [46, 103, 220, 227, 228, 247, 248, 250, 251, 285], "ra": [46, 103, 131, 261, 285, 293], "dec": [46, 103, 131, 261, 285, 293], "l": [46, 131, 285], "b": [46, 131, 195, 196, 198, 220, 227, 228, 237, 247, 248, 250, 251, 252, 253, 254, 256, 264, 266, 285], "default_coord_system": [46, 103, 131, 285], "frame": [46, 48, 54, 160, 285], "string": [46, 204, 205, 211, 214, 239, 240, 241, 242, 258, 259], "object_map": [46, 103, 131], "each": [46, 90, 97, 99, 104, 111, 113, 118, 125, 127, 132, 139, 141, 146, 153, 155, 176, 177, 178, 190, 195, 196, 204, 210, 217, 227, 292, 293], "possibl": [46, 258, 292], "us": [46, 54, 99, 113, 127, 141, 155, 160, 176, 177, 178, 195, 196, 197, 198, 201, 204, 205, 206, 210, 216, 219, 224, 226, 227, 231, 232, 239, 240, 241, 243, 244, 247, 248, 250, 258, 259, 260, 261, 264, 268, 285, 288, 292], "list": [48, 54, 90, 104, 118, 132, 146, 166, 167, 177, 178, 184, 185, 195, 196, 197, 198, 201, 202, 214, 224, 227, 239, 240, 241, 242, 253, 258, 259, 260, 266, 287], "avail": [48, 54, 166, 167, 178, 184, 185, 195, 264, 285, 292], "astropi": [48, 54, 96, 99, 110, 113, 124, 127, 138, 141, 152, 155, 159, 160, 162, 163, 179, 180, 190, 195, 196, 197, 210, 211, 214, 227, 239, 240, 241, 242, 245, 254, 258, 259, 261, 264, 267, 293], "genericfram": [48, 54, 159, 162, 179], "which": [48, 51, 96, 99, 110, 113, 114, 124, 127, 138, 141, 152, 155, 160, 163, 171, 174, 180, 195, 196, 201, 214, 217, 221, 258, 261, 285, 292, 293], "can": [48, 114, 160, 195, 196, 198, 214, 219, 224, 227, 231, 232, 239, 240, 241, 242, 247, 252, 258, 264, 285, 287, 288, 292, 293], "associ": [48, 160, 222], "best": [51, 292], "guess": [51, 176, 177], "deduc": 51, "mean": [51, 258, 259], "structur": [51, 287, 293], "final": 51, "properti": [52, 53, 54, 60, 159, 162, 165, 166, 167, 168, 179, 183, 184, 185, 186, 193, 203, 208, 215, 216, 217, 218, 219, 222, 230, 231, 232, 233, 234, 235, 238, 246, 252, 257, 262, 263, 285], "specif": [53, 54, 174, 176, 177, 251, 292], "anoth": [54, 258, 259, 264, 266], "mai": [54, 176, 177, 178, 205, 216, 217, 258, 259, 285, 292], "must": [54, 176, 177, 178, 197, 264, 285, 287, 292], "consist": 54, "colmap": 54, "correct": [54, 292], "invers": 60, "now": 60, "select": [60, 292], "statist": [70, 288], "n_point": 71, "uniform": 71, "sampl": [71, 90, 97, 104, 111, 118, 125, 132, 139, 146, 153, 171, 190, 292], "spheric": [71, 160], "surfac": [71, 160, 171], "int": [71, 97, 111, 125, 139, 153, 176, 177, 190, 195, 196, 201, 220, 237, 239, 240, 241, 242, 250, 251, 256, 258, 259], "number": [71, 90, 97, 104, 111, 118, 125, 132, 139, 146, 153, 160, 163, 171, 176, 177, 180, 190, 237, 239, 240, 241, 242, 256, 258, 259], "draw": 71, "phi": [71, 160, 176, 177, 292], "azimuth": 71, "posit": [71, 90, 96, 97, 104, 110, 111, 118, 124, 125, 132, 138, 139, 146, 152, 153, 168, 176, 177, 186, 195, 196, 220, 224, 293], "rad": [71, 103, 131, 163, 180], "theta": [71, 160, 176, 177, 292], "elev": 71, "angl": 71, "note": [71, 160, 171, 195, 196, 231, 251, 258, 259], "reli": 71, "transform": 71, "produc": [71, 288], "random": [71, 97, 111, 125, 139, 153, 171, 190, 259, 292], "A": [71, 90, 104, 118, 132, 146, 174, 211, 239, 240, 241, 242, 253, 258, 259, 261, 292], "segment": 71, "omega": 71, "area": [71, 96, 97, 110, 111, 124, 125, 138, 139, 152, 153], "sin": 71, "thu": [71, 292], "probabl": [71, 288, 292], "find": [71, 287, 288, 292], "point": [71, 88, 97, 99, 102, 111, 113, 116, 125, 127, 130, 139, 141, 144, 153, 155, 176, 177, 190, 292], "region": 71, "size": [71, 90, 104, 118, 132, 146, 176, 177, 178, 242], "p": [71, 237, 292], "sim": 71, "u": [71, 196, 204, 205, 261], "alpha": [71, 177], "psi": 71, "To": [71, 195, 226, 227, 247, 250, 288], "accomplish": 71, "we": [71, 211, 261, 287, 292, 293], "requir": [71, 198, 217, 258, 292], "1": [71, 99, 113, 127, 141, 155, 176, 177, 195, 196, 198, 211, 220, 226, 227, 228, 240, 242, 247, 248, 250, 251, 252, 253, 254, 256, 261, 264, 266, 285, 292, 293], "distribut": [71, 288], "independ": 71, "simpli": [71, 195, 201, 292], "let": 71, "co": 71, "n": [71, 131, 176, 177, 211, 237, 264, 273, 292], "modul": [72, 191], "x": [72, 103, 131, 176, 177, 195, 196, 211, 220, 227, 228, 247, 248, 250, 251, 288, 292], "queri": [72, 90, 96, 97, 104, 110, 111, 114, 118, 124, 125, 132, 138, 139, 146, 152, 153, 190, 288, 293], "except": [72, 160, 171, 239, 240, 241, 242, 261], "registri": 74, "represent": [86, 114, 142, 157, 239, 240, 241, 242, 261], "local": [86, 258, 259], "radii": [88, 90, 97, 99, 102, 104, 111, 113, 116, 118, 125, 127, 130, 132, 139, 141, 144, 146, 153, 155], "thread": [88, 97, 99, 102, 111, 113, 116, 125, 127, 130, 139, 141, 144, 153, 155], "thread_kw": [88, 97, 99, 102, 111, 113, 116, 125, 127, 130, 139, 141, 144, 153, 155], "skycoord": [90, 96, 104, 110, 118, 124, 132, 138, 146, 152, 168, 186, 261, 293], "sky": [90, 97, 104, 111, 118, 125, 132, 139, 146, 153, 160, 171, 288, 292], "unit": [90, 96, 97, 99, 104, 110, 111, 113, 118, 124, 125, 127, 132, 138, 139, 141, 146, 152, 153, 155, 163, 170, 180, 189, 190, 192, 194, 211, 237, 239, 240, 241, 242, 261, 293], "quantiti": [90, 96, 97, 99, 104, 110, 111, 113, 118, 124, 125, 127, 132, 138, 139, 141, 146, 152, 153, 155, 163, 170, 180, 189, 190, 261], "arrai": [90, 104, 118, 132, 146, 160, 176, 177, 198, 201, 202, 204, 205, 206, 211, 214, 251, 288], "same": [90, 104, 118, 132, 146, 174, 178, 198, 206, 214, 224, 237, 239, 240, 241, 242, 247, 248, 250, 254, 256, 259, 266, 292], "home": [92, 95, 106, 109, 120, 123, 134, 137, 148, 151], "runner": [92, 95, 106, 109, 120, 123, 134, 137, 148, 151], "work": [92, 95, 106, 109, 120, 123, 134, 137, 148, 151, 231, 248, 287, 293], "bin": [92, 95, 106, 109, 120, 123, 134, 137, 148, 151], "psn_map": [92, 95, 106, 109, 120, 123, 134, 137, 148, 151], "get": [94, 108, 122, 136, 150, 195, 196, 220, 243, 244, 258, 259, 287], "poissonmap": [94, 108, 122, 136, 150], "radiu": [96, 110, 124, 138, 152, 170, 176, 189, 190, 292, 293], "remot": [96, 110, 114, 124, 138, 152], "pull": [96, 110, 124, 138, 152], "within": [96, 110, 124, 138, 152, 292, 293], "angular": [96, 110, 124, 138, 152, 190, 292], "about": [96, 110, 124, 138, 152, 292], "count": [97, 111, 125, 139, 153, 178, 190], "randomli": [97, 111, 125, 139, 153, 190, 292], "search": [97, 99, 111, 113, 125, 127, 139, 141, 153, 155, 176, 190, 258, 292, 293], "dictat": [97, 111, 125, 139, 153, 292], "behavior": [97, 111, 125, 139, 153, 160, 171, 254, 292], "source_t": [99, 113, 127, 141, 155], "search_radii": [99, 113, 127, 141, 155], "arcmin": [99, 113, 127, 141, 155, 293], "against": [99, 113, 127, 141, 155, 288, 292, 293], "write": [99, 113, 127, 141, 155], "multithread": [99, 113, 127, 141, 155], "keyword": [99, 113, 127, 141, 155, 174, 178], "instanti": [100, 128], "ipac": [100, 288], "caltech": 100, "redshift": [103, 285], "ass": 103, "As": [103, 131, 292], "cl": [103, 131], "blue": 103, "c": [103, 131, 195, 196, 198, 220, 227, 228, 247, 248, 250, 251, 252, 253, 256, 264, 266, 292], "emobj": 103, "flar": 103, "pe": [103, 131], "hii": [103, 131], "mcld": 103, "moc": [103, 131], "neb": 103, "gne": [103, 131], "nova": 103, "No": [103, 131], "pn": [103, 131], "psr": [103, 131], "red": 103, "rfn": 103, "pne": 103, "sn": [103, 131], "snr": [103, 131], "wd": [103, 131], "wr": [103, 131], "abl": 103, "ism": [103, 131], "eml": 103, "emlin": 103, "flare": 103, "g": [103, 131, 198, 224, 227, 258], "gclstr": 103, "clg": [103, 131], "ggroup": 103, "grg": [103, 131], "gpair": 103, "pag": [103, 131], "gtrpl": 103, "cgg": [103, 131], "g_len": 103, "gl": [103, 131], "gamma": 103, "gam": [103, 131], "ir": [103, 131, 292], "other": [103, 228, 239, 240, 241, 242, 258, 264, 266, 285, 292], "pofg": 103, "qgroup": 103, "agn": [103, 131], "qso": [103, 131], "q_len": 103, "leq": [103, 131], "radio": 103, "rne": [103, 131], "uv": [103, 131], "viss": 103, "opt": [103, 131], "xrai": 103, "exg": 103, "coordinate_unit": [103, 131], "deg": [103, 131, 176, 261, 293], "icr": [103, 131, 285], "poisson": [106, 109, 134, 137, 174, 176, 177, 178, 292], "fit": [106, 109, 134, 137, 160, 161, 163, 171, 172, 180], "host": 114, "main_id": 131, "otyp": [131, 292], "ab": 131, "ag": 131, "ae": 131, "bd": 131, "bh": 131, "bl": 131, "bll": 131, "BY": 131, "Be": 131, "bic": 131, "bla": 131, "bz": 131, "cgb": 131, "cv": 131, "ce": 131, "cld": 131, "dne": 131, "eb": 131, "el": 131, "em": 131, "emg": 131, "emo": 131, "er": 131, "ev": 131, "fir": 131, "gwe": 131, "gic": 131, "gig": 131, "gip": 131, "glc": 131, "gr": 131, "h2g": 131, "hb": 131, "hh": 131, "hi": 131, "h": [131, 237], "hv": 131, "hvc": 131, "hx": 131, "hxb": 131, "ig": 131, "li": 131, "lin": 131, "lm": 131, "lp": 131, "lsb": 131, "lx": 131, "lxb": 131, "le": [131, 160], "leg": 131, "lei": 131, "lev": 131, "mgr": 131, "mir": 131, "m": [131, 261], "ma": [131, 202], "mi": 131, "nir": 131, "oh": 131, "opc": 131, "Or": 131, "pcg": 131, "pm": 131, "pl": 131, "poc": 131, "pog": 131, "pu": 131, "q": [131, 237, 261], "rb": 131, "rc": 131, "rg": 131, "rr": 131, "r": [131, 237, 292], "rv": 131, "ro": 131, "sb": 131, "sbg": 131, "sc": [131, 261], "scg": 131, "sfr": 131, "sr": 131, "sx": 131, "st": 131, "sy": 131, "sy1": 131, "sy2": 131, "syg": 131, "tt": 131, "ulx": 131, "ux": 131, "wv": 131, "xb": 131, "y": [131, 176, 177, 195, 196, 220, 227, 228, 247, 248, 250, 251, 292], "o": 131, "a2": 131, "bc": 131, "bcg": 131, "blu": 131, "bub": 131, "cc": 131, "cm": 131, "cor": 131, "err": 131, "flt": 131, "gb": 131, "gd": 131, "gle": 131, "glb": 131, "grv": 131, "mr": 131, "mm": 131, "mul": 131, "pa": 131, "reg": 131, "sg": 131, "sh": 131, "smm": 131, "var": 131, "vid": 131, "skymap": 156, "handler": 156, "callabl": 157, "healpix": [157, 160, 163, 168, 170, 171, 180, 186, 189], "atla": [157, 158, 159, 162, 164, 170, 174, 178, 179, 181, 189, 190], "hdu": [158, 160, 167, 171, 185], "locat": 158, "mapatla": [158, 171, 172], "filepath": [160, 161, 171, 172], "design": 160, "store": [160, 243, 244], "On": [160, 171, 287, 293], "standard": [160, 171, 227, 260, 285, 292], "detail": [160, 171, 288], "regard": [160, 171], "primari": [160, 171, 197, 249, 260, 261], "geometri": [160, 171], "npix": [160, 171], "pixel": [160, 168, 171, 186], "grid": [160, 163, 170, 171, 180, 189], "nside": [160, 171], "csy": [160, 171], "cdate": [160, 171], "date": [160, 171, 211], "wa": [160, 171, 198, 292], "edat": [160, 171], "edit": [160, 171], "re": [160, 171, 258, 259], "resolut": [160, 163, 170, 171, 180, 189], "differ": [160, 195, 196, 214, 256, 285], "than": [160, 227, 285], "0": [160, 176, 177, 195, 196, 211, 220, 227, 228, 239, 240, 241, 242, 247, 248, 250, 251, 254, 256, 261, 264, 278, 292], "pi": [160, 176, 177, 292], "measur": 160, "north": 160, "pole": 160, "never": 160, "interact": [160, 237, 293], "when": [160, 170, 189, 205, 221, 227, 258, 259], "packag": [160, 268, 285, 287, 288, 292], "automat": [160, 292], "convert": [160, 176, 177, 195, 196, 204, 205, 211, 261, 264, 292], "lon": [160, 176, 177], "lat": [160, 176, 177], "time": [160, 211, 247, 250, 259, 261], "These": [160, 285, 292], "so": [160, 204, 221, 242, 243, 244, 258, 285, 288], "call": [160, 195, 196, 201, 259], "base_coordin": 160, "yet": 160, "ti": 160, "ani": [160, 178, 195, 196, 202, 216, 218, 258, 287, 292, 293], "physic": [160, 285, 292], "context": [160, 221], "entri": [160, 198, 210], "those": [160, 285, 292], "interpret": 160, "aforement": 160, "veri": [160, 195], "imag": 160, "1xnpix": 160, "some": [160, 258], "need": [160, 227, 258, 259, 285, 288, 293], "identifi": [160, 292], "ismap": 160, "skyatla": [163, 180], "save": [163, 180], "pass": [163, 176, 177, 178, 180, 190, 258], "assum": [163, 180], "obtain": [164, 181], "forc": [170, 189], "reshap": [170, 189], "result": [170, 176, 177, 178, 189, 266], "delet": [170, 189], "instead": [170, 189, 242], "fail": [170, 176, 177, 189], "thei": [170, 189, 196, 219, 285], "encount": [170, 189], "subclass": [171, 211, 218, 285], "wrap": 171, "dbname": 171, "hudl": [173, 199], "object_typ": [174, 178], "gp": [174, 176, 177], "inplac": 174, "build": [174, 176, 177], "poissonatla": 174, "calcul": [174, 292], "pre": [174, 178, 190, 292], "exist": [174, 178, 190, 195, 196, 198, 253, 254, 258, 259, 260], "written": 174, "directli": [174, 252, 292], "argument": [174, 176, 177, 178, 190, 197, 198, 224, 255, 261, 264], "object_id": 175, "training_kw": [176, 177], "parallel_kw": [176, 177], "haversin": [176, 177], "knn": 176, "approach": [176, 195], "done": [176, 177, 247, 252], "gaussian": [176, 177, 292], "regress": [176, 177], "correctli": [176, 177], "comput": [176, 177], "distanc": [176, 177, 292], "between": [176, 177, 196, 292], "sphere": [176, 177], "entir": [176, 177, 210, 240, 242, 292], "erron": [176, 177], "densiti": [176, 177, 292], "behind": [176, 177], "scene": [176, 177], "log": [176, 177, 290], "avoid": [176, 177, 258, 259, 292], "issu": [176, 177, 258, 261], "regressor": [176, 177], "neg": [176, 177, 239, 240, 241, 258], "It": [176, 177, 285], "rectifi": [176, 177], "after": [176, 177], "been": [176, 177], "train": [176, 177], "word": [176, 177, 190], "ml": [176, 177], "algorithm": [176, 177, 201, 260, 292], "descript": [176, 177, 192, 194, 285, 292], "expect": [176, 177], "training_proport": [176, 177], "proport": [176, 177], "float": [176, 177, 254, 261], "cv_group": [176, 177], "group": [176, 177, 214], "split": [176, 177, 214], "5": [176, 177, 198, 227, 252, 253, 256, 261, 266], "radius_bound": 176, "bound": [176, 177], "characterist": [176, 177], "knnr": 176, "scale": [176, 177], "10": [176, 251], "parallel": [176, 177], "capabl": [176, 177], "multiprocess": [176, 177], "multi": [176, 177, 261, 272], "core": [176, 177, 292, 293], "enabl": [176, 177, 292], "singl": [176, 177, 178, 197, 231, 248, 261], "nproc": [176, 177], "processor": [176, 177], "cannot": [176, 177, 198, 239, 240, 241, 292], "exce": [176, 177], "n_cpu": [176, 177], "methodologi": [177, 288], "length_scal": 177, "kernel": 177, "length": [177, 178, 195, 196, 198, 211, 214, 224, 264, 266], "length_scale_bound": 177, "1e": 177, "1e2": 177, "alpha_cv": 177, "compar": [177, 266], "dure": [177, 292], "linearli": 177, "space": [177, 237], "individu": [177, 178, 210], "8": [177, 198, 204, 205, 261, 266, 283], "1e0": 177, "build_arg": 178, "build_kwarg": 178, "construct": [178, 292], "subset": [178, 227], "procedur": [178, 292], "By": [178, 202], "append": [178, 195, 196], "element": [178, 261, 266], "also": [178, 195, 196, 198, 224, 247, 248, 252, 292], "arbitrari": 178, "similar": [178, 226], "along": 178, "left": [178, 239, 240, 241, 242, 292], "unspecifi": 178, "npoint": 190, "search_radiu": [190, 293], "meta": [190, 192, 194, 206, 243, 244, 254, 264], "add": [190, 195, 196, 198, 224, 287, 292], "around": [190, 293], "through": 190, "custom": 191, "mask": [192, 194, 198, 202, 210, 216, 217, 224, 261], "dtype": [192, 194, 198, 204, 205, 211, 224, 237, 239, 240, 241, 242], "copi": [192, 194, 195, 196, 198, 202, 210, 214, 221, 254, 258, 264], "row": [192, 194, 198, 214, 219, 224, 227, 231, 232, 237, 239, 240, 241, 242, 250, 251, 255, 258, 259], "copy_indic": [192, 194], "col": [195, 196, 221, 226, 254], "index": [195, 196, 197, 211, 219, 220, 221, 224, 231, 232, 249, 250, 258, 259, 260, 261], "rename_dupl": [195, 196], "default_nam": 195, "input": [195, 196, 210, 214, 254], "suppli": [195, 196, 197, 210, 239, 240, 241], "befor": [195, 196, 224], "end": [195, 196, 198, 237], "accept": [195, 196], "includ": [195, 196, 202, 211, 237, 239, 240, 241, 242, 285, 287, 288, 292], "mixin": [195, 196, 216, 218, 254, 261], "scalar": [195, 196, 266], "broadcast": [195, 196], "sever": [195, 247, 248, 250], "onc": [195, 196], "one": [195, 197, 198, 201, 221, 237, 239, 240, 241, 242, 260, 264, 266, 285, 292], "There": [195, 285], "littl": [195, 196], "perform": [195, 196, 264, 292], "two": [195, 196, 292], "uniquifi": [195, 196], "alreadi": [195, 258, 259, 287, 292], "make": [195, 196, 197, 221, 254, 259], "both": [195, 231, 242], "info": [195, 252], "number_of_column": 195, "exampl": [195, 196, 198, 211, 220, 226, 227, 228, 247, 248, 250, 251, 252, 253, 254, 255, 256, 260, 261, 264, 266, 287, 288, 292], "third": 195, "t": [195, 196, 198, 220, 226, 227, 228, 247, 248, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 264, 292], "col_c": [195, 196], "print": [195, 196, 198, 211, 220, 226, 227, 228, 237, 241, 242, 243, 244, 247, 248, 250, 251, 252, 253, 255, 256, 259, 260, 261], "second": [195, 196], "b_1": [195, 196], "unnam": [195, 196], "explicit": [195, 196], "overridden": [195, 196], "col2": 195, "origin": [196, 254, 264, 292], "perspect": 196, "loop": 196, "over": [196, 226, 227], "duplic": [196, 258], "ones": 196, "hstack": [196, 254, 264], "updat": [196, 254], "replace_column": [196, 264], "them": [196, 256, 292, 293], "col_d": 196, "col_b": 196, "4": [196, 198, 204, 211, 252, 253, 256, 266], "col0": [196, 226, 227], "colnam": [197, 249], "engin": [197, 200], "uniqu": [197, 214, 239, 240, 258, 259], "among": 197, "more": [197, 201, 239, 240, 241, 242, 260, 285, 292], "indic": [197, 201, 221, 231, 232, 249, 258, 292], "sortedarrai": 197, "bst": 197, "scengin": 197, "whether": [197, 264, 292], "val": [198, 224], "sequenc": [198, 224, 254], "miss": [198, 224, 261], "fill": [198, 224], "np": [198, 202, 211, 224, 261], "zero": [198, 224], "own": 198, "should": [198, 224, 264, 285, 292], "give": [198, 224, 248], "desir": [198, 205, 224], "three": [198, 220, 227, 228, 247, 248, 250, 251, 252, 253, 255, 256], "7": [198, 261, 264, 266], "ad": [198, 249, 258, 259, 264, 287, 292], "6": [198, 252, 253, 261], "9": [198, 279], "kind": [201, 204, 205, 260], "revers": [201, 260], "would": 201, "sort": [201, 214, 258, 259], "accord": [201, 214, 260], "numpi": [201, 202, 211, 214, 254, 260], "quicksort": [201, 260], "mergesort": [201, 260], "heapsort": [201, 260], "stabl": [201, 260], "index_arrai": 201, "ndarrai": [201, 202, 254], "keep_byteord": 202, "form": 202, "maskedarrai": 202, "appropri": 202, "byte": [202, 204], "howev": [202, 292], "preserv": [202, 221], "non": [202, 256], "table_arrai": 202, "unmask": 202, "bytestr": [204, 205], "unicod": [204, 205], "utf": [204, 205, 283], "encod": [204, 205, 261, 283], "intern": 204, "chang": [204, 285, 287], "charact": [204, 237, 239, 240, 241, 242], "uc": 204, "ineffici": 204, "memori": [204, 258], "script": 204, "manipul": 204, "natur": [204, 292], "syntax": [204, 264], "export": [205, 258], "copy_data": 206, "alwai": [206, 292], "deepcopi": 206, "regardless": 206, "recarrai": 209, "compat": 209, "fill_valu": 210, "self": [210, 239, 240, 258, 259], "defin": [210, 218, 237, 239, 240, 241, 242, 292], "filled_t": 210, "datafram": [211, 261], "panda": [211, 261], "numer": [211, 256], "convers": 211, "delta": 211, "timedelta": [211, 261], "respect": [211, 239, 240, 241, 242], "have": [211, 216, 259, 261, 285, 293], "importerror": [211, 261], "instal": [211, 261], "here": [211, 261, 292], "qtabl": [211, 261], "import": [211, 261, 285, 287, 293], "pd": [211, 261], "seri": 211, "1998": [211, 261], "01": [211, 261], "2002": [211, 261], "datetime64": [211, 261], "dt": [211, 261], "300": 211, "timedelta64": [211, 261], "df": [211, 261], "option_context": [211, 261], "displai": [211, 258, 259, 261], "max_column": [211, 261], "20": [211, 251, 261], "dai": [211, 261], "00": [211, 261], "05": [211, 278], "float64": [211, 264], "01t00": 211, "000": 211, "output": [214, 237, 239, 240, 241, 242, 243, 244], "tablegroup": 214, "wai": 214, "homogen": 214, "maskedcolumn": [216, 261], "check": [216, 217, 288], "has_masked_valu": 216, "rel": [217, 292], "slow": 217, "larg": [217, 292], "tableiloc": 219, "retriev": [219, 231, 232, 259], "appear": [219, 292], "mode": [221, 261, 283], "freez": 221, "copy_on_getitem": 221, "discard_on_copi": 221, "whenev": 221, "modifi": 221, "exit": 221, "refresh": [221, 237], "themselv": 221, "intend": 221, "scenario": 221, "mani": [221, 261, 288], "modif": 221, "take": [221, 292], "slice": [221, 251], "well": [221, 292], "i0": 221, "i1": 221, "tableindic": 222, "col1": 226, "syntact": 226, "prefer": 226, "especi": 227, "substanti": 227, "faster": 227, "tbl": 227, "sinc": [227, 258], "access": [227, 259, 285], "slower": 227, "wise": [227, 266, 292], "keep": 228, "tableloc": 231, "rang": 231, "iloc": 231, "tablelocindic": 232, "max_lin": [237, 239, 240, 241, 242, 258], "max_width": [237, 239, 240, 241, 242], "show_nam": [237, 239, 240, 241, 242], "show_unit": [237, 239, 240, 241, 242], "show_dtyp": [237, 239, 240, 241, 242], "brows": 237, "page": [237, 259, 287, 293], "interfac": 237, "forward": 237, "back": 237, "next": [237, 292], "previou": 237, "go": [237, 292], "begin": [237, 287], "quit": 237, "help": [237, 292], "maximum": [237, 239, 240, 241, 242, 258], "line": [237, 239, 240, 241, 242], "width": [237, 239, 240, 241, 242], "show": [237, 239, 240, 241, 242, 258, 259, 266], "html": [239, 240, 258, 259], "tableid": [239, 240, 258, 259], "align": [239, 240, 241, 242], "tableclass": [239, 240], "height": [239, 240, 241], "screen": [239, 240, 241, 242], "termin": [239, 240, 241, 242], "taken": [239, 240, 241], "configur": [239, 240, 241, 259, 287, 290], "conf": [239, 240, 241], "limit": [239, 240, 241, 258, 259], "appli": [239, 240, 241, 285], "id": [239, 240, 258, 259], "tag": [239, 240, 258, 259], "where": [239, 240, 258, 259, 292], "integ": [239, 240, 258, 259, 261], "right": [239, 240, 241, 242, 292], "center": [239, 240, 241, 242], "pad": [239, 240, 241, 242], "multipl": [239, 240, 241, 242, 253, 259], "css": [239, 240, 258, 259], "pprint": 242, "restrict": [242, 292], "maintain": [243, 244], "visibl": [243, 244], "descriptor": [243, 244], "inherit": [243, 244, 292], "metaattribut": [243, 244], "__attributes__": [243, 244], "pprint_include_nam": 243, "pprint_exclude_nam": 244, "connect": [245, 267, 285], "tableread": 245, "del": 247, "involv": 249, "recent": 249, "remain": [249, 256], "row_specifi": 251, "warn": [251, 261], "oper": [251, 260], "extend": 251, "outsid": 251, "new_nam": [252, 253], "renam": [252, 253], "aa": [252, 253], "bb": 253, "replac": [254, 264], "deep": [254, 288], "For": [254, 261], "add_column": [254, 264], "version": [254, 258, 259, 261], "itself": [254, 258, 259], "float_a": 254, "astyp": 254, "place": [255, 256, 264], "max": [255, 260], "jo": [255, 260], "john": [255, 260], "miller": [255, 260], "jackson": [255, 260], "12": [255, 256, 260], "15": [255, 260], "18": [255, 260], "firstnam": [255, 260], "tel": [255, 260], "decim": 256, "ignor": [256, 258, 259], "25": 256, "55": 256, "123": 256, "85": 256, "26": 256, "certain": 256, "5000": 258, "jsviewer": [258, 259], "browser": [258, 259], "jskwarg": 258, "use_local_fil": 258, "table_class": [258, 259], "compact": 258, "show_row_index": [258, 259], "idx": [258, 259], "render": [258, 259], "web": 258, "low": 258, "prepend": 258, "javascript": [258, 259], "datat": [258, 259], "legal": 258, "firefox": 258, "chrome": 258, "safari": 258, "mac": 258, "you": [258, 259, 285, 287, 288, 292, 293], "open": 258, "applic": 258, "googl": 258, "app": 258, "init": 258, "librari": 258, "serv": 258, "style": [258, 259, 264], "http": 258, "www": 258, "net": 258, "manual": 258, "declar": [258, 259], "default_css": 258, "evalu": [258, 259], "even": [258, 259], "display_length": 259, "50": 259, "ipython": 259, "notebook": 259, "xxx": 259, "conflict": 259, "default_notebook_table_class": 259, "bootstrap": 259, "see": [259, 261, 288, 292], "default_css_nb": 259, "unlik": 259, "show_in_brows": 259, "onlin": 259, "code": [259, 288], "repositori": 259, "due": [259, 292], "modern": 259, "henc": 259, "while": 259, "offlin": 259, "don": 259, "cach": 259, "jqueri": 259, "featur": [259, 292], "argsort": 260, "rule": 260, "use_nullable_int": 261, "vanilla": 261, "analog": 261, "below": 261, "nullabl": 261, "24": 261, "nan": 261, "valueerror": 261, "dimension": 261, "tm": 261, "jyear": 261, "200": 261, "03": 261, "merg": 264, "metadata": 264, "someth": 264, "possibli": 264, "altern": 264, "refer": [264, 288], "t1": [264, 266], "foo": 264, "bar": 264, "t2": [264, 266], "11": 264, "str3": 264, "comparison": 266, "boolean": 266, "tablewrit": 267, "ubiquit": 268, "pyx": 268, "preferred_unit": 269, "datadict": [270, 271], "maplist": [270, 271], "task": [272, 285], "textual": 274, "cli": 274, "delai": [275, 276], "levelnam": 279, "asctim": 279, "messag": 279, "static": 282, "_io": 283, "textiowrapp": 283, "stderr": 283, "w": 283, "abstract": 285, "attach": 285, "catalog": [285, 288], "etc": [285, 292], "varieti": [285, 287, 288], "throughout": 285, "awar": 285, "sourcetableschema": 285, "raw": 285, "interest": [285, 288], "practic": 285, "job": 285, "your": [285, 287, 293], "do": [285, 288], "NOT": 285, "everi": [285, 288, 293], "least": 285, "complet": [285, 288], "galact": 285, "latitud": 285, "longitud": 285, "fly": 285, "coordinate_system": 285, "tell": 285, "what": [285, 292], "actual": 285, "start": 287, "section": [287, 292], "concern": 287, "basic": 287, "yourself": 287, "readi": 287, "roll": 287, "instruct": 287, "environ": 287, "devic": 287, "learn": 287, "how": [287, 292, 293], "built": 287, "summar": 287, "understand": 287, "python": 288, "identif": 288, "astronom": [288, 293], "softwar": 288, "known": [288, 293], "tool": 288, "quantifi": 288, "confid": [288, 292], "autom": 288, "common": [288, 292], "survei": 288, "mission": 288, "wide": 288, "model": [288, 290, 292], "mock": 288, "ned": [288, 292, 293], "come": [288, 292], "soon": 288, "quickstart": 288, "guid": 288, "our": 288, "easi": 288, "worth": 288, "brief": 288, "overview": [288, 290], "critic": 288, "topic": 288, "relat": [288, 292], "develop": [288, 292], "api": 288, "dive": 288, "look": 288, "contribut": 288, "comprehens": [288, 292], "hint": 288, "might": 288, "poisson_map": 290, "psf": [290, 292], "naiv": 292, "subject": 292, "chosen": 292, "doesn": 292, "pai": 292, "attent": 292, "further": 292, "sens": 292, "decis": 292, "could": 292, "improv": 292, "fidel": 292, "furthermor": 292, "just": 292, "step": 292, "run": [292, 293], "legitim": 292, "spuriou": 292, "complex": 292, "significantli": 292, "cost": 292, "minim": 292, "framework": 292, "subprocess": 292, "exactli": 292, "interv": 292, "perfect": 292, "assign": 292, "weight": 292, "fine": 292, "tune": 292, "potenti": 292, "collect": 292, "total": 292, "across": 292, "c_i": 292, "sum_": 292, "alpha_i": 292, "th": 292, "reflect": 292, "success": 292, "instrument": 292, "implement": 292, "instrument_param": 292, "head": 292, "ongo": 292, "underwai": 292, "qualiti": 292, "sophist": 292, "reason": 292, "down": 292, "fall": 292, "telescop": 292, "covari": 292, "sigma": 292, "c_": 292, "mathrm": 292, "sqrt": 292, "delta_": 292, "xy": 292, "object_param": 292, "intent": 292, "constrain": 292, "permit": 292, "definit": 292, "depend": 292, "feasabl": 292, "hierarch": 292, "parent": 292, "classif": 292, "subtyp": 292, "poisson_param": 292, "abund": 292, "particularli": 292, "preval": 292, "star": 292, "background": 292, "galaxi": 292, "partial": 292, "protocol": 292, "robust": 292, "enforc": 292, "benefit": 292, "poorli": 292, "describ": [292, 293], "classifi": 292, "2mass": 292, "sdss": 292, "observ": 292, "too": 292, "dismiss": 292, "still": 292, "want": 292, "spurious": 292, "familiar": 292, "essenc": 292, "prior": 292, "estim": 292, "frequenc": 292, "circl": 292, "lambda": 292, "exp": 292, "candid": 292, "occur": 292, "chanc": 292, "p_": 292, "phi_i": 292, "theta_i": 292, "proxi": 292, "cornerston": 292, "runtim": 292, "layout": 292, "ecosystem": 292, "consid": 292, "io_param": 292, "io": 292, "dbpath": 292, "disabl": 292, "catpath": 292, "sourcedatabas": 293, "corner": 293, "stone": 293, "ll": 293, "meet": 293, "scientif": 293, "remotedatabas": 293, "localdatabas": 293, "simplifi": 293, "astroqueri": 293, "url": 293, "query_radiu": 293, "necessari": 293, "83": 293, "63": 293, "22": 293, "0144": 293, "conduct": 293, "output_t": 293}, "objects": {"": [[0, 0, 0, "-", "cross_reference"], [4, 0, 0, "-", "schema"]], "cross_reference": [[1, 1, 1, "", "cross_match"], [2, 1, 1, "", "cross_match_table"], [3, 1, 1, "", "reduce_match_database"]], "schema": [[5, 2, 1, "", "ReductionSchema"], [31, 2, 1, "", "Schema"], [46, 2, 1, "", "SourceTableSchema"]], "schema.ReductionSchema": [[6, 3, 1, "", "DBPATH"], [7, 3, 1, "", "INSTRUMENTAL"], [8, 3, 1, "", "INSTRUMENT_PARAMS"], [9, 3, 1, "", "IO_PARAMS"], [10, 3, 1, "", "OBJECT_PARAMS"], [11, 3, 1, "", "OTYPES"], [12, 3, 1, "", "POISSON"], [13, 3, 1, "", "POISSON_PARAMS"], [14, 3, 1, "", "PSF"], [15, 3, 1, "", "REFDBS"], [16, 3, 1, "", "RUN_PARAMS"], [17, 4, 1, "", "__init__"], [18, 4, 1, "", "clear"], [19, 4, 1, "", "copy"], [20, 4, 1, "", "from_file"], [21, 4, 1, "", "fromkeys"], [22, 4, 1, "", "get"], [23, 4, 1, "", "isvalid"], [24, 4, 1, "", "items"], [25, 4, 1, "", "keys"], [26, 4, 1, "", "pop"], [27, 4, 1, "", "popitem"], [28, 4, 1, "", "setdefault"], [29, 4, 1, "", "update"], [30, 4, 1, "", "values"]], "schema.Schema": [[32, 4, 1, "", "__init__"], [33, 4, 1, "", "clear"], [34, 4, 1, "", "copy"], [35, 4, 1, "", "from_file"], [36, 4, 1, "", "fromkeys"], [37, 4, 1, "", "get"], [38, 4, 1, "", "isvalid"], [39, 4, 1, "", "items"], [40, 4, 1, "", "keys"], [41, 4, 1, "", "pop"], [42, 4, 1, "", "popitem"], [43, 4, 1, "", "setdefault"], [44, 4, 1, "", "update"], [45, 4, 1, "", "values"]], "schema.SourceTableSchema": [[47, 4, 1, "", "__init__"], [48, 4, 1, "", "available_coordinate_frames"], [49, 4, 1, "", "clear"], [50, 3, 1, "", "column_map"], [51, 4, 1, "", "construct"], [52, 5, 1, "", "coordinate_columns"], [53, 5, 1, "", "coordinate_frame"], [54, 5, 1, "", "coordinate_system"], [55, 4, 1, "", "copy"], [56, 3, 1, "", "default_coord_system"], [57, 4, 1, "", "from_file"], [58, 4, 1, "", "fromkeys"], [59, 4, 1, "", "get"], [60, 5, 1, "", "inv_column_map"], [61, 4, 1, "", "isvalid"], [62, 4, 1, "", "items"], [63, 4, 1, "", "keys"], [64, 3, 1, "", "object_map"], [65, 4, 1, "", "pop"], [66, 4, 1, "", "popitem"], [67, 4, 1, "", "setdefault"], [68, 4, 1, "", "update"], [69, 4, 1, "", "values"]], "stats": [[70, 0, 0, "-", "utilities"]], "stats.utilities": [[71, 1, 1, "", "uniform_sample_spherical"]], "structures": [[72, 0, 0, "-", "databases"], [156, 0, 0, "-", "map"], [191, 0, 0, "-", "table"]], "structures.databases": [[73, 2, 1, "", "DBRegistry"], [86, 2, 1, "", "LocalDatabase"], [100, 2, 1, "", "NED"], [114, 2, 1, "", "RemoteDatabase"], [128, 2, 1, "", "SIMBAD"], [142, 2, 1, "", "SourceDatabase"]], "structures.databases.DBRegistry": [[74, 4, 1, "", "__init__"], [75, 4, 1, "", "clear"], [76, 4, 1, "", "copy"], [77, 4, 1, "", "fromkeys"], [78, 4, 1, "", "get"], [79, 4, 1, "", "items"], [80, 4, 1, "", "keys"], [81, 4, 1, "", "pop"], [82, 4, 1, "", "popitem"], [83, 4, 1, "", "setdefault"], [84, 4, 1, "", "update"], [85, 4, 1, "", "values"]], "structures.databases.LocalDatabase": [[87, 4, 1, "", "__init__"], [88, 4, 1, "", "add_sources_to_poisson"], [89, 3, 1, "", "class_table_schema"], [90, 4, 1, "", "count"], [91, 4, 1, "", "create_poisson_map"], [92, 3, 1, "", "default_poisson_map"], [93, 4, 1, "", "get_default_poisson_map"], [94, 4, 1, "", "get_poisson_map"], [95, 3, 1, "", "poisson_map"], [96, 4, 1, "", "query_radius"], [97, 4, 1, "", "random_sample_count"], [98, 4, 1, "", "set_poisson_map"], [99, 4, 1, "", "source_match"]], "structures.databases.NED": [[101, 4, 1, "", "__init__"], [102, 4, 1, "", "add_sources_to_poisson"], [103, 3, 1, "", "class_table_schema"], [104, 4, 1, "", "count"], [105, 4, 1, "", "create_poisson_map"], [106, 3, 1, "", "default_poisson_map"], [107, 4, 1, "", "get_default_poisson_map"], [108, 4, 1, "", "get_poisson_map"], [109, 3, 1, "", "poisson_map"], [110, 4, 1, "", "query_radius"], [111, 4, 1, "", "random_sample_count"], [112, 4, 1, "", "set_poisson_map"], [113, 4, 1, "", "source_match"]], "structures.databases.RemoteDatabase": [[115, 4, 1, "", "__init__"], [116, 4, 1, "", "add_sources_to_poisson"], [117, 3, 1, "", "class_table_schema"], [118, 4, 1, "", "count"], [119, 4, 1, "", "create_poisson_map"], [120, 3, 1, "", "default_poisson_map"], [121, 4, 1, "", "get_default_poisson_map"], [122, 4, 1, "", "get_poisson_map"], [123, 3, 1, "", "poisson_map"], [124, 4, 1, "", "query_radius"], [125, 4, 1, "", "random_sample_count"], [126, 4, 1, "", "set_poisson_map"], [127, 4, 1, "", "source_match"]], "structures.databases.SIMBAD": [[129, 4, 1, "", "__init__"], [130, 4, 1, "", "add_sources_to_poisson"], [131, 3, 1, "", "class_table_schema"], [132, 4, 1, "", "count"], [133, 4, 1, "", "create_poisson_map"], [134, 3, 1, "", "default_poisson_map"], [135, 4, 1, "", "get_default_poisson_map"], [136, 4, 1, "", "get_poisson_map"], [137, 3, 1, "", "poisson_map"], [138, 4, 1, "", "query_radius"], [139, 4, 1, "", "random_sample_count"], [140, 4, 1, "", "set_poisson_map"], [141, 4, 1, "", "source_match"]], "structures.databases.SourceDatabase": [[143, 4, 1, "", "__init__"], [144, 4, 1, "", "add_sources_to_poisson"], [145, 3, 1, "", "class_table_schema"], [146, 4, 1, "", "count"], [147, 4, 1, "", "create_poisson_map"], [148, 3, 1, "", "default_poisson_map"], [149, 4, 1, "", "get_default_poisson_map"], [150, 4, 1, "", "get_poisson_map"], [151, 3, 1, "", "poisson_map"], [152, 4, 1, "", "query_radius"], [153, 4, 1, "", "random_sample_count"], [154, 4, 1, "", "set_poisson_map"], [155, 4, 1, "", "source_match"]], "structures.map": [[157, 2, 1, "", "Map"], [160, 2, 1, "", "MapAtlas"], [171, 2, 1, "", "StatAtlas"]], "structures.map.Map": [[158, 4, 1, "", "__init__"], [159, 5, 1, "", "coordinate_frame"]], "structures.map.MapAtlas": [[161, 4, 1, "", "__init__"], [162, 5, 1, "", "coordinate_frame"], [163, 4, 1, "", "generate"], [164, 4, 1, "", "get_map"], [165, 5, 1, "", "has_maps"], [166, 5, 1, "", "hdus"], [167, 5, 1, "", "map_names"], [168, 5, 1, "", "pixel_positions"], [169, 4, 1, "", "remove"], [170, 4, 1, "", "reshape_healpix"]], "structures.map.StatAtlas": [[172, 4, 1, "", "__init__"], [173, 4, 1, "", "append_to_fits"], [174, 4, 1, "", "build_poisson_map"], [175, 4, 1, "", "build_poisson_map_MAP"], [176, 4, 1, "", "build_poisson_map_NNR"], [177, 4, 1, "", "build_poisson_map_gp"], [178, 4, 1, "", "build_poisson_maps"], [179, 5, 1, "", "coordinate_frame"], [180, 4, 1, "", "generate"], [181, 4, 1, "", "get_map"], [182, 4, 1, "", "get_points"], [183, 5, 1, "", "has_maps"], [184, 5, 1, "", "hdus"], [185, 5, 1, "", "map_names"], [186, 5, 1, "", "pixel_positions"], [187, 4, 1, "", "remove"], [188, 4, 1, "", "reset"], [189, 4, 1, "", "reshape_healpix"], [190, 4, 1, "", "sample_from_database"]], "structures.table": [[192, 2, 1, "", "SourceTable"]], "structures.table.SourceTable": [[193, 5, 1, "", "ColumnClass"], [194, 4, 1, "", "__init__"], [195, 4, 1, "", "add_column"], [196, 4, 1, "", "add_columns"], [197, 4, 1, "", "add_index"], [198, 4, 1, "", "add_row"], [199, 4, 1, "", "append_to_fits"], [200, 4, 1, "", "append_to_sql"], [201, 4, 1, "", "argsort"], [202, 4, 1, "", "as_array"], [203, 5, 1, "", "colnames"], [204, 4, 1, "", "convert_bytestring_to_unicode"], [205, 4, 1, "", "convert_unicode_to_bytestring"], [206, 4, 1, "", "copy"], [207, 4, 1, "", "count_types"], [208, 5, 1, "", "dtype"], [209, 4, 1, "", "field"], [210, 4, 1, "", "filled"], [211, 4, 1, "", "from_pandas"], [212, 4, 1, "", "generate_schema"], [213, 4, 1, "", "get_coordinates"], [214, 4, 1, "", "group_by"], [215, 5, 1, "", "groups"], [216, 5, 1, "", "has_masked_columns"], [217, 5, 1, "", "has_masked_values"], [218, 5, 1, "", "has_mixin_columns"], [219, 5, 1, "", "iloc"], [220, 4, 1, "", "index_column"], [221, 4, 1, "", "index_mode"], [222, 5, 1, "", "indices"], [223, 3, 1, "", "info"], [224, 4, 1, "", "insert_row"], [225, 4, 1, "", "items"], [226, 4, 1, "", "itercols"], [227, 4, 1, "", "iterrows"], [228, 4, 1, "", "keep_columns"], [229, 4, 1, "", "keys"], [230, 5, 1, "", "lat"], [231, 5, 1, "", "loc"], [232, 5, 1, "", "loc_indices"], [233, 5, 1, "", "lon"], [234, 5, 1, "", "mask"], [235, 5, 1, "", "masked"], [236, 3, 1, "", "meta"], [237, 4, 1, "", "more"], [238, 5, 1, "", "name"], [239, 4, 1, "", "pformat"], [240, 4, 1, "", "pformat_all"], [241, 4, 1, "", "pprint"], [242, 4, 1, "", "pprint_all"], [243, 3, 1, "", "pprint_exclude_names"], [244, 3, 1, "", "pprint_include_names"], [245, 3, 1, "", "read"], [246, 5, 1, "", "redshift"], [247, 4, 1, "", "remove_column"], [248, 4, 1, "", "remove_columns"], [249, 4, 1, "", "remove_indices"], [250, 4, 1, "", "remove_row"], [251, 4, 1, "", "remove_rows"], [252, 4, 1, "", "rename_column"], [253, 4, 1, "", "rename_columns"], [254, 4, 1, "", "replace_column"], [255, 4, 1, "", "reverse"], [256, 4, 1, "", "round"], [257, 5, 1, "", "schema"], [258, 4, 1, "", "show_in_browser"], [259, 4, 1, "", "show_in_notebook"], [260, 4, 1, "", "sort"], [261, 4, 1, "", "to_pandas"], [262, 5, 1, "", "type"], [263, 5, 1, "", "type_native"], [264, 4, 1, "", "update"], [265, 4, 1, "", "values"], [266, 4, 1, "", "values_equal"], [267, 3, 1, "", "write"]], "utilities": [[268, 0, 0, "-", "core"], [272, 0, 0, "-", "mp_utils"], [274, 0, 0, "-", "text"]], "utilities.core": [[269, 1, 1, "", "enforce_units"], [270, 1, 1, "", "getFromDict"], [271, 1, 1, "", "setInDict"]], "utilities.mp_utils": [[273, 1, 1, "", "split"]], "utilities.text": [[275, 2, 1, "", "Spinner"]], "utilities.text.Spinner": [[276, 4, 1, "", "__init__"], [277, 3, 1, "", "busy"], [278, 3, 1, "", "delay"], [279, 3, 1, "", "formatter"], [280, 3, 1, "", "process"], [281, 4, 1, "", "spinner_task"], [282, 4, 1, "", "spinning_cursor"], [283, 3, 1, "", "stream"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"]}, "titleterms": {"cross_refer": [0, 1, 2, 3], "cross_match": 1, "cross_match_t": 2, "reduce_match_databas": 3, "schema": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 257, 285, 292, 299], "reductionschema": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "dbpath": 6, "instrument": 7, "instrument_param": 8, "io_param": 9, "object_param": 10, "otyp": 11, "poisson": 12, "poisson_param": 13, "psf": [14, 298], "refdb": 15, "run_param": [16, 292], "__init__": [17, 32, 47, 74, 87, 101, 115, 129, 143, 158, 161, 172, 194, 276], "clear": [18, 33, 49, 75], "copi": [19, 34, 55, 76, 206], "from_fil": [20, 35, 57], "fromkei": [21, 36, 58, 77], "get": [22, 37, 59, 78, 290], "isvalid": [23, 38, 61], "item": [24, 39, 62, 79, 225], "kei": [25, 40, 63, 80, 229], "pop": [26, 41, 65, 81], "popitem": [27, 42, 66, 82], "setdefault": [28, 43, 67, 83], "updat": [29, 44, 68, 84, 264], "valu": [30, 45, 69, 85, 265], "sourcetableschema": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "format": [46, 285, 292], "available_coordinate_fram": 48, "column_map": 50, "construct": 51, "coordinate_column": 52, "coordinate_fram": [53, 159, 162, 179], "coordinate_system": 54, "default_coord_system": 56, "inv_column_map": 60, "object_map": 64, "stat": [70, 71], "util": [70, 71, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283], "uniform_sample_spher": 71, "structur": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 284, 285], "databas": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 285, 293], "dbregistri": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "localdatabas": [86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "add_sources_to_poisson": [88, 102, 116, 130, 144], "class_table_schema": [89, 103, 117, 131, 145], "count": [90, 104, 118, 132, 146], "create_poisson_map": [91, 105, 119, 133, 147], "default_poisson_map": [92, 106, 120, 134, 148], "get_default_poisson_map": [93, 107, 121, 135, 149], "get_poisson_map": [94, 108, 122, 136, 150], "poisson_map": [95, 109, 123, 137, 151], "query_radiu": [96, 110, 124, 138, 152], "random_sample_count": [97, 111, 125, 139, 153], "set_poisson_map": [98, 112, 126, 140, 154], "source_match": [99, 113, 127, 141, 155], "ned": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "remotedatabas": [114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "simbad": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "sourcedatabas": [142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "map": [156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190], "mapatla": [160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], "gener": [163, 180, 292], "get_map": [164, 181], "has_map": [165, 183], "hdu": [166, 184], "map_nam": [167, 185], "pixel_posit": [168, 186], "remov": [169, 187], "reshape_healpix": [170, 189], "statatla": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190], "append_to_fit": [173, 199], "build_poisson_map": [174, 178], "build_poisson_map_map": 175, "build_poisson_map_nnr": 176, "build_poisson_map_gp": 177, "get_point": 182, "reset": 188, "sample_from_databas": 190, "tabl": [191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 292], "sourcet": [192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267], "columnclass": 193, "add_column": [195, 196], "add_index": 197, "add_row": 198, "append_to_sql": 200, "argsort": 201, "as_arrai": 202, "colnam": 203, "convert_bytestring_to_unicod": 204, "convert_unicode_to_bytestr": 205, "count_typ": 207, "dtype": 208, "field": 209, "fill": 210, "from_panda": 211, "generate_schema": 212, "get_coordin": 213, "group_bi": 214, "group": 215, "has_masked_column": 216, "has_masked_valu": 217, "has_mixin_column": 218, "iloc": 219, "index_column": 220, "index_mod": 221, "indic": 222, "info": 223, "insert_row": 224, "itercol": 226, "iterrow": 227, "keep_column": 228, "lat": 230, "loc": 231, "loc_indic": 232, "lon": 233, "mask": [234, 235], "meta": 236, "more": 237, "name": 238, "pformat": 239, "pformat_al": 240, "pprint": 241, "pprint_al": 242, "pprint_exclude_nam": 243, "pprint_include_nam": 244, "read": 245, "redshift": 246, "remove_column": [247, 248], "remove_indic": 249, "remove_row": [250, 251], "rename_column": [252, 253], "replace_column": 254, "revers": 255, "round": 256, "show_in_brows": 258, "show_in_notebook": 259, "sort": 260, "to_panda": 261, "type": 262, "type_n": 263, "values_equ": 266, "write": 267, "core": [268, 269, 270, 271], "enforce_unit": 269, "getfromdict": 270, "setindict": 271, "mp_util": [272, 273], "split": 273, "text": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283], "spinner": [275, 276, 277, 278, 279, 280, 281, 282, 283], "busi": 277, "delai": 278, "formatt": 279, "process": [280, 292], "spinner_task": 281, "spinning_cursor": 282, "stream": 283, "api": 284, "statist": [284, 290], "other": 284, "data": [285, 300], "sky": 285, "collect": 285, "exampl": 286, "pyxmip": [287, 291, 294, 296, 299], "quickstart": 287, "guid": 287, "instal": [287, 290, 294], "setup": 287, "critic": 287, "compon": 287, "featur": 288, "resourc": 288, "page": 288, "refer": 290, "start": 290, "basic": [290, 293], "usag": 290, "creat": [290, 297], "plot": [290, 297], "backend": 290, "configur": 291, "cross": 292, "match": 292, "load": [292, 300], "your": 292, "catalog": 292, "sourc": [292, 300], "reduct": 292, "mathemat": 292, "overview": [292, 296], "sub": 292, "titl": 292, "inform": 293, "log": 295, "model": 298, "class": 299}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"cross_reference": [[0, "module-cross_reference"]], "cross_reference.cross_match": [[1, "cross-reference-cross-match"]], "cross_reference.cross_match_table": [[2, "cross-reference-cross-match-table"]], "cross_reference.reduce_match_database": [[3, "cross-reference-reduce-match-database"]], "schema": [[4, "module-schema"]], "schema.ReductionSchema": [[5, "schema-reductionschema"]], "schema.ReductionSchema.DBPATH": [[6, "schema-reductionschema-dbpath"]], "schema.ReductionSchema.INSTRUMENTAL": [[7, "schema-reductionschema-instrumental"]], "schema.ReductionSchema.INSTRUMENT_PARAMS": [[8, "schema-reductionschema-instrument-params"]], "schema.ReductionSchema.IO_PARAMS": [[9, "schema-reductionschema-io-params"]], "schema.ReductionSchema.OBJECT_PARAMS": [[10, "schema-reductionschema-object-params"]], "schema.ReductionSchema.OTYPES": [[11, "schema-reductionschema-otypes"]], "schema.ReductionSchema.POISSON": [[12, "schema-reductionschema-poisson"]], "schema.ReductionSchema.POISSON_PARAMS": [[13, "schema-reductionschema-poisson-params"]], "schema.ReductionSchema.PSF": [[14, "schema-reductionschema-psf"]], "schema.ReductionSchema.REFDBS": [[15, "schema-reductionschema-refdbs"]], "schema.ReductionSchema.RUN_PARAMS": [[16, "schema-reductionschema-run-params"]], "schema.ReductionSchema.__init__": [[17, "schema-reductionschema-init"]], "schema.ReductionSchema.clear": [[18, "schema-reductionschema-clear"]], "schema.ReductionSchema.copy": [[19, "schema-reductionschema-copy"]], "schema.ReductionSchema.from_file": [[20, "schema-reductionschema-from-file"]], "schema.ReductionSchema.fromkeys": [[21, "schema-reductionschema-fromkeys"]], "schema.ReductionSchema.get": [[22, "schema-reductionschema-get"]], "schema.ReductionSchema.isvalid": [[23, "schema-reductionschema-isvalid"]], "schema.ReductionSchema.items": [[24, "schema-reductionschema-items"]], "schema.ReductionSchema.keys": [[25, "schema-reductionschema-keys"]], "schema.ReductionSchema.pop": [[26, "schema-reductionschema-pop"]], "schema.ReductionSchema.popitem": [[27, "schema-reductionschema-popitem"]], "schema.ReductionSchema.setdefault": [[28, "schema-reductionschema-setdefault"]], "schema.ReductionSchema.update": [[29, "schema-reductionschema-update"]], "schema.ReductionSchema.values": [[30, "schema-reductionschema-values"]], "schema.Schema": [[31, "schema-schema"]], "schema.Schema.__init__": [[32, "schema-schema-init"]], "schema.Schema.clear": [[33, "schema-schema-clear"]], "schema.Schema.copy": [[34, "schema-schema-copy"]], "schema.Schema.from_file": [[35, "schema-schema-from-file"]], "schema.Schema.fromkeys": [[36, "schema-schema-fromkeys"]], "schema.Schema.get": [[37, "schema-schema-get"]], "schema.Schema.isvalid": [[38, "schema-schema-isvalid"]], "schema.Schema.items": [[39, "schema-schema-items"]], "schema.Schema.keys": [[40, "schema-schema-keys"]], "schema.Schema.pop": [[41, "schema-schema-pop"]], "schema.Schema.popitem": [[42, "schema-schema-popitem"]], "schema.Schema.setdefault": [[43, "schema-schema-setdefault"]], "schema.Schema.update": [[44, "schema-schema-update"]], "schema.Schema.values": [[45, "schema-schema-values"]], "schema.SourceTableSchema": [[46, "schema-sourcetableschema"]], "Format": [[46, null]], "schema.SourceTableSchema.__init__": [[47, "schema-sourcetableschema-init"]], "schema.SourceTableSchema.available_coordinate_frames": [[48, "schema-sourcetableschema-available-coordinate-frames"]], "schema.SourceTableSchema.clear": [[49, "schema-sourcetableschema-clear"]], "schema.SourceTableSchema.column_map": [[50, "schema-sourcetableschema-column-map"]], "schema.SourceTableSchema.construct": [[51, "schema-sourcetableschema-construct"]], "schema.SourceTableSchema.coordinate_columns": [[52, "schema-sourcetableschema-coordinate-columns"]], "schema.SourceTableSchema.coordinate_frame": [[53, "schema-sourcetableschema-coordinate-frame"]], "schema.SourceTableSchema.coordinate_system": [[54, "schema-sourcetableschema-coordinate-system"]], "schema.SourceTableSchema.copy": [[55, "schema-sourcetableschema-copy"]], "schema.SourceTableSchema.default_coord_system": [[56, "schema-sourcetableschema-default-coord-system"]], "schema.SourceTableSchema.from_file": [[57, "schema-sourcetableschema-from-file"]], "schema.SourceTableSchema.fromkeys": [[58, "schema-sourcetableschema-fromkeys"]], "schema.SourceTableSchema.get": [[59, "schema-sourcetableschema-get"]], "schema.SourceTableSchema.inv_column_map": [[60, "schema-sourcetableschema-inv-column-map"]], "schema.SourceTableSchema.isvalid": [[61, "schema-sourcetableschema-isvalid"]], "schema.SourceTableSchema.items": [[62, "schema-sourcetableschema-items"]], "schema.SourceTableSchema.keys": [[63, "schema-sourcetableschema-keys"]], "schema.SourceTableSchema.object_map": [[64, "schema-sourcetableschema-object-map"]], "schema.SourceTableSchema.pop": [[65, "schema-sourcetableschema-pop"]], "schema.SourceTableSchema.popitem": [[66, "schema-sourcetableschema-popitem"]], "schema.SourceTableSchema.setdefault": [[67, "schema-sourcetableschema-setdefault"]], "schema.SourceTableSchema.update": [[68, "schema-sourcetableschema-update"]], "schema.SourceTableSchema.values": [[69, "schema-sourcetableschema-values"]], "stats.utilities": [[70, "module-stats.utilities"]], "stats.utilities.uniform_sample_spherical": [[71, "stats-utilities-uniform-sample-spherical"]], "structures.databases": [[72, "module-structures.databases"]], "structures.databases.DBRegistry": [[73, "structures-databases-dbregistry"]], "structures.databases.DBRegistry.__init__": [[74, "structures-databases-dbregistry-init"]], "structures.databases.DBRegistry.clear": [[75, "structures-databases-dbregistry-clear"]], "structures.databases.DBRegistry.copy": [[76, "structures-databases-dbregistry-copy"]], "structures.databases.DBRegistry.fromkeys": [[77, "structures-databases-dbregistry-fromkeys"]], "structures.databases.DBRegistry.get": [[78, "structures-databases-dbregistry-get"]], "structures.databases.DBRegistry.items": [[79, "structures-databases-dbregistry-items"]], "structures.databases.DBRegistry.keys": [[80, "structures-databases-dbregistry-keys"]], "structures.databases.DBRegistry.pop": [[81, "structures-databases-dbregistry-pop"]], "structures.databases.DBRegistry.popitem": [[82, "structures-databases-dbregistry-popitem"]], "structures.databases.DBRegistry.setdefault": [[83, "structures-databases-dbregistry-setdefault"]], "structures.databases.DBRegistry.update": [[84, "structures-databases-dbregistry-update"]], "structures.databases.DBRegistry.values": [[85, "structures-databases-dbregistry-values"]], "structures.databases.LocalDatabase": [[86, "structures-databases-localdatabase"]], "structures.databases.LocalDatabase.__init__": [[87, "structures-databases-localdatabase-init"]], "structures.databases.LocalDatabase.add_sources_to_poisson": [[88, "structures-databases-localdatabase-add-sources-to-poisson"]], "structures.databases.LocalDatabase.class_table_schema": [[89, "structures-databases-localdatabase-class-table-schema"]], "structures.databases.LocalDatabase.count": [[90, "structures-databases-localdatabase-count"]], "structures.databases.LocalDatabase.create_poisson_map": [[91, "structures-databases-localdatabase-create-poisson-map"]], "structures.databases.LocalDatabase.default_poisson_map": [[92, "structures-databases-localdatabase-default-poisson-map"]], "structures.databases.LocalDatabase.get_default_poisson_map": [[93, "structures-databases-localdatabase-get-default-poisson-map"]], "structures.databases.LocalDatabase.get_poisson_map": [[94, "structures-databases-localdatabase-get-poisson-map"]], "structures.databases.LocalDatabase.poisson_map": [[95, "structures-databases-localdatabase-poisson-map"]], "structures.databases.LocalDatabase.query_radius": [[96, "structures-databases-localdatabase-query-radius"]], "structures.databases.LocalDatabase.random_sample_count": [[97, "structures-databases-localdatabase-random-sample-count"]], "structures.databases.LocalDatabase.set_poisson_map": [[98, "structures-databases-localdatabase-set-poisson-map"]], "structures.databases.LocalDatabase.source_match": [[99, "structures-databases-localdatabase-source-match"]], "structures.databases.NED": [[100, "structures-databases-ned"]], "structures.databases.NED.__init__": [[101, "structures-databases-ned-init"]], "structures.databases.NED.add_sources_to_poisson": [[102, "structures-databases-ned-add-sources-to-poisson"]], "structures.databases.NED.class_table_schema": [[103, "structures-databases-ned-class-table-schema"]], "structures.databases.NED.count": [[104, "structures-databases-ned-count"]], "structures.databases.NED.create_poisson_map": [[105, "structures-databases-ned-create-poisson-map"]], "structures.databases.NED.default_poisson_map": [[106, "structures-databases-ned-default-poisson-map"]], "structures.databases.NED.get_default_poisson_map": [[107, "structures-databases-ned-get-default-poisson-map"]], "structures.databases.NED.get_poisson_map": [[108, "structures-databases-ned-get-poisson-map"]], "structures.databases.NED.poisson_map": [[109, "structures-databases-ned-poisson-map"]], "structures.databases.NED.query_radius": [[110, "structures-databases-ned-query-radius"]], "structures.databases.NED.random_sample_count": [[111, "structures-databases-ned-random-sample-count"]], "structures.databases.NED.set_poisson_map": [[112, "structures-databases-ned-set-poisson-map"]], "structures.databases.NED.source_match": [[113, "structures-databases-ned-source-match"]], "structures.databases.RemoteDatabase": [[114, "structures-databases-remotedatabase"]], "structures.databases.RemoteDatabase.__init__": [[115, "structures-databases-remotedatabase-init"]], "structures.databases.RemoteDatabase.add_sources_to_poisson": [[116, "structures-databases-remotedatabase-add-sources-to-poisson"]], "structures.databases.RemoteDatabase.class_table_schema": [[117, "structures-databases-remotedatabase-class-table-schema"]], "structures.databases.RemoteDatabase.count": [[118, "structures-databases-remotedatabase-count"]], "structures.databases.RemoteDatabase.create_poisson_map": [[119, "structures-databases-remotedatabase-create-poisson-map"]], "structures.databases.RemoteDatabase.default_poisson_map": [[120, "structures-databases-remotedatabase-default-poisson-map"]], "structures.databases.RemoteDatabase.get_default_poisson_map": [[121, "structures-databases-remotedatabase-get-default-poisson-map"]], "structures.databases.RemoteDatabase.get_poisson_map": [[122, "structures-databases-remotedatabase-get-poisson-map"]], "structures.databases.RemoteDatabase.poisson_map": [[123, "structures-databases-remotedatabase-poisson-map"]], "structures.databases.RemoteDatabase.query_radius": [[124, "structures-databases-remotedatabase-query-radius"]], "structures.databases.RemoteDatabase.random_sample_count": [[125, "structures-databases-remotedatabase-random-sample-count"]], "structures.databases.RemoteDatabase.set_poisson_map": [[126, "structures-databases-remotedatabase-set-poisson-map"]], "structures.databases.RemoteDatabase.source_match": [[127, "structures-databases-remotedatabase-source-match"]], "structures.databases.SIMBAD": [[128, "structures-databases-simbad"]], "structures.databases.SIMBAD.__init__": [[129, "structures-databases-simbad-init"]], "structures.databases.SIMBAD.add_sources_to_poisson": [[130, "structures-databases-simbad-add-sources-to-poisson"]], "structures.databases.SIMBAD.class_table_schema": [[131, "structures-databases-simbad-class-table-schema"]], "structures.databases.SIMBAD.count": [[132, "structures-databases-simbad-count"]], "structures.databases.SIMBAD.create_poisson_map": [[133, "structures-databases-simbad-create-poisson-map"]], "structures.databases.SIMBAD.default_poisson_map": [[134, "structures-databases-simbad-default-poisson-map"]], "structures.databases.SIMBAD.get_default_poisson_map": [[135, "structures-databases-simbad-get-default-poisson-map"]], "structures.databases.SIMBAD.get_poisson_map": [[136, "structures-databases-simbad-get-poisson-map"]], "structures.databases.SIMBAD.poisson_map": [[137, "structures-databases-simbad-poisson-map"]], "structures.databases.SIMBAD.query_radius": [[138, "structures-databases-simbad-query-radius"]], "structures.databases.SIMBAD.random_sample_count": [[139, "structures-databases-simbad-random-sample-count"]], "structures.databases.SIMBAD.set_poisson_map": [[140, "structures-databases-simbad-set-poisson-map"]], "structures.databases.SIMBAD.source_match": [[141, "structures-databases-simbad-source-match"]], "structures.databases.SourceDatabase": [[142, "structures-databases-sourcedatabase"]], "structures.databases.SourceDatabase.__init__": [[143, "structures-databases-sourcedatabase-init"]], "structures.databases.SourceDatabase.add_sources_to_poisson": [[144, "structures-databases-sourcedatabase-add-sources-to-poisson"]], "structures.databases.SourceDatabase.class_table_schema": [[145, "structures-databases-sourcedatabase-class-table-schema"]], "structures.databases.SourceDatabase.count": [[146, "structures-databases-sourcedatabase-count"]], "structures.databases.SourceDatabase.create_poisson_map": [[147, "structures-databases-sourcedatabase-create-poisson-map"]], "structures.databases.SourceDatabase.default_poisson_map": [[148, "structures-databases-sourcedatabase-default-poisson-map"]], "structures.databases.SourceDatabase.get_default_poisson_map": [[149, "structures-databases-sourcedatabase-get-default-poisson-map"]], "structures.databases.SourceDatabase.get_poisson_map": [[150, "structures-databases-sourcedatabase-get-poisson-map"]], "structures.databases.SourceDatabase.poisson_map": [[151, "structures-databases-sourcedatabase-poisson-map"]], "structures.databases.SourceDatabase.query_radius": [[152, "structures-databases-sourcedatabase-query-radius"]], "structures.databases.SourceDatabase.random_sample_count": [[153, "structures-databases-sourcedatabase-random-sample-count"]], "structures.databases.SourceDatabase.set_poisson_map": [[154, "structures-databases-sourcedatabase-set-poisson-map"]], "structures.databases.SourceDatabase.source_match": [[155, "structures-databases-sourcedatabase-source-match"]], "structures.map": [[156, "module-structures.map"]], "structures.map.Map": [[157, "structures-map-map"]], "structures.map.Map.__init__": [[158, "structures-map-map-init"]], "structures.map.Map.coordinate_frame": [[159, "structures-map-map-coordinate-frame"]], "structures.map.MapAtlas": [[160, "structures-map-mapatlas"]], "structures.map.MapAtlas.__init__": [[161, "structures-map-mapatlas-init"]], "structures.map.MapAtlas.coordinate_frame": [[162, "structures-map-mapatlas-coordinate-frame"]], "structures.map.MapAtlas.generate": [[163, "structures-map-mapatlas-generate"]], "structures.map.MapAtlas.get_map": [[164, "structures-map-mapatlas-get-map"]], "structures.map.MapAtlas.has_maps": [[165, "structures-map-mapatlas-has-maps"]], "structures.map.MapAtlas.hdus": [[166, "structures-map-mapatlas-hdus"]], "structures.map.MapAtlas.map_names": [[167, "structures-map-mapatlas-map-names"]], "structures.map.MapAtlas.pixel_positions": [[168, "structures-map-mapatlas-pixel-positions"]], "structures.map.MapAtlas.remove": [[169, "structures-map-mapatlas-remove"]], "structures.map.MapAtlas.reshape_healpix": [[170, "structures-map-mapatlas-reshape-healpix"]], "structures.map.StatAtlas": [[171, "structures-map-statatlas"]], "structures.map.StatAtlas.__init__": [[172, "structures-map-statatlas-init"]], "structures.map.StatAtlas.append_to_fits": [[173, "structures-map-statatlas-append-to-fits"]], "structures.map.StatAtlas.build_poisson_map": [[174, "structures-map-statatlas-build-poisson-map"]], "structures.map.StatAtlas.build_poisson_map_MAP": [[175, "structures-map-statatlas-build-poisson-map-map"]], "structures.map.StatAtlas.build_poisson_map_NNR": [[176, "structures-map-statatlas-build-poisson-map-nnr"]], "structures.map.StatAtlas.build_poisson_map_gp": [[177, "structures-map-statatlas-build-poisson-map-gp"]], "structures.map.StatAtlas.build_poisson_maps": [[178, "structures-map-statatlas-build-poisson-maps"]], "structures.map.StatAtlas.coordinate_frame": [[179, "structures-map-statatlas-coordinate-frame"]], "structures.map.StatAtlas.generate": [[180, "structures-map-statatlas-generate"]], "structures.map.StatAtlas.get_map": [[181, "structures-map-statatlas-get-map"]], "structures.map.StatAtlas.get_points": [[182, "structures-map-statatlas-get-points"]], "structures.map.StatAtlas.has_maps": [[183, "structures-map-statatlas-has-maps"]], "structures.map.StatAtlas.hdus": [[184, "structures-map-statatlas-hdus"]], "structures.map.StatAtlas.map_names": [[185, "structures-map-statatlas-map-names"]], "structures.map.StatAtlas.pixel_positions": [[186, "structures-map-statatlas-pixel-positions"]], "structures.map.StatAtlas.remove": [[187, "structures-map-statatlas-remove"]], "structures.map.StatAtlas.reset": [[188, "structures-map-statatlas-reset"]], "structures.map.StatAtlas.reshape_healpix": [[189, "structures-map-statatlas-reshape-healpix"]], "structures.map.StatAtlas.sample_from_database": [[190, "structures-map-statatlas-sample-from-database"]], "structures.table": [[191, "module-structures.table"]], "structures.table.SourceTable": [[192, "structures-table-sourcetable"]], "structures.table.SourceTable.ColumnClass": [[193, "structures-table-sourcetable-columnclass"]], "structures.table.SourceTable.__init__": [[194, "structures-table-sourcetable-init"]], "structures.table.SourceTable.add_column": [[195, "structures-table-sourcetable-add-column"]], "structures.table.SourceTable.add_columns": [[196, "structures-table-sourcetable-add-columns"]], "structures.table.SourceTable.add_index": [[197, "structures-table-sourcetable-add-index"]], "structures.table.SourceTable.add_row": [[198, "structures-table-sourcetable-add-row"]], "structures.table.SourceTable.append_to_fits": [[199, "structures-table-sourcetable-append-to-fits"]], "structures.table.SourceTable.append_to_sql": [[200, "structures-table-sourcetable-append-to-sql"]], "structures.table.SourceTable.argsort": [[201, "structures-table-sourcetable-argsort"]], "structures.table.SourceTable.as_array": [[202, "structures-table-sourcetable-as-array"]], "structures.table.SourceTable.colnames": [[203, "structures-table-sourcetable-colnames"]], "structures.table.SourceTable.convert_bytestring_to_unicode": [[204, "structures-table-sourcetable-convert-bytestring-to-unicode"]], "structures.table.SourceTable.convert_unicode_to_bytestring": [[205, "structures-table-sourcetable-convert-unicode-to-bytestring"]], "structures.table.SourceTable.copy": [[206, "structures-table-sourcetable-copy"]], "structures.table.SourceTable.count_types": [[207, "structures-table-sourcetable-count-types"]], "structures.table.SourceTable.dtype": [[208, "structures-table-sourcetable-dtype"]], "structures.table.SourceTable.field": [[209, "structures-table-sourcetable-field"]], "structures.table.SourceTable.filled": [[210, "structures-table-sourcetable-filled"]], "structures.table.SourceTable.from_pandas": [[211, "structures-table-sourcetable-from-pandas"]], "structures.table.SourceTable.generate_schema": [[212, "structures-table-sourcetable-generate-schema"]], "structures.table.SourceTable.get_coordinates": [[213, "structures-table-sourcetable-get-coordinates"]], "structures.table.SourceTable.group_by": [[214, "structures-table-sourcetable-group-by"]], "structures.table.SourceTable.groups": [[215, "structures-table-sourcetable-groups"]], "structures.table.SourceTable.has_masked_columns": [[216, "structures-table-sourcetable-has-masked-columns"]], "structures.table.SourceTable.has_masked_values": [[217, "structures-table-sourcetable-has-masked-values"]], "structures.table.SourceTable.has_mixin_columns": [[218, "structures-table-sourcetable-has-mixin-columns"]], "structures.table.SourceTable.iloc": [[219, "structures-table-sourcetable-iloc"]], "structures.table.SourceTable.index_column": [[220, "structures-table-sourcetable-index-column"]], "structures.table.SourceTable.index_mode": [[221, "structures-table-sourcetable-index-mode"]], "structures.table.SourceTable.indices": [[222, "structures-table-sourcetable-indices"]], "structures.table.SourceTable.info": [[223, "structures-table-sourcetable-info"]], "structures.table.SourceTable.insert_row": [[224, "structures-table-sourcetable-insert-row"]], "structures.table.SourceTable.items": [[225, "structures-table-sourcetable-items"]], "structures.table.SourceTable.itercols": [[226, "structures-table-sourcetable-itercols"]], "structures.table.SourceTable.iterrows": [[227, "structures-table-sourcetable-iterrows"]], "structures.table.SourceTable.keep_columns": [[228, "structures-table-sourcetable-keep-columns"]], "structures.table.SourceTable.keys": [[229, "structures-table-sourcetable-keys"]], "structures.table.SourceTable.lat": [[230, "structures-table-sourcetable-lat"]], "structures.table.SourceTable.loc": [[231, "structures-table-sourcetable-loc"]], "structures.table.SourceTable.loc_indices": [[232, "structures-table-sourcetable-loc-indices"]], "structures.table.SourceTable.lon": [[233, "structures-table-sourcetable-lon"]], "structures.table.SourceTable.mask": [[234, "structures-table-sourcetable-mask"]], "structures.table.SourceTable.masked": [[235, "structures-table-sourcetable-masked"]], "structures.table.SourceTable.meta": [[236, "structures-table-sourcetable-meta"]], "structures.table.SourceTable.more": [[237, "structures-table-sourcetable-more"]], "structures.table.SourceTable.name": [[238, "structures-table-sourcetable-name"]], "structures.table.SourceTable.pformat": [[239, "structures-table-sourcetable-pformat"]], "structures.table.SourceTable.pformat_all": [[240, "structures-table-sourcetable-pformat-all"]], "structures.table.SourceTable.pprint": [[241, "structures-table-sourcetable-pprint"]], "structures.table.SourceTable.pprint_all": [[242, "structures-table-sourcetable-pprint-all"]], "structures.table.SourceTable.pprint_exclude_names": [[243, "structures-table-sourcetable-pprint-exclude-names"]], "structures.table.SourceTable.pprint_include_names": [[244, "structures-table-sourcetable-pprint-include-names"]], "structures.table.SourceTable.read": [[245, "structures-table-sourcetable-read"]], "structures.table.SourceTable.redshift": [[246, "structures-table-sourcetable-redshift"]], "structures.table.SourceTable.remove_column": [[247, "structures-table-sourcetable-remove-column"]], "structures.table.SourceTable.remove_columns": [[248, "structures-table-sourcetable-remove-columns"]], "structures.table.SourceTable.remove_indices": [[249, "structures-table-sourcetable-remove-indices"]], "structures.table.SourceTable.remove_row": [[250, "structures-table-sourcetable-remove-row"]], "structures.table.SourceTable.remove_rows": [[251, "structures-table-sourcetable-remove-rows"]], "structures.table.SourceTable.rename_column": [[252, "structures-table-sourcetable-rename-column"]], "structures.table.SourceTable.rename_columns": [[253, "structures-table-sourcetable-rename-columns"]], "structures.table.SourceTable.replace_column": [[254, "structures-table-sourcetable-replace-column"]], "structures.table.SourceTable.reverse": [[255, "structures-table-sourcetable-reverse"]], "structures.table.SourceTable.round": [[256, "structures-table-sourcetable-round"]], "structures.table.SourceTable.schema": [[257, "structures-table-sourcetable-schema"]], "structures.table.SourceTable.show_in_browser": [[258, "structures-table-sourcetable-show-in-browser"]], "structures.table.SourceTable.show_in_notebook": [[259, "structures-table-sourcetable-show-in-notebook"]], "structures.table.SourceTable.sort": [[260, "structures-table-sourcetable-sort"]], "structures.table.SourceTable.to_pandas": [[261, "structures-table-sourcetable-to-pandas"]], "structures.table.SourceTable.type": [[262, "structures-table-sourcetable-type"]], "structures.table.SourceTable.type_native": [[263, "structures-table-sourcetable-type-native"]], "structures.table.SourceTable.update": [[264, "structures-table-sourcetable-update"]], "structures.table.SourceTable.values": [[265, "structures-table-sourcetable-values"]], "structures.table.SourceTable.values_equal": [[266, "structures-table-sourcetable-values-equal"]], "structures.table.SourceTable.write": [[267, "structures-table-sourcetable-write"]], "utilities.core": [[268, "module-utilities.core"]], "utilities.core.enforce_units": [[269, "utilities-core-enforce-units"]], "utilities.core.getFromDict": [[270, "utilities-core-getfromdict"]], "utilities.core.setInDict": [[271, "utilities-core-setindict"]], "utilities.mp_utils": [[272, "module-utilities.mp_utils"]], "utilities.mp_utils.split": [[273, "utilities-mp-utils-split"]], "utilities.text": [[274, "module-utilities.text"]], "utilities.text.Spinner": [[275, "utilities-text-spinner"]], "utilities.text.Spinner.__init__": [[276, "utilities-text-spinner-init"]], "utilities.text.Spinner.busy": [[277, "utilities-text-spinner-busy"]], "utilities.text.Spinner.delay": [[278, "utilities-text-spinner-delay"]], "utilities.text.Spinner.formatter": [[279, "utilities-text-spinner-formatter"]], "utilities.text.Spinner.process": [[280, "utilities-text-spinner-process"]], "utilities.text.Spinner.spinner_task": [[281, "utilities-text-spinner-spinner-task"]], "utilities.text.Spinner.spinning_cursor": [[282, "utilities-text-spinner-spinning-cursor"]], "utilities.text.Spinner.stream": [[283, "utilities-text-spinner-stream"]], "API": [[284, "api"]], "Statistics": [[284, "statistics"], [290, "statistics"]], "Structures": [[284, "structures"]], "Other": [[284, "other"]], "Data Structures": [[285, "data-structures"]], "DATABASES": [[285, "databases"]], "SCHEMAS": [[285, "schemas"]], "Sky Collection Schema": [[285, "sky-collection-schema"]], "Formatting": [[285, "formatting"]], "Examples": [[286, "examples"]], "pyXMIP Quickstart Guide": [[287, "pyxmip-quickstart-guide"]], "Installation + Setup": [[287, "installation-setup"]], "Critical Components": [[287, "critical-components"]], "Features": [[288, "features"]], "Resources": [[288, "resources"]], "Pages": [[288, "pages"]], "Reference": [[290, "reference"]], "Getting Started": [[290, "getting-started"]], "Installation": [[290, "installation"]], "Basic Usage": [[290, "basic-usage"]], "Creating Plots": [[290, "creating-plots"], [297, "creating-plots"]], "Backend": [[290, "backend"]], "PyXMIP Configuration": [[291, "pyxmip-configuration"]], "Cross Matching": [[292, "cross-matching"]], "Loading Your Catalog": [[292, "loading-your-catalog"]], "Matching Sources": [[292, "matching-sources"]], "Match Reduction": [[292, "match-reduction"]], "Mathematical Overview": [[292, "mathematical-overview"]], "Sub-Process Overview": [[292, "sub-process-overview"]], "Reduction Schema": [[292, "reduction-schema"]], "General Formatting": [[292, "general-formatting"]], "RUN_PARAM table": [[292, "id2"]], "Table Title": [[292, "id3"]], "Databases": [[293, "databases"]], "Basic Information": [[293, "basic-information"]], "Installing pyXMIP": [[294, "installing-pyxmip"]], "Logging": [[295, "logging"]], "PyXMIP Overview": [[296, "pyxmip-overview"]], "PSF Modeling": [[298, "psf-modeling"]], "pyXMIP Schema Classes": [[299, "pyxmip-schema-classes"]], "Loading Source Data": [[300, "loading-source-data"]]}, "indexentries": {"cross_reference": [[0, "module-cross_reference"]], "module": [[0, "module-cross_reference"], [4, "module-schema"], [70, "module-stats.utilities"], [72, "module-structures.databases"], [156, "module-structures.map"], [191, "module-structures.table"], [268, "module-utilities.core"], [272, "module-utilities.mp_utils"], [274, "module-utilities.text"]], "cross_match() (in module cross_reference)": [[1, "cross_reference.cross_match"]], "cross_match_table() (in module cross_reference)": [[2, "cross_reference.cross_match_table"]], "reduce_match_database() (in module cross_reference)": [[3, "cross_reference.reduce_match_database"]], "schema": [[4, "module-schema"]], "reductionschema (class in schema)": [[5, "schema.ReductionSchema"]], "dbpath (schema.reductionschema attribute)": [[6, "schema.ReductionSchema.DBPATH"]], "instrumental (schema.reductionschema attribute)": [[7, "schema.ReductionSchema.INSTRUMENTAL"]], "instrument_params (schema.reductionschema attribute)": [[8, "schema.ReductionSchema.INSTRUMENT_PARAMS"]], "io_params (schema.reductionschema attribute)": [[9, "schema.ReductionSchema.IO_PARAMS"]], "object_params (schema.reductionschema attribute)": [[10, "schema.ReductionSchema.OBJECT_PARAMS"]], "otypes (schema.reductionschema attribute)": [[11, "schema.ReductionSchema.OTYPES"]], "poisson (schema.reductionschema attribute)": [[12, "schema.ReductionSchema.POISSON"]], "poisson_params (schema.reductionschema attribute)": [[13, "schema.ReductionSchema.POISSON_PARAMS"]], "psf (schema.reductionschema attribute)": [[14, "schema.ReductionSchema.PSF"]], "refdbs (schema.reductionschema attribute)": [[15, "schema.ReductionSchema.REFDBS"]], "run_params (schema.reductionschema attribute)": [[16, "schema.ReductionSchema.RUN_PARAMS"]], "__init__() (schema.reductionschema method)": [[17, "schema.ReductionSchema.__init__"]], "clear() (schema.reductionschema method)": [[18, "schema.ReductionSchema.clear"]], "copy() (schema.reductionschema method)": [[19, "schema.ReductionSchema.copy"]], "from_file() (schema.reductionschema class method)": [[20, "schema.ReductionSchema.from_file"]], "fromkeys() (schema.reductionschema method)": [[21, "schema.ReductionSchema.fromkeys"]], "get() (schema.reductionschema method)": [[22, "schema.ReductionSchema.get"]], "isvalid() (schema.reductionschema method)": [[23, "schema.ReductionSchema.isvalid"]], "items() (schema.reductionschema method)": [[24, "schema.ReductionSchema.items"]], "keys() (schema.reductionschema method)": [[25, "schema.ReductionSchema.keys"]], "pop() (schema.reductionschema method)": [[26, "schema.ReductionSchema.pop"]], "popitem() (schema.reductionschema method)": [[27, "schema.ReductionSchema.popitem"]], "setdefault() (schema.reductionschema method)": [[28, "schema.ReductionSchema.setdefault"]], "update() (schema.reductionschema method)": [[29, "schema.ReductionSchema.update"]], "values() (schema.reductionschema method)": [[30, "schema.ReductionSchema.values"]], "schema (class in schema)": [[31, "schema.Schema"]], "__init__() (schema.schema method)": [[32, "schema.Schema.__init__"]], "clear() (schema.schema method)": [[33, "schema.Schema.clear"]], "copy() (schema.schema method)": [[34, "schema.Schema.copy"]], "from_file() (schema.schema class method)": [[35, "schema.Schema.from_file"]], "fromkeys() (schema.schema method)": [[36, "schema.Schema.fromkeys"]], "get() (schema.schema method)": [[37, "schema.Schema.get"]], "isvalid() (schema.schema method)": [[38, "schema.Schema.isvalid"]], "items() (schema.schema method)": [[39, "schema.Schema.items"]], "keys() (schema.schema method)": [[40, "schema.Schema.keys"]], "pop() (schema.schema method)": [[41, "schema.Schema.pop"]], "popitem() (schema.schema method)": [[42, "schema.Schema.popitem"]], "setdefault() (schema.schema method)": [[43, "schema.Schema.setdefault"]], "update() (schema.schema method)": [[44, "schema.Schema.update"]], "values() (schema.schema method)": [[45, "schema.Schema.values"]], "sourcetableschema (class in schema)": [[46, "schema.SourceTableSchema"]], "__init__() (schema.sourcetableschema method)": [[47, "schema.SourceTableSchema.__init__"]], "available_coordinate_frames() (schema.sourcetableschema method)": [[48, "schema.SourceTableSchema.available_coordinate_frames"]], "clear() (schema.sourcetableschema method)": [[49, "schema.SourceTableSchema.clear"]], "column_map (schema.sourcetableschema attribute)": [[50, "schema.SourceTableSchema.column_map"]], "construct() (schema.sourcetableschema class method)": [[51, "schema.SourceTableSchema.construct"]], "coordinate_columns (schema.sourcetableschema property)": [[52, "schema.SourceTableSchema.coordinate_columns"]], "coordinate_frame (schema.sourcetableschema property)": [[53, "schema.SourceTableSchema.coordinate_frame"]], "coordinate_system (schema.sourcetableschema property)": [[54, "schema.SourceTableSchema.coordinate_system"]], "copy() (schema.sourcetableschema method)": [[55, "schema.SourceTableSchema.copy"]], "default_coord_system (schema.sourcetableschema attribute)": [[56, "schema.SourceTableSchema.default_coord_system"]], "from_file() (schema.sourcetableschema class method)": [[57, "schema.SourceTableSchema.from_file"]], "fromkeys() (schema.sourcetableschema method)": [[58, "schema.SourceTableSchema.fromkeys"]], "get() (schema.sourcetableschema method)": [[59, "schema.SourceTableSchema.get"]], "inv_column_map (schema.sourcetableschema property)": [[60, "schema.SourceTableSchema.inv_column_map"]], "isvalid() (schema.sourcetableschema method)": [[61, "schema.SourceTableSchema.isvalid"]], "items() (schema.sourcetableschema method)": [[62, "schema.SourceTableSchema.items"]], "keys() (schema.sourcetableschema method)": [[63, "schema.SourceTableSchema.keys"]], "object_map (schema.sourcetableschema attribute)": [[64, "schema.SourceTableSchema.object_map"]], "pop() (schema.sourcetableschema method)": [[65, "schema.SourceTableSchema.pop"]], "popitem() (schema.sourcetableschema method)": [[66, "schema.SourceTableSchema.popitem"]], "setdefault() (schema.sourcetableschema method)": [[67, "schema.SourceTableSchema.setdefault"]], "update() (schema.sourcetableschema method)": [[68, "schema.SourceTableSchema.update"]], "values() (schema.sourcetableschema method)": [[69, "schema.SourceTableSchema.values"]], "stats.utilities": [[70, "module-stats.utilities"]], "uniform_sample_spherical() (in module stats.utilities)": [[71, "stats.utilities.uniform_sample_spherical"]], "structures.databases": [[72, "module-structures.databases"]], "dbregistry (class in structures.databases)": [[73, "structures.databases.DBRegistry"]], "__init__() (structures.databases.dbregistry method)": [[74, "structures.databases.DBRegistry.__init__"]], "clear() (structures.databases.dbregistry method)": [[75, "structures.databases.DBRegistry.clear"]], "copy() (structures.databases.dbregistry method)": [[76, "structures.databases.DBRegistry.copy"]], "fromkeys() (structures.databases.dbregistry method)": [[77, "structures.databases.DBRegistry.fromkeys"]], "get() (structures.databases.dbregistry method)": [[78, "structures.databases.DBRegistry.get"]], "items() (structures.databases.dbregistry method)": [[79, "structures.databases.DBRegistry.items"]], "keys() (structures.databases.dbregistry method)": [[80, "structures.databases.DBRegistry.keys"]], "pop() (structures.databases.dbregistry method)": [[81, "structures.databases.DBRegistry.pop"]], "popitem() (structures.databases.dbregistry method)": [[82, "structures.databases.DBRegistry.popitem"]], "setdefault() (structures.databases.dbregistry method)": [[83, "structures.databases.DBRegistry.setdefault"]], "update() (structures.databases.dbregistry method)": [[84, "structures.databases.DBRegistry.update"]], "values() (structures.databases.dbregistry method)": [[85, "structures.databases.DBRegistry.values"]], "localdatabase (class in structures.databases)": [[86, "structures.databases.LocalDatabase"]], "__init__() (structures.databases.localdatabase method)": [[87, "structures.databases.LocalDatabase.__init__"]], "add_sources_to_poisson() (structures.databases.localdatabase class method)": [[88, "structures.databases.LocalDatabase.add_sources_to_poisson"]], "class_table_schema (structures.databases.localdatabase attribute)": [[89, "structures.databases.LocalDatabase.class_table_schema"]], "count() (structures.databases.localdatabase class method)": [[90, "structures.databases.LocalDatabase.count"]], "create_poisson_map() (structures.databases.localdatabase class method)": [[91, "structures.databases.LocalDatabase.create_poisson_map"]], "default_poisson_map (structures.databases.localdatabase attribute)": [[92, "structures.databases.LocalDatabase.default_poisson_map"]], "get_default_poisson_map() (structures.databases.localdatabase class method)": [[93, "structures.databases.LocalDatabase.get_default_poisson_map"]], "get_poisson_map() (structures.databases.localdatabase class method)": [[94, "structures.databases.LocalDatabase.get_poisson_map"]], "poisson_map (structures.databases.localdatabase attribute)": [[95, "structures.databases.LocalDatabase.poisson_map"]], "query_radius() (structures.databases.localdatabase class method)": [[96, "structures.databases.LocalDatabase.query_radius"]], "random_sample_count() (structures.databases.localdatabase class method)": [[97, "structures.databases.LocalDatabase.random_sample_count"]], "set_poisson_map() (structures.databases.localdatabase class method)": [[98, "structures.databases.LocalDatabase.set_poisson_map"]], "source_match() (structures.databases.localdatabase class method)": [[99, "structures.databases.LocalDatabase.source_match"]], "ned (class in structures.databases)": [[100, "structures.databases.NED"]], "__init__() (structures.databases.ned method)": [[101, "structures.databases.NED.__init__"]], "add_sources_to_poisson() (structures.databases.ned class method)": [[102, "structures.databases.NED.add_sources_to_poisson"]], "class_table_schema (structures.databases.ned attribute)": [[103, "structures.databases.NED.class_table_schema"]], "count() (structures.databases.ned class method)": [[104, "structures.databases.NED.count"]], "create_poisson_map() (structures.databases.ned class method)": [[105, "structures.databases.NED.create_poisson_map"]], "default_poisson_map (structures.databases.ned attribute)": [[106, "structures.databases.NED.default_poisson_map"]], "get_default_poisson_map() (structures.databases.ned class method)": [[107, "structures.databases.NED.get_default_poisson_map"]], "get_poisson_map() (structures.databases.ned class method)": [[108, "structures.databases.NED.get_poisson_map"]], "poisson_map (structures.databases.ned attribute)": [[109, "structures.databases.NED.poisson_map"]], "query_radius() (structures.databases.ned class method)": [[110, "structures.databases.NED.query_radius"]], "random_sample_count() (structures.databases.ned class method)": [[111, "structures.databases.NED.random_sample_count"]], "set_poisson_map() (structures.databases.ned class method)": [[112, "structures.databases.NED.set_poisson_map"]], "source_match() (structures.databases.ned class method)": [[113, "structures.databases.NED.source_match"]], "remotedatabase (class in structures.databases)": [[114, "structures.databases.RemoteDatabase"]], "__init__() (structures.databases.remotedatabase method)": [[115, "structures.databases.RemoteDatabase.__init__"]], "add_sources_to_poisson() (structures.databases.remotedatabase class method)": [[116, "structures.databases.RemoteDatabase.add_sources_to_poisson"]], "class_table_schema (structures.databases.remotedatabase attribute)": [[117, "structures.databases.RemoteDatabase.class_table_schema"]], "count() (structures.databases.remotedatabase class method)": [[118, "structures.databases.RemoteDatabase.count"]], "create_poisson_map() (structures.databases.remotedatabase class method)": [[119, "structures.databases.RemoteDatabase.create_poisson_map"]], "default_poisson_map (structures.databases.remotedatabase attribute)": [[120, "structures.databases.RemoteDatabase.default_poisson_map"]], "get_default_poisson_map() (structures.databases.remotedatabase class method)": [[121, "structures.databases.RemoteDatabase.get_default_poisson_map"]], "get_poisson_map() (structures.databases.remotedatabase class method)": [[122, "structures.databases.RemoteDatabase.get_poisson_map"]], "poisson_map (structures.databases.remotedatabase attribute)": [[123, "structures.databases.RemoteDatabase.poisson_map"]], "query_radius() (structures.databases.remotedatabase class method)": [[124, "structures.databases.RemoteDatabase.query_radius"]], "random_sample_count() (structures.databases.remotedatabase class method)": [[125, "structures.databases.RemoteDatabase.random_sample_count"]], "set_poisson_map() (structures.databases.remotedatabase class method)": [[126, "structures.databases.RemoteDatabase.set_poisson_map"]], "source_match() (structures.databases.remotedatabase class method)": [[127, "structures.databases.RemoteDatabase.source_match"]], "simbad (class in structures.databases)": [[128, "structures.databases.SIMBAD"]], "__init__() (structures.databases.simbad method)": [[129, "structures.databases.SIMBAD.__init__"]], "add_sources_to_poisson() (structures.databases.simbad class method)": [[130, "structures.databases.SIMBAD.add_sources_to_poisson"]], "class_table_schema (structures.databases.simbad attribute)": [[131, "structures.databases.SIMBAD.class_table_schema"]], "count() (structures.databases.simbad class method)": [[132, "structures.databases.SIMBAD.count"]], "create_poisson_map() (structures.databases.simbad class method)": [[133, "structures.databases.SIMBAD.create_poisson_map"]], "default_poisson_map (structures.databases.simbad attribute)": [[134, "structures.databases.SIMBAD.default_poisson_map"]], "get_default_poisson_map() (structures.databases.simbad class method)": [[135, "structures.databases.SIMBAD.get_default_poisson_map"]], "get_poisson_map() (structures.databases.simbad class method)": [[136, "structures.databases.SIMBAD.get_poisson_map"]], "poisson_map (structures.databases.simbad attribute)": [[137, "structures.databases.SIMBAD.poisson_map"]], "query_radius() (structures.databases.simbad class method)": [[138, "structures.databases.SIMBAD.query_radius"]], "random_sample_count() (structures.databases.simbad class method)": [[139, "structures.databases.SIMBAD.random_sample_count"]], "set_poisson_map() (structures.databases.simbad class method)": [[140, "structures.databases.SIMBAD.set_poisson_map"]], "source_match() (structures.databases.simbad class method)": [[141, "structures.databases.SIMBAD.source_match"]], "sourcedatabase (class in structures.databases)": [[142, "structures.databases.SourceDatabase"]], "__init__() (structures.databases.sourcedatabase method)": [[143, "structures.databases.SourceDatabase.__init__"]], "add_sources_to_poisson() (structures.databases.sourcedatabase class method)": [[144, "structures.databases.SourceDatabase.add_sources_to_poisson"]], "class_table_schema (structures.databases.sourcedatabase attribute)": [[145, "structures.databases.SourceDatabase.class_table_schema"]], "count() (structures.databases.sourcedatabase class method)": [[146, "structures.databases.SourceDatabase.count"]], "create_poisson_map() (structures.databases.sourcedatabase class method)": [[147, "structures.databases.SourceDatabase.create_poisson_map"]], "default_poisson_map (structures.databases.sourcedatabase attribute)": [[148, "structures.databases.SourceDatabase.default_poisson_map"]], "get_default_poisson_map() (structures.databases.sourcedatabase class method)": [[149, "structures.databases.SourceDatabase.get_default_poisson_map"]], "get_poisson_map() (structures.databases.sourcedatabase class method)": [[150, "structures.databases.SourceDatabase.get_poisson_map"]], "poisson_map (structures.databases.sourcedatabase attribute)": [[151, "structures.databases.SourceDatabase.poisson_map"]], "query_radius() (structures.databases.sourcedatabase class method)": [[152, "structures.databases.SourceDatabase.query_radius"]], "random_sample_count() (structures.databases.sourcedatabase class method)": [[153, "structures.databases.SourceDatabase.random_sample_count"]], "set_poisson_map() (structures.databases.sourcedatabase class method)": [[154, "structures.databases.SourceDatabase.set_poisson_map"]], "source_match() (structures.databases.sourcedatabase class method)": [[155, "structures.databases.SourceDatabase.source_match"]], "structures.map": [[156, "module-structures.map"]], "map (class in structures.map)": [[157, "structures.map.Map"]], "__init__() (structures.map.map method)": [[158, "structures.map.Map.__init__"]], "coordinate_frame (structures.map.map property)": [[159, "structures.map.Map.coordinate_frame"]], "mapatlas (class in structures.map)": [[160, "structures.map.MapAtlas"]], "__init__() (structures.map.mapatlas method)": [[161, "structures.map.MapAtlas.__init__"]], "coordinate_frame (structures.map.mapatlas property)": [[162, "structures.map.MapAtlas.coordinate_frame"]], "generate() (structures.map.mapatlas class method)": [[163, "structures.map.MapAtlas.generate"]], "get_map() (structures.map.mapatlas method)": [[164, "structures.map.MapAtlas.get_map"]], "has_maps (structures.map.mapatlas property)": [[165, "structures.map.MapAtlas.has_maps"]], "hdus (structures.map.mapatlas property)": [[166, "structures.map.MapAtlas.hdus"]], "map_names (structures.map.mapatlas property)": [[167, "structures.map.MapAtlas.map_names"]], "pixel_positions (structures.map.mapatlas property)": [[168, "structures.map.MapAtlas.pixel_positions"]], "remove() (structures.map.mapatlas method)": [[169, "structures.map.MapAtlas.remove"]], "reshape_healpix() (structures.map.mapatlas method)": [[170, "structures.map.MapAtlas.reshape_healpix"]], "statatlas (class in structures.map)": [[171, "structures.map.StatAtlas"]], "__init__() (structures.map.statatlas method)": [[172, "structures.map.StatAtlas.__init__"]], "append_to_fits() (structures.map.statatlas method)": [[173, "structures.map.StatAtlas.append_to_fits"]], "build_poisson_map() (structures.map.statatlas method)": [[174, "structures.map.StatAtlas.build_poisson_map"]], "build_poisson_map_map() (structures.map.statatlas method)": [[175, "structures.map.StatAtlas.build_poisson_map_MAP"]], "build_poisson_map_nnr() (structures.map.statatlas method)": [[176, "structures.map.StatAtlas.build_poisson_map_NNR"]], "build_poisson_map_gp() (structures.map.statatlas method)": [[177, "structures.map.StatAtlas.build_poisson_map_gp"]], "build_poisson_maps() (structures.map.statatlas method)": [[178, "structures.map.StatAtlas.build_poisson_maps"]], "coordinate_frame (structures.map.statatlas property)": [[179, "structures.map.StatAtlas.coordinate_frame"]], "generate() (structures.map.statatlas class method)": [[180, "structures.map.StatAtlas.generate"]], "get_map() (structures.map.statatlas method)": [[181, "structures.map.StatAtlas.get_map"]], "get_points() (structures.map.statatlas method)": [[182, "structures.map.StatAtlas.get_points"]], "has_maps (structures.map.statatlas property)": [[183, "structures.map.StatAtlas.has_maps"]], "hdus (structures.map.statatlas property)": [[184, "structures.map.StatAtlas.hdus"]], "map_names (structures.map.statatlas property)": [[185, "structures.map.StatAtlas.map_names"]], "pixel_positions (structures.map.statatlas property)": [[186, "structures.map.StatAtlas.pixel_positions"]], "remove() (structures.map.statatlas method)": [[187, "structures.map.StatAtlas.remove"]], "reset() (structures.map.statatlas method)": [[188, "structures.map.StatAtlas.reset"]], "reshape_healpix() (structures.map.statatlas method)": [[189, "structures.map.StatAtlas.reshape_healpix"]], "sample_from_database() (structures.map.statatlas method)": [[190, "structures.map.StatAtlas.sample_from_database"]], "structures.table": [[191, "module-structures.table"]], "sourcetable (class in structures.table)": [[192, "structures.table.SourceTable"]], "columnclass (structures.table.sourcetable property)": [[193, "structures.table.SourceTable.ColumnClass"]], "__init__() (structures.table.sourcetable method)": [[194, "structures.table.SourceTable.__init__"]], "add_column() (structures.table.sourcetable method)": [[195, "structures.table.SourceTable.add_column"]], "add_columns() (structures.table.sourcetable method)": [[196, "structures.table.SourceTable.add_columns"]], "add_index() (structures.table.sourcetable method)": [[197, "structures.table.SourceTable.add_index"]], "add_row() (structures.table.sourcetable method)": [[198, "structures.table.SourceTable.add_row"]], "append_to_fits() (structures.table.sourcetable method)": [[199, "structures.table.SourceTable.append_to_fits"]], "append_to_sql() (structures.table.sourcetable method)": [[200, "structures.table.SourceTable.append_to_sql"]], "argsort() (structures.table.sourcetable method)": [[201, "structures.table.SourceTable.argsort"]], "as_array() (structures.table.sourcetable method)": [[202, "structures.table.SourceTable.as_array"]], "colnames (structures.table.sourcetable property)": [[203, "structures.table.SourceTable.colnames"]], "convert_bytestring_to_unicode() (structures.table.sourcetable method)": [[204, "structures.table.SourceTable.convert_bytestring_to_unicode"]], "convert_unicode_to_bytestring() (structures.table.sourcetable method)": [[205, "structures.table.SourceTable.convert_unicode_to_bytestring"]], "copy() (structures.table.sourcetable method)": [[206, "structures.table.SourceTable.copy"]], "count_types() (structures.table.sourcetable method)": [[207, "structures.table.SourceTable.count_types"]], "dtype (structures.table.sourcetable property)": [[208, "structures.table.SourceTable.dtype"]], "field() (structures.table.sourcetable method)": [[209, "structures.table.SourceTable.field"]], "filled() (structures.table.sourcetable method)": [[210, "structures.table.SourceTable.filled"]], "from_pandas() (structures.table.sourcetable class method)": [[211, "structures.table.SourceTable.from_pandas"]], "generate_schema() (structures.table.sourcetable method)": [[212, "structures.table.SourceTable.generate_schema"]], "get_coordinates() (structures.table.sourcetable method)": [[213, "structures.table.SourceTable.get_coordinates"]], "group_by() (structures.table.sourcetable method)": [[214, "structures.table.SourceTable.group_by"]], "groups (structures.table.sourcetable property)": [[215, "structures.table.SourceTable.groups"]], "has_masked_columns (structures.table.sourcetable property)": [[216, "structures.table.SourceTable.has_masked_columns"]], "has_masked_values (structures.table.sourcetable property)": [[217, "structures.table.SourceTable.has_masked_values"]], "has_mixin_columns (structures.table.sourcetable property)": [[218, "structures.table.SourceTable.has_mixin_columns"]], "iloc (structures.table.sourcetable property)": [[219, "structures.table.SourceTable.iloc"]], "index_column() (structures.table.sourcetable method)": [[220, "structures.table.SourceTable.index_column"]], "index_mode() (structures.table.sourcetable method)": [[221, "structures.table.SourceTable.index_mode"]], "indices (structures.table.sourcetable property)": [[222, "structures.table.SourceTable.indices"]], "info (structures.table.sourcetable attribute)": [[223, "structures.table.SourceTable.info"]], "insert_row() (structures.table.sourcetable method)": [[224, "structures.table.SourceTable.insert_row"]], "items() (structures.table.sourcetable method)": [[225, "structures.table.SourceTable.items"]], "itercols() (structures.table.sourcetable method)": [[226, "structures.table.SourceTable.itercols"]], "iterrows() (structures.table.sourcetable method)": [[227, "structures.table.SourceTable.iterrows"]], "keep_columns() (structures.table.sourcetable method)": [[228, "structures.table.SourceTable.keep_columns"]], "keys() (structures.table.sourcetable method)": [[229, "structures.table.SourceTable.keys"]], "lat (structures.table.sourcetable property)": [[230, "structures.table.SourceTable.lat"]], "loc (structures.table.sourcetable property)": [[231, "structures.table.SourceTable.loc"]], "loc_indices (structures.table.sourcetable property)": [[232, "structures.table.SourceTable.loc_indices"]], "lon (structures.table.sourcetable property)": [[233, "structures.table.SourceTable.lon"]], "mask (structures.table.sourcetable property)": [[234, "structures.table.SourceTable.mask"]], "masked (structures.table.sourcetable property)": [[235, "structures.table.SourceTable.masked"]], "meta (structures.table.sourcetable attribute)": [[236, "structures.table.SourceTable.meta"]], "more() (structures.table.sourcetable method)": [[237, "structures.table.SourceTable.more"]], "name (structures.table.sourcetable property)": [[238, "structures.table.SourceTable.name"]], "pformat() (structures.table.sourcetable method)": [[239, "structures.table.SourceTable.pformat"]], "pformat_all() (structures.table.sourcetable method)": [[240, "structures.table.SourceTable.pformat_all"]], "pprint() (structures.table.sourcetable method)": [[241, "structures.table.SourceTable.pprint"]], "pprint_all() (structures.table.sourcetable method)": [[242, "structures.table.SourceTable.pprint_all"]], "pprint_exclude_names (structures.table.sourcetable attribute)": [[243, "structures.table.SourceTable.pprint_exclude_names"]], "pprint_include_names (structures.table.sourcetable attribute)": [[244, "structures.table.SourceTable.pprint_include_names"]], "read (structures.table.sourcetable attribute)": [[245, "structures.table.SourceTable.read"]], "redshift (structures.table.sourcetable property)": [[246, "structures.table.SourceTable.redshift"]], "remove_column() (structures.table.sourcetable method)": [[247, "structures.table.SourceTable.remove_column"]], "remove_columns() (structures.table.sourcetable method)": [[248, "structures.table.SourceTable.remove_columns"]], "remove_indices() (structures.table.sourcetable method)": [[249, "structures.table.SourceTable.remove_indices"]], "remove_row() (structures.table.sourcetable method)": [[250, "structures.table.SourceTable.remove_row"]], "remove_rows() (structures.table.sourcetable method)": [[251, "structures.table.SourceTable.remove_rows"]], "rename_column() (structures.table.sourcetable method)": [[252, "structures.table.SourceTable.rename_column"]], "rename_columns() (structures.table.sourcetable method)": [[253, "structures.table.SourceTable.rename_columns"]], "replace_column() (structures.table.sourcetable method)": [[254, "structures.table.SourceTable.replace_column"]], "reverse() (structures.table.sourcetable method)": [[255, "structures.table.SourceTable.reverse"]], "round() (structures.table.sourcetable method)": [[256, "structures.table.SourceTable.round"]], "schema (structures.table.sourcetable property)": [[257, "structures.table.SourceTable.schema"]], "show_in_browser() (structures.table.sourcetable method)": [[258, "structures.table.SourceTable.show_in_browser"]], "show_in_notebook() (structures.table.sourcetable method)": [[259, "structures.table.SourceTable.show_in_notebook"]], "sort() (structures.table.sourcetable method)": [[260, "structures.table.SourceTable.sort"]], "to_pandas() (structures.table.sourcetable method)": [[261, "structures.table.SourceTable.to_pandas"]], "type (structures.table.sourcetable property)": [[262, "structures.table.SourceTable.type"]], "type_native (structures.table.sourcetable property)": [[263, "structures.table.SourceTable.type_native"]], "update() (structures.table.sourcetable method)": [[264, "structures.table.SourceTable.update"]], "values() (structures.table.sourcetable method)": [[265, "structures.table.SourceTable.values"]], "values_equal() (structures.table.sourcetable method)": [[266, "structures.table.SourceTable.values_equal"]], "write (structures.table.sourcetable attribute)": [[267, "structures.table.SourceTable.write"]], "utilities.core": [[268, "module-utilities.core"]], "enforce_units() (in module utilities.core)": [[269, "utilities.core.enforce_units"]], "getfromdict() (in module utilities.core)": [[270, "utilities.core.getFromDict"]], "setindict() (in module utilities.core)": [[271, "utilities.core.setInDict"]], "utilities.mp_utils": [[272, "module-utilities.mp_utils"]], "split() (in module utilities.mp_utils)": [[273, "utilities.mp_utils.split"]], "utilities.text": [[274, "module-utilities.text"]], "spinner (class in utilities.text)": [[275, "utilities.text.Spinner"]], "__init__() (utilities.text.spinner method)": [[276, "utilities.text.Spinner.__init__"]], "busy (utilities.text.spinner attribute)": [[277, "utilities.text.Spinner.busy"]], "delay (utilities.text.spinner attribute)": [[278, "utilities.text.Spinner.delay"]], "formatter (utilities.text.spinner attribute)": [[279, "utilities.text.Spinner.formatter"]], "process (utilities.text.spinner attribute)": [[280, "utilities.text.Spinner.process"]], "spinner_task() (utilities.text.spinner method)": [[281, "utilities.text.Spinner.spinner_task"]], "spinning_cursor() (utilities.text.spinner static method)": [[282, "utilities.text.Spinner.spinning_cursor"]], "stream (utilities.text.spinner attribute)": [[283, "utilities.text.Spinner.stream"]]}})
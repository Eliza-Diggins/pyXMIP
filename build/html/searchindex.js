Search.setIndex({"docnames": ["_as_gen/cross_reference", "_as_gen/cross_reference.CrossMatchDatabase", "_as_gen/cross_reference.CrossMatchDatabase.__init__", "_as_gen/cross_reference.CrossMatchDatabase.add_catalog", "_as_gen/cross_reference.CrossMatchDatabase.add_catalog_from_table", "_as_gen/cross_reference.CrossMatchDatabase.build_meta_table", "_as_gen/cross_reference.CrossMatchDatabase.check_meta", "_as_gen/cross_reference.CrossMatchDatabase.chunk_db_operation", "_as_gen/cross_reference.CrossMatchDatabase.chunk_db_table_operation", "_as_gen/cross_reference.CrossMatchDatabase.connect", "_as_gen/cross_reference.CrossMatchDatabase.correct_object_types", "_as_gen/cross_reference.CrossMatchDatabase.cross_match", "_as_gen/cross_reference.CrossMatchDatabase.drop_table", "_as_gen/cross_reference.CrossMatchDatabase.from_file", "_as_gen/cross_reference.CrossMatchDatabase.get_database", "_as_gen/cross_reference.CrossMatchDatabase.has_catalog", "_as_gen/cross_reference.CrossMatchDatabase.match_tables", "_as_gen/cross_reference.CrossMatchDatabase.meta", "_as_gen/cross_reference.CrossMatchDatabase.meta_add", "_as_gen/cross_reference.CrossMatchDatabase.meta_remove", "_as_gen/cross_reference.CrossMatchDatabase.meta_reset", "_as_gen/cross_reference.CrossMatchDatabase.overwrite_schema", "_as_gen/cross_reference.CrossMatchDatabase.path", "_as_gen/cross_reference.CrossMatchDatabase.plot_matches", "_as_gen/cross_reference.CrossMatchDatabase.query", "_as_gen/cross_reference.CrossMatchDatabase.run_reduction", "_as_gen/cross_reference.CrossMatchDatabase.schema", "_as_gen/cross_reference.CrossMatchDatabase.score_matches", "_as_gen/cross_reference.CrossMatchDatabase.standardize_coordinates", "_as_gen/cross_reference.CrossMatchDatabase.tables", "_as_gen/cross_reference.cross_match", "_as_gen/cross_reference.cross_match_table", "_as_gen/schema", "_as_gen/schema.CMDSchema", "_as_gen/schema.CMDSchema.__init__", "_as_gen/schema.CMDSchema.catalog_schema", "_as_gen/schema.CMDSchema.construct", "_as_gen/schema.CMDSchema.copy", "_as_gen/schema.CMDSchema.dict", "_as_gen/schema.CMDSchema.from_orm", "_as_gen/schema.CMDSchema.json", "_as_gen/schema.CMDSchema.model_computed_fields", "_as_gen/schema.CMDSchema.model_config", "_as_gen/schema.CMDSchema.model_construct", "_as_gen/schema.CMDSchema.model_copy", "_as_gen/schema.CMDSchema.model_dump", "_as_gen/schema.CMDSchema.model_dump_json", "_as_gen/schema.CMDSchema.model_extra", "_as_gen/schema.CMDSchema.model_fields", "_as_gen/schema.CMDSchema.model_fields_set", "_as_gen/schema.CMDSchema.model_json_schema", "_as_gen/schema.CMDSchema.model_parametrized_name", "_as_gen/schema.CMDSchema.model_post_init", "_as_gen/schema.CMDSchema.model_rebuild", "_as_gen/schema.CMDSchema.model_validate", "_as_gen/schema.CMDSchema.model_validate_json", "_as_gen/schema.CMDSchema.model_validate_strings", "_as_gen/schema.CMDSchema.parse_file", "_as_gen/schema.CMDSchema.parse_obj", "_as_gen/schema.CMDSchema.parse_raw", "_as_gen/schema.CMDSchema.read", "_as_gen/schema.CMDSchema.schema", "_as_gen/schema.CMDSchema.schema_json", "_as_gen/schema.CMDSchema.table_schema", "_as_gen/schema.CMDSchema.update_forward_refs", "_as_gen/schema.CMDSchema.validate", "_as_gen/schema.CMDSchema.write", "_as_gen/schema.ColumnEntry", "_as_gen/schema.ColumnEntry.__init__", "_as_gen/schema.ReductionSchema", "_as_gen/schema.ReductionSchema.__init__", "_as_gen/schema.ReductionSchema.construct", "_as_gen/schema.ReductionSchema.copy", "_as_gen/schema.ReductionSchema.dict", "_as_gen/schema.ReductionSchema.from_orm", "_as_gen/schema.ReductionSchema.json", "_as_gen/schema.ReductionSchema.model_computed_fields", "_as_gen/schema.ReductionSchema.model_config", "_as_gen/schema.ReductionSchema.model_construct", "_as_gen/schema.ReductionSchema.model_copy", "_as_gen/schema.ReductionSchema.model_dump", "_as_gen/schema.ReductionSchema.model_dump_json", "_as_gen/schema.ReductionSchema.model_extra", "_as_gen/schema.ReductionSchema.model_fields", "_as_gen/schema.ReductionSchema.model_fields_set", "_as_gen/schema.ReductionSchema.model_json_schema", "_as_gen/schema.ReductionSchema.model_parametrized_name", "_as_gen/schema.ReductionSchema.model_post_init", "_as_gen/schema.ReductionSchema.model_rebuild", "_as_gen/schema.ReductionSchema.model_validate", "_as_gen/schema.ReductionSchema.model_validate_json", "_as_gen/schema.ReductionSchema.model_validate_strings", "_as_gen/schema.ReductionSchema.parse_file", "_as_gen/schema.ReductionSchema.parse_obj", "_as_gen/schema.ReductionSchema.parse_raw", "_as_gen/schema.ReductionSchema.read", "_as_gen/schema.ReductionSchema.schema", "_as_gen/schema.ReductionSchema.schema_json", "_as_gen/schema.ReductionSchema.update_forward_refs", "_as_gen/schema.ReductionSchema.validate", "_as_gen/schema.ReductionSchema.write", "_as_gen/schema.Schema", "_as_gen/schema.Schema.__init__", "_as_gen/schema.Schema.construct", "_as_gen/schema.Schema.copy", "_as_gen/schema.Schema.dict", "_as_gen/schema.Schema.from_orm", "_as_gen/schema.Schema.json", "_as_gen/schema.Schema.model_computed_fields", "_as_gen/schema.Schema.model_config", "_as_gen/schema.Schema.model_construct", "_as_gen/schema.Schema.model_copy", "_as_gen/schema.Schema.model_dump", "_as_gen/schema.Schema.model_dump_json", "_as_gen/schema.Schema.model_extra", "_as_gen/schema.Schema.model_fields", "_as_gen/schema.Schema.model_fields_set", "_as_gen/schema.Schema.model_json_schema", "_as_gen/schema.Schema.model_parametrized_name", "_as_gen/schema.Schema.model_post_init", "_as_gen/schema.Schema.model_rebuild", "_as_gen/schema.Schema.model_validate", "_as_gen/schema.Schema.model_validate_json", "_as_gen/schema.Schema.model_validate_strings", "_as_gen/schema.Schema.parse_file", "_as_gen/schema.Schema.parse_obj", "_as_gen/schema.Schema.parse_raw", "_as_gen/schema.Schema.read", "_as_gen/schema.Schema.schema", "_as_gen/schema.Schema.schema_json", "_as_gen/schema.Schema.update_forward_refs", "_as_gen/schema.Schema.validate", "_as_gen/schema.Schema.write", "_as_gen/schema.SchemaEntry", "_as_gen/schema.SchemaEntry.__init__", "_as_gen/schema.SchemaRegistry", "_as_gen/schema.SchemaRegistry.__init__", "_as_gen/schema.SchemaRegistry.add", "_as_gen/schema.SchemaRegistry.as_list", "_as_gen/schema.SchemaRegistry.clear", "_as_gen/schema.SchemaRegistry.copy", "_as_gen/schema.SchemaRegistry.from_directory", "_as_gen/schema.SchemaRegistry.fromkeys", "_as_gen/schema.SchemaRegistry.get", "_as_gen/schema.SchemaRegistry.items", "_as_gen/schema.SchemaRegistry.keys", "_as_gen/schema.SchemaRegistry.pop", "_as_gen/schema.SchemaRegistry.popitem", "_as_gen/schema.SchemaRegistry.setdefault", "_as_gen/schema.SchemaRegistry.update", "_as_gen/schema.SchemaRegistry.values", "_as_gen/schema.SourceTableSchema", "_as_gen/schema.SourceTableSchema.DEC", "_as_gen/schema.SourceTableSchema.DEC_ERR", "_as_gen/schema.SourceTableSchema.GAL_B", "_as_gen/schema.SourceTableSchema.GAL_B_ERR", "_as_gen/schema.SourceTableSchema.GAL_L", "_as_gen/schema.SourceTableSchema.GAL_L_ERR", "_as_gen/schema.SourceTableSchema.NAME", "_as_gen/schema.SourceTableSchema.RA", "_as_gen/schema.SourceTableSchema.RA_ERR", "_as_gen/schema.SourceTableSchema.SEP", "_as_gen/schema.SourceTableSchema.TYPE", "_as_gen/schema.SourceTableSchema.Z", "_as_gen/schema.SourceTableSchema.__init__", "_as_gen/schema.SourceTableSchema.available_coordinate_frames", "_as_gen/schema.SourceTableSchema.column_map", "_as_gen/schema.SourceTableSchema.construct", "_as_gen/schema.SourceTableSchema.coordinate_columns", "_as_gen/schema.SourceTableSchema.coordinate_frame", "_as_gen/schema.SourceTableSchema.coordinate_system", "_as_gen/schema.SourceTableSchema.copy", "_as_gen/schema.SourceTableSchema.default_coord_system", "_as_gen/schema.SourceTableSchema.dict", "_as_gen/schema.SourceTableSchema.from_orm", "_as_gen/schema.SourceTableSchema.from_table", "_as_gen/schema.SourceTableSchema.guess_coordinate_standard_error_struct", "_as_gen/schema.SourceTableSchema.json", "_as_gen/schema.SourceTableSchema.model_computed_fields", "_as_gen/schema.SourceTableSchema.model_config", "_as_gen/schema.SourceTableSchema.model_construct", "_as_gen/schema.SourceTableSchema.model_copy", "_as_gen/schema.SourceTableSchema.model_dump", "_as_gen/schema.SourceTableSchema.model_dump_json", "_as_gen/schema.SourceTableSchema.model_extra", "_as_gen/schema.SourceTableSchema.model_fields", "_as_gen/schema.SourceTableSchema.model_fields_set", "_as_gen/schema.SourceTableSchema.model_json_schema", "_as_gen/schema.SourceTableSchema.model_parametrized_name", "_as_gen/schema.SourceTableSchema.model_post_init", "_as_gen/schema.SourceTableSchema.model_rebuild", "_as_gen/schema.SourceTableSchema.model_validate", "_as_gen/schema.SourceTableSchema.model_validate_json", "_as_gen/schema.SourceTableSchema.model_validate_strings", "_as_gen/schema.SourceTableSchema.object_map", "_as_gen/schema.SourceTableSchema.object_type_separator", "_as_gen/schema.SourceTableSchema.parse_file", "_as_gen/schema.SourceTableSchema.parse_obj", "_as_gen/schema.SourceTableSchema.parse_raw", "_as_gen/schema.SourceTableSchema.read", "_as_gen/schema.SourceTableSchema.schema", "_as_gen/schema.SourceTableSchema.schema_json", "_as_gen/schema.SourceTableSchema.settings", "_as_gen/schema.SourceTableSchema.update_forward_refs", "_as_gen/schema.SourceTableSchema.validate", "_as_gen/schema.SourceTableSchema.write", "_as_gen/stats.gaussian_process", "_as_gen/stats.gaussian_process.Haversine_RBF", "_as_gen/stats.gaussian_process.Haversine_RBF.__init__", "_as_gen/stats.gaussian_process.Haversine_RBF.anisotropic", "_as_gen/stats.gaussian_process.Haversine_RBF.bounds", "_as_gen/stats.gaussian_process.Haversine_RBF.clone_with_theta", "_as_gen/stats.gaussian_process.Haversine_RBF.diag", "_as_gen/stats.gaussian_process.Haversine_RBF.get_params", "_as_gen/stats.gaussian_process.Haversine_RBF.hyperparameter_length_scale", "_as_gen/stats.gaussian_process.Haversine_RBF.hyperparameters", "_as_gen/stats.gaussian_process.Haversine_RBF.is_stationary", "_as_gen/stats.gaussian_process.Haversine_RBF.n_dims", "_as_gen/stats.gaussian_process.Haversine_RBF.requires_vector_input", "_as_gen/stats.gaussian_process.Haversine_RBF.set_params", "_as_gen/stats.gaussian_process.Haversine_RBF.theta", "_as_gen/stats.map_regression", "_as_gen/stats.map_regression.BayesianPoissonMapRegressor", "_as_gen/stats.map_regression.BayesianPoissonMapRegressor.__init__", "_as_gen/stats.map_regression.BayesianPoissonMapRegressor.build_map_MAP", "_as_gen/stats.map_regression.KNNeighborMapRegressor", "_as_gen/stats.map_regression.KNNeighborMapRegressor.__init__", "_as_gen/stats.map_regression.KNNeighborMapRegressor.cross_validate", "_as_gen/stats.map_regression.KNNeighborMapRegressor.default_training_fraction", "_as_gen/stats.map_regression.KNNeighborMapRegressor.hyperparameters", "_as_gen/stats.map_regression.KNNeighborMapRegressor.regressor_parameters", "_as_gen/stats.map_regression.KNNeighborMapRegressor.train_model", "_as_gen/stats.map_regression.PoissonMapRegressor", "_as_gen/stats.map_regression.PoissonMapRegressor.__init__", "_as_gen/stats.map_regression.PoissonMapRegressor.cross_validate", "_as_gen/stats.map_regression.PoissonMapRegressor.default_training_fraction", "_as_gen/stats.map_regression.PoissonMapRegressor.hyperparameters", "_as_gen/stats.map_regression.PoissonMapRegressor.regressor_parameters", "_as_gen/stats.map_regression.PoissonMapRegressor.train_model", "_as_gen/stats.map_regression.RNNeighborMapRegressor", "_as_gen/stats.map_regression.RNNeighborMapRegressor.__init__", "_as_gen/stats.map_regression.RNNeighborMapRegressor.cross_validate", "_as_gen/stats.map_regression.RNNeighborMapRegressor.default_training_fraction", "_as_gen/stats.map_regression.RNNeighborMapRegressor.hyperparameters", "_as_gen/stats.map_regression.RNNeighborMapRegressor.regressor_parameters", "_as_gen/stats.map_regression.RNNeighborMapRegressor.train_model", "_as_gen/stats.map_regression.train_map_regressor", "_as_gen/stats.utilities", "_as_gen/stats.utilities.uniform_sample_spherical", "_as_gen/structures.databases", "_as_gen/structures.databases.DBRegistry", "_as_gen/structures.databases.DBRegistry.__init__", "_as_gen/structures.databases.DBRegistry.add", "_as_gen/structures.databases.DBRegistry.as_list", "_as_gen/structures.databases.DBRegistry.clear", "_as_gen/structures.databases.DBRegistry.copy", "_as_gen/structures.databases.DBRegistry.fromkeys", "_as_gen/structures.databases.DBRegistry.get", "_as_gen/structures.databases.DBRegistry.items", "_as_gen/structures.databases.DBRegistry.keys", "_as_gen/structures.databases.DBRegistry.locals", "_as_gen/structures.databases.DBRegistry.names", "_as_gen/structures.databases.DBRegistry.pop", "_as_gen/structures.databases.DBRegistry.popitem", "_as_gen/structures.databases.DBRegistry.remotes", "_as_gen/structures.databases.DBRegistry.setdefault", "_as_gen/structures.databases.DBRegistry.update", "_as_gen/structures.databases.DBRegistry.values", "_as_gen/structures.databases.LocalDatabase", "_as_gen/structures.databases.LocalDatabase.__init__", "_as_gen/structures.databases.LocalDatabase.add_sources_to_poisson", "_as_gen/structures.databases.LocalDatabase.correct_query_output", "_as_gen/structures.databases.LocalDatabase.count", "_as_gen/structures.databases.LocalDatabase.default_correct_query_output", "_as_gen/structures.databases.LocalDatabase.default_poisson_atlas_path", "_as_gen/structures.databases.LocalDatabase.default_query_config", "_as_gen/structures.databases.LocalDatabase.default_query_schema", "_as_gen/structures.databases.LocalDatabase.name", "_as_gen/structures.databases.LocalDatabase.poisson_atlas", "_as_gen/structures.databases.LocalDatabase.query_config", "_as_gen/structures.databases.LocalDatabase.query_radius", "_as_gen/structures.databases.LocalDatabase.query_schema", "_as_gen/structures.databases.LocalDatabase.random_sample_count", "_as_gen/structures.databases.LocalDatabase.register", "_as_gen/structures.databases.LocalDatabase.source_match", "_as_gen/structures.databases.LocalDatabase.source_match_memory", "_as_gen/structures.databases.NED", "_as_gen/structures.databases.NED.TIMEOUT", "_as_gen/structures.databases.NED.__init__", "_as_gen/structures.databases.NED.add_sources_to_poisson", "_as_gen/structures.databases.NED.config_ned", "_as_gen/structures.databases.NED.correct_query_output", "_as_gen/structures.databases.NED.count", "_as_gen/structures.databases.NED.default_correct_query_output", "_as_gen/structures.databases.NED.default_poisson_atlas_path", "_as_gen/structures.databases.NED.default_query_config", "_as_gen/structures.databases.NED.default_query_schema", "_as_gen/structures.databases.NED.get_image_list", "_as_gen/structures.databases.NED.get_table", "_as_gen/structures.databases.NED.name", "_as_gen/structures.databases.NED.poisson_atlas", "_as_gen/structures.databases.NED.query_config", "_as_gen/structures.databases.NED.query_object", "_as_gen/structures.databases.NED.query_radius", "_as_gen/structures.databases.NED.query_schema", "_as_gen/structures.databases.NED.random_sample_count", "_as_gen/structures.databases.NED.register", "_as_gen/structures.databases.NED.source_match", "_as_gen/structures.databases.RemoteDatabase", "_as_gen/structures.databases.RemoteDatabase.__init__", "_as_gen/structures.databases.RemoteDatabase.add_sources_to_poisson", "_as_gen/structures.databases.RemoteDatabase.correct_query_output", "_as_gen/structures.databases.RemoteDatabase.count", "_as_gen/structures.databases.RemoteDatabase.default_correct_query_output", "_as_gen/structures.databases.RemoteDatabase.default_poisson_atlas_path", "_as_gen/structures.databases.RemoteDatabase.default_query_config", "_as_gen/structures.databases.RemoteDatabase.default_query_schema", "_as_gen/structures.databases.RemoteDatabase.name", "_as_gen/structures.databases.RemoteDatabase.poisson_atlas", "_as_gen/structures.databases.RemoteDatabase.query_config", "_as_gen/structures.databases.RemoteDatabase.query_radius", "_as_gen/structures.databases.RemoteDatabase.query_schema", "_as_gen/structures.databases.RemoteDatabase.random_sample_count", "_as_gen/structures.databases.RemoteDatabase.register", "_as_gen/structures.databases.RemoteDatabase.source_match", "_as_gen/structures.databases.SIMBAD", "_as_gen/structures.databases.SIMBAD.EXTRA_COLUMNS", "_as_gen/structures.databases.SIMBAD.REMOVED_COLUMNS", "_as_gen/structures.databases.SIMBAD.ROW_LIMIT", "_as_gen/structures.databases.SIMBAD.TIMEOUT", "_as_gen/structures.databases.SIMBAD.__init__", "_as_gen/structures.databases.SIMBAD.add_sources_to_poisson", "_as_gen/structures.databases.SIMBAD.available_tables", "_as_gen/structures.databases.SIMBAD.clear_cache", "_as_gen/structures.databases.SIMBAD.config_simbad", "_as_gen/structures.databases.SIMBAD.correct_query_output", "_as_gen/structures.databases.SIMBAD.count", "_as_gen/structures.databases.SIMBAD.default_correct_query_output", "_as_gen/structures.databases.SIMBAD.default_poisson_atlas_path", "_as_gen/structures.databases.SIMBAD.default_query_config", "_as_gen/structures.databases.SIMBAD.default_query_schema", "_as_gen/structures.databases.SIMBAD.list_columns", "_as_gen/structures.databases.SIMBAD.list_linked_tables", "_as_gen/structures.databases.SIMBAD.name", "_as_gen/structures.databases.SIMBAD.poisson_atlas", "_as_gen/structures.databases.SIMBAD.query_config", "_as_gen/structures.databases.SIMBAD.query_object", "_as_gen/structures.databases.SIMBAD.query_radius", "_as_gen/structures.databases.SIMBAD.query_schema", "_as_gen/structures.databases.SIMBAD.query_tap", "_as_gen/structures.databases.SIMBAD.random_sample_count", "_as_gen/structures.databases.SIMBAD.register", "_as_gen/structures.databases.SIMBAD.source_match", "_as_gen/structures.databases.SourceDatabase", "_as_gen/structures.databases.SourceDatabase.__init__", "_as_gen/structures.databases.SourceDatabase.add_sources_to_poisson", "_as_gen/structures.databases.SourceDatabase.correct_query_output", "_as_gen/structures.databases.SourceDatabase.count", "_as_gen/structures.databases.SourceDatabase.default_correct_query_output", "_as_gen/structures.databases.SourceDatabase.default_poisson_atlas_path", "_as_gen/structures.databases.SourceDatabase.default_query_config", "_as_gen/structures.databases.SourceDatabase.default_query_schema", "_as_gen/structures.databases.SourceDatabase.name", "_as_gen/structures.databases.SourceDatabase.poisson_atlas", "_as_gen/structures.databases.SourceDatabase.query_config", "_as_gen/structures.databases.SourceDatabase.query_radius", "_as_gen/structures.databases.SourceDatabase.query_schema", "_as_gen/structures.databases.SourceDatabase.random_sample_count", "_as_gen/structures.databases.SourceDatabase.register", "_as_gen/structures.databases.add_points_to_poisson_map", "_as_gen/structures.databases.builtin_databases", "_as_gen/structures.databases.get_database", "_as_gen/structures.databases.get_poisson_atlas", "_as_gen/structures.databases.get_poisson_path", "_as_gen/structures.map", "_as_gen/structures.map.Map", "_as_gen/structures.map.Map.__init__", "_as_gen/structures.map.Map.coordinate_frame", "_as_gen/structures.map.Map.data", "_as_gen/structures.map.Map.get_healpix_id", "_as_gen/structures.map.Map.pixel_positions", "_as_gen/structures.map.Map.plot", "_as_gen/structures.map.Map.transform_map_coordinates", "_as_gen/structures.map.MapAtlas", "_as_gen/structures.map.MapAtlas.__init__", "_as_gen/structures.map.MapAtlas.coordinate_frame", "_as_gen/structures.map.MapAtlas.generate", "_as_gen/structures.map.MapAtlas.get_map", "_as_gen/structures.map.MapAtlas.has_maps", "_as_gen/structures.map.MapAtlas.hdus", "_as_gen/structures.map.MapAtlas.map_names", "_as_gen/structures.map.MapAtlas.pixel_positions", "_as_gen/structures.map.MapAtlas.remove", "_as_gen/structures.map.MapAtlas.reshape_healpix", "_as_gen/structures.map.PoissonAtlas", "_as_gen/structures.map.PoissonAtlas.COUNTS", "_as_gen/structures.map.PoissonAtlas.__init__", "_as_gen/structures.map.PoissonAtlas.append_to_fits", "_as_gen/structures.map.PoissonAtlas.build_poisson_map", "_as_gen/structures.map.PoissonAtlas.build_poisson_map_KNN", "_as_gen/structures.map.PoissonAtlas.build_poisson_map_MAP", "_as_gen/structures.map.PoissonAtlas.build_poisson_map_RNN", "_as_gen/structures.map.PoissonAtlas.build_poisson_map_regressor", "_as_gen/structures.map.PoissonAtlas.build_poisson_maps", "_as_gen/structures.map.PoissonAtlas.coordinate_frame", "_as_gen/structures.map.PoissonAtlas.generate", "_as_gen/structures.map.PoissonAtlas.get_map", "_as_gen/structures.map.PoissonAtlas.get_points", "_as_gen/structures.map.PoissonAtlas.has_maps", "_as_gen/structures.map.PoissonAtlas.hdus", "_as_gen/structures.map.PoissonAtlas.map_names", "_as_gen/structures.map.PoissonAtlas.pixel_positions", "_as_gen/structures.map.PoissonAtlas.remove", "_as_gen/structures.map.PoissonAtlas.reset", "_as_gen/structures.map.PoissonAtlas.reshape_healpix", "_as_gen/structures.map.PoissonAtlas.sample_from_database", "_as_gen/structures.map.StatAtlas", "_as_gen/structures.map.StatAtlas.COUNTS", "_as_gen/structures.map.StatAtlas.__init__", "_as_gen/structures.map.StatAtlas.append_to_fits", "_as_gen/structures.map.StatAtlas.coordinate_frame", "_as_gen/structures.map.StatAtlas.generate", "_as_gen/structures.map.StatAtlas.get_map", "_as_gen/structures.map.StatAtlas.get_points", "_as_gen/structures.map.StatAtlas.has_maps", "_as_gen/structures.map.StatAtlas.hdus", "_as_gen/structures.map.StatAtlas.map_names", "_as_gen/structures.map.StatAtlas.pixel_positions", "_as_gen/structures.map.StatAtlas.remove", "_as_gen/structures.map.StatAtlas.reset", "_as_gen/structures.map.StatAtlas.reshape_healpix", "_as_gen/structures.map.StatAtlas.sample_from_database", "_as_gen/structures.reduction", "_as_gen/structures.reduction.AstrometricReductionProcess", "_as_gen/structures.reduction.AstrometricReductionProcess.CATALOG_ERR", "_as_gen/structures.reduction.AstrometricReductionProcess.DATABASE_ERR", "_as_gen/structures.reduction.AstrometricReductionProcess.__init__", "_as_gen/structures.reduction.AstrometricReductionProcess.construct", "_as_gen/structures.reduction.AstrometricReductionProcess.copy", "_as_gen/structures.reduction.AstrometricReductionProcess.cross_match_database", "_as_gen/structures.reduction.AstrometricReductionProcess.debug_flag", "_as_gen/structures.reduction.AstrometricReductionProcess.dict", "_as_gen/structures.reduction.AstrometricReductionProcess.fill_unknown", "_as_gen/structures.reduction.AstrometricReductionProcess.from_orm", "_as_gen/structures.reduction.AstrometricReductionProcess.generate_operator", "_as_gen/structures.reduction.AstrometricReductionProcess.generate_sql_query", "_as_gen/structures.reduction.AstrometricReductionProcess.json", "_as_gen/structures.reduction.AstrometricReductionProcess.model_computed_fields", "_as_gen/structures.reduction.AstrometricReductionProcess.model_config", "_as_gen/structures.reduction.AstrometricReductionProcess.model_construct", "_as_gen/structures.reduction.AstrometricReductionProcess.model_copy", "_as_gen/structures.reduction.AstrometricReductionProcess.model_dump", "_as_gen/structures.reduction.AstrometricReductionProcess.model_dump_json", "_as_gen/structures.reduction.AstrometricReductionProcess.model_extra", "_as_gen/structures.reduction.AstrometricReductionProcess.model_fields", "_as_gen/structures.reduction.AstrometricReductionProcess.model_fields_set", "_as_gen/structures.reduction.AstrometricReductionProcess.model_json_schema", "_as_gen/structures.reduction.AstrometricReductionProcess.model_parametrized_name", "_as_gen/structures.reduction.AstrometricReductionProcess.model_post_init", "_as_gen/structures.reduction.AstrometricReductionProcess.model_rebuild", "_as_gen/structures.reduction.AstrometricReductionProcess.model_validate", "_as_gen/structures.reduction.AstrometricReductionProcess.model_validate_json", "_as_gen/structures.reduction.AstrometricReductionProcess.model_validate_strings", "_as_gen/structures.reduction.AstrometricReductionProcess.obj_col", "_as_gen/structures.reduction.AstrometricReductionProcess.op_tmp_table", "_as_gen/structures.reduction.AstrometricReductionProcess.parse_file", "_as_gen/structures.reduction.AstrometricReductionProcess.parse_obj", "_as_gen/structures.reduction.AstrometricReductionProcess.parse_raw", "_as_gen/structures.reduction.AstrometricReductionProcess.prior", "_as_gen/structures.reduction.AstrometricReductionProcess.proc_tmp_table", "_as_gen/structures.reduction.AstrometricReductionProcess.process_name", "_as_gen/structures.reduction.AstrometricReductionProcess.schema", "_as_gen/structures.reduction.AstrometricReductionProcess.schema_json", "_as_gen/structures.reduction.AstrometricReductionProcess.score_col", "_as_gen/structures.reduction.AstrometricReductionProcess.settings_flag", "_as_gen/structures.reduction.AstrometricReductionProcess.settings_header", "_as_gen/structures.reduction.AstrometricReductionProcess.table", "_as_gen/structures.reduction.AstrometricReductionProcess.update_forward_refs", "_as_gen/structures.reduction.AstrometricReductionProcess.validate", "_as_gen/structures.reduction.ReductionProcess", "_as_gen/structures.reduction.ReductionProcess.__init__", "_as_gen/structures.reduction.ReductionProcess.construct", "_as_gen/structures.reduction.ReductionProcess.copy", "_as_gen/structures.reduction.ReductionProcess.cross_match_database", "_as_gen/structures.reduction.ReductionProcess.debug_flag", "_as_gen/structures.reduction.ReductionProcess.dict", "_as_gen/structures.reduction.ReductionProcess.fill_unknown", "_as_gen/structures.reduction.ReductionProcess.from_orm", "_as_gen/structures.reduction.ReductionProcess.generate_operator", "_as_gen/structures.reduction.ReductionProcess.generate_sql_query", "_as_gen/structures.reduction.ReductionProcess.json", "_as_gen/structures.reduction.ReductionProcess.model_computed_fields", "_as_gen/structures.reduction.ReductionProcess.model_config", "_as_gen/structures.reduction.ReductionProcess.model_construct", "_as_gen/structures.reduction.ReductionProcess.model_copy", "_as_gen/structures.reduction.ReductionProcess.model_dump", "_as_gen/structures.reduction.ReductionProcess.model_dump_json", "_as_gen/structures.reduction.ReductionProcess.model_extra", "_as_gen/structures.reduction.ReductionProcess.model_fields", "_as_gen/structures.reduction.ReductionProcess.model_fields_set", "_as_gen/structures.reduction.ReductionProcess.model_json_schema", "_as_gen/structures.reduction.ReductionProcess.model_parametrized_name", "_as_gen/structures.reduction.ReductionProcess.model_post_init", "_as_gen/structures.reduction.ReductionProcess.model_rebuild", "_as_gen/structures.reduction.ReductionProcess.model_validate", "_as_gen/structures.reduction.ReductionProcess.model_validate_json", "_as_gen/structures.reduction.ReductionProcess.model_validate_strings", "_as_gen/structures.reduction.ReductionProcess.obj_col", "_as_gen/structures.reduction.ReductionProcess.op_tmp_table", "_as_gen/structures.reduction.ReductionProcess.parse_file", "_as_gen/structures.reduction.ReductionProcess.parse_obj", "_as_gen/structures.reduction.ReductionProcess.parse_raw", "_as_gen/structures.reduction.ReductionProcess.proc_tmp_table", "_as_gen/structures.reduction.ReductionProcess.process_name", "_as_gen/structures.reduction.ReductionProcess.schema", "_as_gen/structures.reduction.ReductionProcess.schema_json", "_as_gen/structures.reduction.ReductionProcess.score_col", "_as_gen/structures.reduction.ReductionProcess.settings_flag", "_as_gen/structures.reduction.ReductionProcess.settings_header", "_as_gen/structures.reduction.ReductionProcess.table", "_as_gen/structures.reduction.ReductionProcess.update_forward_refs", "_as_gen/structures.reduction.ReductionProcess.validate", "_as_gen/structures.table", "_as_gen/structures.table.CoordinateColumn", "_as_gen/structures.table.CoordinateColumn.__init__", "_as_gen/structures.table.SchemaColumn", "_as_gen/structures.table.SchemaColumn.__init__", "_as_gen/structures.table.SourceTable", "_as_gen/structures.table.SourceTable.ColumnClass", "_as_gen/structures.table.SourceTable.DEC", "_as_gen/structures.table.SourceTable.DEC_ERR", "_as_gen/structures.table.SourceTable.GAL_B", "_as_gen/structures.table.SourceTable.GAL_B_ERR", "_as_gen/structures.table.SourceTable.GAL_L", "_as_gen/structures.table.SourceTable.GAL_L_ERR", "_as_gen/structures.table.SourceTable.NAME", "_as_gen/structures.table.SourceTable.RA", "_as_gen/structures.table.SourceTable.RA_ERR", "_as_gen/structures.table.SourceTable.SEP", "_as_gen/structures.table.SourceTable.TYPE", "_as_gen/structures.table.SourceTable.Z", "_as_gen/structures.table.SourceTable.__init__", "_as_gen/structures.table.SourceTable.add_column", "_as_gen/structures.table.SourceTable.add_columns", "_as_gen/structures.table.SourceTable.add_index", "_as_gen/structures.table.SourceTable.add_row", "_as_gen/structures.table.SourceTable.append_to_fits", "_as_gen/structures.table.SourceTable.append_to_sql", "_as_gen/structures.table.SourceTable.argsort", "_as_gen/structures.table.SourceTable.as_array", "_as_gen/structures.table.SourceTable.colnames", "_as_gen/structures.table.SourceTable.convert_bytestring_to_unicode", "_as_gen/structures.table.SourceTable.convert_unicode_to_bytestring", "_as_gen/structures.table.SourceTable.copy", "_as_gen/structures.table.SourceTable.count_types", "_as_gen/structures.table.SourceTable.dtype", "_as_gen/structures.table.SourceTable.field", "_as_gen/structures.table.SourceTable.filled", "_as_gen/structures.table.SourceTable.from_pandas", "_as_gen/structures.table.SourceTable.generate_schema", "_as_gen/structures.table.SourceTable.get_coordinates", "_as_gen/structures.table.SourceTable.get_formatted_types", "_as_gen/structures.table.SourceTable.group_by", "_as_gen/structures.table.SourceTable.groups", "_as_gen/structures.table.SourceTable.has_masked_columns", "_as_gen/structures.table.SourceTable.has_masked_values", "_as_gen/structures.table.SourceTable.has_mixin_columns", "_as_gen/structures.table.SourceTable.iloc", "_as_gen/structures.table.SourceTable.index_column", "_as_gen/structures.table.SourceTable.index_mode", "_as_gen/structures.table.SourceTable.indices", "_as_gen/structures.table.SourceTable.info", "_as_gen/structures.table.SourceTable.insert_row", "_as_gen/structures.table.SourceTable.items", "_as_gen/structures.table.SourceTable.itercols", "_as_gen/structures.table.SourceTable.iterrows", "_as_gen/structures.table.SourceTable.keep_columns", "_as_gen/structures.table.SourceTable.keys", "_as_gen/structures.table.SourceTable.lat", "_as_gen/structures.table.SourceTable.loc", "_as_gen/structures.table.SourceTable.loc_indices", "_as_gen/structures.table.SourceTable.lon", "_as_gen/structures.table.SourceTable.mask", "_as_gen/structures.table.SourceTable.masked", "_as_gen/structures.table.SourceTable.meta", "_as_gen/structures.table.SourceTable.more", "_as_gen/structures.table.SourceTable.pformat", "_as_gen/structures.table.SourceTable.pformat_all", "_as_gen/structures.table.SourceTable.pprint", "_as_gen/structures.table.SourceTable.pprint_all", "_as_gen/structures.table.SourceTable.pprint_exclude_names", "_as_gen/structures.table.SourceTable.pprint_include_names", "_as_gen/structures.table.SourceTable.read", "_as_gen/structures.table.SourceTable.remove_column", "_as_gen/structures.table.SourceTable.remove_columns", "_as_gen/structures.table.SourceTable.remove_indices", "_as_gen/structures.table.SourceTable.remove_row", "_as_gen/structures.table.SourceTable.remove_rows", "_as_gen/structures.table.SourceTable.rename_column", "_as_gen/structures.table.SourceTable.rename_columns", "_as_gen/structures.table.SourceTable.replace_column", "_as_gen/structures.table.SourceTable.reverse", "_as_gen/structures.table.SourceTable.round", "_as_gen/structures.table.SourceTable.schema", "_as_gen/structures.table.SourceTable.setdefault", "_as_gen/structures.table.SourceTable.show_in_browser", "_as_gen/structures.table.SourceTable.show_in_notebook", "_as_gen/structures.table.SourceTable.sort", "_as_gen/structures.table.SourceTable.to_pandas", "_as_gen/structures.table.SourceTable.update", "_as_gen/structures.table.SourceTable.values", "_as_gen/structures.table.SourceTable.values_equal", "_as_gen/structures.table.SourceTable.write", "_as_gen/structures.table.correct_column_types", "_as_gen/structures.table.format_table_types", "_as_gen/structures.table.load", "_as_gen/utilities.core", "_as_gen/utilities.core.AttrDict", "_as_gen/utilities.core.AttrDict.__init__", "_as_gen/utilities.core.AttrDict.clean", "_as_gen/utilities.core.AttrDict.clean_types", "_as_gen/utilities.core.AttrDict.clear", "_as_gen/utilities.core.AttrDict.copy", "_as_gen/utilities.core.AttrDict.from_nested_dict", "_as_gen/utilities.core.AttrDict.fromkeys", "_as_gen/utilities.core.AttrDict.get", "_as_gen/utilities.core.AttrDict.items", "_as_gen/utilities.core.AttrDict.keys", "_as_gen/utilities.core.AttrDict.pop", "_as_gen/utilities.core.AttrDict.popitem", "_as_gen/utilities.core.AttrDict.setdefault", "_as_gen/utilities.core.AttrDict.update", "_as_gen/utilities.core.AttrDict.values", "_as_gen/utilities.core.YAMLConfiguration", "_as_gen/utilities.core.YAMLConfiguration.__init__", "_as_gen/utilities.core.YAMLConfiguration.config", "_as_gen/utilities.core.YAMLConfiguration.load", "_as_gen/utilities.core.YAMLConfiguration.load_from_path", "_as_gen/utilities.core.YAMLConfiguration.reload", "_as_gen/utilities.core.YAMLConfiguration.set_on_disk", "_as_gen/utilities.core.YAMLConfiguration.set_param", "_as_gen/utilities.core.enforce_units", "_as_gen/utilities.core.find_descriptors", "_as_gen/utilities.core.getFromDict", "_as_gen/utilities.core.merge_dicts", "_as_gen/utilities.core.produce_dict_heading", "_as_gen/utilities.core.rgetattr", "_as_gen/utilities.core.rsetattr", "_as_gen/utilities.core.setInDict", "_as_gen/utilities.logging", "_as_gen/utilities.plot", "_as_gen/utilities.plot.get_hips_image", "_as_gen/utilities.plot.plot_healpix", "_as_gen/utilities.plot.plot_hips", "_as_gen/utilities.plot.set_style", "_as_gen/utilities.sql", "_as_gen/utilities.sql.chunk_sql_query_operation", "_as_gen/utilities.sql.chunk_sql_table_operation", "_as_gen/utilities.text", "_as_gen/utilities.text.get_package_version", "_as_gen/utilities.text.print_cli_header", "_as_gen/utilities.text.print_version", "_as_gen/utilities.types", "_as_gen/utilities.types.ColumnMap", "_as_gen/utilities.types.ColumnMap.DEC", "_as_gen/utilities.types.ColumnMap.DEC_ERR", "_as_gen/utilities.types.ColumnMap.GAL_B", "_as_gen/utilities.types.ColumnMap.GAL_B_ERR", "_as_gen/utilities.types.ColumnMap.GAL_L", "_as_gen/utilities.types.ColumnMap.GAL_L_ERR", "_as_gen/utilities.types.ColumnMap.NAME", "_as_gen/utilities.types.ColumnMap.RA", "_as_gen/utilities.types.ColumnMap.RA_ERR", "_as_gen/utilities.types.ColumnMap.SEP", "_as_gen/utilities.types.ColumnMap.TYPE", "_as_gen/utilities.types.ColumnMap.Z", "_as_gen/utilities.types.ColumnMap.__init__", "_as_gen/utilities.types.ColumnMap.construct", "_as_gen/utilities.types.ColumnMap.copy", "_as_gen/utilities.types.ColumnMap.dict", "_as_gen/utilities.types.ColumnMap.from_orm", "_as_gen/utilities.types.ColumnMap.json", "_as_gen/utilities.types.ColumnMap.model_computed_fields", "_as_gen/utilities.types.ColumnMap.model_config", "_as_gen/utilities.types.ColumnMap.model_construct", "_as_gen/utilities.types.ColumnMap.model_copy", "_as_gen/utilities.types.ColumnMap.model_dump", "_as_gen/utilities.types.ColumnMap.model_dump_json", "_as_gen/utilities.types.ColumnMap.model_extra", "_as_gen/utilities.types.ColumnMap.model_fields", "_as_gen/utilities.types.ColumnMap.model_fields_set", "_as_gen/utilities.types.ColumnMap.model_json_schema", "_as_gen/utilities.types.ColumnMap.model_parametrized_name", "_as_gen/utilities.types.ColumnMap.model_post_init", "_as_gen/utilities.types.ColumnMap.model_rebuild", "_as_gen/utilities.types.ColumnMap.model_validate", "_as_gen/utilities.types.ColumnMap.model_validate_json", "_as_gen/utilities.types.ColumnMap.model_validate_strings", "_as_gen/utilities.types.ColumnMap.parse_file", "_as_gen/utilities.types.ColumnMap.parse_obj", "_as_gen/utilities.types.ColumnMap.parse_raw", "_as_gen/utilities.types.ColumnMap.schema", "_as_gen/utilities.types.ColumnMap.schema_json", "_as_gen/utilities.types.ColumnMap.search_inverse", "_as_gen/utilities.types.ColumnMap.update_forward_refs", "_as_gen/utilities.types.ColumnMap.validate", "_as_gen/utilities.types.ColumnMap.validate_table_column_no_unit", "_as_gen/utilities.types.ColumnMap.validate_table_column_unit", "_as_gen/utilities.types.ColumnStdErrorSpecifier", "_as_gen/utilities.types.ColumnStdErrorSpecifier.__init__", "_as_gen/utilities.types.ColumnStdErrorSpecifier.base_column", "_as_gen/utilities.types.ColumnStdErrorSpecifier.construct", "_as_gen/utilities.types.ColumnStdErrorSpecifier.copy", "_as_gen/utilities.types.ColumnStdErrorSpecifier.dict", "_as_gen/utilities.types.ColumnStdErrorSpecifier.error_column", "_as_gen/utilities.types.ColumnStdErrorSpecifier.error_convert_to_std", "_as_gen/utilities.types.ColumnStdErrorSpecifier.error_value", "_as_gen/utilities.types.ColumnStdErrorSpecifier.from_orm", "_as_gen/utilities.types.ColumnStdErrorSpecifier.json", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_computed_fields", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_config", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_construct", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_copy", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_dump", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_dump_json", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_extra", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_fields", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_fields_set", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_json_schema", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_parametrized_name", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_post_init", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_rebuild", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_validate", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_validate_json", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_validate_strings", "_as_gen/utilities.types.ColumnStdErrorSpecifier.parse_file", "_as_gen/utilities.types.ColumnStdErrorSpecifier.parse_obj", "_as_gen/utilities.types.ColumnStdErrorSpecifier.parse_raw", "_as_gen/utilities.types.ColumnStdErrorSpecifier.schema", "_as_gen/utilities.types.ColumnStdErrorSpecifier.schema_json", "_as_gen/utilities.types.ColumnStdErrorSpecifier.update_forward_refs", "_as_gen/utilities.types.ColumnStdErrorSpecifier.validate", "_as_gen/utilities.types.ColumnStdErrorSpecifier.validate_on_table", "_as_gen/utilities.types.ColumnStdErrorSpecifier.validator", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.__init__", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.check_empty", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.construct", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.copy", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.dict", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.from_orm", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.json", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.lat_error", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.lon_error", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.mode", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_computed_fields", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_config", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_construct", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_copy", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_dump", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_dump_json", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_extra", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_fields", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_fields_set", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_json_schema", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_parametrized_name", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_post_init", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_rebuild", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate_json", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate_strings", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.parse_file", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.parse_obj", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.parse_raw", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.position_error", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.schema", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.schema_json", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.update_forward_refs", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.validate", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.validator", "_as_gen/utilities.types.Registry", "_as_gen/utilities.types.Registry.__init__", "_as_gen/utilities.types.Registry.add", "_as_gen/utilities.types.Registry.as_list", "_as_gen/utilities.types.Registry.clear", "_as_gen/utilities.types.Registry.copy", "_as_gen/utilities.types.Registry.fromkeys", "_as_gen/utilities.types.Registry.get", "_as_gen/utilities.types.Registry.items", "_as_gen/utilities.types.Registry.keys", "_as_gen/utilities.types.Registry.pop", "_as_gen/utilities.types.Registry.popitem", "_as_gen/utilities.types.Registry.setdefault", "_as_gen/utilities.types.Registry.update", "_as_gen/utilities.types.Registry.values", "_as_gen/utilities.types.SourceTableSchemaSettings", "_as_gen/utilities.types.SourceTableSchemaSettings.__init__", "_as_gen/utilities.types.SourceTableSchemaSettings.construct", "_as_gen/utilities.types.SourceTableSchemaSettings.copy", "_as_gen/utilities.types.SourceTableSchemaSettings.default_coord_system", "_as_gen/utilities.types.SourceTableSchemaSettings.dict", "_as_gen/utilities.types.SourceTableSchemaSettings.from_orm", "_as_gen/utilities.types.SourceTableSchemaSettings.json", "_as_gen/utilities.types.SourceTableSchemaSettings.model_computed_fields", "_as_gen/utilities.types.SourceTableSchemaSettings.model_config", "_as_gen/utilities.types.SourceTableSchemaSettings.model_construct", "_as_gen/utilities.types.SourceTableSchemaSettings.model_copy", "_as_gen/utilities.types.SourceTableSchemaSettings.model_dump", "_as_gen/utilities.types.SourceTableSchemaSettings.model_dump_json", "_as_gen/utilities.types.SourceTableSchemaSettings.model_extra", "_as_gen/utilities.types.SourceTableSchemaSettings.model_fields", "_as_gen/utilities.types.SourceTableSchemaSettings.model_fields_set", "_as_gen/utilities.types.SourceTableSchemaSettings.model_json_schema", "_as_gen/utilities.types.SourceTableSchemaSettings.model_parametrized_name", "_as_gen/utilities.types.SourceTableSchemaSettings.model_post_init", "_as_gen/utilities.types.SourceTableSchemaSettings.model_rebuild", "_as_gen/utilities.types.SourceTableSchemaSettings.model_validate", "_as_gen/utilities.types.SourceTableSchemaSettings.model_validate_json", "_as_gen/utilities.types.SourceTableSchemaSettings.model_validate_strings", "_as_gen/utilities.types.SourceTableSchemaSettings.object_type_separator", "_as_gen/utilities.types.SourceTableSchemaSettings.parse_file", "_as_gen/utilities.types.SourceTableSchemaSettings.parse_obj", "_as_gen/utilities.types.SourceTableSchemaSettings.parse_raw", "_as_gen/utilities.types.SourceTableSchemaSettings.schema", "_as_gen/utilities.types.SourceTableSchemaSettings.schema_json", "_as_gen/utilities.types.SourceTableSchemaSettings.update_forward_refs", "_as_gen/utilities.types.SourceTableSchemaSettings.validate", "_as_gen/utilities.types.TableColumn", "_as_gen/utilities.types.TableColumn.__init__", "_as_gen/utilities.types.TableColumn.construct", "_as_gen/utilities.types.TableColumn.copy", "_as_gen/utilities.types.TableColumn.dict", "_as_gen/utilities.types.TableColumn.from_orm", "_as_gen/utilities.types.TableColumn.json", "_as_gen/utilities.types.TableColumn.model_computed_fields", "_as_gen/utilities.types.TableColumn.model_config", "_as_gen/utilities.types.TableColumn.model_construct", "_as_gen/utilities.types.TableColumn.model_copy", "_as_gen/utilities.types.TableColumn.model_dump", "_as_gen/utilities.types.TableColumn.model_dump_json", "_as_gen/utilities.types.TableColumn.model_extra", "_as_gen/utilities.types.TableColumn.model_fields", "_as_gen/utilities.types.TableColumn.model_fields_set", "_as_gen/utilities.types.TableColumn.model_json_schema", "_as_gen/utilities.types.TableColumn.model_parametrized_name", "_as_gen/utilities.types.TableColumn.model_post_init", "_as_gen/utilities.types.TableColumn.model_rebuild", "_as_gen/utilities.types.TableColumn.model_validate", "_as_gen/utilities.types.TableColumn.model_validate_json", "_as_gen/utilities.types.TableColumn.model_validate_strings", "_as_gen/utilities.types.TableColumn.name", "_as_gen/utilities.types.TableColumn.parse_file", "_as_gen/utilities.types.TableColumn.parse_obj", "_as_gen/utilities.types.TableColumn.parse_raw", "_as_gen/utilities.types.TableColumn.schema", "_as_gen/utilities.types.TableColumn.schema_json", "_as_gen/utilities.types.TableColumn.unit", "_as_gen/utilities.types.TableColumn.update_forward_refs", "_as_gen/utilities.types.TableColumn.validate", "_as_gen/utilities.types.construct_template", "_as_gen/utilities.types.convert_np_type_to_sql", "api", "data_structures", "examples", "examples/Introduction", "examples/Poisson_Maps", "examples/databases", "getting_started", "index", "quickstart/configuration", "quickstart/install", "quickstart/overview", "user_guide", "user_guides/cross_matching", "user_guides/databases", "user_guides/logging", "user_guides/plots", "user_guides/psf", "user_guides/reduction_processes/astrometric_reduction", "user_guides/reduction_processes/custom_reductions", "user_guides/reduction_processes/object_type_reduction", "user_guides/reduction_processes/overview", "user_guides/reduction_processes/reduction_schema", "user_guides/schema", "user_guides/source_data"], "filenames": ["_as_gen/cross_reference.rst", "_as_gen/cross_reference.CrossMatchDatabase.rst", "_as_gen/cross_reference.CrossMatchDatabase.__init__.rst", "_as_gen/cross_reference.CrossMatchDatabase.add_catalog.rst", "_as_gen/cross_reference.CrossMatchDatabase.add_catalog_from_table.rst", "_as_gen/cross_reference.CrossMatchDatabase.build_meta_table.rst", "_as_gen/cross_reference.CrossMatchDatabase.check_meta.rst", "_as_gen/cross_reference.CrossMatchDatabase.chunk_db_operation.rst", "_as_gen/cross_reference.CrossMatchDatabase.chunk_db_table_operation.rst", "_as_gen/cross_reference.CrossMatchDatabase.connect.rst", "_as_gen/cross_reference.CrossMatchDatabase.correct_object_types.rst", "_as_gen/cross_reference.CrossMatchDatabase.cross_match.rst", "_as_gen/cross_reference.CrossMatchDatabase.drop_table.rst", "_as_gen/cross_reference.CrossMatchDatabase.from_file.rst", "_as_gen/cross_reference.CrossMatchDatabase.get_database.rst", "_as_gen/cross_reference.CrossMatchDatabase.has_catalog.rst", "_as_gen/cross_reference.CrossMatchDatabase.match_tables.rst", "_as_gen/cross_reference.CrossMatchDatabase.meta.rst", "_as_gen/cross_reference.CrossMatchDatabase.meta_add.rst", "_as_gen/cross_reference.CrossMatchDatabase.meta_remove.rst", "_as_gen/cross_reference.CrossMatchDatabase.meta_reset.rst", "_as_gen/cross_reference.CrossMatchDatabase.overwrite_schema.rst", "_as_gen/cross_reference.CrossMatchDatabase.path.rst", "_as_gen/cross_reference.CrossMatchDatabase.plot_matches.rst", "_as_gen/cross_reference.CrossMatchDatabase.query.rst", "_as_gen/cross_reference.CrossMatchDatabase.run_reduction.rst", "_as_gen/cross_reference.CrossMatchDatabase.schema.rst", "_as_gen/cross_reference.CrossMatchDatabase.score_matches.rst", "_as_gen/cross_reference.CrossMatchDatabase.standardize_coordinates.rst", "_as_gen/cross_reference.CrossMatchDatabase.tables.rst", "_as_gen/cross_reference.cross_match.rst", "_as_gen/cross_reference.cross_match_table.rst", "_as_gen/schema.rst", "_as_gen/schema.CMDSchema.rst", "_as_gen/schema.CMDSchema.__init__.rst", "_as_gen/schema.CMDSchema.catalog_schema.rst", "_as_gen/schema.CMDSchema.construct.rst", "_as_gen/schema.CMDSchema.copy.rst", "_as_gen/schema.CMDSchema.dict.rst", "_as_gen/schema.CMDSchema.from_orm.rst", "_as_gen/schema.CMDSchema.json.rst", "_as_gen/schema.CMDSchema.model_computed_fields.rst", "_as_gen/schema.CMDSchema.model_config.rst", "_as_gen/schema.CMDSchema.model_construct.rst", "_as_gen/schema.CMDSchema.model_copy.rst", "_as_gen/schema.CMDSchema.model_dump.rst", "_as_gen/schema.CMDSchema.model_dump_json.rst", "_as_gen/schema.CMDSchema.model_extra.rst", "_as_gen/schema.CMDSchema.model_fields.rst", "_as_gen/schema.CMDSchema.model_fields_set.rst", "_as_gen/schema.CMDSchema.model_json_schema.rst", "_as_gen/schema.CMDSchema.model_parametrized_name.rst", "_as_gen/schema.CMDSchema.model_post_init.rst", "_as_gen/schema.CMDSchema.model_rebuild.rst", "_as_gen/schema.CMDSchema.model_validate.rst", "_as_gen/schema.CMDSchema.model_validate_json.rst", "_as_gen/schema.CMDSchema.model_validate_strings.rst", "_as_gen/schema.CMDSchema.parse_file.rst", "_as_gen/schema.CMDSchema.parse_obj.rst", "_as_gen/schema.CMDSchema.parse_raw.rst", "_as_gen/schema.CMDSchema.read.rst", "_as_gen/schema.CMDSchema.schema.rst", "_as_gen/schema.CMDSchema.schema_json.rst", "_as_gen/schema.CMDSchema.table_schema.rst", "_as_gen/schema.CMDSchema.update_forward_refs.rst", "_as_gen/schema.CMDSchema.validate.rst", "_as_gen/schema.CMDSchema.write.rst", "_as_gen/schema.ColumnEntry.rst", "_as_gen/schema.ColumnEntry.__init__.rst", "_as_gen/schema.ReductionSchema.rst", "_as_gen/schema.ReductionSchema.__init__.rst", "_as_gen/schema.ReductionSchema.construct.rst", "_as_gen/schema.ReductionSchema.copy.rst", "_as_gen/schema.ReductionSchema.dict.rst", "_as_gen/schema.ReductionSchema.from_orm.rst", "_as_gen/schema.ReductionSchema.json.rst", "_as_gen/schema.ReductionSchema.model_computed_fields.rst", "_as_gen/schema.ReductionSchema.model_config.rst", "_as_gen/schema.ReductionSchema.model_construct.rst", "_as_gen/schema.ReductionSchema.model_copy.rst", "_as_gen/schema.ReductionSchema.model_dump.rst", "_as_gen/schema.ReductionSchema.model_dump_json.rst", "_as_gen/schema.ReductionSchema.model_extra.rst", "_as_gen/schema.ReductionSchema.model_fields.rst", "_as_gen/schema.ReductionSchema.model_fields_set.rst", "_as_gen/schema.ReductionSchema.model_json_schema.rst", "_as_gen/schema.ReductionSchema.model_parametrized_name.rst", "_as_gen/schema.ReductionSchema.model_post_init.rst", "_as_gen/schema.ReductionSchema.model_rebuild.rst", "_as_gen/schema.ReductionSchema.model_validate.rst", "_as_gen/schema.ReductionSchema.model_validate_json.rst", "_as_gen/schema.ReductionSchema.model_validate_strings.rst", "_as_gen/schema.ReductionSchema.parse_file.rst", "_as_gen/schema.ReductionSchema.parse_obj.rst", "_as_gen/schema.ReductionSchema.parse_raw.rst", "_as_gen/schema.ReductionSchema.read.rst", "_as_gen/schema.ReductionSchema.schema.rst", "_as_gen/schema.ReductionSchema.schema_json.rst", "_as_gen/schema.ReductionSchema.update_forward_refs.rst", "_as_gen/schema.ReductionSchema.validate.rst", "_as_gen/schema.ReductionSchema.write.rst", "_as_gen/schema.Schema.rst", "_as_gen/schema.Schema.__init__.rst", "_as_gen/schema.Schema.construct.rst", "_as_gen/schema.Schema.copy.rst", "_as_gen/schema.Schema.dict.rst", "_as_gen/schema.Schema.from_orm.rst", "_as_gen/schema.Schema.json.rst", "_as_gen/schema.Schema.model_computed_fields.rst", "_as_gen/schema.Schema.model_config.rst", "_as_gen/schema.Schema.model_construct.rst", "_as_gen/schema.Schema.model_copy.rst", "_as_gen/schema.Schema.model_dump.rst", "_as_gen/schema.Schema.model_dump_json.rst", "_as_gen/schema.Schema.model_extra.rst", "_as_gen/schema.Schema.model_fields.rst", "_as_gen/schema.Schema.model_fields_set.rst", "_as_gen/schema.Schema.model_json_schema.rst", "_as_gen/schema.Schema.model_parametrized_name.rst", "_as_gen/schema.Schema.model_post_init.rst", "_as_gen/schema.Schema.model_rebuild.rst", "_as_gen/schema.Schema.model_validate.rst", "_as_gen/schema.Schema.model_validate_json.rst", "_as_gen/schema.Schema.model_validate_strings.rst", "_as_gen/schema.Schema.parse_file.rst", "_as_gen/schema.Schema.parse_obj.rst", "_as_gen/schema.Schema.parse_raw.rst", "_as_gen/schema.Schema.read.rst", "_as_gen/schema.Schema.schema.rst", "_as_gen/schema.Schema.schema_json.rst", "_as_gen/schema.Schema.update_forward_refs.rst", "_as_gen/schema.Schema.validate.rst", "_as_gen/schema.Schema.write.rst", "_as_gen/schema.SchemaEntry.rst", "_as_gen/schema.SchemaEntry.__init__.rst", "_as_gen/schema.SchemaRegistry.rst", "_as_gen/schema.SchemaRegistry.__init__.rst", "_as_gen/schema.SchemaRegistry.add.rst", "_as_gen/schema.SchemaRegistry.as_list.rst", "_as_gen/schema.SchemaRegistry.clear.rst", "_as_gen/schema.SchemaRegistry.copy.rst", "_as_gen/schema.SchemaRegistry.from_directory.rst", "_as_gen/schema.SchemaRegistry.fromkeys.rst", "_as_gen/schema.SchemaRegistry.get.rst", "_as_gen/schema.SchemaRegistry.items.rst", "_as_gen/schema.SchemaRegistry.keys.rst", "_as_gen/schema.SchemaRegistry.pop.rst", "_as_gen/schema.SchemaRegistry.popitem.rst", "_as_gen/schema.SchemaRegistry.setdefault.rst", "_as_gen/schema.SchemaRegistry.update.rst", "_as_gen/schema.SchemaRegistry.values.rst", "_as_gen/schema.SourceTableSchema.rst", "_as_gen/schema.SourceTableSchema.DEC.rst", "_as_gen/schema.SourceTableSchema.DEC_ERR.rst", "_as_gen/schema.SourceTableSchema.GAL_B.rst", "_as_gen/schema.SourceTableSchema.GAL_B_ERR.rst", "_as_gen/schema.SourceTableSchema.GAL_L.rst", "_as_gen/schema.SourceTableSchema.GAL_L_ERR.rst", "_as_gen/schema.SourceTableSchema.NAME.rst", "_as_gen/schema.SourceTableSchema.RA.rst", "_as_gen/schema.SourceTableSchema.RA_ERR.rst", "_as_gen/schema.SourceTableSchema.SEP.rst", "_as_gen/schema.SourceTableSchema.TYPE.rst", "_as_gen/schema.SourceTableSchema.Z.rst", "_as_gen/schema.SourceTableSchema.__init__.rst", "_as_gen/schema.SourceTableSchema.available_coordinate_frames.rst", "_as_gen/schema.SourceTableSchema.column_map.rst", "_as_gen/schema.SourceTableSchema.construct.rst", "_as_gen/schema.SourceTableSchema.coordinate_columns.rst", "_as_gen/schema.SourceTableSchema.coordinate_frame.rst", "_as_gen/schema.SourceTableSchema.coordinate_system.rst", "_as_gen/schema.SourceTableSchema.copy.rst", "_as_gen/schema.SourceTableSchema.default_coord_system.rst", "_as_gen/schema.SourceTableSchema.dict.rst", "_as_gen/schema.SourceTableSchema.from_orm.rst", "_as_gen/schema.SourceTableSchema.from_table.rst", "_as_gen/schema.SourceTableSchema.guess_coordinate_standard_error_struct.rst", "_as_gen/schema.SourceTableSchema.json.rst", "_as_gen/schema.SourceTableSchema.model_computed_fields.rst", "_as_gen/schema.SourceTableSchema.model_config.rst", "_as_gen/schema.SourceTableSchema.model_construct.rst", "_as_gen/schema.SourceTableSchema.model_copy.rst", "_as_gen/schema.SourceTableSchema.model_dump.rst", "_as_gen/schema.SourceTableSchema.model_dump_json.rst", "_as_gen/schema.SourceTableSchema.model_extra.rst", "_as_gen/schema.SourceTableSchema.model_fields.rst", "_as_gen/schema.SourceTableSchema.model_fields_set.rst", "_as_gen/schema.SourceTableSchema.model_json_schema.rst", "_as_gen/schema.SourceTableSchema.model_parametrized_name.rst", "_as_gen/schema.SourceTableSchema.model_post_init.rst", "_as_gen/schema.SourceTableSchema.model_rebuild.rst", "_as_gen/schema.SourceTableSchema.model_validate.rst", "_as_gen/schema.SourceTableSchema.model_validate_json.rst", "_as_gen/schema.SourceTableSchema.model_validate_strings.rst", "_as_gen/schema.SourceTableSchema.object_map.rst", "_as_gen/schema.SourceTableSchema.object_type_separator.rst", "_as_gen/schema.SourceTableSchema.parse_file.rst", "_as_gen/schema.SourceTableSchema.parse_obj.rst", "_as_gen/schema.SourceTableSchema.parse_raw.rst", "_as_gen/schema.SourceTableSchema.read.rst", "_as_gen/schema.SourceTableSchema.schema.rst", "_as_gen/schema.SourceTableSchema.schema_json.rst", "_as_gen/schema.SourceTableSchema.settings.rst", "_as_gen/schema.SourceTableSchema.update_forward_refs.rst", "_as_gen/schema.SourceTableSchema.validate.rst", "_as_gen/schema.SourceTableSchema.write.rst", "_as_gen/stats.gaussian_process.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.__init__.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.anisotropic.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.bounds.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.clone_with_theta.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.diag.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.get_params.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.hyperparameter_length_scale.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.hyperparameters.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.is_stationary.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.n_dims.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.requires_vector_input.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.set_params.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.theta.rst", "_as_gen/stats.map_regression.rst", "_as_gen/stats.map_regression.BayesianPoissonMapRegressor.rst", "_as_gen/stats.map_regression.BayesianPoissonMapRegressor.__init__.rst", "_as_gen/stats.map_regression.BayesianPoissonMapRegressor.build_map_MAP.rst", "_as_gen/stats.map_regression.KNNeighborMapRegressor.rst", "_as_gen/stats.map_regression.KNNeighborMapRegressor.__init__.rst", "_as_gen/stats.map_regression.KNNeighborMapRegressor.cross_validate.rst", "_as_gen/stats.map_regression.KNNeighborMapRegressor.default_training_fraction.rst", "_as_gen/stats.map_regression.KNNeighborMapRegressor.hyperparameters.rst", "_as_gen/stats.map_regression.KNNeighborMapRegressor.regressor_parameters.rst", "_as_gen/stats.map_regression.KNNeighborMapRegressor.train_model.rst", "_as_gen/stats.map_regression.PoissonMapRegressor.rst", "_as_gen/stats.map_regression.PoissonMapRegressor.__init__.rst", "_as_gen/stats.map_regression.PoissonMapRegressor.cross_validate.rst", "_as_gen/stats.map_regression.PoissonMapRegressor.default_training_fraction.rst", "_as_gen/stats.map_regression.PoissonMapRegressor.hyperparameters.rst", "_as_gen/stats.map_regression.PoissonMapRegressor.regressor_parameters.rst", "_as_gen/stats.map_regression.PoissonMapRegressor.train_model.rst", "_as_gen/stats.map_regression.RNNeighborMapRegressor.rst", "_as_gen/stats.map_regression.RNNeighborMapRegressor.__init__.rst", "_as_gen/stats.map_regression.RNNeighborMapRegressor.cross_validate.rst", "_as_gen/stats.map_regression.RNNeighborMapRegressor.default_training_fraction.rst", "_as_gen/stats.map_regression.RNNeighborMapRegressor.hyperparameters.rst", "_as_gen/stats.map_regression.RNNeighborMapRegressor.regressor_parameters.rst", "_as_gen/stats.map_regression.RNNeighborMapRegressor.train_model.rst", "_as_gen/stats.map_regression.train_map_regressor.rst", "_as_gen/stats.utilities.rst", "_as_gen/stats.utilities.uniform_sample_spherical.rst", "_as_gen/structures.databases.rst", "_as_gen/structures.databases.DBRegistry.rst", "_as_gen/structures.databases.DBRegistry.__init__.rst", "_as_gen/structures.databases.DBRegistry.add.rst", "_as_gen/structures.databases.DBRegistry.as_list.rst", "_as_gen/structures.databases.DBRegistry.clear.rst", "_as_gen/structures.databases.DBRegistry.copy.rst", "_as_gen/structures.databases.DBRegistry.fromkeys.rst", "_as_gen/structures.databases.DBRegistry.get.rst", "_as_gen/structures.databases.DBRegistry.items.rst", "_as_gen/structures.databases.DBRegistry.keys.rst", "_as_gen/structures.databases.DBRegistry.locals.rst", "_as_gen/structures.databases.DBRegistry.names.rst", "_as_gen/structures.databases.DBRegistry.pop.rst", "_as_gen/structures.databases.DBRegistry.popitem.rst", "_as_gen/structures.databases.DBRegistry.remotes.rst", "_as_gen/structures.databases.DBRegistry.setdefault.rst", "_as_gen/structures.databases.DBRegistry.update.rst", "_as_gen/structures.databases.DBRegistry.values.rst", "_as_gen/structures.databases.LocalDatabase.rst", "_as_gen/structures.databases.LocalDatabase.__init__.rst", "_as_gen/structures.databases.LocalDatabase.add_sources_to_poisson.rst", "_as_gen/structures.databases.LocalDatabase.correct_query_output.rst", "_as_gen/structures.databases.LocalDatabase.count.rst", "_as_gen/structures.databases.LocalDatabase.default_correct_query_output.rst", "_as_gen/structures.databases.LocalDatabase.default_poisson_atlas_path.rst", "_as_gen/structures.databases.LocalDatabase.default_query_config.rst", "_as_gen/structures.databases.LocalDatabase.default_query_schema.rst", "_as_gen/structures.databases.LocalDatabase.name.rst", "_as_gen/structures.databases.LocalDatabase.poisson_atlas.rst", "_as_gen/structures.databases.LocalDatabase.query_config.rst", "_as_gen/structures.databases.LocalDatabase.query_radius.rst", "_as_gen/structures.databases.LocalDatabase.query_schema.rst", "_as_gen/structures.databases.LocalDatabase.random_sample_count.rst", "_as_gen/structures.databases.LocalDatabase.register.rst", "_as_gen/structures.databases.LocalDatabase.source_match.rst", "_as_gen/structures.databases.LocalDatabase.source_match_memory.rst", "_as_gen/structures.databases.NED.rst", "_as_gen/structures.databases.NED.TIMEOUT.rst", "_as_gen/structures.databases.NED.__init__.rst", "_as_gen/structures.databases.NED.add_sources_to_poisson.rst", "_as_gen/structures.databases.NED.config_ned.rst", "_as_gen/structures.databases.NED.correct_query_output.rst", "_as_gen/structures.databases.NED.count.rst", "_as_gen/structures.databases.NED.default_correct_query_output.rst", "_as_gen/structures.databases.NED.default_poisson_atlas_path.rst", "_as_gen/structures.databases.NED.default_query_config.rst", "_as_gen/structures.databases.NED.default_query_schema.rst", "_as_gen/structures.databases.NED.get_image_list.rst", "_as_gen/structures.databases.NED.get_table.rst", "_as_gen/structures.databases.NED.name.rst", "_as_gen/structures.databases.NED.poisson_atlas.rst", "_as_gen/structures.databases.NED.query_config.rst", "_as_gen/structures.databases.NED.query_object.rst", "_as_gen/structures.databases.NED.query_radius.rst", "_as_gen/structures.databases.NED.query_schema.rst", "_as_gen/structures.databases.NED.random_sample_count.rst", "_as_gen/structures.databases.NED.register.rst", "_as_gen/structures.databases.NED.source_match.rst", "_as_gen/structures.databases.RemoteDatabase.rst", "_as_gen/structures.databases.RemoteDatabase.__init__.rst", "_as_gen/structures.databases.RemoteDatabase.add_sources_to_poisson.rst", "_as_gen/structures.databases.RemoteDatabase.correct_query_output.rst", "_as_gen/structures.databases.RemoteDatabase.count.rst", "_as_gen/structures.databases.RemoteDatabase.default_correct_query_output.rst", "_as_gen/structures.databases.RemoteDatabase.default_poisson_atlas_path.rst", "_as_gen/structures.databases.RemoteDatabase.default_query_config.rst", "_as_gen/structures.databases.RemoteDatabase.default_query_schema.rst", "_as_gen/structures.databases.RemoteDatabase.name.rst", "_as_gen/structures.databases.RemoteDatabase.poisson_atlas.rst", "_as_gen/structures.databases.RemoteDatabase.query_config.rst", "_as_gen/structures.databases.RemoteDatabase.query_radius.rst", "_as_gen/structures.databases.RemoteDatabase.query_schema.rst", "_as_gen/structures.databases.RemoteDatabase.random_sample_count.rst", "_as_gen/structures.databases.RemoteDatabase.register.rst", "_as_gen/structures.databases.RemoteDatabase.source_match.rst", "_as_gen/structures.databases.SIMBAD.rst", "_as_gen/structures.databases.SIMBAD.EXTRA_COLUMNS.rst", "_as_gen/structures.databases.SIMBAD.REMOVED_COLUMNS.rst", "_as_gen/structures.databases.SIMBAD.ROW_LIMIT.rst", "_as_gen/structures.databases.SIMBAD.TIMEOUT.rst", "_as_gen/structures.databases.SIMBAD.__init__.rst", "_as_gen/structures.databases.SIMBAD.add_sources_to_poisson.rst", "_as_gen/structures.databases.SIMBAD.available_tables.rst", "_as_gen/structures.databases.SIMBAD.clear_cache.rst", "_as_gen/structures.databases.SIMBAD.config_simbad.rst", "_as_gen/structures.databases.SIMBAD.correct_query_output.rst", "_as_gen/structures.databases.SIMBAD.count.rst", "_as_gen/structures.databases.SIMBAD.default_correct_query_output.rst", "_as_gen/structures.databases.SIMBAD.default_poisson_atlas_path.rst", "_as_gen/structures.databases.SIMBAD.default_query_config.rst", "_as_gen/structures.databases.SIMBAD.default_query_schema.rst", "_as_gen/structures.databases.SIMBAD.list_columns.rst", "_as_gen/structures.databases.SIMBAD.list_linked_tables.rst", "_as_gen/structures.databases.SIMBAD.name.rst", "_as_gen/structures.databases.SIMBAD.poisson_atlas.rst", "_as_gen/structures.databases.SIMBAD.query_config.rst", "_as_gen/structures.databases.SIMBAD.query_object.rst", "_as_gen/structures.databases.SIMBAD.query_radius.rst", "_as_gen/structures.databases.SIMBAD.query_schema.rst", "_as_gen/structures.databases.SIMBAD.query_tap.rst", "_as_gen/structures.databases.SIMBAD.random_sample_count.rst", "_as_gen/structures.databases.SIMBAD.register.rst", "_as_gen/structures.databases.SIMBAD.source_match.rst", "_as_gen/structures.databases.SourceDatabase.rst", "_as_gen/structures.databases.SourceDatabase.__init__.rst", "_as_gen/structures.databases.SourceDatabase.add_sources_to_poisson.rst", "_as_gen/structures.databases.SourceDatabase.correct_query_output.rst", "_as_gen/structures.databases.SourceDatabase.count.rst", "_as_gen/structures.databases.SourceDatabase.default_correct_query_output.rst", "_as_gen/structures.databases.SourceDatabase.default_poisson_atlas_path.rst", "_as_gen/structures.databases.SourceDatabase.default_query_config.rst", "_as_gen/structures.databases.SourceDatabase.default_query_schema.rst", "_as_gen/structures.databases.SourceDatabase.name.rst", "_as_gen/structures.databases.SourceDatabase.poisson_atlas.rst", "_as_gen/structures.databases.SourceDatabase.query_config.rst", "_as_gen/structures.databases.SourceDatabase.query_radius.rst", "_as_gen/structures.databases.SourceDatabase.query_schema.rst", "_as_gen/structures.databases.SourceDatabase.random_sample_count.rst", "_as_gen/structures.databases.SourceDatabase.register.rst", "_as_gen/structures.databases.add_points_to_poisson_map.rst", "_as_gen/structures.databases.builtin_databases.rst", "_as_gen/structures.databases.get_database.rst", "_as_gen/structures.databases.get_poisson_atlas.rst", "_as_gen/structures.databases.get_poisson_path.rst", "_as_gen/structures.map.rst", "_as_gen/structures.map.Map.rst", "_as_gen/structures.map.Map.__init__.rst", "_as_gen/structures.map.Map.coordinate_frame.rst", "_as_gen/structures.map.Map.data.rst", "_as_gen/structures.map.Map.get_healpix_id.rst", "_as_gen/structures.map.Map.pixel_positions.rst", "_as_gen/structures.map.Map.plot.rst", "_as_gen/structures.map.Map.transform_map_coordinates.rst", "_as_gen/structures.map.MapAtlas.rst", "_as_gen/structures.map.MapAtlas.__init__.rst", "_as_gen/structures.map.MapAtlas.coordinate_frame.rst", "_as_gen/structures.map.MapAtlas.generate.rst", "_as_gen/structures.map.MapAtlas.get_map.rst", "_as_gen/structures.map.MapAtlas.has_maps.rst", "_as_gen/structures.map.MapAtlas.hdus.rst", "_as_gen/structures.map.MapAtlas.map_names.rst", "_as_gen/structures.map.MapAtlas.pixel_positions.rst", "_as_gen/structures.map.MapAtlas.remove.rst", "_as_gen/structures.map.MapAtlas.reshape_healpix.rst", "_as_gen/structures.map.PoissonAtlas.rst", "_as_gen/structures.map.PoissonAtlas.COUNTS.rst", "_as_gen/structures.map.PoissonAtlas.__init__.rst", "_as_gen/structures.map.PoissonAtlas.append_to_fits.rst", "_as_gen/structures.map.PoissonAtlas.build_poisson_map.rst", "_as_gen/structures.map.PoissonAtlas.build_poisson_map_KNN.rst", "_as_gen/structures.map.PoissonAtlas.build_poisson_map_MAP.rst", "_as_gen/structures.map.PoissonAtlas.build_poisson_map_RNN.rst", "_as_gen/structures.map.PoissonAtlas.build_poisson_map_regressor.rst", "_as_gen/structures.map.PoissonAtlas.build_poisson_maps.rst", "_as_gen/structures.map.PoissonAtlas.coordinate_frame.rst", "_as_gen/structures.map.PoissonAtlas.generate.rst", "_as_gen/structures.map.PoissonAtlas.get_map.rst", "_as_gen/structures.map.PoissonAtlas.get_points.rst", "_as_gen/structures.map.PoissonAtlas.has_maps.rst", "_as_gen/structures.map.PoissonAtlas.hdus.rst", "_as_gen/structures.map.PoissonAtlas.map_names.rst", "_as_gen/structures.map.PoissonAtlas.pixel_positions.rst", "_as_gen/structures.map.PoissonAtlas.remove.rst", "_as_gen/structures.map.PoissonAtlas.reset.rst", "_as_gen/structures.map.PoissonAtlas.reshape_healpix.rst", "_as_gen/structures.map.PoissonAtlas.sample_from_database.rst", "_as_gen/structures.map.StatAtlas.rst", "_as_gen/structures.map.StatAtlas.COUNTS.rst", "_as_gen/structures.map.StatAtlas.__init__.rst", "_as_gen/structures.map.StatAtlas.append_to_fits.rst", "_as_gen/structures.map.StatAtlas.coordinate_frame.rst", "_as_gen/structures.map.StatAtlas.generate.rst", "_as_gen/structures.map.StatAtlas.get_map.rst", "_as_gen/structures.map.StatAtlas.get_points.rst", "_as_gen/structures.map.StatAtlas.has_maps.rst", "_as_gen/structures.map.StatAtlas.hdus.rst", "_as_gen/structures.map.StatAtlas.map_names.rst", "_as_gen/structures.map.StatAtlas.pixel_positions.rst", "_as_gen/structures.map.StatAtlas.remove.rst", "_as_gen/structures.map.StatAtlas.reset.rst", "_as_gen/structures.map.StatAtlas.reshape_healpix.rst", "_as_gen/structures.map.StatAtlas.sample_from_database.rst", "_as_gen/structures.reduction.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.CATALOG_ERR.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.DATABASE_ERR.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.__init__.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.construct.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.copy.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.cross_match_database.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.debug_flag.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.dict.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.fill_unknown.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.from_orm.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.generate_operator.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.generate_sql_query.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.json.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.model_computed_fields.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.model_config.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.model_construct.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.model_copy.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.model_dump.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.model_dump_json.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.model_extra.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.model_fields.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.model_fields_set.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.model_json_schema.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.model_parametrized_name.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.model_post_init.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.model_rebuild.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.model_validate.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.model_validate_json.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.model_validate_strings.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.obj_col.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.op_tmp_table.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.parse_file.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.parse_obj.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.parse_raw.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.prior.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.proc_tmp_table.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.process_name.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.schema.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.schema_json.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.score_col.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.settings_flag.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.settings_header.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.table.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.update_forward_refs.rst", "_as_gen/structures.reduction.AstrometricReductionProcess.validate.rst", "_as_gen/structures.reduction.ReductionProcess.rst", "_as_gen/structures.reduction.ReductionProcess.__init__.rst", "_as_gen/structures.reduction.ReductionProcess.construct.rst", "_as_gen/structures.reduction.ReductionProcess.copy.rst", "_as_gen/structures.reduction.ReductionProcess.cross_match_database.rst", "_as_gen/structures.reduction.ReductionProcess.debug_flag.rst", "_as_gen/structures.reduction.ReductionProcess.dict.rst", "_as_gen/structures.reduction.ReductionProcess.fill_unknown.rst", "_as_gen/structures.reduction.ReductionProcess.from_orm.rst", "_as_gen/structures.reduction.ReductionProcess.generate_operator.rst", "_as_gen/structures.reduction.ReductionProcess.generate_sql_query.rst", "_as_gen/structures.reduction.ReductionProcess.json.rst", "_as_gen/structures.reduction.ReductionProcess.model_computed_fields.rst", "_as_gen/structures.reduction.ReductionProcess.model_config.rst", "_as_gen/structures.reduction.ReductionProcess.model_construct.rst", "_as_gen/structures.reduction.ReductionProcess.model_copy.rst", "_as_gen/structures.reduction.ReductionProcess.model_dump.rst", "_as_gen/structures.reduction.ReductionProcess.model_dump_json.rst", "_as_gen/structures.reduction.ReductionProcess.model_extra.rst", "_as_gen/structures.reduction.ReductionProcess.model_fields.rst", "_as_gen/structures.reduction.ReductionProcess.model_fields_set.rst", "_as_gen/structures.reduction.ReductionProcess.model_json_schema.rst", "_as_gen/structures.reduction.ReductionProcess.model_parametrized_name.rst", "_as_gen/structures.reduction.ReductionProcess.model_post_init.rst", "_as_gen/structures.reduction.ReductionProcess.model_rebuild.rst", "_as_gen/structures.reduction.ReductionProcess.model_validate.rst", "_as_gen/structures.reduction.ReductionProcess.model_validate_json.rst", "_as_gen/structures.reduction.ReductionProcess.model_validate_strings.rst", "_as_gen/structures.reduction.ReductionProcess.obj_col.rst", "_as_gen/structures.reduction.ReductionProcess.op_tmp_table.rst", "_as_gen/structures.reduction.ReductionProcess.parse_file.rst", "_as_gen/structures.reduction.ReductionProcess.parse_obj.rst", "_as_gen/structures.reduction.ReductionProcess.parse_raw.rst", "_as_gen/structures.reduction.ReductionProcess.proc_tmp_table.rst", "_as_gen/structures.reduction.ReductionProcess.process_name.rst", "_as_gen/structures.reduction.ReductionProcess.schema.rst", "_as_gen/structures.reduction.ReductionProcess.schema_json.rst", "_as_gen/structures.reduction.ReductionProcess.score_col.rst", "_as_gen/structures.reduction.ReductionProcess.settings_flag.rst", "_as_gen/structures.reduction.ReductionProcess.settings_header.rst", "_as_gen/structures.reduction.ReductionProcess.table.rst", "_as_gen/structures.reduction.ReductionProcess.update_forward_refs.rst", "_as_gen/structures.reduction.ReductionProcess.validate.rst", "_as_gen/structures.table.rst", "_as_gen/structures.table.CoordinateColumn.rst", "_as_gen/structures.table.CoordinateColumn.__init__.rst", "_as_gen/structures.table.SchemaColumn.rst", "_as_gen/structures.table.SchemaColumn.__init__.rst", "_as_gen/structures.table.SourceTable.rst", "_as_gen/structures.table.SourceTable.ColumnClass.rst", "_as_gen/structures.table.SourceTable.DEC.rst", "_as_gen/structures.table.SourceTable.DEC_ERR.rst", "_as_gen/structures.table.SourceTable.GAL_B.rst", "_as_gen/structures.table.SourceTable.GAL_B_ERR.rst", "_as_gen/structures.table.SourceTable.GAL_L.rst", "_as_gen/structures.table.SourceTable.GAL_L_ERR.rst", "_as_gen/structures.table.SourceTable.NAME.rst", "_as_gen/structures.table.SourceTable.RA.rst", "_as_gen/structures.table.SourceTable.RA_ERR.rst", "_as_gen/structures.table.SourceTable.SEP.rst", "_as_gen/structures.table.SourceTable.TYPE.rst", "_as_gen/structures.table.SourceTable.Z.rst", "_as_gen/structures.table.SourceTable.__init__.rst", "_as_gen/structures.table.SourceTable.add_column.rst", "_as_gen/structures.table.SourceTable.add_columns.rst", "_as_gen/structures.table.SourceTable.add_index.rst", "_as_gen/structures.table.SourceTable.add_row.rst", "_as_gen/structures.table.SourceTable.append_to_fits.rst", "_as_gen/structures.table.SourceTable.append_to_sql.rst", "_as_gen/structures.table.SourceTable.argsort.rst", "_as_gen/structures.table.SourceTable.as_array.rst", "_as_gen/structures.table.SourceTable.colnames.rst", "_as_gen/structures.table.SourceTable.convert_bytestring_to_unicode.rst", "_as_gen/structures.table.SourceTable.convert_unicode_to_bytestring.rst", "_as_gen/structures.table.SourceTable.copy.rst", "_as_gen/structures.table.SourceTable.count_types.rst", "_as_gen/structures.table.SourceTable.dtype.rst", "_as_gen/structures.table.SourceTable.field.rst", "_as_gen/structures.table.SourceTable.filled.rst", "_as_gen/structures.table.SourceTable.from_pandas.rst", "_as_gen/structures.table.SourceTable.generate_schema.rst", "_as_gen/structures.table.SourceTable.get_coordinates.rst", "_as_gen/structures.table.SourceTable.get_formatted_types.rst", "_as_gen/structures.table.SourceTable.group_by.rst", "_as_gen/structures.table.SourceTable.groups.rst", "_as_gen/structures.table.SourceTable.has_masked_columns.rst", "_as_gen/structures.table.SourceTable.has_masked_values.rst", "_as_gen/structures.table.SourceTable.has_mixin_columns.rst", "_as_gen/structures.table.SourceTable.iloc.rst", "_as_gen/structures.table.SourceTable.index_column.rst", "_as_gen/structures.table.SourceTable.index_mode.rst", "_as_gen/structures.table.SourceTable.indices.rst", "_as_gen/structures.table.SourceTable.info.rst", "_as_gen/structures.table.SourceTable.insert_row.rst", "_as_gen/structures.table.SourceTable.items.rst", "_as_gen/structures.table.SourceTable.itercols.rst", "_as_gen/structures.table.SourceTable.iterrows.rst", "_as_gen/structures.table.SourceTable.keep_columns.rst", "_as_gen/structures.table.SourceTable.keys.rst", "_as_gen/structures.table.SourceTable.lat.rst", "_as_gen/structures.table.SourceTable.loc.rst", "_as_gen/structures.table.SourceTable.loc_indices.rst", "_as_gen/structures.table.SourceTable.lon.rst", "_as_gen/structures.table.SourceTable.mask.rst", "_as_gen/structures.table.SourceTable.masked.rst", "_as_gen/structures.table.SourceTable.meta.rst", "_as_gen/structures.table.SourceTable.more.rst", "_as_gen/structures.table.SourceTable.pformat.rst", "_as_gen/structures.table.SourceTable.pformat_all.rst", "_as_gen/structures.table.SourceTable.pprint.rst", "_as_gen/structures.table.SourceTable.pprint_all.rst", "_as_gen/structures.table.SourceTable.pprint_exclude_names.rst", "_as_gen/structures.table.SourceTable.pprint_include_names.rst", "_as_gen/structures.table.SourceTable.read.rst", "_as_gen/structures.table.SourceTable.remove_column.rst", "_as_gen/structures.table.SourceTable.remove_columns.rst", "_as_gen/structures.table.SourceTable.remove_indices.rst", "_as_gen/structures.table.SourceTable.remove_row.rst", "_as_gen/structures.table.SourceTable.remove_rows.rst", "_as_gen/structures.table.SourceTable.rename_column.rst", "_as_gen/structures.table.SourceTable.rename_columns.rst", "_as_gen/structures.table.SourceTable.replace_column.rst", "_as_gen/structures.table.SourceTable.reverse.rst", "_as_gen/structures.table.SourceTable.round.rst", "_as_gen/structures.table.SourceTable.schema.rst", "_as_gen/structures.table.SourceTable.setdefault.rst", "_as_gen/structures.table.SourceTable.show_in_browser.rst", "_as_gen/structures.table.SourceTable.show_in_notebook.rst", "_as_gen/structures.table.SourceTable.sort.rst", "_as_gen/structures.table.SourceTable.to_pandas.rst", "_as_gen/structures.table.SourceTable.update.rst", "_as_gen/structures.table.SourceTable.values.rst", "_as_gen/structures.table.SourceTable.values_equal.rst", "_as_gen/structures.table.SourceTable.write.rst", "_as_gen/structures.table.correct_column_types.rst", "_as_gen/structures.table.format_table_types.rst", "_as_gen/structures.table.load.rst", "_as_gen/utilities.core.rst", "_as_gen/utilities.core.AttrDict.rst", "_as_gen/utilities.core.AttrDict.__init__.rst", "_as_gen/utilities.core.AttrDict.clean.rst", "_as_gen/utilities.core.AttrDict.clean_types.rst", "_as_gen/utilities.core.AttrDict.clear.rst", "_as_gen/utilities.core.AttrDict.copy.rst", "_as_gen/utilities.core.AttrDict.from_nested_dict.rst", "_as_gen/utilities.core.AttrDict.fromkeys.rst", "_as_gen/utilities.core.AttrDict.get.rst", "_as_gen/utilities.core.AttrDict.items.rst", "_as_gen/utilities.core.AttrDict.keys.rst", "_as_gen/utilities.core.AttrDict.pop.rst", "_as_gen/utilities.core.AttrDict.popitem.rst", "_as_gen/utilities.core.AttrDict.setdefault.rst", "_as_gen/utilities.core.AttrDict.update.rst", "_as_gen/utilities.core.AttrDict.values.rst", "_as_gen/utilities.core.YAMLConfiguration.rst", "_as_gen/utilities.core.YAMLConfiguration.__init__.rst", "_as_gen/utilities.core.YAMLConfiguration.config.rst", "_as_gen/utilities.core.YAMLConfiguration.load.rst", "_as_gen/utilities.core.YAMLConfiguration.load_from_path.rst", "_as_gen/utilities.core.YAMLConfiguration.reload.rst", "_as_gen/utilities.core.YAMLConfiguration.set_on_disk.rst", "_as_gen/utilities.core.YAMLConfiguration.set_param.rst", "_as_gen/utilities.core.enforce_units.rst", "_as_gen/utilities.core.find_descriptors.rst", "_as_gen/utilities.core.getFromDict.rst", "_as_gen/utilities.core.merge_dicts.rst", "_as_gen/utilities.core.produce_dict_heading.rst", "_as_gen/utilities.core.rgetattr.rst", "_as_gen/utilities.core.rsetattr.rst", "_as_gen/utilities.core.setInDict.rst", "_as_gen/utilities.logging.rst", "_as_gen/utilities.plot.rst", "_as_gen/utilities.plot.get_hips_image.rst", "_as_gen/utilities.plot.plot_healpix.rst", "_as_gen/utilities.plot.plot_hips.rst", "_as_gen/utilities.plot.set_style.rst", "_as_gen/utilities.sql.rst", "_as_gen/utilities.sql.chunk_sql_query_operation.rst", "_as_gen/utilities.sql.chunk_sql_table_operation.rst", "_as_gen/utilities.text.rst", "_as_gen/utilities.text.get_package_version.rst", "_as_gen/utilities.text.print_cli_header.rst", "_as_gen/utilities.text.print_version.rst", "_as_gen/utilities.types.rst", "_as_gen/utilities.types.ColumnMap.rst", "_as_gen/utilities.types.ColumnMap.DEC.rst", "_as_gen/utilities.types.ColumnMap.DEC_ERR.rst", "_as_gen/utilities.types.ColumnMap.GAL_B.rst", "_as_gen/utilities.types.ColumnMap.GAL_B_ERR.rst", "_as_gen/utilities.types.ColumnMap.GAL_L.rst", "_as_gen/utilities.types.ColumnMap.GAL_L_ERR.rst", "_as_gen/utilities.types.ColumnMap.NAME.rst", "_as_gen/utilities.types.ColumnMap.RA.rst", "_as_gen/utilities.types.ColumnMap.RA_ERR.rst", "_as_gen/utilities.types.ColumnMap.SEP.rst", "_as_gen/utilities.types.ColumnMap.TYPE.rst", "_as_gen/utilities.types.ColumnMap.Z.rst", "_as_gen/utilities.types.ColumnMap.__init__.rst", "_as_gen/utilities.types.ColumnMap.construct.rst", "_as_gen/utilities.types.ColumnMap.copy.rst", "_as_gen/utilities.types.ColumnMap.dict.rst", "_as_gen/utilities.types.ColumnMap.from_orm.rst", "_as_gen/utilities.types.ColumnMap.json.rst", "_as_gen/utilities.types.ColumnMap.model_computed_fields.rst", "_as_gen/utilities.types.ColumnMap.model_config.rst", "_as_gen/utilities.types.ColumnMap.model_construct.rst", "_as_gen/utilities.types.ColumnMap.model_copy.rst", "_as_gen/utilities.types.ColumnMap.model_dump.rst", "_as_gen/utilities.types.ColumnMap.model_dump_json.rst", "_as_gen/utilities.types.ColumnMap.model_extra.rst", "_as_gen/utilities.types.ColumnMap.model_fields.rst", "_as_gen/utilities.types.ColumnMap.model_fields_set.rst", "_as_gen/utilities.types.ColumnMap.model_json_schema.rst", "_as_gen/utilities.types.ColumnMap.model_parametrized_name.rst", "_as_gen/utilities.types.ColumnMap.model_post_init.rst", "_as_gen/utilities.types.ColumnMap.model_rebuild.rst", "_as_gen/utilities.types.ColumnMap.model_validate.rst", "_as_gen/utilities.types.ColumnMap.model_validate_json.rst", "_as_gen/utilities.types.ColumnMap.model_validate_strings.rst", "_as_gen/utilities.types.ColumnMap.parse_file.rst", "_as_gen/utilities.types.ColumnMap.parse_obj.rst", "_as_gen/utilities.types.ColumnMap.parse_raw.rst", "_as_gen/utilities.types.ColumnMap.schema.rst", "_as_gen/utilities.types.ColumnMap.schema_json.rst", "_as_gen/utilities.types.ColumnMap.search_inverse.rst", "_as_gen/utilities.types.ColumnMap.update_forward_refs.rst", "_as_gen/utilities.types.ColumnMap.validate.rst", "_as_gen/utilities.types.ColumnMap.validate_table_column_no_unit.rst", "_as_gen/utilities.types.ColumnMap.validate_table_column_unit.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.__init__.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.base_column.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.construct.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.copy.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.dict.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.error_column.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.error_convert_to_std.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.error_value.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.from_orm.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.json.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_computed_fields.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_config.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_construct.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_copy.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_dump.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_dump_json.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_extra.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_fields.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_fields_set.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_json_schema.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_parametrized_name.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_post_init.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_rebuild.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_validate.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_validate_json.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_validate_strings.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.parse_file.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.parse_obj.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.parse_raw.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.schema.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.schema_json.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.update_forward_refs.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.validate.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.validate_on_table.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.validator.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.__init__.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.check_empty.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.construct.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.copy.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.dict.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.from_orm.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.json.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.lat_error.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.lon_error.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.mode.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_computed_fields.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_config.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_construct.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_copy.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_dump.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_dump_json.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_extra.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_fields.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_fields_set.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_json_schema.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_parametrized_name.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_post_init.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_rebuild.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate_json.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate_strings.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.parse_file.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.parse_obj.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.parse_raw.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.position_error.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.schema.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.schema_json.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.update_forward_refs.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.validate.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.validator.rst", "_as_gen/utilities.types.Registry.rst", "_as_gen/utilities.types.Registry.__init__.rst", "_as_gen/utilities.types.Registry.add.rst", "_as_gen/utilities.types.Registry.as_list.rst", "_as_gen/utilities.types.Registry.clear.rst", "_as_gen/utilities.types.Registry.copy.rst", "_as_gen/utilities.types.Registry.fromkeys.rst", "_as_gen/utilities.types.Registry.get.rst", "_as_gen/utilities.types.Registry.items.rst", "_as_gen/utilities.types.Registry.keys.rst", "_as_gen/utilities.types.Registry.pop.rst", "_as_gen/utilities.types.Registry.popitem.rst", "_as_gen/utilities.types.Registry.setdefault.rst", "_as_gen/utilities.types.Registry.update.rst", "_as_gen/utilities.types.Registry.values.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.__init__.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.construct.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.copy.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.default_coord_system.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.dict.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.from_orm.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.json.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_computed_fields.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_config.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_construct.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_copy.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_dump.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_dump_json.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_extra.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_fields.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_fields_set.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_json_schema.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_parametrized_name.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_post_init.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_rebuild.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_validate.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_validate_json.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_validate_strings.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.object_type_separator.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.parse_file.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.parse_obj.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.parse_raw.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.schema.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.schema_json.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.update_forward_refs.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.validate.rst", "_as_gen/utilities.types.TableColumn.rst", "_as_gen/utilities.types.TableColumn.__init__.rst", "_as_gen/utilities.types.TableColumn.construct.rst", "_as_gen/utilities.types.TableColumn.copy.rst", "_as_gen/utilities.types.TableColumn.dict.rst", "_as_gen/utilities.types.TableColumn.from_orm.rst", "_as_gen/utilities.types.TableColumn.json.rst", "_as_gen/utilities.types.TableColumn.model_computed_fields.rst", "_as_gen/utilities.types.TableColumn.model_config.rst", "_as_gen/utilities.types.TableColumn.model_construct.rst", "_as_gen/utilities.types.TableColumn.model_copy.rst", "_as_gen/utilities.types.TableColumn.model_dump.rst", "_as_gen/utilities.types.TableColumn.model_dump_json.rst", "_as_gen/utilities.types.TableColumn.model_extra.rst", "_as_gen/utilities.types.TableColumn.model_fields.rst", "_as_gen/utilities.types.TableColumn.model_fields_set.rst", "_as_gen/utilities.types.TableColumn.model_json_schema.rst", "_as_gen/utilities.types.TableColumn.model_parametrized_name.rst", "_as_gen/utilities.types.TableColumn.model_post_init.rst", "_as_gen/utilities.types.TableColumn.model_rebuild.rst", "_as_gen/utilities.types.TableColumn.model_validate.rst", "_as_gen/utilities.types.TableColumn.model_validate_json.rst", "_as_gen/utilities.types.TableColumn.model_validate_strings.rst", "_as_gen/utilities.types.TableColumn.name.rst", "_as_gen/utilities.types.TableColumn.parse_file.rst", "_as_gen/utilities.types.TableColumn.parse_obj.rst", "_as_gen/utilities.types.TableColumn.parse_raw.rst", "_as_gen/utilities.types.TableColumn.schema.rst", "_as_gen/utilities.types.TableColumn.schema_json.rst", "_as_gen/utilities.types.TableColumn.unit.rst", "_as_gen/utilities.types.TableColumn.update_forward_refs.rst", "_as_gen/utilities.types.TableColumn.validate.rst", "_as_gen/utilities.types.construct_template.rst", "_as_gen/utilities.types.convert_np_type_to_sql.rst", "api.rst", "data_structures.rst", "examples.rst", "examples/Introduction.ipynb", "examples/Poisson_Maps.ipynb", "examples/databases.ipynb", "getting_started.rst", "index.rst", "quickstart/configuration.rst", "quickstart/install.rst", "quickstart/overview.rst", "user_guide.rst", "user_guides/cross_matching.rst", "user_guides/databases.rst", "user_guides/logging.rst", "user_guides/plots.rst", "user_guides/psf.rst", "user_guides/reduction_processes/astrometric_reduction.rst", "user_guides/reduction_processes/custom_reductions.rst", "user_guides/reduction_processes/object_type_reduction.rst", "user_guides/reduction_processes/overview.rst", "user_guides/reduction_processes/reduction_schema.rst", "user_guides/schema.rst", "user_guides/source_data.rst"], "titles": ["cross_reference", "cross_reference.CrossMatchDatabase", "cross_reference.CrossMatchDatabase.__init__", "cross_reference.CrossMatchDatabase.add_catalog", "cross_reference.CrossMatchDatabase.add_catalog_from_table", "cross_reference.CrossMatchDatabase.build_meta_table", "cross_reference.CrossMatchDatabase.check_meta", "cross_reference.CrossMatchDatabase.chunk_db_operation", "cross_reference.CrossMatchDatabase.chunk_db_table_operation", "cross_reference.CrossMatchDatabase.connect", "cross_reference.CrossMatchDatabase.correct_object_types", "cross_reference.CrossMatchDatabase.cross_match", "cross_reference.CrossMatchDatabase.drop_table", "cross_reference.CrossMatchDatabase.from_file", "cross_reference.CrossMatchDatabase.get_database", "cross_reference.CrossMatchDatabase.has_catalog", "cross_reference.CrossMatchDatabase.match_tables", "cross_reference.CrossMatchDatabase.meta", "cross_reference.CrossMatchDatabase.meta_add", "cross_reference.CrossMatchDatabase.meta_remove", "cross_reference.CrossMatchDatabase.meta_reset", "cross_reference.CrossMatchDatabase.overwrite_schema", "cross_reference.CrossMatchDatabase.path", "cross_reference.CrossMatchDatabase.plot_matches", "cross_reference.CrossMatchDatabase.query", "cross_reference.CrossMatchDatabase.run_reduction", "cross_reference.CrossMatchDatabase.schema", "cross_reference.CrossMatchDatabase.score_matches", "cross_reference.CrossMatchDatabase.standardize_coordinates", "cross_reference.CrossMatchDatabase.tables", "cross_reference.cross_match", "cross_reference.cross_match_table", "schema", "schema.CMDSchema", "schema.CMDSchema.__init__", "schema.CMDSchema.catalog_schema", "schema.CMDSchema.construct", "schema.CMDSchema.copy", "schema.CMDSchema.dict", "schema.CMDSchema.from_orm", "schema.CMDSchema.json", "schema.CMDSchema.model_computed_fields", "schema.CMDSchema.model_config", "schema.CMDSchema.model_construct", "schema.CMDSchema.model_copy", "schema.CMDSchema.model_dump", "schema.CMDSchema.model_dump_json", "schema.CMDSchema.model_extra", "schema.CMDSchema.model_fields", "schema.CMDSchema.model_fields_set", "schema.CMDSchema.model_json_schema", "schema.CMDSchema.model_parametrized_name", "schema.CMDSchema.model_post_init", "schema.CMDSchema.model_rebuild", "schema.CMDSchema.model_validate", "schema.CMDSchema.model_validate_json", "schema.CMDSchema.model_validate_strings", "schema.CMDSchema.parse_file", "schema.CMDSchema.parse_obj", "schema.CMDSchema.parse_raw", "schema.CMDSchema.read", "schema.CMDSchema.schema", "schema.CMDSchema.schema_json", "schema.CMDSchema.table_schema", "schema.CMDSchema.update_forward_refs", "schema.CMDSchema.validate", "schema.CMDSchema.write", "schema.ColumnEntry", "schema.ColumnEntry.__init__", "schema.ReductionSchema", "schema.ReductionSchema.__init__", "schema.ReductionSchema.construct", "schema.ReductionSchema.copy", "schema.ReductionSchema.dict", "schema.ReductionSchema.from_orm", "schema.ReductionSchema.json", "schema.ReductionSchema.model_computed_fields", "schema.ReductionSchema.model_config", "schema.ReductionSchema.model_construct", "schema.ReductionSchema.model_copy", "schema.ReductionSchema.model_dump", "schema.ReductionSchema.model_dump_json", "schema.ReductionSchema.model_extra", "schema.ReductionSchema.model_fields", "schema.ReductionSchema.model_fields_set", "schema.ReductionSchema.model_json_schema", "schema.ReductionSchema.model_parametrized_name", "schema.ReductionSchema.model_post_init", "schema.ReductionSchema.model_rebuild", "schema.ReductionSchema.model_validate", "schema.ReductionSchema.model_validate_json", "schema.ReductionSchema.model_validate_strings", "schema.ReductionSchema.parse_file", "schema.ReductionSchema.parse_obj", "schema.ReductionSchema.parse_raw", "schema.ReductionSchema.read", "schema.ReductionSchema.schema", "schema.ReductionSchema.schema_json", "schema.ReductionSchema.update_forward_refs", "schema.ReductionSchema.validate", "schema.ReductionSchema.write", "schema.Schema", "schema.Schema.__init__", "schema.Schema.construct", "schema.Schema.copy", "schema.Schema.dict", "schema.Schema.from_orm", "schema.Schema.json", "schema.Schema.model_computed_fields", "schema.Schema.model_config", "schema.Schema.model_construct", "schema.Schema.model_copy", "schema.Schema.model_dump", "schema.Schema.model_dump_json", "schema.Schema.model_extra", "schema.Schema.model_fields", "schema.Schema.model_fields_set", "schema.Schema.model_json_schema", "schema.Schema.model_parametrized_name", "schema.Schema.model_post_init", "schema.Schema.model_rebuild", "schema.Schema.model_validate", "schema.Schema.model_validate_json", "schema.Schema.model_validate_strings", "schema.Schema.parse_file", "schema.Schema.parse_obj", "schema.Schema.parse_raw", "schema.Schema.read", "schema.Schema.schema", "schema.Schema.schema_json", "schema.Schema.update_forward_refs", "schema.Schema.validate", "schema.Schema.write", "schema.SchemaEntry", "schema.SchemaEntry.__init__", "schema.SchemaRegistry", "schema.SchemaRegistry.__init__", "schema.SchemaRegistry.add", "schema.SchemaRegistry.as_list", "schema.SchemaRegistry.clear", "schema.SchemaRegistry.copy", "schema.SchemaRegistry.from_directory", "schema.SchemaRegistry.fromkeys", "schema.SchemaRegistry.get", "schema.SchemaRegistry.items", "schema.SchemaRegistry.keys", "schema.SchemaRegistry.pop", "schema.SchemaRegistry.popitem", "schema.SchemaRegistry.setdefault", "schema.SchemaRegistry.update", "schema.SchemaRegistry.values", "schema.SourceTableSchema", "schema.SourceTableSchema.DEC", "schema.SourceTableSchema.DEC_ERR", "schema.SourceTableSchema.GAL_B", "schema.SourceTableSchema.GAL_B_ERR", "schema.SourceTableSchema.GAL_L", "schema.SourceTableSchema.GAL_L_ERR", "schema.SourceTableSchema.NAME", "schema.SourceTableSchema.RA", "schema.SourceTableSchema.RA_ERR", "schema.SourceTableSchema.SEP", "schema.SourceTableSchema.TYPE", "schema.SourceTableSchema.Z", "schema.SourceTableSchema.__init__", "schema.SourceTableSchema.available_coordinate_frames", "schema.SourceTableSchema.column_map", "schema.SourceTableSchema.construct", "schema.SourceTableSchema.coordinate_columns", "schema.SourceTableSchema.coordinate_frame", "schema.SourceTableSchema.coordinate_system", "schema.SourceTableSchema.copy", "schema.SourceTableSchema.default_coord_system", "schema.SourceTableSchema.dict", "schema.SourceTableSchema.from_orm", "schema.SourceTableSchema.from_table", "schema.SourceTableSchema.guess_coordinate_standard_error_struct", "schema.SourceTableSchema.json", "schema.SourceTableSchema.model_computed_fields", "schema.SourceTableSchema.model_config", "schema.SourceTableSchema.model_construct", "schema.SourceTableSchema.model_copy", "schema.SourceTableSchema.model_dump", "schema.SourceTableSchema.model_dump_json", "schema.SourceTableSchema.model_extra", "schema.SourceTableSchema.model_fields", "schema.SourceTableSchema.model_fields_set", "schema.SourceTableSchema.model_json_schema", "schema.SourceTableSchema.model_parametrized_name", "schema.SourceTableSchema.model_post_init", "schema.SourceTableSchema.model_rebuild", "schema.SourceTableSchema.model_validate", "schema.SourceTableSchema.model_validate_json", "schema.SourceTableSchema.model_validate_strings", "schema.SourceTableSchema.object_map", "schema.SourceTableSchema.object_type_separator", "schema.SourceTableSchema.parse_file", "schema.SourceTableSchema.parse_obj", "schema.SourceTableSchema.parse_raw", "schema.SourceTableSchema.read", "schema.SourceTableSchema.schema", "schema.SourceTableSchema.schema_json", "schema.SourceTableSchema.settings", "schema.SourceTableSchema.update_forward_refs", "schema.SourceTableSchema.validate", "schema.SourceTableSchema.write", "stats.gaussian_process", "stats.gaussian_process.Haversine_RBF", "stats.gaussian_process.Haversine_RBF.__init__", "stats.gaussian_process.Haversine_RBF.anisotropic", "stats.gaussian_process.Haversine_RBF.bounds", "stats.gaussian_process.Haversine_RBF.clone_with_theta", "stats.gaussian_process.Haversine_RBF.diag", "stats.gaussian_process.Haversine_RBF.get_params", "stats.gaussian_process.Haversine_RBF.hyperparameter_length_scale", "stats.gaussian_process.Haversine_RBF.hyperparameters", "stats.gaussian_process.Haversine_RBF.is_stationary", "stats.gaussian_process.Haversine_RBF.n_dims", "stats.gaussian_process.Haversine_RBF.requires_vector_input", "stats.gaussian_process.Haversine_RBF.set_params", "stats.gaussian_process.Haversine_RBF.theta", "stats.map_regression", "stats.map_regression.BayesianPoissonMapRegressor", "stats.map_regression.BayesianPoissonMapRegressor.__init__", "stats.map_regression.BayesianPoissonMapRegressor.build_map_MAP", "stats.map_regression.KNNeighborMapRegressor", "stats.map_regression.KNNeighborMapRegressor.__init__", "stats.map_regression.KNNeighborMapRegressor.cross_validate", "stats.map_regression.KNNeighborMapRegressor.default_training_fraction", "stats.map_regression.KNNeighborMapRegressor.hyperparameters", "stats.map_regression.KNNeighborMapRegressor.regressor_parameters", "stats.map_regression.KNNeighborMapRegressor.train_model", "stats.map_regression.PoissonMapRegressor", "stats.map_regression.PoissonMapRegressor.__init__", "stats.map_regression.PoissonMapRegressor.cross_validate", "stats.map_regression.PoissonMapRegressor.default_training_fraction", "stats.map_regression.PoissonMapRegressor.hyperparameters", "stats.map_regression.PoissonMapRegressor.regressor_parameters", "stats.map_regression.PoissonMapRegressor.train_model", "stats.map_regression.RNNeighborMapRegressor", "stats.map_regression.RNNeighborMapRegressor.__init__", "stats.map_regression.RNNeighborMapRegressor.cross_validate", "stats.map_regression.RNNeighborMapRegressor.default_training_fraction", "stats.map_regression.RNNeighborMapRegressor.hyperparameters", "stats.map_regression.RNNeighborMapRegressor.regressor_parameters", "stats.map_regression.RNNeighborMapRegressor.train_model", "stats.map_regression.train_map_regressor", "stats.utilities", "stats.utilities.uniform_sample_spherical", "structures.databases", "structures.databases.DBRegistry", "structures.databases.DBRegistry.__init__", "structures.databases.DBRegistry.add", "structures.databases.DBRegistry.as_list", "structures.databases.DBRegistry.clear", "structures.databases.DBRegistry.copy", "structures.databases.DBRegistry.fromkeys", "structures.databases.DBRegistry.get", "structures.databases.DBRegistry.items", "structures.databases.DBRegistry.keys", "structures.databases.DBRegistry.locals", "structures.databases.DBRegistry.names", "structures.databases.DBRegistry.pop", "structures.databases.DBRegistry.popitem", "structures.databases.DBRegistry.remotes", "structures.databases.DBRegistry.setdefault", "structures.databases.DBRegistry.update", "structures.databases.DBRegistry.values", "structures.databases.LocalDatabase", "structures.databases.LocalDatabase.__init__", "structures.databases.LocalDatabase.add_sources_to_poisson", "structures.databases.LocalDatabase.correct_query_output", "structures.databases.LocalDatabase.count", "structures.databases.LocalDatabase.default_correct_query_output", "structures.databases.LocalDatabase.default_poisson_atlas_path", "structures.databases.LocalDatabase.default_query_config", "structures.databases.LocalDatabase.default_query_schema", "structures.databases.LocalDatabase.name", "structures.databases.LocalDatabase.poisson_atlas", "structures.databases.LocalDatabase.query_config", "structures.databases.LocalDatabase.query_radius", "structures.databases.LocalDatabase.query_schema", "structures.databases.LocalDatabase.random_sample_count", "structures.databases.LocalDatabase.register", "structures.databases.LocalDatabase.source_match", "structures.databases.LocalDatabase.source_match_memory", "structures.databases.NED", "structures.databases.NED.TIMEOUT", "structures.databases.NED.__init__", "structures.databases.NED.add_sources_to_poisson", "structures.databases.NED.config_ned", "structures.databases.NED.correct_query_output", "structures.databases.NED.count", "structures.databases.NED.default_correct_query_output", "structures.databases.NED.default_poisson_atlas_path", "structures.databases.NED.default_query_config", "structures.databases.NED.default_query_schema", "structures.databases.NED.get_image_list", "structures.databases.NED.get_table", "structures.databases.NED.name", "structures.databases.NED.poisson_atlas", "structures.databases.NED.query_config", "structures.databases.NED.query_object", "structures.databases.NED.query_radius", "structures.databases.NED.query_schema", "structures.databases.NED.random_sample_count", "structures.databases.NED.register", "structures.databases.NED.source_match", "structures.databases.RemoteDatabase", "structures.databases.RemoteDatabase.__init__", "structures.databases.RemoteDatabase.add_sources_to_poisson", "structures.databases.RemoteDatabase.correct_query_output", "structures.databases.RemoteDatabase.count", "structures.databases.RemoteDatabase.default_correct_query_output", "structures.databases.RemoteDatabase.default_poisson_atlas_path", "structures.databases.RemoteDatabase.default_query_config", "structures.databases.RemoteDatabase.default_query_schema", "structures.databases.RemoteDatabase.name", "structures.databases.RemoteDatabase.poisson_atlas", "structures.databases.RemoteDatabase.query_config", "structures.databases.RemoteDatabase.query_radius", "structures.databases.RemoteDatabase.query_schema", "structures.databases.RemoteDatabase.random_sample_count", "structures.databases.RemoteDatabase.register", "structures.databases.RemoteDatabase.source_match", "structures.databases.SIMBAD", "structures.databases.SIMBAD.EXTRA_COLUMNS", "structures.databases.SIMBAD.REMOVED_COLUMNS", "structures.databases.SIMBAD.ROW_LIMIT", "structures.databases.SIMBAD.TIMEOUT", "structures.databases.SIMBAD.__init__", "structures.databases.SIMBAD.add_sources_to_poisson", "structures.databases.SIMBAD.available_tables", "structures.databases.SIMBAD.clear_cache", "structures.databases.SIMBAD.config_simbad", "structures.databases.SIMBAD.correct_query_output", "structures.databases.SIMBAD.count", "structures.databases.SIMBAD.default_correct_query_output", "structures.databases.SIMBAD.default_poisson_atlas_path", "structures.databases.SIMBAD.default_query_config", "structures.databases.SIMBAD.default_query_schema", "structures.databases.SIMBAD.list_columns", "structures.databases.SIMBAD.list_linked_tables", "structures.databases.SIMBAD.name", "structures.databases.SIMBAD.poisson_atlas", "structures.databases.SIMBAD.query_config", "structures.databases.SIMBAD.query_object", "structures.databases.SIMBAD.query_radius", "structures.databases.SIMBAD.query_schema", "structures.databases.SIMBAD.query_tap", "structures.databases.SIMBAD.random_sample_count", "structures.databases.SIMBAD.register", "structures.databases.SIMBAD.source_match", "structures.databases.SourceDatabase", "structures.databases.SourceDatabase.__init__", "structures.databases.SourceDatabase.add_sources_to_poisson", "structures.databases.SourceDatabase.correct_query_output", "structures.databases.SourceDatabase.count", "structures.databases.SourceDatabase.default_correct_query_output", "structures.databases.SourceDatabase.default_poisson_atlas_path", "structures.databases.SourceDatabase.default_query_config", "structures.databases.SourceDatabase.default_query_schema", "structures.databases.SourceDatabase.name", "structures.databases.SourceDatabase.poisson_atlas", "structures.databases.SourceDatabase.query_config", "structures.databases.SourceDatabase.query_radius", "structures.databases.SourceDatabase.query_schema", "structures.databases.SourceDatabase.random_sample_count", "structures.databases.SourceDatabase.register", "structures.databases.add_points_to_poisson_map", "structures.databases.builtin_databases", "structures.databases.get_database", "structures.databases.get_poisson_atlas", "structures.databases.get_poisson_path", "structures.map", "structures.map.Map", "structures.map.Map.__init__", "structures.map.Map.coordinate_frame", "structures.map.Map.data", "structures.map.Map.get_healpix_id", "structures.map.Map.pixel_positions", "structures.map.Map.plot", "structures.map.Map.transform_map_coordinates", "structures.map.MapAtlas", "structures.map.MapAtlas.__init__", "structures.map.MapAtlas.coordinate_frame", "structures.map.MapAtlas.generate", "structures.map.MapAtlas.get_map", "structures.map.MapAtlas.has_maps", "structures.map.MapAtlas.hdus", "structures.map.MapAtlas.map_names", "structures.map.MapAtlas.pixel_positions", "structures.map.MapAtlas.remove", "structures.map.MapAtlas.reshape_healpix", "structures.map.PoissonAtlas", "structures.map.PoissonAtlas.COUNTS", "structures.map.PoissonAtlas.__init__", "structures.map.PoissonAtlas.append_to_fits", "structures.map.PoissonAtlas.build_poisson_map", "structures.map.PoissonAtlas.build_poisson_map_KNN", "structures.map.PoissonAtlas.build_poisson_map_MAP", "structures.map.PoissonAtlas.build_poisson_map_RNN", "structures.map.PoissonAtlas.build_poisson_map_regressor", "structures.map.PoissonAtlas.build_poisson_maps", "structures.map.PoissonAtlas.coordinate_frame", "structures.map.PoissonAtlas.generate", "structures.map.PoissonAtlas.get_map", "structures.map.PoissonAtlas.get_points", "structures.map.PoissonAtlas.has_maps", "structures.map.PoissonAtlas.hdus", "structures.map.PoissonAtlas.map_names", "structures.map.PoissonAtlas.pixel_positions", "structures.map.PoissonAtlas.remove", "structures.map.PoissonAtlas.reset", "structures.map.PoissonAtlas.reshape_healpix", "structures.map.PoissonAtlas.sample_from_database", "structures.map.StatAtlas", "structures.map.StatAtlas.COUNTS", "structures.map.StatAtlas.__init__", "structures.map.StatAtlas.append_to_fits", "structures.map.StatAtlas.coordinate_frame", "structures.map.StatAtlas.generate", "structures.map.StatAtlas.get_map", "structures.map.StatAtlas.get_points", "structures.map.StatAtlas.has_maps", "structures.map.StatAtlas.hdus", "structures.map.StatAtlas.map_names", "structures.map.StatAtlas.pixel_positions", "structures.map.StatAtlas.remove", "structures.map.StatAtlas.reset", "structures.map.StatAtlas.reshape_healpix", "structures.map.StatAtlas.sample_from_database", "structures.reduction", "structures.reduction.AstrometricReductionProcess", "structures.reduction.AstrometricReductionProcess.CATALOG_ERR", "structures.reduction.AstrometricReductionProcess.DATABASE_ERR", "structures.reduction.AstrometricReductionProcess.__init__", "structures.reduction.AstrometricReductionProcess.construct", "structures.reduction.AstrometricReductionProcess.copy", "structures.reduction.AstrometricReductionProcess.cross_match_database", "structures.reduction.AstrometricReductionProcess.debug_flag", "structures.reduction.AstrometricReductionProcess.dict", "structures.reduction.AstrometricReductionProcess.fill_unknown", "structures.reduction.AstrometricReductionProcess.from_orm", "structures.reduction.AstrometricReductionProcess.generate_operator", "structures.reduction.AstrometricReductionProcess.generate_sql_query", "structures.reduction.AstrometricReductionProcess.json", "structures.reduction.AstrometricReductionProcess.model_computed_fields", "structures.reduction.AstrometricReductionProcess.model_config", "structures.reduction.AstrometricReductionProcess.model_construct", "structures.reduction.AstrometricReductionProcess.model_copy", "structures.reduction.AstrometricReductionProcess.model_dump", "structures.reduction.AstrometricReductionProcess.model_dump_json", "structures.reduction.AstrometricReductionProcess.model_extra", "structures.reduction.AstrometricReductionProcess.model_fields", "structures.reduction.AstrometricReductionProcess.model_fields_set", "structures.reduction.AstrometricReductionProcess.model_json_schema", "structures.reduction.AstrometricReductionProcess.model_parametrized_name", "structures.reduction.AstrometricReductionProcess.model_post_init", "structures.reduction.AstrometricReductionProcess.model_rebuild", "structures.reduction.AstrometricReductionProcess.model_validate", "structures.reduction.AstrometricReductionProcess.model_validate_json", "structures.reduction.AstrometricReductionProcess.model_validate_strings", "structures.reduction.AstrometricReductionProcess.obj_col", "structures.reduction.AstrometricReductionProcess.op_tmp_table", "structures.reduction.AstrometricReductionProcess.parse_file", "structures.reduction.AstrometricReductionProcess.parse_obj", "structures.reduction.AstrometricReductionProcess.parse_raw", "structures.reduction.AstrometricReductionProcess.prior", "structures.reduction.AstrometricReductionProcess.proc_tmp_table", "structures.reduction.AstrometricReductionProcess.process_name", "structures.reduction.AstrometricReductionProcess.schema", "structures.reduction.AstrometricReductionProcess.schema_json", "structures.reduction.AstrometricReductionProcess.score_col", "structures.reduction.AstrometricReductionProcess.settings_flag", "structures.reduction.AstrometricReductionProcess.settings_header", "structures.reduction.AstrometricReductionProcess.table", "structures.reduction.AstrometricReductionProcess.update_forward_refs", "structures.reduction.AstrometricReductionProcess.validate", "structures.reduction.ReductionProcess", "structures.reduction.ReductionProcess.__init__", "structures.reduction.ReductionProcess.construct", "structures.reduction.ReductionProcess.copy", "structures.reduction.ReductionProcess.cross_match_database", "structures.reduction.ReductionProcess.debug_flag", "structures.reduction.ReductionProcess.dict", "structures.reduction.ReductionProcess.fill_unknown", "structures.reduction.ReductionProcess.from_orm", "structures.reduction.ReductionProcess.generate_operator", "structures.reduction.ReductionProcess.generate_sql_query", "structures.reduction.ReductionProcess.json", "structures.reduction.ReductionProcess.model_computed_fields", "structures.reduction.ReductionProcess.model_config", "structures.reduction.ReductionProcess.model_construct", "structures.reduction.ReductionProcess.model_copy", "structures.reduction.ReductionProcess.model_dump", "structures.reduction.ReductionProcess.model_dump_json", "structures.reduction.ReductionProcess.model_extra", "structures.reduction.ReductionProcess.model_fields", "structures.reduction.ReductionProcess.model_fields_set", "structures.reduction.ReductionProcess.model_json_schema", "structures.reduction.ReductionProcess.model_parametrized_name", "structures.reduction.ReductionProcess.model_post_init", "structures.reduction.ReductionProcess.model_rebuild", "structures.reduction.ReductionProcess.model_validate", "structures.reduction.ReductionProcess.model_validate_json", "structures.reduction.ReductionProcess.model_validate_strings", "structures.reduction.ReductionProcess.obj_col", "structures.reduction.ReductionProcess.op_tmp_table", "structures.reduction.ReductionProcess.parse_file", "structures.reduction.ReductionProcess.parse_obj", "structures.reduction.ReductionProcess.parse_raw", "structures.reduction.ReductionProcess.proc_tmp_table", "structures.reduction.ReductionProcess.process_name", "structures.reduction.ReductionProcess.schema", "structures.reduction.ReductionProcess.schema_json", "structures.reduction.ReductionProcess.score_col", "structures.reduction.ReductionProcess.settings_flag", "structures.reduction.ReductionProcess.settings_header", "structures.reduction.ReductionProcess.table", "structures.reduction.ReductionProcess.update_forward_refs", "structures.reduction.ReductionProcess.validate", "structures.table", "structures.table.CoordinateColumn", "structures.table.CoordinateColumn.__init__", "structures.table.SchemaColumn", "structures.table.SchemaColumn.__init__", "structures.table.SourceTable", "structures.table.SourceTable.ColumnClass", "structures.table.SourceTable.DEC", "structures.table.SourceTable.DEC_ERR", "structures.table.SourceTable.GAL_B", "structures.table.SourceTable.GAL_B_ERR", "structures.table.SourceTable.GAL_L", "structures.table.SourceTable.GAL_L_ERR", "structures.table.SourceTable.NAME", "structures.table.SourceTable.RA", "structures.table.SourceTable.RA_ERR", "structures.table.SourceTable.SEP", "structures.table.SourceTable.TYPE", "structures.table.SourceTable.Z", "structures.table.SourceTable.__init__", "structures.table.SourceTable.add_column", "structures.table.SourceTable.add_columns", "structures.table.SourceTable.add_index", "structures.table.SourceTable.add_row", "structures.table.SourceTable.append_to_fits", "structures.table.SourceTable.append_to_sql", "structures.table.SourceTable.argsort", "structures.table.SourceTable.as_array", "structures.table.SourceTable.colnames", "structures.table.SourceTable.convert_bytestring_to_unicode", "structures.table.SourceTable.convert_unicode_to_bytestring", "structures.table.SourceTable.copy", "structures.table.SourceTable.count_types", "structures.table.SourceTable.dtype", "structures.table.SourceTable.field", "structures.table.SourceTable.filled", "structures.table.SourceTable.from_pandas", "structures.table.SourceTable.generate_schema", "structures.table.SourceTable.get_coordinates", "structures.table.SourceTable.get_formatted_types", "structures.table.SourceTable.group_by", "structures.table.SourceTable.groups", "structures.table.SourceTable.has_masked_columns", "structures.table.SourceTable.has_masked_values", "structures.table.SourceTable.has_mixin_columns", "structures.table.SourceTable.iloc", "structures.table.SourceTable.index_column", "structures.table.SourceTable.index_mode", "structures.table.SourceTable.indices", "structures.table.SourceTable.info", "structures.table.SourceTable.insert_row", "structures.table.SourceTable.items", "structures.table.SourceTable.itercols", "structures.table.SourceTable.iterrows", "structures.table.SourceTable.keep_columns", "structures.table.SourceTable.keys", "structures.table.SourceTable.lat", "structures.table.SourceTable.loc", "structures.table.SourceTable.loc_indices", "structures.table.SourceTable.lon", "structures.table.SourceTable.mask", "structures.table.SourceTable.masked", "structures.table.SourceTable.meta", "structures.table.SourceTable.more", "structures.table.SourceTable.pformat", "structures.table.SourceTable.pformat_all", "structures.table.SourceTable.pprint", "structures.table.SourceTable.pprint_all", "structures.table.SourceTable.pprint_exclude_names", "structures.table.SourceTable.pprint_include_names", "structures.table.SourceTable.read", "structures.table.SourceTable.remove_column", "structures.table.SourceTable.remove_columns", "structures.table.SourceTable.remove_indices", "structures.table.SourceTable.remove_row", "structures.table.SourceTable.remove_rows", "structures.table.SourceTable.rename_column", "structures.table.SourceTable.rename_columns", "structures.table.SourceTable.replace_column", "structures.table.SourceTable.reverse", "structures.table.SourceTable.round", "structures.table.SourceTable.schema", "structures.table.SourceTable.setdefault", "structures.table.SourceTable.show_in_browser", "structures.table.SourceTable.show_in_notebook", "structures.table.SourceTable.sort", "structures.table.SourceTable.to_pandas", "structures.table.SourceTable.update", "structures.table.SourceTable.values", "structures.table.SourceTable.values_equal", "structures.table.SourceTable.write", "structures.table.correct_column_types", "structures.table.format_table_types", "structures.table.load", "utilities.core", "utilities.core.AttrDict", "utilities.core.AttrDict.__init__", "utilities.core.AttrDict.clean", "utilities.core.AttrDict.clean_types", "utilities.core.AttrDict.clear", "utilities.core.AttrDict.copy", "utilities.core.AttrDict.from_nested_dict", "utilities.core.AttrDict.fromkeys", "utilities.core.AttrDict.get", "utilities.core.AttrDict.items", "utilities.core.AttrDict.keys", "utilities.core.AttrDict.pop", "utilities.core.AttrDict.popitem", "utilities.core.AttrDict.setdefault", "utilities.core.AttrDict.update", "utilities.core.AttrDict.values", "utilities.core.YAMLConfiguration", "utilities.core.YAMLConfiguration.__init__", "utilities.core.YAMLConfiguration.config", "utilities.core.YAMLConfiguration.load", "utilities.core.YAMLConfiguration.load_from_path", "utilities.core.YAMLConfiguration.reload", "utilities.core.YAMLConfiguration.set_on_disk", "utilities.core.YAMLConfiguration.set_param", "utilities.core.enforce_units", "utilities.core.find_descriptors", "utilities.core.getFromDict", "utilities.core.merge_dicts", "utilities.core.produce_dict_heading", "utilities.core.rgetattr", "utilities.core.rsetattr", "utilities.core.setInDict", "utilities.logging", "utilities.plot", "utilities.plot.get_hips_image", "utilities.plot.plot_healpix", "utilities.plot.plot_hips", "utilities.plot.set_style", "utilities.sql", "utilities.sql.chunk_sql_query_operation", "utilities.sql.chunk_sql_table_operation", "utilities.text", "utilities.text.get_package_version", "utilities.text.print_cli_header", "utilities.text.print_version", "utilities.types", "utilities.types.ColumnMap", "utilities.types.ColumnMap.DEC", "utilities.types.ColumnMap.DEC_ERR", "utilities.types.ColumnMap.GAL_B", "utilities.types.ColumnMap.GAL_B_ERR", "utilities.types.ColumnMap.GAL_L", "utilities.types.ColumnMap.GAL_L_ERR", "utilities.types.ColumnMap.NAME", "utilities.types.ColumnMap.RA", "utilities.types.ColumnMap.RA_ERR", "utilities.types.ColumnMap.SEP", "utilities.types.ColumnMap.TYPE", "utilities.types.ColumnMap.Z", "utilities.types.ColumnMap.__init__", "utilities.types.ColumnMap.construct", "utilities.types.ColumnMap.copy", "utilities.types.ColumnMap.dict", "utilities.types.ColumnMap.from_orm", "utilities.types.ColumnMap.json", "utilities.types.ColumnMap.model_computed_fields", "utilities.types.ColumnMap.model_config", "utilities.types.ColumnMap.model_construct", "utilities.types.ColumnMap.model_copy", "utilities.types.ColumnMap.model_dump", "utilities.types.ColumnMap.model_dump_json", "utilities.types.ColumnMap.model_extra", "utilities.types.ColumnMap.model_fields", "utilities.types.ColumnMap.model_fields_set", "utilities.types.ColumnMap.model_json_schema", "utilities.types.ColumnMap.model_parametrized_name", "utilities.types.ColumnMap.model_post_init", "utilities.types.ColumnMap.model_rebuild", "utilities.types.ColumnMap.model_validate", "utilities.types.ColumnMap.model_validate_json", "utilities.types.ColumnMap.model_validate_strings", "utilities.types.ColumnMap.parse_file", "utilities.types.ColumnMap.parse_obj", "utilities.types.ColumnMap.parse_raw", "utilities.types.ColumnMap.schema", "utilities.types.ColumnMap.schema_json", "utilities.types.ColumnMap.search_inverse", "utilities.types.ColumnMap.update_forward_refs", "utilities.types.ColumnMap.validate", "utilities.types.ColumnMap.validate_table_column_no_unit", "utilities.types.ColumnMap.validate_table_column_unit", "utilities.types.ColumnStdErrorSpecifier", "utilities.types.ColumnStdErrorSpecifier.__init__", "utilities.types.ColumnStdErrorSpecifier.base_column", "utilities.types.ColumnStdErrorSpecifier.construct", "utilities.types.ColumnStdErrorSpecifier.copy", "utilities.types.ColumnStdErrorSpecifier.dict", "utilities.types.ColumnStdErrorSpecifier.error_column", "utilities.types.ColumnStdErrorSpecifier.error_convert_to_std", "utilities.types.ColumnStdErrorSpecifier.error_value", "utilities.types.ColumnStdErrorSpecifier.from_orm", "utilities.types.ColumnStdErrorSpecifier.json", "utilities.types.ColumnStdErrorSpecifier.model_computed_fields", "utilities.types.ColumnStdErrorSpecifier.model_config", "utilities.types.ColumnStdErrorSpecifier.model_construct", "utilities.types.ColumnStdErrorSpecifier.model_copy", "utilities.types.ColumnStdErrorSpecifier.model_dump", "utilities.types.ColumnStdErrorSpecifier.model_dump_json", "utilities.types.ColumnStdErrorSpecifier.model_extra", "utilities.types.ColumnStdErrorSpecifier.model_fields", "utilities.types.ColumnStdErrorSpecifier.model_fields_set", "utilities.types.ColumnStdErrorSpecifier.model_json_schema", "utilities.types.ColumnStdErrorSpecifier.model_parametrized_name", "utilities.types.ColumnStdErrorSpecifier.model_post_init", "utilities.types.ColumnStdErrorSpecifier.model_rebuild", "utilities.types.ColumnStdErrorSpecifier.model_validate", "utilities.types.ColumnStdErrorSpecifier.model_validate_json", "utilities.types.ColumnStdErrorSpecifier.model_validate_strings", "utilities.types.ColumnStdErrorSpecifier.parse_file", "utilities.types.ColumnStdErrorSpecifier.parse_obj", "utilities.types.ColumnStdErrorSpecifier.parse_raw", "utilities.types.ColumnStdErrorSpecifier.schema", "utilities.types.ColumnStdErrorSpecifier.schema_json", "utilities.types.ColumnStdErrorSpecifier.update_forward_refs", "utilities.types.ColumnStdErrorSpecifier.validate", "utilities.types.ColumnStdErrorSpecifier.validate_on_table", "utilities.types.ColumnStdErrorSpecifier.validator", "utilities.types.ICRSCoordinateStdErrorSpecifier", "utilities.types.ICRSCoordinateStdErrorSpecifier.__init__", "utilities.types.ICRSCoordinateStdErrorSpecifier.check_empty", "utilities.types.ICRSCoordinateStdErrorSpecifier.construct", "utilities.types.ICRSCoordinateStdErrorSpecifier.copy", "utilities.types.ICRSCoordinateStdErrorSpecifier.dict", "utilities.types.ICRSCoordinateStdErrorSpecifier.from_orm", "utilities.types.ICRSCoordinateStdErrorSpecifier.json", "utilities.types.ICRSCoordinateStdErrorSpecifier.lat_error", "utilities.types.ICRSCoordinateStdErrorSpecifier.lon_error", "utilities.types.ICRSCoordinateStdErrorSpecifier.mode", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_computed_fields", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_config", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_construct", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_copy", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_dump", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_dump_json", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_extra", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_fields", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_fields_set", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_json_schema", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_parametrized_name", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_post_init", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_rebuild", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate_json", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate_strings", "utilities.types.ICRSCoordinateStdErrorSpecifier.parse_file", "utilities.types.ICRSCoordinateStdErrorSpecifier.parse_obj", "utilities.types.ICRSCoordinateStdErrorSpecifier.parse_raw", "utilities.types.ICRSCoordinateStdErrorSpecifier.position_error", "utilities.types.ICRSCoordinateStdErrorSpecifier.schema", "utilities.types.ICRSCoordinateStdErrorSpecifier.schema_json", "utilities.types.ICRSCoordinateStdErrorSpecifier.update_forward_refs", "utilities.types.ICRSCoordinateStdErrorSpecifier.validate", "utilities.types.ICRSCoordinateStdErrorSpecifier.validator", "utilities.types.Registry", "utilities.types.Registry.__init__", "utilities.types.Registry.add", "utilities.types.Registry.as_list", "utilities.types.Registry.clear", "utilities.types.Registry.copy", "utilities.types.Registry.fromkeys", "utilities.types.Registry.get", "utilities.types.Registry.items", "utilities.types.Registry.keys", "utilities.types.Registry.pop", "utilities.types.Registry.popitem", "utilities.types.Registry.setdefault", "utilities.types.Registry.update", "utilities.types.Registry.values", "utilities.types.SourceTableSchemaSettings", "utilities.types.SourceTableSchemaSettings.__init__", "utilities.types.SourceTableSchemaSettings.construct", "utilities.types.SourceTableSchemaSettings.copy", "utilities.types.SourceTableSchemaSettings.default_coord_system", "utilities.types.SourceTableSchemaSettings.dict", "utilities.types.SourceTableSchemaSettings.from_orm", "utilities.types.SourceTableSchemaSettings.json", "utilities.types.SourceTableSchemaSettings.model_computed_fields", "utilities.types.SourceTableSchemaSettings.model_config", "utilities.types.SourceTableSchemaSettings.model_construct", "utilities.types.SourceTableSchemaSettings.model_copy", "utilities.types.SourceTableSchemaSettings.model_dump", "utilities.types.SourceTableSchemaSettings.model_dump_json", "utilities.types.SourceTableSchemaSettings.model_extra", "utilities.types.SourceTableSchemaSettings.model_fields", "utilities.types.SourceTableSchemaSettings.model_fields_set", "utilities.types.SourceTableSchemaSettings.model_json_schema", "utilities.types.SourceTableSchemaSettings.model_parametrized_name", "utilities.types.SourceTableSchemaSettings.model_post_init", "utilities.types.SourceTableSchemaSettings.model_rebuild", "utilities.types.SourceTableSchemaSettings.model_validate", "utilities.types.SourceTableSchemaSettings.model_validate_json", "utilities.types.SourceTableSchemaSettings.model_validate_strings", "utilities.types.SourceTableSchemaSettings.object_type_separator", "utilities.types.SourceTableSchemaSettings.parse_file", "utilities.types.SourceTableSchemaSettings.parse_obj", "utilities.types.SourceTableSchemaSettings.parse_raw", "utilities.types.SourceTableSchemaSettings.schema", "utilities.types.SourceTableSchemaSettings.schema_json", "utilities.types.SourceTableSchemaSettings.update_forward_refs", "utilities.types.SourceTableSchemaSettings.validate", "utilities.types.TableColumn", "utilities.types.TableColumn.__init__", "utilities.types.TableColumn.construct", "utilities.types.TableColumn.copy", "utilities.types.TableColumn.dict", "utilities.types.TableColumn.from_orm", "utilities.types.TableColumn.json", "utilities.types.TableColumn.model_computed_fields", "utilities.types.TableColumn.model_config", "utilities.types.TableColumn.model_construct", "utilities.types.TableColumn.model_copy", "utilities.types.TableColumn.model_dump", "utilities.types.TableColumn.model_dump_json", "utilities.types.TableColumn.model_extra", "utilities.types.TableColumn.model_fields", "utilities.types.TableColumn.model_fields_set", "utilities.types.TableColumn.model_json_schema", "utilities.types.TableColumn.model_parametrized_name", "utilities.types.TableColumn.model_post_init", "utilities.types.TableColumn.model_rebuild", "utilities.types.TableColumn.model_validate", "utilities.types.TableColumn.model_validate_json", "utilities.types.TableColumn.model_validate_strings", "utilities.types.TableColumn.name", "utilities.types.TableColumn.parse_file", "utilities.types.TableColumn.parse_obj", "utilities.types.TableColumn.parse_raw", "utilities.types.TableColumn.schema", "utilities.types.TableColumn.schema_json", "utilities.types.TableColumn.unit", "utilities.types.TableColumn.update_forward_refs", "utilities.types.TableColumn.validate", "utilities.types.construct_template", "utilities.types.convert_np_type_to_sql", "API", "Data Structures", "Examples", "Cross Referencing Overview", "Poisson Mapping", "Using Databases in PyXMIP", "pyXMIP Quickstart Guide", "Features", "Configuring <code class=\"docutils literal notranslate\"><span class=\"pre\">pyXMIP</span></code>", "Installing <code class=\"docutils literal notranslate\"><span class=\"pre\">pyXMIP</span></code>", "Overview", "Reference", "Cross Referencing", "Databases", "Logging", "Creating Plots", "PSF Modeling", "Astrometric Reduction Process", "Writing New Reduction Processes", "Object Type Reduction", "&lt;no title&gt;", "Reduction Schema Writing", "pyXMIP Schema Classes", "Loading Source Data"], "terms": {"cross": [0, 1, 2, 11, 14, 16, 25, 30, 31, 63, 227, 234, 241, 284, 285, 286, 307, 324, 352, 432, 862, 865, 866, 868, 871, 872, 878, 883, 884], "referenc": [0, 432, 868, 871, 872, 874, 884], "tool": [0, 206, 221, 606, 864, 868, 871, 874], "method": [0, 1, 3, 4, 7, 8, 33, 37, 46, 51, 52, 67, 69, 72, 81, 86, 87, 101, 104, 113, 118, 119, 133, 135, 149, 151, 171, 183, 188, 189, 207, 212, 219, 222, 225, 232, 239, 250, 266, 268, 270, 271, 272, 280, 282, 286, 289, 291, 292, 303, 305, 308, 310, 311, 312, 320, 322, 325, 331, 335, 336, 347, 350, 353, 355, 356, 357, 365, 367, 375, 383, 394, 398, 403, 416, 433, 438, 452, 457, 458, 478, 479, 482, 496, 501, 502, 521, 523, 525, 527, 543, 545, 561, 575, 589, 605, 606, 614, 617, 631, 633, 663, 678, 687, 692, 693, 706, 707, 708, 712, 724, 729, 730, 744, 748, 760, 765, 766, 780, 793, 795, 798, 808, 813, 814, 827, 830, 839, 844, 845, 864, 865, 866, 868, 873, 874, 879, 883], "pyxmip": [0, 32, 60, 95, 101, 127, 166, 194, 195, 199, 221, 232, 274, 280, 294, 303, 314, 320, 338, 347, 359, 365, 387, 406, 422, 433, 454, 475, 498, 518, 522, 527, 615, 616, 649, 650, 654, 655, 658, 662, 663, 744, 819, 861, 862, 863, 864, 865, 868, 872, 873, 874, 878, 879, 880, 884], "catalog": [0, 1, 3, 4, 15, 23, 30, 31, 35, 63, 162, 194, 276, 281, 296, 304, 316, 321, 340, 348, 361, 366, 434, 444, 488, 527, 539, 554, 560, 578, 581, 615, 674, 862, 864, 865, 866, 868, 871, 873, 874, 878, 883], "more": [0, 207, 212, 220, 249, 270, 272, 282, 289, 292, 305, 310, 312, 322, 331, 336, 350, 355, 357, 367, 544, 548, 586, 587, 588, 589, 607, 649, 862, 864, 865, 866, 871, 872, 874, 878, 883, 884], "detail": [0, 207, 383, 416, 864, 865, 866, 868, 872, 873, 874, 878, 883, 884], "can": [0, 7, 8, 17, 51, 86, 118, 165, 188, 194, 207, 212, 270, 289, 310, 331, 355, 383, 457, 501, 542, 543, 545, 562, 567, 572, 575, 579, 580, 586, 587, 588, 589, 593, 598, 604, 605, 609, 641, 692, 708, 729, 765, 813, 844, 859, 861, 862, 864, 865, 866, 867, 868, 869, 870, 873, 874, 878, 879, 883, 884], "found": [0, 146, 262, 605, 628, 790, 861, 864, 866, 873], "user": [0, 32, 101, 207, 250, 278, 300, 318, 344, 363, 383, 398, 616, 662, 708, 859, 861, 862, 864, 865, 866, 867, 868, 872, 873, 874, 878, 879, 883, 884], "guid": [0, 207, 432, 861, 863, 864, 865, 866, 868, 869, 872, 873, 879, 883, 884], "note": [0, 1, 32, 33, 43, 44, 78, 79, 101, 110, 111, 180, 181, 220, 222, 248, 249, 250, 273, 278, 286, 293, 300, 313, 318, 325, 337, 344, 353, 358, 363, 374, 383, 416, 432, 436, 444, 449, 450, 480, 488, 493, 494, 522, 542, 543, 559, 561, 578, 579, 581, 597, 605, 606, 614, 616, 649, 658, 662, 684, 685, 708, 721, 722, 742, 743, 744, 757, 758, 779, 805, 806, 836, 837, 864, 865, 873, 874, 884], "The": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 17, 18, 19, 23, 24, 25, 27, 28, 30, 31, 32, 35, 43, 45, 50, 53, 54, 55, 56, 60, 66, 78, 80, 85, 88, 89, 90, 91, 95, 100, 101, 110, 112, 117, 120, 121, 122, 123, 127, 132, 134, 136, 141, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 168, 169, 170, 172, 175, 180, 182, 187, 190, 191, 192, 193, 194, 195, 199, 202, 205, 207, 210, 211, 212, 219, 220, 222, 226, 227, 231, 232, 233, 234, 238, 240, 241, 245, 248, 250, 251, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 328, 329, 330, 331, 332, 335, 337, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 352, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 376, 377, 380, 383, 384, 385, 386, 387, 391, 393, 396, 398, 403, 404, 405, 406, 411, 414, 415, 416, 418, 420, 421, 422, 427, 430, 431, 434, 435, 436, 439, 440, 444, 445, 449, 451, 456, 459, 460, 461, 462, 463, 464, 469, 470, 473, 474, 475, 476, 478, 480, 483, 484, 488, 489, 493, 495, 500, 503, 504, 505, 506, 507, 508, 512, 513, 516, 517, 518, 519, 521, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 545, 546, 548, 554, 558, 560, 561, 562, 572, 575, 576, 578, 581, 586, 587, 588, 598, 600, 601, 603, 604, 606, 607, 608, 609, 614, 615, 641, 643, 645, 646, 647, 648, 649, 651, 656, 657, 658, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 675, 684, 686, 691, 694, 695, 696, 697, 706, 707, 708, 710, 714, 716, 721, 723, 728, 731, 732, 733, 734, 742, 744, 752, 753, 757, 759, 764, 767, 768, 769, 770, 774, 779, 781, 799, 805, 807, 812, 815, 816, 817, 818, 819, 827, 836, 838, 843, 846, 847, 848, 849, 850, 856, 859, 860, 862, 864, 866, 867, 868, 874, 878, 879, 880, 883, 884], "modul": [0, 32, 249, 374, 522, 616, 649, 655, 658, 662, 864, 866, 871, 883, 884], "i": [0, 2, 3, 4, 7, 8, 11, 14, 15, 17, 18, 23, 27, 30, 31, 33, 35, 37, 43, 44, 45, 46, 47, 49, 52, 53, 55, 66, 72, 78, 79, 80, 81, 82, 84, 87, 88, 90, 100, 101, 104, 110, 111, 112, 113, 114, 116, 119, 120, 122, 132, 134, 143, 146, 147, 148, 149, 170, 171, 172, 180, 181, 182, 183, 184, 186, 189, 190, 192, 194, 195, 205, 207, 212, 216, 218, 220, 222, 250, 257, 262, 263, 265, 266, 270, 273, 274, 276, 278, 279, 280, 281, 286, 287, 289, 293, 294, 296, 300, 301, 303, 304, 310, 313, 314, 316, 318, 319, 320, 321, 325, 326, 327, 328, 329, 331, 337, 338, 340, 344, 345, 347, 348, 353, 355, 358, 359, 361, 363, 364, 365, 366, 383, 386, 398, 403, 405, 416, 421, 436, 438, 444, 449, 450, 451, 452, 453, 455, 458, 459, 461, 475, 478, 480, 482, 488, 493, 494, 495, 496, 497, 499, 502, 503, 505, 518, 521, 542, 543, 544, 545, 549, 551, 557, 558, 561, 562, 569, 572, 574, 575, 578, 581, 585, 586, 587, 588, 589, 590, 591, 595, 600, 601, 602, 604, 605, 606, 608, 609, 614, 625, 628, 629, 630, 631, 649, 651, 657, 663, 676, 678, 684, 685, 686, 687, 688, 690, 693, 694, 696, 708, 709, 710, 712, 714, 715, 716, 721, 722, 723, 724, 725, 727, 730, 731, 733, 742, 744, 745, 748, 757, 758, 759, 760, 761, 763, 766, 767, 769, 779, 787, 790, 791, 792, 793, 796, 798, 799, 805, 806, 807, 808, 809, 811, 814, 815, 817, 819, 827, 828, 830, 836, 837, 838, 839, 840, 842, 845, 846, 848, 859, 862, 864, 865, 868, 874, 878, 880, 884], "core": [0, 53, 88, 120, 190, 459, 503, 662, 694, 716, 731, 752, 753, 767, 774, 815, 846, 866, 867, 871, 872, 874, 878, 879, 880], "thi": [0, 1, 2, 7, 8, 10, 11, 14, 17, 18, 24, 25, 27, 28, 30, 31, 32, 33, 35, 37, 44, 48, 49, 51, 52, 53, 66, 72, 79, 83, 84, 86, 87, 88, 100, 101, 104, 111, 115, 116, 118, 119, 120, 132, 141, 149, 165, 169, 170, 171, 172, 181, 185, 186, 188, 189, 190, 194, 195, 202, 205, 207, 212, 213, 219, 220, 226, 232, 233, 240, 248, 266, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 292, 293, 294, 295, 296, 299, 300, 301, 303, 304, 305, 306, 307, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 331, 336, 337, 338, 339, 340, 343, 344, 345, 347, 348, 350, 351, 352, 353, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 383, 386, 387, 393, 398, 403, 405, 406, 414, 415, 421, 422, 430, 431, 436, 438, 439, 440, 444, 445, 450, 454, 455, 457, 458, 459, 470, 474, 475, 476, 478, 480, 482, 483, 484, 488, 489, 494, 498, 499, 501, 502, 503, 513, 517, 518, 519, 521, 542, 543, 544, 545, 546, 548, 549, 551, 557, 558, 559, 561, 562, 564, 565, 569, 574, 575, 578, 581, 585, 589, 590, 591, 593, 594, 598, 603, 604, 605, 606, 607, 608, 609, 614, 616, 631, 642, 649, 651, 657, 658, 662, 678, 685, 689, 690, 692, 693, 694, 707, 708, 710, 712, 715, 716, 722, 726, 727, 729, 730, 731, 742, 743, 744, 748, 758, 762, 763, 765, 766, 767, 779, 781, 793, 798, 799, 806, 810, 811, 813, 814, 815, 819, 830, 837, 841, 842, 844, 845, 846, 850, 856, 859, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 873, 874, 878, 879, 880, 883, 884], "allow": [0, 5, 10, 25, 28, 30, 31, 32, 43, 47, 78, 82, 101, 110, 114, 180, 184, 207, 250, 287, 328, 329, 386, 398, 403, 405, 421, 449, 453, 475, 493, 497, 518, 551, 586, 587, 588, 589, 605, 645, 676, 684, 688, 707, 709, 721, 725, 745, 757, 761, 796, 805, 809, 828, 836, 840, 864, 865, 866, 873, 874, 878, 883, 884], "you": [0, 14, 30, 31, 37, 44, 52, 63, 72, 79, 87, 104, 111, 119, 171, 181, 189, 194, 438, 450, 458, 482, 494, 502, 605, 606, 678, 685, 693, 712, 716, 722, 730, 744, 748, 758, 766, 798, 806, 814, 830, 837, 845, 862, 864, 865, 866, 867, 868, 869, 870, 871, 873, 874, 878, 879, 883, 884], "refer": [0, 11, 50, 85, 117, 187, 207, 456, 500, 609, 691, 728, 764, 812, 843, 864, 866, 868, 873, 880, 883, 884], "tabl": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23, 25, 27, 28, 30, 31, 63, 151, 166, 170, 175, 194, 195, 227, 231, 234, 238, 241, 245, 268, 269, 270, 271, 272, 273, 276, 280, 281, 282, 284, 285, 289, 291, 292, 293, 296, 298, 302, 303, 304, 305, 307, 310, 311, 312, 313, 316, 320, 321, 322, 324, 326, 331, 332, 335, 336, 337, 340, 342, 346, 347, 348, 349, 350, 352, 355, 356, 357, 358, 361, 365, 366, 367, 383, 397, 403, 407, 415, 416, 419, 423, 431, 433, 444, 454, 463, 464, 469, 478, 479, 488, 498, 507, 508, 512, 521, 657, 663, 708, 710, 716, 742, 744, 819, 827, 859, 862, 864, 866, 867, 871, 874, 878, 879, 883], "run": [0, 3, 4, 7, 8, 25, 45, 80, 112, 182, 349, 439, 451, 476, 478, 483, 495, 519, 521, 686, 723, 759, 807, 838, 864, 865, 873, 879], "queri": [0, 63, 269, 272, 273, 275, 276, 279, 280, 281, 282, 286, 287, 288, 292, 293, 295, 296, 297, 298, 301, 302, 303, 304, 305, 309, 312, 313, 315, 316, 319, 320, 321, 322, 326, 328, 329, 330, 333, 336, 337, 339, 340, 345, 346, 347, 348, 349, 350, 354, 357, 358, 360, 361, 364, 365, 366, 367, 415, 431, 445, 478, 489, 521, 656, 657, 864, 865, 868, 871, 873], "reduc": [0, 873, 879], "result": [0, 1, 10, 28, 30, 31, 43, 78, 110, 180, 212, 297, 298, 328, 349, 393, 403, 414, 430, 449, 469, 493, 512, 611, 615, 656, 657, 684, 721, 757, 805, 836, 864, 865, 873, 878, 884], "function": [0, 7, 8, 10, 28, 32, 207, 221, 247, 248, 249, 273, 293, 313, 337, 358, 374, 383, 433, 444, 454, 488, 522, 548, 601, 616, 650, 655, 656, 657, 658, 662, 689, 708, 715, 726, 861, 864, 865, 866, 871, 873, 874, 878, 880, 883], "class": [0, 1, 2, 32, 33, 34, 43, 50, 51, 67, 69, 70, 78, 85, 86, 101, 102, 110, 117, 118, 133, 135, 136, 141, 151, 164, 180, 187, 188, 206, 207, 221, 222, 225, 226, 232, 233, 239, 240, 249, 250, 268, 278, 280, 286, 300, 303, 308, 318, 320, 325, 344, 347, 353, 363, 365, 374, 375, 383, 394, 416, 432, 433, 449, 454, 456, 457, 479, 493, 498, 500, 501, 522, 523, 525, 527, 544, 586, 587, 600, 605, 606, 616, 617, 633, 642, 662, 663, 684, 691, 692, 708, 715, 721, 728, 729, 744, 757, 764, 765, 780, 781, 795, 805, 812, 813, 827, 836, 843, 844, 860, 862, 864, 865, 866, 872, 873, 874, 878, 879, 880, 884], "path": [1, 2, 3, 13, 30, 31, 57, 60, 66, 92, 95, 100, 124, 127, 132, 135, 136, 196, 199, 205, 269, 274, 278, 284, 288, 294, 300, 307, 309, 314, 318, 324, 330, 338, 344, 352, 354, 359, 363, 372, 373, 375, 376, 384, 386, 396, 405, 418, 421, 465, 509, 546, 615, 633, 634, 637, 639, 645, 651, 698, 735, 771, 820, 851, 864, 873, 874], "str": [1, 2, 3, 6, 7, 8, 10, 11, 12, 13, 14, 16, 18, 19, 23, 24, 25, 27, 28, 29, 30, 31, 33, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 66, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 100, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 141, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 170, 171, 172, 173, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 198, 199, 200, 201, 205, 227, 231, 234, 238, 241, 245, 252, 260, 261, 264, 269, 274, 275, 277, 284, 288, 294, 295, 297, 298, 299, 302, 307, 309, 314, 315, 317, 324, 330, 338, 339, 343, 346, 349, 352, 353, 354, 359, 360, 362, 369, 371, 372, 373, 376, 384, 386, 387, 396, 398, 403, 405, 406, 418, 421, 422, 433, 436, 437, 438, 440, 441, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 484, 485, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 523, 524, 542, 543, 544, 546, 548, 557, 562, 568, 569, 576, 586, 587, 588, 589, 593, 594, 595, 598, 600, 604, 605, 606, 607, 608, 615, 633, 634, 639, 640, 641, 642, 646, 647, 651, 657, 659, 677, 678, 679, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 700, 701, 702, 708, 710, 711, 712, 713, 718, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 737, 738, 739, 747, 748, 749, 751, 755, 757, 758, 759, 760, 761, 762, 763, 764, 765, 767, 768, 769, 770, 771, 773, 775, 776, 782, 795, 797, 798, 799, 800, 802, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 822, 823, 824, 827, 829, 830, 831, 833, 834, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 847, 848, 849, 850, 851, 853, 854, 855], "schema": [1, 2, 3, 269, 276, 281, 288, 296, 304, 309, 316, 321, 330, 340, 348, 354, 361, 366, 456, 459, 474, 475, 500, 503, 517, 518, 522, 525, 527, 559, 561, 578, 581, 614, 663, 691, 694, 728, 731, 764, 767, 795, 799, 812, 815, 827, 843, 846, 859, 866, 872, 873, 878], "cmdschema": [1, 2, 26, 878], "none": [1, 2, 3, 4, 10, 11, 12, 14, 23, 26, 27, 28, 30, 31, 36, 37, 38, 40, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 59, 60, 64, 67, 68, 71, 72, 73, 75, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 94, 95, 98, 103, 104, 105, 107, 110, 111, 112, 113, 114, 119, 120, 121, 122, 123, 124, 126, 127, 130, 133, 134, 139, 142, 143, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 171, 172, 173, 177, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 203, 222, 223, 227, 231, 234, 238, 241, 245, 254, 256, 257, 265, 266, 270, 272, 274, 275, 276, 278, 279, 282, 284, 285, 289, 292, 294, 300, 301, 305, 307, 310, 312, 314, 315, 316, 318, 319, 322, 324, 331, 336, 338, 344, 345, 350, 352, 355, 357, 359, 360, 361, 363, 364, 367, 369, 371, 372, 373, 379, 393, 402, 403, 405, 414, 415, 421, 430, 431, 433, 434, 435, 437, 438, 441, 446, 449, 450, 451, 452, 453, 454, 458, 459, 460, 461, 462, 465, 467, 477, 479, 481, 482, 485, 490, 493, 494, 495, 496, 497, 498, 502, 503, 504, 505, 506, 509, 511, 520, 527, 541, 542, 543, 544, 545, 548, 549, 557, 558, 559, 572, 584, 585, 586, 587, 588, 589, 605, 606, 607, 608, 614, 621, 624, 625, 630, 631, 645, 652, 653, 656, 657, 659, 660, 661, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 684, 685, 686, 687, 688, 689, 693, 694, 695, 696, 697, 698, 700, 704, 707, 708, 709, 710, 711, 712, 713, 714, 716, 718, 721, 722, 723, 724, 725, 726, 730, 731, 732, 733, 734, 735, 737, 740, 744, 745, 747, 748, 749, 751, 752, 753, 757, 758, 759, 760, 761, 762, 766, 767, 768, 769, 770, 771, 773, 774, 777, 784, 786, 787, 792, 793, 796, 797, 798, 800, 802, 805, 806, 807, 808, 809, 814, 815, 816, 817, 818, 820, 822, 825, 827, 828, 829, 830, 831, 833, 836, 837, 838, 839, 840, 841, 845, 846, 847, 848, 849, 851, 853, 856, 857, 865, 869, 874, 878, 883], "overwrite_schema": [1, 2], "bool": [1, 2, 3, 4, 5, 6, 7, 8, 10, 15, 18, 23, 25, 27, 28, 30, 31, 37, 38, 40, 44, 45, 46, 50, 53, 54, 55, 56, 57, 59, 61, 62, 66, 72, 73, 75, 79, 80, 81, 85, 88, 89, 90, 91, 92, 94, 96, 97, 100, 104, 105, 107, 111, 112, 113, 117, 120, 121, 122, 123, 124, 126, 128, 129, 132, 171, 173, 177, 181, 182, 183, 187, 190, 191, 192, 193, 196, 198, 200, 201, 205, 213, 386, 393, 398, 403, 405, 414, 421, 430, 433, 438, 441, 442, 446, 450, 451, 452, 454, 456, 459, 460, 461, 462, 465, 467, 471, 472, 479, 482, 485, 486, 490, 494, 495, 496, 498, 500, 503, 504, 505, 506, 509, 511, 514, 515, 542, 543, 544, 548, 549, 553, 558, 585, 586, 587, 588, 589, 600, 604, 605, 607, 608, 609, 611, 657, 678, 679, 681, 685, 686, 687, 691, 694, 695, 696, 697, 698, 700, 701, 702, 712, 713, 718, 722, 723, 724, 728, 731, 732, 733, 734, 735, 737, 738, 739, 748, 749, 751, 758, 759, 760, 764, 767, 768, 769, 770, 771, 773, 775, 776, 798, 800, 802, 806, 807, 808, 812, 815, 816, 817, 818, 820, 822, 823, 824, 830, 831, 833, 837, 838, 839, 843, 846, 847, 848, 849, 851, 853, 854, 855], "fals": [1, 2, 3, 4, 5, 7, 8, 18, 25, 27, 30, 31, 37, 38, 40, 44, 45, 46, 53, 57, 59, 60, 66, 72, 73, 75, 79, 80, 81, 88, 92, 94, 95, 100, 104, 105, 107, 111, 112, 113, 120, 124, 126, 127, 132, 171, 173, 177, 181, 182, 183, 185, 190, 196, 198, 199, 205, 382, 386, 393, 398, 405, 414, 421, 430, 433, 438, 441, 446, 450, 451, 452, 454, 459, 465, 467, 479, 482, 485, 490, 494, 495, 496, 498, 503, 509, 511, 527, 541, 542, 543, 544, 545, 548, 549, 558, 585, 586, 587, 588, 589, 600, 604, 605, 606, 607, 608, 611, 657, 678, 679, 681, 685, 686, 687, 689, 694, 698, 700, 712, 713, 718, 722, 723, 724, 726, 731, 735, 737, 748, 749, 751, 758, 759, 760, 762, 767, 771, 773, 798, 800, 802, 806, 807, 808, 810, 815, 820, 822, 830, 831, 833, 837, 838, 839, 841, 846, 851, 853, 865, 869, 873], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 33, 63, 67, 68, 69, 101, 102, 127, 132, 133, 134, 135, 136, 141, 151, 165, 175, 176, 194, 207, 208, 222, 223, 224, 225, 226, 232, 233, 234, 238, 239, 240, 246, 248, 250, 251, 268, 269, 270, 271, 280, 284, 285, 286, 288, 289, 290, 291, 297, 298, 302, 303, 307, 308, 309, 310, 311, 320, 324, 325, 330, 331, 333, 334, 335, 341, 342, 346, 347, 349, 352, 353, 354, 355, 356, 357, 358, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 379, 381, 382, 383, 384, 386, 387, 392, 393, 394, 398, 399, 400, 401, 402, 403, 416, 418, 419, 421, 423, 429, 431, 433, 444, 445, 479, 480, 488, 489, 521, 523, 524, 525, 527, 546, 547, 554, 559, 560, 561, 613, 614, 615, 617, 618, 619, 620, 623, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 651, 652, 653, 654, 656, 657, 659, 660, 661, 663, 703, 706, 707, 708, 742, 743, 744, 746, 779, 780, 781, 782, 783, 795, 827, 859, 860, 864, 865, 866, 868, 871, 872, 873, 874, 878, 880, 883], "databas": [1, 2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 22, 24, 25, 30, 31, 63, 195, 387, 405, 406, 415, 416, 421, 422, 431, 435, 656, 657, 708, 819, 865, 867, 868, 871, 872, 878, 879, 883], "match": [1, 2, 11, 13, 14, 16, 23, 25, 30, 31, 63, 280, 284, 285, 303, 307, 320, 324, 347, 352, 365, 403, 433, 444, 488, 542, 543, 545, 572, 604, 609, 708, 862, 865, 866, 868, 871, 878, 880, 883, 884], "provid": [1, 3, 25, 30, 31, 32, 43, 78, 101, 110, 144, 145, 150, 165, 180, 222, 246, 258, 259, 267, 280, 286, 303, 320, 347, 365, 369, 374, 449, 478, 493, 521, 575, 586, 587, 588, 589, 626, 627, 632, 662, 684, 708, 715, 721, 744, 757, 788, 789, 794, 805, 836, 862, 864, 865, 866, 867, 868, 871, 873, 874, 878, 879, 880, 883, 884], "an": [1, 3, 4, 7, 8, 43, 66, 78, 100, 101, 110, 132, 150, 180, 205, 207, 267, 270, 272, 287, 289, 292, 298, 310, 312, 329, 331, 336, 353, 355, 357, 369, 374, 375, 386, 387, 405, 406, 421, 422, 449, 493, 542, 545, 546, 561, 569, 572, 586, 587, 605, 606, 608, 614, 632, 641, 643, 646, 647, 648, 651, 684, 708, 715, 721, 744, 757, 794, 805, 836, 864, 865, 866, 868, 871, 873, 874, 878, 879, 883, 884], "easi": [1, 864, 865, 866, 868, 874], "us": [1, 7, 8, 11, 14, 23, 32, 37, 45, 46, 50, 52, 72, 80, 81, 85, 87, 104, 112, 113, 117, 119, 136, 165, 170, 171, 172, 182, 183, 187, 189, 194, 195, 207, 231, 238, 245, 273, 293, 313, 337, 358, 383, 403, 438, 440, 451, 452, 456, 458, 482, 484, 495, 496, 500, 502, 542, 543, 544, 545, 548, 551, 552, 553, 557, 564, 567, 572, 574, 575, 579, 580, 586, 587, 588, 590, 591, 593, 594, 596, 605, 606, 607, 608, 609, 616, 643, 648, 649, 650, 654, 658, 662, 663, 678, 686, 687, 691, 693, 708, 712, 716, 723, 724, 728, 730, 748, 759, 760, 764, 766, 798, 799, 807, 808, 812, 814, 819, 830, 838, 839, 843, 845, 859, 861, 862, 864, 865, 868, 870, 871, 872, 873, 874, 878, 879, 883, 884], "api": [1, 864, 865, 868, 873, 874, 878, 883, 884], "access": [1, 67, 133, 286, 325, 332, 436, 480, 575, 578, 581, 606, 616, 617, 862, 864, 865, 873, 874, 879, 883, 884], "procedur": [1, 27, 403, 662, 864, 865, 867, 880], "store": [1, 278, 300, 318, 344, 363, 383, 464, 473, 508, 516, 590, 591, 865, 866, 873, 874, 883], "sql": [1, 2, 12, 14, 15, 16, 17, 22, 24, 63, 271, 291, 311, 335, 356, 445, 478, 489, 521, 864, 873], "furthermor": [1, 873, 878], "instanc": [1, 2, 7, 8, 10, 17, 27, 28, 30, 31, 33, 43, 44, 49, 54, 66, 78, 79, 84, 89, 100, 110, 111, 116, 121, 132, 134, 141, 180, 181, 186, 191, 202, 205, 226, 232, 233, 240, 250, 269, 270, 277, 278, 282, 283, 288, 289, 296, 299, 300, 305, 306, 309, 310, 317, 318, 322, 323, 330, 331, 340, 343, 344, 350, 351, 354, 355, 362, 363, 367, 368, 376, 383, 387, 406, 422, 436, 449, 450, 455, 460, 480, 493, 494, 499, 504, 558, 600, 608, 609, 684, 685, 690, 695, 706, 707, 721, 722, 727, 732, 744, 757, 758, 763, 768, 805, 806, 811, 816, 836, 837, 842, 847, 862, 864, 865, 866, 874, 878, 879, 883], "varieti": [1, 222, 862, 863, 864, 865, 867, 868, 871, 873, 874, 878, 883], "sort": [1, 548, 562, 605, 606, 864, 873, 883], "process": [1, 3, 4, 6, 7, 8, 10, 14, 17, 18, 19, 25, 27, 28, 32, 206, 207, 269, 288, 309, 325, 330, 354, 369, 403, 432, 433, 436, 439, 440, 442, 444, 445, 469, 470, 473, 474, 475, 476, 478, 479, 480, 483, 484, 486, 488, 489, 512, 513, 516, 517, 518, 519, 521, 649, 708, 864, 865, 871, 874, 880, 883], "perform": [1, 10, 17, 25, 27, 28, 43, 52, 78, 87, 110, 119, 180, 189, 275, 295, 315, 339, 360, 449, 458, 493, 502, 542, 543, 609, 656, 657, 684, 693, 721, 730, 742, 743, 757, 766, 779, 805, 814, 836, 845, 864, 866, 871, 873, 874, 878, 879, 883], "other": [1, 43, 78, 101, 110, 180, 286, 353, 449, 478, 493, 521, 576, 586, 587, 588, 589, 605, 609, 611, 684, 721, 757, 805, 836, 862, 863, 864, 865, 866, 871, 873, 874, 878, 880, 883, 884], "import": [1, 207, 280, 303, 320, 347, 365, 387, 406, 422, 558, 608, 862, 864, 865, 866, 867, 873, 874, 878, 879, 883, 884], "task": [1, 17, 616, 862, 864, 866, 871, 873, 879, 883, 884], "underli": [1, 2, 10, 16, 22, 28, 63, 134, 383, 393, 407, 414, 416, 423, 430, 475, 518, 545, 553, 781, 862, 864, 865, 873, 874, 878, 879], "data": [1, 3, 30, 31, 32, 37, 43, 44, 54, 55, 56, 60, 66, 72, 78, 79, 89, 90, 91, 95, 100, 101, 104, 110, 111, 121, 122, 123, 127, 132, 165, 171, 180, 181, 191, 192, 193, 195, 199, 205, 207, 227, 234, 241, 246, 284, 286, 297, 298, 302, 307, 324, 346, 352, 374, 383, 393, 414, 415, 416, 430, 431, 438, 449, 450, 460, 461, 462, 475, 482, 493, 494, 504, 505, 506, 518, 522, 527, 541, 542, 543, 545, 553, 579, 597, 600, 604, 605, 609, 623, 643, 645, 648, 662, 663, 676, 678, 684, 685, 695, 696, 697, 707, 708, 709, 710, 712, 721, 722, 732, 733, 734, 742, 744, 745, 748, 757, 758, 768, 769, 770, 795, 796, 798, 805, 806, 816, 817, 818, 819, 827, 828, 830, 836, 837, 847, 848, 849, 859, 860, 865, 866, 872, 874, 878, 879, 883], "follow": [1, 149, 266, 554, 631, 643, 648, 649, 744, 793, 862, 864, 866, 870, 873, 874, 878, 879, 883], "3": [1, 444, 488, 543, 545, 558, 568, 575, 576, 593, 594, 596, 597, 598, 599, 600, 607, 608, 742, 864, 865, 866, 869, 873, 874, 878, 883, 884], "type": [1, 3, 4, 6, 12, 13, 14, 15, 16, 17, 22, 23, 29, 30, 31, 45, 46, 50, 51, 53, 54, 55, 56, 63, 80, 81, 85, 86, 88, 89, 90, 91, 112, 113, 117, 118, 120, 121, 122, 123, 135, 136, 141, 165, 166, 172, 175, 182, 183, 187, 188, 190, 191, 192, 193, 194, 195, 202, 210, 212, 213, 219, 220, 226, 227, 231, 232, 233, 234, 238, 240, 241, 245, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 287, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 326, 327, 328, 329, 332, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 386, 387, 389, 390, 393, 398, 403, 405, 406, 407, 409, 410, 414, 415, 421, 422, 423, 425, 426, 430, 431, 433, 434, 435, 439, 442, 444, 445, 451, 452, 454, 456, 457, 459, 460, 461, 462, 463, 464, 469, 470, 473, 474, 475, 476, 483, 486, 488, 489, 495, 496, 498, 500, 501, 503, 504, 505, 506, 507, 508, 512, 513, 516, 517, 518, 519, 544, 545, 548, 549, 554, 557, 558, 560, 561, 562, 568, 572, 575, 586, 587, 602, 604, 608, 614, 615, 641, 643, 645, 651, 656, 657, 861, 862, 864, 865, 866, 868, 871, 872, 873, 878, 884], "contain": [1, 30, 31, 45, 56, 80, 91, 112, 123, 135, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 182, 193, 213, 232, 272, 280, 292, 303, 312, 320, 336, 347, 357, 365, 383, 403, 416, 451, 462, 463, 475, 495, 506, 507, 518, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 562, 611, 658, 662, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 675, 686, 697, 723, 734, 759, 770, 807, 818, 838, 849, 862, 864, 865, 866, 868, 873, 874, 878, 883], "origin": [1, 14, 15, 35, 543, 600, 609, 657, 864, 873, 878], "wa": [1, 53, 88, 120, 190, 383, 416, 459, 503, 545, 694, 731, 767, 815, 846, 865, 873, 874, 884], "These": [1, 383, 861, 862, 866, 872, 873, 874, 878, 883, 884], "ar": [1, 16, 27, 30, 31, 37, 43, 45, 46, 51, 60, 63, 66, 72, 78, 80, 81, 86, 95, 100, 101, 104, 110, 112, 113, 118, 127, 132, 147, 171, 180, 182, 183, 188, 195, 199, 205, 207, 213, 220, 232, 263, 271, 278, 286, 291, 300, 311, 318, 335, 344, 353, 356, 363, 383, 386, 393, 403, 405, 414, 421, 430, 436, 438, 449, 451, 452, 457, 464, 469, 480, 482, 493, 495, 496, 501, 508, 512, 542, 543, 544, 549, 565, 566, 569, 575, 578, 581, 586, 587, 588, 589, 597, 601, 605, 609, 629, 649, 678, 684, 686, 687, 692, 712, 721, 723, 724, 729, 748, 757, 759, 760, 765, 791, 798, 805, 807, 808, 813, 819, 830, 836, 838, 839, 844, 861, 862, 863, 864, 865, 866, 867, 872, 873, 874, 878, 879, 880, 883, 884], "against": [1, 11, 30, 31, 55, 56, 90, 91, 122, 123, 192, 193, 227, 234, 241, 284, 285, 307, 324, 352, 461, 462, 505, 506, 696, 697, 733, 734, 742, 769, 770, 817, 818, 848, 849, 865, 866, 868, 871, 873, 874, 878], "each": [1, 10, 27, 28, 63, 207, 219, 222, 270, 272, 282, 284, 285, 289, 292, 305, 307, 310, 312, 322, 324, 331, 336, 350, 352, 355, 357, 367, 369, 374, 403, 415, 431, 444, 488, 542, 543, 551, 554, 557, 561, 565, 575, 614, 861, 864, 865, 866, 873, 874, 878, 880, 884], "relev": [1, 14, 271, 291, 311, 335, 356, 475, 518, 861, 864, 865, 866, 878, 879], "meta": [1, 5, 6, 7, 8, 10, 16, 18, 19, 20, 28, 415, 431, 527, 541, 553, 590, 591, 600, 609, 656, 657, 864], "inform": [1, 249, 270, 272, 275, 282, 286, 289, 292, 295, 305, 310, 312, 315, 322, 331, 336, 339, 350, 355, 357, 360, 367, 478, 521, 522, 859, 862, 864, 865, 866, 867, 872, 878, 884], "what": [1, 7, 8, 166, 561, 578, 581, 614, 862, 864, 865, 874, 878, 884], "have": [1, 14, 17, 43, 45, 46, 49, 78, 80, 81, 84, 110, 112, 113, 116, 180, 182, 183, 186, 195, 207, 219, 444, 449, 451, 452, 455, 488, 493, 495, 496, 499, 558, 561, 564, 578, 581, 606, 608, 614, 684, 686, 687, 690, 708, 716, 721, 723, 724, 727, 744, 757, 759, 760, 763, 805, 807, 808, 811, 819, 836, 838, 839, 842, 862, 864, 865, 866, 872, 873, 874, 878, 879, 883, 884], "alreadi": [1, 2, 7, 8, 15, 17, 25, 53, 60, 66, 88, 95, 100, 120, 127, 132, 190, 199, 205, 459, 503, 542, 604, 605, 606, 694, 731, 767, 815, 846, 864, 865, 867, 873, 874, 879, 883], "been": [1, 7, 8, 17, 25, 45, 46, 49, 80, 81, 84, 112, 113, 116, 182, 183, 186, 451, 452, 455, 495, 496, 499, 686, 687, 690, 723, 724, 727, 759, 760, 763, 807, 808, 811, 838, 839, 842, 864, 866, 873, 878], "attribut": [1, 32, 33, 50, 54, 69, 85, 89, 101, 117, 121, 134, 151, 170, 187, 191, 207, 225, 232, 239, 250, 268, 286, 308, 325, 353, 375, 383, 394, 416, 433, 456, 460, 475, 478, 479, 500, 504, 518, 521, 527, 545, 553, 572, 578, 581, 590, 591, 598, 617, 633, 646, 647, 663, 691, 695, 708, 728, 732, 744, 764, 768, 795, 812, 816, 827, 843, 847, 856, 864, 866, 873, 874, 878, 879, 883, 884], "initi": [2, 34, 52, 53, 70, 87, 88, 102, 119, 120, 134, 136, 164, 170, 189, 190, 226, 233, 240, 251, 269, 273, 288, 293, 309, 313, 330, 337, 354, 358, 371, 376, 384, 396, 418, 436, 458, 459, 475, 480, 502, 503, 518, 545, 609, 693, 694, 730, 731, 744, 766, 767, 781, 814, 815, 845, 846, 866, 874, 879, 883], "paramet": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 18, 19, 23, 24, 25, 27, 28, 30, 31, 34, 37, 43, 44, 45, 46, 50, 51, 53, 54, 55, 56, 60, 66, 70, 72, 78, 79, 80, 81, 85, 86, 88, 89, 90, 91, 95, 100, 102, 104, 110, 111, 112, 113, 117, 118, 120, 121, 122, 123, 127, 132, 134, 136, 141, 164, 171, 175, 180, 181, 182, 183, 187, 188, 190, 191, 192, 193, 194, 199, 205, 207, 211, 212, 213, 219, 226, 227, 231, 232, 233, 234, 238, 240, 241, 245, 246, 248, 251, 269, 270, 272, 273, 280, 282, 284, 285, 288, 289, 292, 293, 297, 298, 302, 303, 305, 307, 309, 310, 312, 313, 320, 322, 324, 330, 331, 336, 337, 346, 347, 349, 350, 352, 354, 355, 357, 358, 365, 367, 369, 376, 383, 384, 386, 387, 393, 396, 398, 403, 405, 406, 414, 415, 416, 418, 421, 422, 430, 431, 436, 438, 449, 450, 451, 452, 456, 457, 459, 460, 461, 462, 475, 480, 482, 493, 494, 495, 496, 500, 501, 503, 504, 505, 506, 518, 542, 543, 544, 545, 546, 548, 549, 553, 557, 558, 562, 568, 569, 572, 575, 576, 585, 586, 587, 588, 589, 593, 594, 595, 596, 597, 598, 599, 600, 602, 604, 607, 608, 609, 611, 614, 615, 641, 643, 645, 646, 647, 648, 651, 656, 657, 678, 684, 685, 686, 687, 691, 692, 694, 695, 696, 697, 706, 707, 712, 715, 721, 722, 723, 724, 728, 729, 731, 732, 733, 734, 742, 748, 757, 758, 759, 760, 764, 765, 767, 768, 769, 770, 781, 798, 805, 806, 807, 808, 812, 813, 815, 816, 817, 818, 830, 836, 837, 838, 839, 843, 844, 846, 847, 848, 849, 859, 860, 864, 865, 866, 871, 873, 874, 880, 883], "pathlib": [2, 22], "load": [2, 13, 15, 30, 31, 141, 251, 369, 376, 386, 387, 405, 406, 421, 422, 606, 656, 657, 865, 866, 872, 873, 874, 883], "option": [2, 3, 4, 7, 8, 10, 11, 14, 23, 27, 28, 30, 31, 37, 45, 60, 66, 72, 80, 95, 100, 104, 112, 127, 132, 171, 182, 199, 205, 279, 301, 319, 345, 364, 369, 371, 372, 373, 393, 398, 403, 414, 430, 438, 451, 482, 495, 548, 549, 605, 606, 607, 614, 651, 657, 678, 686, 712, 714, 715, 716, 723, 748, 759, 798, 807, 830, 838, 862, 864, 865, 872, 873, 874, 878, 879, 883], "correspond": [2, 27, 35, 41, 63, 76, 108, 141, 146, 169, 170, 178, 262, 278, 300, 318, 344, 363, 387, 406, 422, 436, 444, 447, 480, 488, 491, 543, 545, 562, 572, 578, 580, 581, 608, 628, 651, 682, 708, 719, 755, 790, 803, 834, 850, 860, 862, 864, 865, 873, 874, 878, 883], "If": [2, 3, 4, 5, 7, 8, 10, 11, 14, 15, 18, 25, 27, 28, 30, 31, 37, 43, 45, 46, 53, 54, 55, 60, 63, 66, 72, 78, 80, 81, 88, 89, 90, 95, 100, 104, 110, 112, 113, 120, 121, 122, 127, 132, 146, 149, 171, 180, 182, 183, 190, 191, 192, 199, 205, 207, 213, 222, 262, 266, 278, 300, 318, 344, 363, 369, 371, 386, 393, 398, 403, 405, 414, 421, 430, 438, 442, 449, 451, 452, 459, 460, 461, 482, 486, 493, 495, 496, 503, 504, 505, 542, 543, 544, 553, 557, 558, 578, 581, 586, 587, 588, 595, 602, 604, 605, 606, 607, 608, 609, 614, 628, 631, 651, 657, 678, 684, 686, 687, 694, 695, 696, 712, 715, 716, 721, 723, 724, 731, 732, 733, 742, 748, 757, 759, 760, 767, 768, 769, 790, 793, 798, 805, 807, 808, 815, 816, 817, 830, 836, 838, 839, 846, 847, 848, 864, 865, 866, 873, 874, 878, 879], "specifi": [2, 25, 27, 32, 37, 45, 60, 66, 72, 80, 95, 100, 104, 112, 127, 132, 146, 171, 182, 195, 199, 205, 222, 262, 273, 280, 293, 303, 313, 320, 337, 347, 358, 365, 371, 376, 383, 384, 387, 396, 403, 406, 415, 416, 418, 422, 431, 434, 435, 438, 444, 451, 482, 488, 495, 525, 542, 543, 545, 548, 558, 562, 572, 576, 594, 602, 608, 628, 678, 686, 707, 708, 710, 712, 714, 715, 723, 742, 743, 744, 748, 759, 779, 790, 798, 807, 819, 830, 838, 862, 864, 865, 873, 874, 878, 879, 883], "search": [2, 14, 23, 220, 270, 282, 284, 285, 289, 305, 307, 310, 322, 324, 331, 350, 352, 355, 367, 369, 371, 372, 373, 415, 431, 538, 605, 642, 643, 645, 646, 647, 648, 864, 865, 866, 873, 874, 878], "file": [2, 3, 13, 14, 30, 31, 60, 66, 95, 100, 127, 132, 141, 199, 205, 269, 274, 278, 288, 294, 300, 309, 314, 318, 330, 338, 344, 354, 359, 363, 383, 384, 386, 396, 398, 405, 416, 418, 421, 546, 552, 606, 633, 638, 654, 864, 865, 866, 873, 878, 883], "correct": [2, 170, 269, 273, 288, 293, 309, 313, 330, 337, 354, 358, 444, 445, 488, 489, 561, 614, 864, 865, 873, 874, 878, 883], "signatur": [2, 444, 488, 874, 878], "same": [2, 170, 207, 272, 292, 312, 336, 357, 398, 403, 522, 545, 553, 561, 562, 572, 585, 586, 587, 588, 589, 593, 594, 596, 600, 602, 606, 611, 614, 744, 864, 865, 866, 873, 874, 878, 883, 884], "directori": [2, 141, 874], "For": [2, 32, 63, 134, 207, 249, 270, 272, 274, 276, 278, 281, 282, 289, 292, 294, 296, 300, 304, 305, 310, 312, 314, 316, 318, 321, 322, 331, 336, 338, 340, 344, 348, 350, 355, 357, 359, 361, 363, 366, 367, 432, 522, 600, 608, 864, 865, 866, 873, 874, 878, 883, 884], "filenam": [2, 60, 66, 95, 100, 127, 132, 199, 205], "we": [2, 248, 432, 522, 558, 605, 608, 864, 865, 866, 867, 869, 871, 873, 874, 878, 879, 880, 883, 884], "expect": [2, 707, 865, 866, 873, 878], "locat": [2, 14, 376, 864, 865, 873, 874, 883, 884], "path_schema": 2, "json": [2, 45, 46, 50, 55, 80, 81, 85, 90, 112, 113, 117, 122, 182, 183, 187, 192, 451, 452, 456, 461, 495, 496, 500, 505, 686, 687, 691, 696, 723, 724, 728, 733, 759, 760, 764, 769, 807, 808, 812, 817, 838, 839, 843, 848, 883], "true": [2, 3, 4, 5, 7, 8, 10, 15, 23, 25, 27, 28, 30, 31, 37, 44, 45, 46, 48, 50, 53, 61, 62, 66, 72, 79, 80, 81, 85, 88, 96, 97, 100, 104, 111, 112, 113, 117, 120, 128, 129, 132, 171, 181, 182, 183, 185, 187, 190, 200, 201, 205, 207, 213, 218, 383, 393, 398, 402, 403, 414, 430, 438, 442, 450, 451, 452, 454, 456, 459, 471, 472, 482, 486, 494, 495, 496, 498, 500, 503, 514, 515, 527, 541, 542, 543, 549, 553, 564, 565, 566, 585, 586, 587, 588, 589, 600, 605, 606, 607, 608, 609, 611, 657, 678, 683, 685, 686, 687, 689, 691, 694, 701, 702, 712, 722, 723, 724, 728, 731, 738, 739, 748, 758, 759, 760, 764, 767, 775, 776, 798, 804, 806, 807, 808, 812, 815, 823, 824, 830, 835, 837, 838, 839, 841, 843, 846, 854, 855, 864, 865, 869, 873, 878], "written": [2, 398, 864, 865, 873, 874, 879, 883], "disk": [2, 10, 28, 637, 638, 864, 865, 873, 883], "standard": [2, 166, 194, 232, 280, 303, 320, 347, 365, 383, 416, 478, 521, 561, 575, 607, 614, 649, 663, 715, 860, 862, 864, 866, 873, 883], "posit": [2, 134, 165, 246, 248, 272, 280, 282, 292, 303, 305, 312, 320, 322, 336, 347, 350, 357, 365, 367, 374, 379, 380, 391, 411, 427, 538, 542, 543, 560, 568, 572, 645, 646, 647, 676, 709, 745, 796, 828, 864, 865, 871, 873, 874, 878], "even": [2, 195, 605, 606, 819, 871], "one": [2, 3, 53, 63, 88, 120, 190, 459, 503, 542, 544, 545, 548, 569, 585, 586, 587, 588, 589, 607, 609, 611, 694, 714, 716, 731, 742, 743, 767, 815, 846, 862, 864, 865, 870, 873, 878, 879, 880, 883], "exist": [2, 3, 4, 30, 31, 60, 66, 95, 100, 127, 132, 199, 205, 369, 398, 403, 415, 431, 522, 542, 543, 545, 546, 599, 600, 604, 605, 606, 607, 645, 864, 865, 866, 873, 880, 883], "catalog_path": 3, "overwrit": [3, 4, 5, 7, 8, 10, 25, 27, 28, 30, 31, 60, 66, 95, 100, 127, 132, 199, 205, 386, 398, 403, 405, 421, 864, 873], "kwarg": [3, 4, 7, 8, 10, 11, 23, 27, 28, 30, 31, 60, 95, 127, 199, 222, 224, 225, 226, 227, 231, 232, 233, 234, 238, 239, 240, 241, 245, 246, 268, 269, 284, 285, 286, 288, 307, 308, 309, 324, 325, 330, 341, 342, 352, 353, 354, 369, 381, 398, 399, 400, 401, 402, 403, 413, 415, 429, 431, 436, 480, 527, 541, 547, 615, 651, 652, 653, 865, 866, 874, 879], "add": [3, 4, 11, 18, 23, 44, 79, 111, 181, 270, 283, 289, 306, 310, 323, 326, 331, 351, 355, 368, 369, 415, 431, 436, 450, 480, 494, 542, 543, 545, 572, 604, 685, 722, 758, 806, 837, 864, 865, 867, 873, 874, 879], "sourcetableschema": [3, 33, 35, 48, 63, 269, 276, 281, 288, 296, 304, 309, 316, 321, 330, 340, 348, 354, 361, 366, 522, 527, 559, 561, 578, 581, 603, 614, 663, 795, 827, 862, 864, 873, 874, 883, 884], "associ": [3, 170, 269, 286, 288, 309, 330, 333, 354, 383, 475, 518, 522, 570, 603, 614, 873, 874, 878, 883, 884], "system": [3, 23, 168, 169, 170, 172, 377, 383, 385, 404, 416, 420, 605, 616, 744, 799, 861, 862, 864, 865, 869, 873, 874, 883, 884], "attempt": [3, 53, 60, 88, 95, 120, 127, 190, 199, 442, 459, 486, 503, 694, 731, 767, 815, 846, 874, 883], "construct": [3, 175, 276, 281, 296, 304, 316, 321, 340, 348, 361, 366, 403, 559, 623, 663, 827, 859, 864, 873, 874, 884], "regardless": [3, 4, 10, 28, 66, 100, 132, 205, 651, 864, 866, 873, 878], "whether": [3, 4, 45, 46, 50, 53, 54, 55, 56, 80, 81, 85, 88, 89, 90, 91, 112, 113, 117, 120, 121, 122, 123, 182, 183, 187, 190, 191, 192, 193, 216, 218, 451, 452, 456, 459, 460, 461, 462, 495, 496, 500, 503, 504, 505, 506, 544, 609, 686, 687, 691, 694, 695, 696, 697, 723, 724, 728, 731, 732, 733, 734, 759, 760, 764, 767, 768, 769, 770, 807, 808, 812, 815, 816, 817, 818, 838, 839, 843, 846, 847, 848, 849], "addit": [3, 4, 10, 18, 23, 28, 45, 46, 52, 54, 80, 81, 87, 89, 112, 113, 119, 121, 182, 183, 189, 191, 227, 231, 234, 238, 241, 245, 326, 369, 383, 398, 403, 415, 416, 431, 451, 452, 458, 460, 495, 496, 502, 504, 522, 558, 569, 608, 686, 687, 693, 695, 723, 724, 730, 732, 759, 760, 766, 768, 807, 808, 814, 816, 838, 839, 845, 847, 864, 865, 867, 871, 873, 874, 883, 884], "argument": [3, 4, 10, 23, 28, 34, 70, 102, 164, 212, 398, 403, 415, 431, 544, 545, 572, 601, 608, 609, 656, 657, 676, 709, 715, 745, 796, 828, 864, 865, 873, 883], "pass": [3, 4, 7, 8, 10, 23, 28, 34, 43, 45, 46, 51, 54, 55, 56, 70, 78, 80, 81, 86, 89, 90, 91, 102, 110, 112, 113, 118, 121, 122, 123, 164, 180, 182, 183, 188, 191, 192, 193, 227, 234, 241, 369, 386, 403, 405, 415, 421, 431, 449, 451, 452, 457, 460, 461, 462, 493, 495, 496, 501, 504, 505, 506, 605, 656, 657, 684, 686, 687, 692, 695, 696, 697, 714, 716, 721, 723, 724, 729, 732, 733, 734, 757, 759, 760, 765, 768, 769, 770, 805, 807, 808, 813, 816, 817, 818, 836, 838, 839, 844, 847, 848, 849, 865, 866, 880], "through": [3, 4, 23, 286, 371, 415, 431, 864, 865, 866, 873, 874, 878, 883, 884], "return": [3, 4, 6, 7, 8, 12, 13, 14, 15, 30, 31, 37, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 72, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 104, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 141, 143, 146, 147, 148, 165, 170, 171, 175, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 248, 257, 262, 263, 265, 271, 272, 273, 276, 278, 280, 281, 282, 284, 285, 291, 292, 293, 296, 297, 298, 300, 302, 303, 304, 305, 307, 311, 312, 313, 316, 318, 320, 321, 322, 324, 326, 328, 335, 336, 337, 340, 344, 346, 347, 348, 349, 350, 352, 356, 357, 358, 361, 363, 365, 366, 367, 369, 371, 372, 373, 386, 387, 389, 390, 393, 398, 405, 406, 407, 409, 410, 414, 415, 421, 422, 423, 425, 426, 430, 431, 438, 444, 445, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 461, 462, 478, 482, 488, 489, 493, 494, 495, 496, 497, 499, 500, 501, 503, 504, 505, 506, 521, 548, 549, 553, 554, 556, 557, 558, 560, 561, 562, 567, 568, 569, 570, 575, 578, 579, 580, 581, 586, 587, 604, 607, 608, 611, 614, 615, 625, 628, 629, 630, 641, 642, 643, 645, 651, 656, 657, 678, 684, 685, 686, 687, 688, 690, 691, 692, 694, 695, 696, 697, 712, 715, 721, 722, 723, 724, 725, 727, 728, 729, 731, 732, 733, 734, 748, 757, 758, 759, 760, 761, 763, 764, 765, 767, 768, 769, 770, 787, 790, 791, 792, 798, 805, 806, 807, 808, 809, 811, 812, 813, 815, 816, 817, 818, 819, 830, 836, 837, 838, 839, 840, 842, 843, 844, 846, 847, 848, 849, 859, 860, 864, 866, 873, 874, 878, 879, 883], "structur": [4, 11, 25, 30, 31, 32, 33, 63, 151, 175, 232, 662, 663, 708, 742, 744, 827, 864, 865, 866, 867, 872, 873, 874, 878, 883, 884], "sourcet": [4, 31, 151, 175, 271, 273, 280, 284, 285, 291, 293, 302, 303, 307, 311, 313, 320, 324, 335, 337, 346, 347, 352, 356, 358, 365, 522, 614, 615, 742, 864, 866, 873, 874, 883, 884], "gener": [5, 23, 34, 43, 45, 46, 50, 51, 63, 70, 78, 80, 81, 85, 86, 101, 102, 110, 112, 113, 117, 118, 141, 164, 180, 182, 183, 187, 188, 218, 222, 232, 268, 274, 276, 278, 281, 294, 296, 300, 304, 308, 314, 316, 318, 321, 338, 340, 344, 348, 359, 361, 363, 366, 383, 398, 403, 442, 444, 445, 449, 451, 452, 456, 457, 478, 486, 488, 489, 493, 495, 496, 500, 501, 521, 522, 558, 559, 633, 645, 684, 686, 687, 691, 692, 721, 723, 724, 728, 729, 744, 757, 759, 760, 764, 765, 781, 805, 807, 808, 812, 813, 836, 838, 839, 843, 844, 862, 864, 865, 866, 871, 872, 873, 874, 878, 879, 883], "blank": [5, 865, 873, 874], "version": [5, 207, 561, 600, 605, 606, 608, 614, 641, 659, 859, 864, 870, 873, 874, 883, 884], "check_meta": [5, 17, 18, 19, 20], "meta_add": [5, 6, 17, 19, 20], "meta_remov": [5, 6, 17, 18, 20], "meta_reset": [5, 6, 17, 18, 19], "check": [6, 10, 17, 28, 564, 565, 707, 742, 743, 779, 865, 868, 871, 873], "record": [6, 18, 19], "static": [7, 8, 297, 298, 333, 341, 342, 349, 706, 707], "flag": [7, 8, 474, 517, 873], "afunc": [7, 8], "callabl": [7, 8, 40, 75, 107, 177, 269, 271, 273, 288, 291, 293, 309, 311, 313, 330, 335, 337, 354, 356, 358, 375, 433, 444, 446, 454, 468, 488, 490, 656, 657, 681, 708, 715, 718, 726, 751, 802, 833, 865, 878], "ani": [7, 8, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 64, 65, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 93, 96, 97, 98, 99, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 125, 128, 129, 130, 131, 137, 167, 171, 173, 174, 177, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 197, 200, 201, 203, 204, 252, 275, 282, 295, 305, 315, 322, 339, 350, 360, 367, 383, 403, 437, 438, 441, 443, 446, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 466, 471, 472, 477, 481, 482, 485, 487, 490, 493, 494, 495, 496, 497, 500, 501, 502, 503, 504, 505, 506, 510, 514, 515, 520, 542, 543, 549, 564, 566, 604, 605, 623, 639, 641, 642, 643, 646, 647, 648, 649, 676, 677, 678, 679, 680, 681, 684, 685, 686, 687, 688, 691, 692, 693, 694, 695, 696, 697, 699, 701, 702, 704, 705, 708, 709, 711, 712, 713, 717, 718, 721, 722, 723, 724, 725, 728, 729, 730, 731, 732, 733, 734, 736, 738, 739, 740, 741, 745, 747, 748, 749, 750, 751, 757, 758, 759, 760, 761, 764, 765, 766, 767, 768, 769, 770, 772, 775, 776, 777, 778, 782, 796, 797, 798, 800, 801, 802, 805, 806, 807, 808, 809, 812, 813, 814, 815, 816, 817, 818, 821, 823, 824, 825, 826, 828, 829, 830, 831, 832, 833, 836, 837, 838, 839, 840, 843, 844, 845, 846, 847, 848, 849, 852, 854, 855, 857, 858, 864, 865, 867, 871, 872, 873, 878, 879, 883, 884], "tupl": [7, 8, 23, 27, 51, 86, 118, 147, 170, 188, 263, 457, 501, 545, 572, 575, 586, 587, 588, 589, 590, 591, 599, 629, 642, 651, 692, 707, 729, 765, 791, 813, 844], "collect": [7, 8, 27, 33, 135, 250, 374, 639, 640, 657, 861, 873], "dict": [7, 8, 23, 27, 33, 37, 40, 41, 44, 45, 46, 47, 48, 50, 53, 54, 55, 56, 61, 63, 72, 75, 76, 79, 80, 81, 82, 83, 85, 88, 89, 90, 91, 96, 104, 107, 108, 111, 112, 113, 114, 115, 117, 120, 121, 122, 123, 128, 135, 136, 147, 149, 151, 165, 171, 177, 178, 181, 182, 183, 184, 185, 187, 190, 191, 192, 193, 194, 200, 213, 227, 232, 234, 241, 263, 266, 269, 270, 272, 275, 279, 282, 284, 285, 288, 289, 292, 295, 301, 305, 307, 309, 310, 312, 315, 319, 322, 324, 330, 331, 336, 339, 345, 350, 352, 354, 355, 357, 360, 364, 367, 403, 438, 446, 447, 450, 451, 452, 453, 454, 456, 459, 460, 461, 462, 471, 482, 490, 491, 494, 495, 496, 497, 498, 500, 503, 504, 505, 506, 514, 545, 558, 572, 602, 605, 629, 631, 636, 637, 642, 643, 645, 648, 656, 657, 678, 681, 682, 685, 686, 687, 688, 689, 691, 694, 695, 696, 697, 701, 712, 718, 719, 722, 723, 724, 725, 726, 728, 731, 732, 733, 734, 738, 744, 748, 751, 755, 758, 759, 760, 761, 762, 764, 767, 768, 769, 770, 775, 781, 791, 793, 798, 802, 803, 806, 807, 808, 809, 810, 812, 815, 816, 817, 818, 823, 830, 833, 834, 837, 838, 839, 840, 841, 843, 846, 847, 848, 849, 854, 859, 864, 866, 873, 883], "allow_overwrit": [7, 8], "meta_kwarg": [7, 8], "decor": [7, 8, 656, 657], "wrap": [7, 8, 416, 865, 873], "base": [7, 8, 60, 95, 127, 165, 199, 276, 281, 296, 304, 316, 321, 340, 348, 361, 366, 569, 862, 864, 865, 867, 873, 874, 878, 879, 884], "simplifi": [7, 8, 286, 874, 878], "runtim": [7, 8, 656, 657, 708, 873], "context": [7, 8, 45, 46, 54, 55, 56, 80, 81, 89, 90, 91, 112, 113, 121, 122, 123, 182, 183, 191, 192, 193, 383, 451, 452, 460, 461, 462, 495, 496, 504, 505, 506, 569, 686, 687, 695, 696, 697, 723, 724, 732, 733, 734, 759, 760, 768, 769, 770, 807, 808, 816, 817, 818, 838, 839, 847, 848, 849, 865, 873, 874], "simpl": [7, 8, 63, 219, 604, 865, 872, 873, 874, 879, 884], "oper": [7, 8, 10, 17, 28, 444, 478, 488, 521, 522, 597, 607, 656, 657, 864, 866, 873, 874, 878, 884], "assign": [7, 8, 436, 480, 559, 873], "should": [7, 8, 18, 30, 42, 44, 45, 46, 63, 77, 79, 80, 81, 109, 111, 112, 113, 179, 181, 182, 183, 195, 278, 300, 318, 344, 363, 448, 450, 451, 452, 478, 492, 494, 495, 496, 521, 545, 572, 609, 614, 683, 685, 686, 687, 708, 710, 716, 720, 722, 723, 724, 744, 756, 758, 759, 760, 804, 806, 807, 808, 819, 835, 837, 838, 839, 861, 862, 864, 865, 866, 872, 873, 874, 878, 879, 883, 884], "uniqu": [7, 8, 544, 562, 586, 587, 605, 606, 871], "It": [7, 8, 207, 280, 303, 320, 347, 365, 578, 581, 862, 864, 865, 873, 874, 878, 883, 884], "identifi": [7, 8, 23, 158, 172, 250, 286, 383, 444, 463, 475, 488, 507, 518, 535, 670, 799, 864, 865, 871, 873, 874, 878, 883, 884], "ha": [7, 8, 25, 63, 149, 248, 266, 284, 285, 383, 416, 549, 564, 565, 566, 578, 581, 585, 586, 587, 588, 589, 608, 616, 631, 649, 716, 793, 864, 865, 866, 869, 873, 874, 878, 879, 883], "A": [7, 8, 37, 41, 43, 45, 46, 47, 49, 72, 76, 78, 80, 81, 82, 84, 104, 108, 110, 112, 113, 114, 116, 171, 178, 180, 182, 183, 184, 186, 222, 248, 250, 272, 292, 312, 325, 326, 336, 357, 398, 438, 447, 449, 451, 452, 453, 455, 482, 491, 493, 495, 496, 497, 499, 558, 586, 587, 588, 589, 599, 605, 606, 608, 678, 682, 684, 686, 687, 688, 690, 712, 719, 721, 723, 724, 725, 727, 748, 755, 757, 759, 760, 761, 763, 798, 803, 805, 807, 808, 809, 811, 830, 834, 836, 838, 839, 840, 842, 863, 864, 867, 878, 880, 883], "staticmethod": [7, 8, 689], "which": [7, 8, 13, 14, 16, 25, 30, 37, 45, 50, 53, 60, 66, 72, 80, 85, 88, 95, 100, 101, 104, 112, 117, 120, 127, 132, 165, 171, 175, 182, 187, 190, 199, 205, 207, 232, 278, 280, 284, 300, 303, 307, 318, 320, 324, 328, 344, 347, 352, 363, 365, 383, 386, 398, 405, 416, 421, 436, 438, 444, 451, 456, 459, 474, 475, 478, 480, 482, 488, 495, 500, 503, 517, 518, 521, 542, 543, 548, 562, 565, 569, 604, 605, 608, 614, 645, 649, 657, 678, 686, 691, 694, 708, 710, 712, 714, 723, 728, 731, 748, 759, 764, 767, 798, 807, 812, 815, 830, 838, 843, 846, 859, 861, 862, 864, 865, 866, 873, 874, 878, 879, 880, 883, 884], "take": [7, 8, 222, 569, 715, 864, 865, 866, 869, 872, 873, 874, 878, 879, 880], "process_flag": [7, 8], "along": [7, 8, 403, 866, 873, 880, 884], "arg": [7, 8, 10, 28, 30, 31, 60, 95, 127, 199, 341, 342, 353, 354, 381, 398, 399, 400, 401, 403, 415, 431, 615, 646], "directli": [7, 8, 398, 598, 865, 866, 873, 874, 878, 879], "permit": [7, 8, 60, 66, 95, 100, 127, 132, 199, 205, 232], "chunkwis": [10, 28], "particular": [10, 28, 275, 295, 298, 302, 315, 339, 346, 360, 398, 403, 545, 708, 864, 866, 873, 874, 878, 883], "sql_queri": [10, 28], "write": [10, 28, 30, 31, 280, 284, 303, 307, 320, 324, 347, 352, 365, 864, 865, 866, 873, 874, 878], "output": [10, 28, 30, 31, 45, 46, 66, 80, 81, 100, 112, 113, 132, 182, 183, 205, 269, 273, 288, 293, 298, 309, 313, 330, 337, 349, 354, 358, 371, 444, 445, 451, 452, 464, 488, 489, 495, 496, 508, 538, 562, 585, 586, 587, 588, 589, 590, 591, 641, 643, 651, 657, 658, 686, 687, 723, 724, 759, 760, 807, 808, 838, 839, 859, 864, 865, 884], "self": [10, 28, 37, 72, 104, 171, 211, 212, 219, 436, 438, 478, 480, 482, 521, 557, 586, 587, 605, 606, 623, 676, 678, 709, 712, 742, 743, 745, 748, 796, 798, 828, 830, 864, 874, 879, 883], "chunksiz": [10, 28], "int": [10, 23, 28, 38, 40, 45, 46, 51, 53, 73, 75, 80, 81, 86, 88, 105, 107, 112, 113, 118, 120, 173, 177, 182, 183, 188, 190, 248, 270, 282, 289, 305, 310, 322, 328, 331, 350, 355, 367, 369, 415, 431, 441, 446, 451, 452, 457, 459, 485, 490, 495, 496, 501, 503, 542, 543, 548, 568, 585, 586, 587, 588, 589, 596, 597, 602, 605, 606, 651, 679, 681, 686, 687, 692, 694, 713, 718, 723, 724, 729, 731, 749, 751, 759, 760, 765, 767, 800, 802, 807, 808, 813, 815, 831, 833, 838, 839, 844, 846], "maximum": [10, 23, 28, 287, 328, 329, 585, 586, 587, 588, 589, 605, 872], "proce": [10, 25, 28, 865, 873], "keyword": [10, 28, 34, 70, 102, 164, 398, 403, 676, 709, 745, 796, 828, 874, 883], "list": [11, 16, 23, 27, 29, 30, 31, 138, 165, 168, 170, 194, 215, 250, 251, 253, 260, 261, 264, 272, 292, 297, 312, 326, 327, 332, 336, 341, 342, 357, 370, 389, 390, 403, 409, 410, 425, 426, 454, 542, 543, 544, 545, 548, 549, 562, 572, 575, 586, 587, 588, 589, 599, 605, 606, 607, 611, 614, 643, 645, 648, 707, 783, 864, 867, 873, 883], "sourcedatabas": [11, 14, 30, 31, 250, 251, 269, 288, 309, 330, 371, 866, 873, 874], "registri": [11, 14, 30, 31, 135, 136, 141, 250, 251, 283, 306, 323, 351, 368, 369, 371, 372, 373, 873, 883], "dbregistri": [11, 14, 30, 31, 283, 306, 323, 351, 368, 369, 371, 372, 373, 864], "new": [11, 43, 44, 51, 78, 79, 86, 110, 111, 118, 142, 180, 181, 188, 207, 256, 286, 369, 393, 414, 430, 449, 450, 457, 493, 494, 501, 542, 543, 544, 545, 549, 557, 562, 572, 575, 595, 598, 599, 600, 604, 605, 606, 607, 609, 624, 676, 684, 685, 692, 709, 721, 722, 729, 745, 757, 758, 765, 786, 796, 805, 806, 813, 828, 836, 837, 844, 865, 866, 867, 868, 873, 874, 884], "object": [11, 23, 30, 31, 32, 41, 45, 54, 56, 76, 80, 89, 91, 108, 112, 121, 123, 136, 144, 145, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 170, 178, 182, 191, 193, 194, 195, 218, 219, 227, 231, 234, 238, 241, 245, 258, 259, 267, 272, 280, 282, 286, 292, 297, 298, 302, 303, 305, 312, 320, 322, 336, 346, 347, 350, 357, 365, 367, 374, 383, 386, 398, 403, 405, 416, 421, 444, 447, 451, 460, 462, 463, 488, 491, 495, 504, 506, 507, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 545, 549, 554, 560, 562, 567, 570, 575, 579, 580, 586, 587, 592, 600, 604, 605, 606, 608, 611, 612, 626, 627, 632, 643, 646, 647, 648, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 675, 682, 686, 695, 697, 710, 719, 723, 732, 734, 755, 759, 768, 770, 788, 789, 794, 803, 807, 816, 818, 819, 834, 838, 847, 849, 859, 862, 864, 865, 866, 871, 873, 874, 878, 883, 884], "unspecifi": [11, 403], "default": [11, 14, 23, 30, 31, 43, 45, 46, 49, 53, 78, 80, 81, 84, 88, 110, 112, 113, 116, 120, 143, 146, 148, 172, 180, 182, 183, 185, 186, 190, 207, 213, 218, 257, 262, 265, 271, 273, 274, 278, 279, 287, 291, 293, 294, 300, 301, 311, 313, 314, 318, 319, 326, 327, 328, 329, 335, 337, 338, 344, 345, 356, 358, 359, 363, 364, 369, 371, 387, 398, 403, 406, 422, 449, 451, 452, 454, 455, 459, 493, 495, 496, 498, 499, 503, 542, 543, 544, 548, 549, 553, 558, 559, 560, 575, 578, 581, 585, 586, 587, 588, 589, 600, 604, 605, 606, 607, 608, 625, 628, 630, 651, 657, 684, 686, 687, 689, 690, 694, 707, 721, 723, 724, 726, 727, 731, 757, 759, 760, 762, 763, 767, 787, 790, 792, 799, 805, 807, 808, 810, 811, 815, 836, 838, 839, 841, 842, 846, 862, 864, 865, 866, 869, 873, 874, 878, 883, 884], "table_nam": [12, 14], "drop": 12, "from": [12, 13, 14, 19, 30, 31, 32, 43, 45, 46, 48, 49, 54, 60, 78, 80, 81, 83, 84, 89, 95, 101, 110, 112, 113, 115, 116, 121, 127, 139, 141, 142, 149, 175, 180, 182, 183, 185, 186, 191, 194, 199, 207, 227, 234, 241, 248, 254, 256, 266, 280, 286, 303, 320, 325, 327, 347, 365, 371, 376, 383, 384, 386, 387, 396, 398, 405, 406, 415, 416, 418, 421, 422, 431, 449, 451, 452, 454, 455, 460, 475, 493, 495, 496, 498, 499, 504, 518, 522, 543, 545, 558, 586, 587, 588, 590, 591, 593, 594, 596, 597, 605, 606, 608, 609, 614, 616, 621, 623, 624, 631, 637, 638, 643, 648, 651, 663, 676, 684, 686, 687, 689, 690, 695, 709, 721, 723, 724, 726, 727, 732, 744, 745, 757, 759, 760, 762, 763, 768, 784, 786, 793, 796, 805, 807, 808, 810, 811, 816, 828, 836, 838, 839, 841, 842, 847, 859, 862, 863, 864, 865, 866, 868, 871, 874, 879, 883], "name": [12, 14, 23, 25, 27, 41, 43, 48, 51, 63, 76, 78, 83, 86, 108, 110, 115, 118, 136, 170, 178, 180, 185, 188, 213, 269, 280, 286, 288, 297, 298, 302, 303, 309, 320, 325, 330, 346, 347, 354, 365, 371, 372, 373, 375, 376, 387, 390, 398, 403, 406, 410, 416, 422, 426, 436, 447, 449, 454, 457, 469, 470, 473, 476, 480, 491, 493, 498, 501, 512, 513, 516, 519, 527, 541, 542, 543, 544, 545, 546, 548, 549, 558, 562, 568, 572, 575, 576, 585, 586, 587, 588, 589, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 611, 639, 640, 663, 676, 682, 684, 689, 692, 709, 710, 719, 721, 726, 729, 745, 755, 757, 762, 765, 796, 803, 805, 810, 813, 827, 828, 834, 836, 841, 844, 862, 864, 865, 866, 869, 873, 874, 879, 883, 884], "delet": [12, 393, 414, 430, 864, 873], "match_tabl": [12, 29, 873, 878], "cross_match": [12, 31, 864, 873], "classmethod": [13, 36, 39, 43, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 71, 74, 78, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 103, 106, 110, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 167, 174, 175, 180, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 203, 204, 386, 405, 421, 437, 443, 449, 456, 457, 459, 460, 461, 462, 465, 466, 467, 471, 472, 477, 481, 487, 493, 500, 501, 503, 504, 505, 506, 509, 510, 511, 514, 515, 520, 558, 620, 623, 637, 639, 677, 680, 684, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 711, 717, 721, 728, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 747, 750, 757, 764, 765, 767, 768, 769, 770, 771, 772, 773, 775, 776, 777, 778, 797, 801, 805, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 824, 825, 826, 829, 832, 836, 843, 844, 846, 847, 848, 849, 851, 852, 853, 854, 855, 857, 858], "given": [14, 23, 50, 51, 55, 56, 85, 86, 90, 91, 117, 118, 122, 123, 146, 187, 188, 192, 193, 207, 211, 262, 280, 303, 320, 347, 365, 371, 372, 373, 386, 405, 421, 456, 457, 461, 462, 500, 501, 505, 506, 542, 543, 572, 579, 580, 595, 602, 605, 606, 628, 691, 692, 696, 697, 708, 728, 729, 733, 734, 764, 765, 769, 770, 790, 812, 813, 817, 818, 843, 844, 848, 849, 862, 864, 865, 866, 868, 871, 873, 874, 878, 879, 880, 883], "determin": [14, 17, 60, 95, 127, 165, 170, 175, 194, 199, 383, 416, 578, 581, 586, 587, 588, 614, 659, 708, 862, 864, 865, 873, 878, 880, 883, 884], "seek": 14, "custom": [14, 51, 86, 118, 188, 280, 303, 320, 347, 365, 457, 478, 501, 521, 692, 729, 765, 813, 844, 865, 866, 872, 873, 879], "were": [14, 49, 84, 116, 186, 455, 499, 690, 727, 763, 811, 842, 864, 884], "build": [14, 53, 88, 120, 190, 226, 233, 240, 398, 402, 459, 503, 694, 731, 767, 815, 846, 865, 872, 874], "ll": [14, 864, 865, 866, 869, 871, 873, 874, 878, 883, 884], "need": [14, 37, 63, 72, 104, 171, 195, 280, 303, 320, 347, 365, 383, 438, 482, 575, 605, 606, 649, 678, 712, 744, 748, 798, 819, 830, 862, 864, 865, 866, 868, 870, 872, 873, 874, 878, 879, 883], "make": [14, 44, 79, 111, 181, 450, 494, 542, 543, 544, 553, 569, 600, 606, 685, 722, 758, 806, 837, 864, 865, 866, 874, 878, 879, 883], "sure": 14, "thei": [14, 30, 31, 43, 78, 110, 180, 278, 286, 300, 318, 344, 363, 393, 414, 430, 449, 493, 543, 567, 684, 721, 757, 805, 836, 861, 862, 864, 865, 872, 873, 874, 878, 879, 883, 884], "re": [14, 383, 416, 605, 606, 864, 865, 866, 873, 874, 878, 879, 883, 884], "fail": [14, 25, 53, 88, 120, 190, 393, 414, 430, 459, 503, 651, 694, 706, 707, 731, 767, 815, 846, 873, 874, 878, 883, 884], "desir": [14, 50, 85, 117, 187, 456, 500, 545, 552, 572, 651, 691, 728, 764, 812, 843, 874], "rais": [14, 45, 46, 51, 53, 54, 55, 60, 66, 80, 81, 86, 88, 89, 90, 95, 100, 112, 113, 118, 120, 121, 122, 127, 132, 146, 147, 182, 183, 188, 190, 191, 192, 199, 205, 262, 263, 287, 329, 451, 452, 457, 459, 460, 461, 495, 496, 501, 503, 504, 505, 558, 604, 608, 628, 629, 641, 651, 676, 686, 687, 692, 694, 695, 696, 706, 707, 709, 723, 724, 729, 731, 732, 733, 745, 759, 760, 765, 767, 768, 769, 790, 791, 796, 807, 808, 813, 815, 816, 817, 828, 838, 839, 844, 846, 847, 848, 874], "valueerror": [14, 55, 90, 122, 192, 461, 505, 608, 696, 733, 769, 817, 848], "properti": [15, 16, 17, 26, 29, 47, 49, 82, 84, 114, 116, 168, 169, 170, 184, 186, 209, 210, 214, 215, 217, 218, 220, 260, 261, 264, 278, 300, 318, 332, 344, 363, 377, 378, 380, 385, 388, 389, 390, 391, 395, 404, 408, 409, 410, 411, 417, 420, 424, 425, 426, 427, 440, 453, 455, 463, 464, 469, 473, 484, 497, 499, 507, 508, 512, 516, 528, 550, 555, 563, 564, 565, 566, 567, 570, 578, 579, 580, 581, 582, 583, 598, 603, 635, 688, 690, 725, 727, 754, 761, 763, 809, 811, 840, 842, 862, 865, 874, 883], "": [15, 32, 43, 45, 46, 78, 80, 81, 110, 112, 113, 144, 145, 150, 154, 155, 156, 157, 158, 163, 180, 182, 183, 210, 219, 220, 258, 259, 267, 270, 289, 310, 325, 331, 355, 377, 383, 385, 387, 404, 406, 416, 420, 422, 449, 451, 452, 475, 493, 495, 496, 518, 531, 532, 533, 534, 535, 540, 548, 551, 552, 558, 562, 607, 608, 626, 627, 632, 666, 667, 668, 669, 670, 675, 684, 686, 687, 708, 710, 721, 723, 724, 757, 759, 760, 788, 789, 794, 805, 807, 808, 836, 838, 839, 864, 865, 866, 869, 873, 874, 878, 883, 884], "end": [15, 542, 543, 545, 585, 616, 864, 879], "up": [15, 30, 31, 475, 518, 864, 865, 873, 874, 878, 879], "add_catalog": [15, 873], "add_catalog_from_t": 15, "avail": [16, 29, 165, 227, 234, 241, 250, 297, 341, 370, 389, 390, 403, 409, 410, 425, 426, 542, 609, 715, 862, 864, 865, 873, 878, 883, 884], "actual": [16, 17, 172, 742, 744, 799, 862, 864, 865, 873, 874, 878, 880, 883, 884], "datafram": [17, 24, 175, 444, 488, 558, 608], "repres": [17, 33, 49, 51, 84, 86, 116, 118, 168, 186, 188, 374, 383, 455, 457, 499, 501, 527, 551, 633, 663, 690, 692, 727, 729, 744, 763, 765, 795, 811, 813, 827, 842, 844, 860, 862, 864, 866, 873, 874, 878, 879, 883, 884], "within": [17, 280, 303, 320, 347, 365, 649, 864, 865, 866, 867, 873, 874, 878, 879, 883, 884], "larger": [17, 866], "repositori": [17, 606, 864, 870], "edit": [17, 383, 416, 865, 866, 874], "histori": 17, "effect": [17, 32, 33, 284, 285, 562, 864, 865, 873, 878, 883, 884], "differ": [17, 27, 166, 195, 383, 542, 543, 562, 602, 716, 819, 862, 864, 865, 866, 871, 872, 873, 878, 883, 884], "certain": [17, 602, 874], "critic": [17, 865, 868, 873, 874, 879, 883, 884], "pre": [17, 30, 31, 43, 78, 110, 180, 271, 278, 291, 300, 311, 318, 335, 344, 356, 363, 398, 403, 415, 431, 449, 493, 684, 721, 757, 805, 836, 864], "requisit": 17, "occur": [17, 63, 66, 100, 132, 205, 464, 508, 651, 865, 873], "build_meta_t": [17, 18, 19, 20], "pd": [17, 175, 444, 488, 558, 608], "is_reduct": 18, "mark": [18, 474, 517], "reduct": [18, 25, 27, 708, 865, 871, 874, 883], "produc": [18, 248, 649, 859, 868], "column": [18, 67, 134, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 168, 170, 172, 175, 273, 293, 313, 326, 327, 337, 341, 358, 444, 463, 473, 488, 507, 516, 525, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 548, 549, 551, 552, 556, 557, 558, 561, 562, 564, 565, 566, 568, 569, 570, 572, 574, 575, 576, 578, 579, 581, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 611, 614, 657, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 675, 708, 710, 714, 715, 742, 743, 744, 799, 827, 850, 856, 862, 864, 865, 873, 874, 883, 884], "appli": [18, 27, 586, 587, 588, 862], "call": [18, 43, 78, 110, 180, 383, 449, 493, 542, 543, 548, 606, 684, 721, 757, 805, 836, 864, 865, 873, 874, 880, 883, 884], "process_nam": [18, 433, 436, 454, 479, 480, 498, 879], "_score": [18, 444, 488], "remov": [19, 139, 146, 147, 254, 262, 263, 327, 576, 593, 594, 595, 596, 597, 621, 628, 629, 784, 790, 791], "reset": [20, 865], "catalog_object": [23, 873], "fig": [23, 652, 653, 884], "cmap": [23, 864, 865, 869, 873, 874], "norm": [23, 706, 707, 865, 873], "vmin": [23, 865], "vmax": [23, 865], "resolut": [23, 383, 386, 393, 405, 413, 414, 416, 421, 429, 430, 653, 865, 873, 878], "300": [23, 229, 558, 865], "fov": [23, 651, 653, 873], "5": [23, 207, 228, 229, 235, 242, 246, 545, 575, 598, 599, 602, 608, 611, 864, 865, 866, 869, 873, 884], "arcmin": [23, 280, 284, 285, 303, 307, 320, 324, 347, 352, 365, 864, 865, 866, 873, 874], "hips_kwarg": [23, 653, 873], "scatter_kwarg": [23, 873], "plot": [23, 861, 864, 865, 869, 872, 874, 884], "catobj": [23, 444, 488, 864, 873], "plt": [23, 864, 865, 873, 874, 884], "ax": [23, 652, 864, 865, 884], "figur": [23, 864, 865, 884], "cm": [23, 865, 873], "colormap": 23, "viridi": 23, "color": [23, 865, 873], "float": [23, 27, 207, 231, 232, 238, 245, 287, 329, 433, 444, 454, 468, 488, 600, 608, 651, 873], "minimum": [23, 864, 872, 873], "valu": [23, 27, 36, 37, 43, 44, 45, 46, 51, 63, 65, 71, 72, 78, 79, 80, 81, 86, 99, 103, 104, 110, 111, 112, 113, 118, 131, 137, 142, 143, 146, 147, 148, 167, 171, 180, 181, 182, 183, 188, 195, 204, 213, 220, 252, 256, 257, 262, 263, 265, 270, 289, 310, 331, 355, 369, 386, 405, 421, 436, 437, 438, 442, 444, 449, 450, 451, 452, 457, 478, 480, 481, 482, 486, 488, 493, 494, 495, 496, 501, 521, 544, 545, 557, 562, 564, 565, 569, 572, 574, 575, 580, 585, 586, 587, 588, 589, 590, 591, 602, 604, 605, 611, 624, 625, 628, 629, 630, 639, 640, 641, 643, 647, 648, 677, 678, 684, 685, 686, 687, 692, 705, 706, 707, 711, 712, 716, 721, 722, 723, 724, 729, 741, 747, 748, 757, 758, 759, 760, 765, 778, 782, 786, 787, 790, 791, 792, 797, 798, 805, 806, 807, 808, 813, 819, 826, 829, 830, 836, 837, 838, 839, 844, 858, 864, 865, 866, 873, 874, 878, 879, 883], "background": [23, 873], "imag": [23, 297, 383, 651, 865, 869, 873], "number": [23, 207, 217, 248, 270, 272, 282, 289, 292, 305, 310, 312, 322, 331, 336, 350, 355, 357, 367, 369, 383, 386, 405, 415, 416, 421, 431, 554, 585, 586, 587, 588, 589, 602, 605, 606, 864, 865, 866, 871, 873, 878, 879, 883], "pixel": [23, 380, 383, 391, 411, 416, 427, 865], "per": 23, "side": [23, 864, 865], "when": [23, 51, 53, 63, 86, 88, 118, 120, 188, 190, 222, 280, 303, 320, 347, 365, 383, 393, 414, 430, 457, 459, 475, 501, 503, 518, 552, 569, 575, 605, 606, 692, 694, 707, 729, 731, 744, 765, 767, 813, 815, 844, 846, 864, 865, 866, 873, 874, 878, 884], "hip": [23, 651], "astropi": [23, 30, 165, 170, 227, 231, 234, 238, 241, 245, 270, 273, 280, 284, 285, 289, 293, 298, 303, 307, 310, 313, 320, 324, 331, 337, 347, 349, 352, 355, 358, 365, 377, 383, 385, 386, 404, 405, 407, 415, 420, 421, 423, 431, 522, 527, 542, 543, 544, 557, 558, 560, 562, 575, 586, 587, 588, 589, 592, 600, 604, 605, 606, 608, 609, 612, 641, 651, 708, 716, 752, 753, 774, 864, 865, 866, 874, 883, 884], "unit": [23, 270, 272, 280, 282, 284, 285, 289, 292, 303, 305, 307, 310, 312, 320, 322, 324, 331, 336, 347, 350, 352, 355, 357, 365, 367, 386, 393, 405, 414, 415, 421, 430, 431, 527, 541, 558, 578, 581, 585, 586, 587, 588, 589, 608, 641, 706, 707, 708, 716, 752, 753, 774, 827, 841, 864, 865, 866, 874, 883, 884], "quantiti": [23, 270, 272, 280, 282, 284, 285, 289, 292, 303, 305, 307, 310, 312, 320, 322, 324, 331, 336, 347, 350, 352, 355, 357, 365, 367, 369, 386, 393, 405, 414, 415, 421, 430, 431, 578, 581, 608, 641, 708, 716, 726, 744, 752, 753, 762, 774, 864, 874, 884], "field": [23, 37, 41, 43, 45, 46, 47, 48, 49, 72, 76, 78, 80, 81, 82, 83, 84, 104, 108, 110, 112, 113, 114, 115, 116, 171, 178, 180, 182, 183, 184, 185, 186, 438, 447, 449, 451, 452, 453, 454, 455, 482, 491, 493, 495, 496, 497, 498, 499, 651, 676, 678, 682, 684, 686, 687, 688, 689, 690, 708, 709, 712, 719, 721, 723, 724, 725, 726, 727, 745, 748, 755, 757, 759, 760, 761, 762, 763, 796, 798, 803, 805, 807, 808, 809, 810, 811, 828, 830, 834, 836, 838, 839, 840, 841, 842, 864, 873], "view": [23, 144, 145, 150, 258, 259, 267, 605, 626, 627, 632, 651, 788, 789, 794], "descript": [23, 527, 541, 862, 873, 874, 884], "enabl": [23, 474, 517, 869, 878], "scatter": [23, 864, 865, 884], "kei": [23, 27, 45, 63, 80, 112, 137, 142, 143, 146, 147, 148, 149, 182, 252, 256, 257, 262, 263, 265, 266, 415, 431, 451, 495, 522, 545, 548, 553, 562, 572, 580, 585, 600, 607, 608, 624, 625, 628, 629, 630, 631, 643, 648, 686, 703, 723, 759, 782, 786, 787, 790, 791, 792, 793, 807, 838, 862, 865, 867, 873, 874, 883, 884], "word": [23, 415, 431, 865, 880], "below": [23, 608, 861, 864, 865, 873, 874, 878, 883], "figsiz": [23, 864, 865, 884], "10": [23, 229, 230, 597, 864, 865, 873, 874], "size": [23, 248, 272, 292, 312, 336, 357, 403, 589, 865, 869, 873], "sqlite": [24, 30, 31, 873], "flavor": 24, "reduction_process": [25, 27], "rproc": 25, "reductionprocess": [25, 436, 475, 478, 864, 878, 879], "while": [25, 464, 508, 606, 864, 873, 874, 879, 883], "caus": [25, 657], "weight": [27, 230, 244, 864, 865, 873], "show_summari": 27, "score": [27, 207, 444, 473, 488, 516, 864, 865], "alpha_i": [27, 864, 873], "0": [27, 207, 208, 228, 235, 242, 243, 244, 246, 280, 303, 320, 328, 347, 365, 383, 542, 543, 558, 568, 575, 576, 586, 587, 588, 589, 593, 594, 596, 597, 600, 602, 608, 609, 864, 865, 866, 873, 874, 878, 884], "1": [27, 207, 208, 222, 243, 248, 270, 280, 284, 285, 289, 303, 307, 310, 320, 324, 331, 347, 352, 355, 365, 542, 543, 545, 558, 568, 574, 575, 576, 587, 589, 593, 594, 596, 597, 598, 599, 600, 602, 604, 605, 606, 608, 609, 611, 743, 810, 862, 864, 865, 866, 873, 874, 878, 883, 884], "univers": [27, 874, 878], "across": [27, 872, 873, 883], "form": [27, 32, 219, 222, 527, 549, 676, 709, 715, 745, 796, 828, 865, 866, 874, 878, 883], "onli": [27, 45, 80, 112, 182, 212, 232, 248, 273, 293, 313, 337, 358, 451, 478, 495, 521, 522, 553, 575, 576, 579, 585, 586, 587, 588, 589, 594, 600, 608, 676, 686, 709, 723, 745, 759, 779, 796, 807, 828, 838, 862, 864, 865, 866, 870, 873, 874, 878, 879, 883, 884], "both": [27, 542, 579, 589, 744, 864, 866, 878, 879], "show": [27, 585, 586, 587, 588, 589, 605, 606, 611, 864, 865, 869, 873, 874, 878, 884], "summari": 27, "drop_tabl": 29, "input_path": [30, 873], "output_path": [30, 31, 873], "crossmatchdatabas": [30, 31, 33, 63, 433, 439, 454, 479, 483, 498, 864, 878, 879], "known": [30, 31, 207, 859, 864, 865, 868, 871, 873, 874, 878, 884], "set": [30, 31, 36, 37, 38, 40, 43, 44, 45, 46, 47, 49, 71, 72, 73, 75, 78, 79, 80, 81, 82, 84, 103, 104, 105, 107, 110, 111, 112, 113, 114, 116, 142, 144, 145, 151, 167, 170, 171, 173, 177, 180, 181, 182, 183, 184, 185, 186, 207, 219, 232, 256, 258, 259, 269, 271, 272, 276, 278, 281, 288, 291, 292, 296, 300, 304, 309, 311, 312, 316, 318, 321, 330, 335, 336, 340, 344, 348, 354, 356, 357, 361, 363, 366, 437, 438, 441, 446, 449, 450, 451, 452, 453, 455, 475, 481, 482, 485, 490, 493, 494, 495, 496, 497, 499, 518, 548, 562, 586, 587, 588, 598, 605, 624, 626, 627, 645, 647, 648, 654, 677, 678, 679, 681, 684, 685, 686, 687, 688, 690, 711, 712, 713, 718, 721, 722, 723, 724, 725, 727, 747, 748, 749, 751, 757, 758, 759, 760, 761, 763, 786, 788, 789, 795, 797, 798, 800, 802, 805, 806, 807, 808, 809, 811, 829, 830, 831, 833, 836, 837, 838, 839, 840, 842, 862, 864, 865, 866, 867, 869, 873, 874, 878, 879, 883], "your": [30, 31, 50, 63, 85, 117, 187, 456, 500, 691, 708, 728, 764, 812, 843, 862, 863, 864, 865, 866, 867, 869, 873, 874, 878, 879, 883, 884], "choic": [30, 31, 654, 878], "input": [30, 45, 46, 80, 81, 112, 113, 182, 183, 207, 444, 451, 452, 488, 495, 496, 542, 543, 557, 562, 600, 651, 676, 686, 687, 709, 723, 724, 745, 759, 760, 796, 807, 808, 828, 838, 839, 874, 878, 883], "must": [30, 172, 276, 281, 296, 304, 316, 321, 340, 348, 361, 366, 403, 444, 488, 544, 609, 614, 707, 708, 742, 743, 744, 799, 862, 864, 866, 867, 873, 874, 878, 879, 883], "readabl": [30, 662, 873], "format": [30, 60, 63, 66, 95, 100, 127, 132, 195, 199, 205, 269, 273, 288, 293, 309, 313, 330, 337, 354, 358, 383, 416, 554, 561, 586, 587, 588, 589, 605, 606, 608, 614, 654, 744, 819, 864, 865, 869, 873, 874, 883], "db": [30, 31, 864, 873, 874, 878], "all": [30, 31, 35, 43, 78, 101, 110, 139, 180, 195, 207, 215, 254, 280, 303, 320, 328, 347, 353, 365, 389, 403, 409, 425, 449, 475, 493, 518, 545, 549, 557, 561, 572, 575, 576, 586, 587, 588, 589, 595, 600, 602, 614, 621, 642, 657, 662, 684, 721, 757, 784, 805, 819, 836, 864, 865, 866, 867, 871, 873, 874, 878, 879, 883, 884], "By": [30, 31, 271, 273, 279, 291, 293, 301, 311, 313, 319, 335, 337, 345, 356, 358, 364, 403, 549, 657, 707, 883], "current": [30, 31, 168, 169, 598, 606, 659, 883], "entri": [30, 31, 134, 383, 444, 488, 545, 557, 716, 864, 865, 873, 883], "look": [30, 31, 432, 861, 864, 865, 866, 868, 869, 873, 874, 878, 883], "taken": [30, 31, 586, 587, 588, 873], "lookup": [30, 31], "default_database_registri": [30, 31, 864, 873], "cross_match_t": [30, 864, 873], "memori": [31, 551, 605, 656, 657, 866], "manag": [32, 325, 374, 569, 864, 866, 873, 883], "valid": [32, 43, 44, 45, 46, 47, 50, 52, 54, 55, 56, 78, 79, 80, 81, 82, 85, 87, 89, 90, 91, 101, 110, 111, 112, 113, 114, 117, 119, 121, 122, 123, 180, 181, 182, 183, 184, 187, 189, 191, 192, 193, 227, 234, 241, 436, 449, 450, 451, 452, 453, 456, 458, 460, 461, 462, 480, 493, 494, 495, 496, 497, 500, 502, 504, 505, 506, 604, 605, 606, 662, 676, 684, 685, 686, 687, 688, 691, 693, 695, 696, 697, 706, 707, 708, 709, 714, 716, 721, 722, 723, 724, 725, 728, 730, 732, 733, 734, 742, 745, 757, 758, 759, 760, 761, 764, 766, 768, 769, 770, 796, 805, 806, 807, 808, 809, 812, 814, 816, 817, 818, 828, 836, 837, 838, 839, 840, 843, 845, 847, 848, 849, 865, 873, 874, 879, 883], "In": [32, 35, 149, 195, 266, 383, 416, 545, 558, 569, 608, 609, 631, 793, 819, 862, 864, 865, 866, 869, 871, 872, 873, 874, 878, 879, 880, 883, 884], "most": [32, 63, 595, 861, 862, 863, 864, 865, 868, 873, 874, 878, 880, 883, 884], "case": [32, 35, 149, 266, 394, 564, 608, 609, 631, 793, 864, 865, 866, 868, 872, 873, 874, 878, 879, 883, 884], "convert": [32, 383, 542, 543, 551, 552, 558, 604, 608, 609, 651, 706, 707, 715, 860, 865, 866, 873, 874, 878, 883], "convent": [32, 383, 862, 864, 865, 873, 874, 883], "those": [32, 172, 383, 654, 799, 862, 864, 865, 873, 878, 883, 884], "intern": [32, 551, 864], "long": [32, 865, 866], "discuss": [32, 865, 872, 873, 880], "about": [32, 48, 63, 83, 115, 166, 185, 280, 303, 320, 347, 365, 454, 498, 689, 708, 726, 762, 810, 841, 864, 865, 872, 873, 874, 878, 880, 884], "see": [32, 207, 249, 270, 271, 272, 282, 289, 291, 292, 305, 310, 311, 312, 322, 331, 335, 336, 350, 355, 356, 357, 367, 559, 606, 608, 864, 865, 866, 868, 873, 874, 878, 883, 884], "table_schema": [33, 48], "catalog_schema": [33, 48], "interact": [33, 151, 249, 383, 522, 527, 585, 606, 655, 662, 861, 866, 869, 874, 884], "cross_refer": [33, 63, 433, 439, 483, 864, 873, 878, 879], "compil": [33, 864, 873], "togeth": [33, 874], "entir": [33, 52, 87, 119, 189, 286, 458, 502, 557, 587, 589, 656, 657, 693, 730, 766, 814, 845, 864, 865, 874, 878], "map": [34, 37, 48, 70, 72, 83, 102, 104, 115, 135, 136, 164, 166, 171, 185, 194, 213, 222, 232, 246, 270, 278, 289, 300, 310, 318, 331, 344, 355, 363, 369, 438, 454, 482, 498, 545, 558, 572, 617, 618, 643, 644, 645, 648, 663, 678, 689, 712, 726, 748, 762, 780, 781, 798, 810, 830, 841, 862, 867, 871, 874, 883], "almost": [35, 864, 874], "done": [35, 593, 598, 864, 871, 873], "automat": [35, 53, 63, 88, 120, 190, 276, 281, 296, 304, 316, 321, 340, 348, 361, 366, 383, 459, 503, 614, 651, 694, 731, 767, 815, 846, 864, 873, 874, 884], "_fields_set": [36, 43, 71, 78, 103, 110, 167, 180, 437, 449, 481, 493, 677, 684, 711, 721, 747, 757, 797, 805, 829, 836], "model": [36, 37, 39, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 65, 66, 71, 72, 74, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 103, 104, 106, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 167, 171, 174, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 200, 201, 204, 205, 222, 223, 231, 238, 245, 437, 438, 443, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 471, 472, 481, 482, 487, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 509, 510, 511, 514, 515, 676, 677, 678, 680, 683, 684, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 705, 709, 711, 712, 717, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 745, 747, 748, 750, 756, 757, 758, 759, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 775, 776, 778, 796, 797, 798, 801, 804, 805, 806, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 824, 826, 828, 829, 830, 832, 835, 836, 837, 838, 839, 841, 842, 843, 844, 845, 846, 847, 848, 849, 851, 852, 853, 854, 855, 858, 859, 865, 868, 872, 873, 874, 883], "includ": [37, 38, 40, 45, 46, 72, 73, 75, 80, 81, 104, 105, 107, 112, 113, 171, 173, 177, 182, 183, 232, 438, 441, 446, 451, 452, 482, 485, 490, 495, 496, 522, 542, 543, 549, 558, 585, 586, 587, 588, 589, 604, 657, 678, 679, 681, 686, 687, 712, 713, 718, 723, 724, 748, 749, 751, 759, 760, 798, 800, 802, 807, 808, 830, 831, 833, 838, 839, 861, 862, 866, 867, 868, 871, 872, 873, 874, 878, 883], "abstractsetintstr": [37, 72, 104, 171, 438, 482, 678, 712, 748, 798, 830], "mappingintstrani": [37, 72, 104, 171, 438, 482, 678, 712, 748, 798, 830], "exclud": [37, 38, 40, 45, 46, 63, 72, 73, 75, 80, 81, 104, 105, 107, 112, 113, 171, 173, 177, 182, 183, 438, 441, 446, 451, 452, 482, 485, 490, 495, 496, 678, 679, 681, 686, 687, 712, 713, 718, 723, 724, 748, 749, 751, 759, 760, 798, 800, 802, 807, 808, 830, 831, 833, 838, 839], "updat": [37, 44, 72, 79, 104, 111, 171, 181, 219, 325, 438, 450, 482, 494, 543, 600, 678, 685, 712, 722, 748, 758, 798, 806, 830, 837, 873], "deep": [37, 44, 72, 79, 104, 111, 171, 181, 213, 438, 450, 482, 494, 553, 600, 678, 685, 712, 722, 748, 758, 798, 806, 830, 837, 868, 873], "warn": [37, 45, 46, 72, 80, 81, 104, 112, 113, 171, 182, 183, 438, 451, 452, 482, 495, 496, 597, 608, 678, 686, 687, 712, 723, 724, 748, 759, 760, 798, 807, 808, 830, 838, 839, 873], "deprec": [37, 72, 104, 171, 438, 482, 605, 606, 678, 712, 748, 798, 830], "now": [37, 72, 104, 171, 438, 482, 678, 712, 748, 798, 830, 864, 865, 866, 873, 874, 878, 879, 883, 884], "model_copi": [37, 72, 104, 171, 438, 482, 678, 712, 748, 798, 830], "instead": [37, 72, 104, 171, 222, 393, 414, 430, 438, 482, 589, 656, 657, 678, 712, 716, 744, 748, 798, 830, 865, 873, 874, 878], "py": [37, 72, 104, 171, 438, 482, 678, 712, 748, 798, 830, 874, 883], "model_dump": [37, 72, 104, 171, 438, 482, 678, 712, 748, 798, 830], "round_trip": [37, 45, 46, 72, 80, 81, 104, 112, 113, 171, 182, 183, 438, 451, 452, 482, 495, 496, 678, 686, 687, 712, 723, 724, 748, 759, 760, 798, 807, 808, 830, 838, 839], "model_valid": [37, 72, 104, 171, 438, 482, 678, 712, 748, 798, 830], "dictionari": [37, 41, 42, 43, 45, 47, 63, 72, 76, 77, 78, 80, 82, 104, 108, 109, 110, 112, 114, 136, 142, 143, 148, 171, 178, 179, 180, 182, 184, 256, 257, 265, 438, 447, 448, 449, 451, 453, 475, 482, 491, 492, 493, 495, 497, 518, 545, 572, 609, 617, 623, 624, 625, 630, 637, 643, 645, 648, 678, 682, 683, 684, 686, 688, 712, 719, 720, 721, 723, 725, 748, 755, 756, 757, 759, 761, 781, 786, 787, 792, 798, 803, 804, 805, 807, 809, 830, 834, 835, 836, 838, 840, 873, 874, 879, 883], "pair": [37, 72, 104, 136, 147, 171, 207, 263, 436, 438, 480, 482, 629, 678, 712, 748, 791, 798, 830], "overrid": [37, 50, 52, 72, 85, 87, 104, 117, 119, 171, 187, 189, 438, 456, 458, 482, 500, 502, 678, 691, 693, 712, 728, 730, 748, 764, 766, 798, 812, 814, 830, 843, 845], "pydant": [37, 42, 44, 45, 46, 48, 50, 53, 54, 55, 56, 72, 77, 79, 80, 81, 83, 85, 88, 89, 90, 91, 101, 104, 109, 111, 112, 113, 115, 117, 120, 121, 122, 123, 171, 179, 181, 182, 183, 185, 187, 190, 191, 192, 193, 438, 448, 450, 451, 452, 454, 456, 459, 460, 461, 462, 478, 482, 492, 494, 495, 496, 498, 500, 503, 504, 505, 506, 521, 662, 663, 678, 683, 685, 686, 687, 689, 691, 694, 695, 696, 697, 708, 712, 720, 722, 723, 724, 726, 728, 731, 732, 733, 734, 744, 748, 756, 758, 759, 760, 762, 764, 767, 768, 769, 770, 795, 798, 804, 806, 807, 808, 810, 812, 815, 816, 817, 818, 827, 830, 835, 837, 838, 839, 841, 843, 846, 847, 848, 849, 859, 883], "by_alia": [38, 40, 45, 46, 50, 61, 62, 73, 75, 80, 81, 85, 96, 97, 105, 107, 112, 113, 117, 128, 129, 173, 177, 182, 183, 187, 200, 201, 441, 446, 451, 452, 456, 471, 472, 485, 490, 495, 496, 500, 514, 515, 679, 681, 686, 687, 691, 701, 702, 713, 718, 723, 724, 728, 738, 739, 749, 751, 759, 760, 764, 775, 776, 800, 802, 807, 808, 812, 823, 824, 831, 833, 838, 839, 843, 854, 855], "exclude_unset": [38, 40, 45, 46, 73, 75, 80, 81, 105, 107, 112, 113, 173, 177, 182, 183, 441, 446, 451, 452, 485, 490, 495, 496, 679, 681, 686, 687, 713, 718, 723, 724, 749, 751, 759, 760, 800, 802, 807, 808, 831, 833, 838, 839], "exclude_default": [38, 40, 45, 46, 73, 75, 80, 81, 105, 107, 112, 113, 173, 177, 182, 183, 441, 446, 451, 452, 485, 490, 495, 496, 679, 681, 686, 687, 713, 718, 723, 724, 749, 751, 759, 760, 800, 802, 807, 808, 831, 833, 838, 839], "exclude_non": [38, 40, 45, 46, 73, 75, 80, 81, 105, 107, 112, 113, 173, 177, 182, 183, 441, 446, 451, 452, 485, 490, 495, 496, 679, 681, 686, 687, 713, 718, 723, 724, 749, 751, 759, 760, 800, 802, 807, 808, 831, 833, 838, 839], "obj": [39, 54, 56, 58, 74, 89, 91, 93, 106, 121, 123, 125, 174, 191, 193, 197, 443, 460, 462, 466, 487, 504, 506, 510, 646, 647, 680, 695, 697, 699, 717, 732, 734, 736, 750, 768, 770, 772, 801, 816, 818, 821, 832, 847, 849, 852], "encod": [40, 57, 59, 75, 92, 94, 107, 124, 126, 177, 196, 198, 446, 465, 467, 490, 509, 511, 551, 552, 608, 681, 698, 700, 718, 735, 737, 751, 771, 773, 802, 820, 822, 833, 851, 853, 883], "pydanticundefin": [40, 75, 107, 177, 446, 490, 681, 718, 751, 802, 833], "models_as_dict": [40, 75, 107, 177, 446, 490, 681, 718, 751, 802, 833], "dumps_kwarg": [40, 62, 75, 97, 107, 129, 177, 201, 446, 472, 490, 515, 681, 702, 718, 739, 751, 776, 802, 824, 833, 855], "classvar": [41, 42, 48, 76, 77, 83, 108, 109, 115, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 172, 178, 179, 185, 195, 447, 448, 454, 491, 492, 498, 682, 683, 689, 719, 720, 726, 755, 756, 762, 803, 804, 810, 834, 835, 841], "computedfieldinfo": [41, 76, 108, 178, 447, 491, 682, 719, 755, 803, 834], "comput": [41, 51, 76, 86, 108, 118, 178, 188, 447, 457, 491, 501, 682, 692, 719, 729, 755, 765, 803, 813, 834, 844, 865, 874, 878], "configdict": [42, 77, 109, 179, 448, 492, 683, 720, 756, 804, 835], "configur": [42, 77, 109, 179, 269, 275, 279, 288, 295, 301, 309, 315, 319, 330, 339, 345, 354, 360, 364, 448, 492, 586, 587, 588, 606, 633, 637, 638, 649, 654, 683, 720, 756, 804, 835, 864, 866, 867, 872], "conform": [42, 77, 109, 179, 448, 492, 683, 720, 756, 804, 835], "config": [42, 47, 77, 82, 109, 114, 179, 184, 448, 453, 492, 497, 683, 688, 720, 725, 756, 761, 804, 809, 835, 840, 861, 869, 874], "creat": [43, 44, 78, 79, 110, 111, 142, 180, 181, 256, 383, 386, 405, 416, 421, 449, 450, 493, 494, 542, 543, 545, 558, 568, 575, 576, 593, 594, 596, 597, 598, 599, 601, 602, 604, 606, 607, 608, 624, 657, 676, 684, 685, 708, 709, 721, 722, 745, 757, 758, 786, 796, 805, 806, 828, 836, 837, 864, 865, 866, 872, 873, 879, 883], "__dict__": [43, 78, 110, 180, 449, 493, 684, 721, 757, 805, 836], "__pydantic_fields_set__": [43, 78, 110, 180, 449, 493, 684, 721, 757, 805, 836], "trust": [43, 44, 78, 79, 110, 111, 180, 181, 449, 450, 493, 494, 684, 685, 721, 722, 757, 758, 805, 806, 836, 837], "respect": [43, 78, 110, 180, 207, 444, 449, 488, 493, 558, 586, 587, 588, 589, 684, 721, 757, 805, 836], "model_config": [43, 78, 110, 180, 449, 493, 684, 721, 757, 805, 836], "extra": [43, 47, 55, 56, 78, 82, 90, 91, 110, 114, 122, 123, 180, 184, 192, 193, 449, 453, 461, 462, 493, 497, 505, 506, 684, 688, 696, 697, 721, 725, 733, 734, 757, 761, 769, 770, 805, 809, 817, 818, 836, 840, 848, 849, 873], "That": [43, 78, 110, 180, 449, 493, 684, 721, 757, 805, 836, 864, 865, 873, 884], "ad": [43, 78, 110, 180, 286, 449, 493, 545, 595, 605, 606, 609, 684, 721, 757, 805, 836, 864, 865, 867, 873, 874, 879], "__pydantic_extra__": [43, 78, 110, 180, 449, 493, 684, 721, 757, 805, 836], "ignor": [43, 45, 46, 78, 80, 81, 110, 112, 113, 180, 182, 183, 449, 451, 452, 493, 495, 496, 602, 604, 605, 606, 684, 686, 687, 721, 723, 724, 757, 759, 760, 805, 807, 808, 836, 838, 839], "becaus": [43, 78, 110, 180, 449, 493, 684, 708, 721, 757, 805, 836, 864, 865, 873, 874, 878, 883], "forbid": [43, 78, 110, 180, 449, 493, 684, 721, 757, 805, 836], "doe": [43, 78, 110, 149, 180, 266, 273, 293, 313, 337, 358, 449, 493, 561, 564, 604, 605, 606, 607, 608, 614, 631, 684, 721, 757, 793, 805, 836, 880, 884], "error": [43, 45, 46, 53, 66, 78, 80, 81, 88, 100, 110, 112, 113, 120, 132, 153, 155, 157, 160, 180, 182, 183, 190, 205, 287, 329, 434, 435, 449, 451, 452, 459, 493, 495, 496, 503, 530, 532, 534, 537, 641, 651, 665, 667, 669, 672, 684, 686, 687, 694, 708, 710, 714, 715, 716, 721, 723, 724, 731, 742, 743, 744, 752, 753, 757, 759, 760, 767, 774, 779, 805, 807, 808, 815, 836, 838, 839, 846, 864], "accept": [43, 78, 110, 180, 449, 493, 542, 543, 604, 684, 721, 757, 805, 836, 873, 878], "usag": [44, 45, 46, 55, 79, 80, 81, 90, 111, 112, 113, 122, 181, 182, 183, 192, 450, 451, 452, 461, 494, 495, 496, 505, 522, 685, 686, 687, 696, 722, 723, 724, 733, 758, 759, 760, 769, 806, 807, 808, 817, 837, 838, 839, 848, 865, 873], "doc": [44, 45, 46, 55, 79, 80, 81, 90, 111, 112, 113, 122, 181, 182, 183, 192, 450, 451, 452, 461, 494, 495, 496, 505, 606, 685, 686, 687, 696, 722, 723, 724, 733, 758, 759, 760, 769, 806, 807, 808, 817, 837, 838, 839, 848, 873], "http": [44, 45, 46, 55, 79, 80, 81, 90, 111, 112, 113, 122, 181, 182, 183, 192, 450, 451, 452, 461, 494, 495, 496, 505, 605, 606, 685, 686, 687, 696, 722, 723, 724, 733, 758, 759, 760, 769, 806, 807, 808, 817, 837, 838, 839, 848, 866, 870], "dev": [44, 45, 46, 55, 79, 80, 81, 90, 111, 112, 113, 122, 181, 182, 183, 192, 450, 451, 452, 461, 494, 495, 496, 505, 685, 686, 687, 696, 722, 723, 724, 733, 758, 759, 760, 769, 806, 807, 808, 817, 837, 838, 839, 848], "2": [44, 45, 46, 51, 53, 55, 79, 80, 81, 86, 88, 90, 111, 112, 113, 118, 120, 122, 147, 181, 182, 183, 188, 190, 192, 207, 210, 222, 263, 383, 450, 451, 452, 457, 459, 461, 494, 495, 496, 501, 503, 505, 542, 543, 545, 558, 568, 574, 575, 576, 593, 594, 596, 597, 598, 599, 600, 604, 608, 609, 611, 629, 685, 686, 687, 692, 694, 696, 722, 723, 724, 729, 731, 733, 758, 759, 760, 765, 767, 769, 791, 806, 807, 808, 813, 815, 817, 837, 838, 839, 844, 846, 848, 864, 865, 866, 873, 874, 878, 884], "7": [44, 45, 46, 55, 79, 80, 81, 90, 111, 112, 113, 122, 181, 182, 183, 192, 450, 451, 452, 461, 494, 495, 496, 505, 545, 608, 609, 611, 685, 686, 687, 696, 722, 723, 724, 733, 758, 759, 760, 769, 806, 807, 808, 817, 837, 838, 839, 848, 864, 865, 866, 873, 884], "concept": [44, 45, 46, 55, 79, 80, 81, 90, 111, 112, 113, 122, 181, 182, 183, 192, 450, 451, 452, 461, 494, 495, 496, 505, 685, 686, 687, 696, 722, 723, 724, 733, 758, 759, 760, 769, 806, 807, 808, 817, 837, 838, 839, 848, 872, 880], "serial": [44, 45, 46, 50, 79, 80, 81, 85, 111, 112, 113, 117, 181, 182, 183, 187, 450, 451, 452, 456, 494, 495, 496, 500, 685, 686, 687, 691, 722, 723, 724, 728, 758, 759, 760, 764, 806, 807, 808, 812, 837, 838, 839, 843], "copi": [44, 79, 111, 181, 450, 494, 527, 541, 542, 543, 545, 549, 557, 562, 569, 600, 605, 609, 685, 722, 758, 806, 837, 864, 866], "chang": [44, 79, 111, 181, 207, 450, 494, 551, 685, 722, 758, 806, 837, 862, 865, 866, 867, 874, 883], "befor": [44, 79, 111, 181, 450, 494, 542, 543, 572, 685, 722, 758, 806, 837, 865, 883, 884], "mode": [45, 50, 80, 85, 112, 117, 182, 187, 451, 456, 495, 500, 569, 608, 686, 691, 723, 728, 759, 764, 807, 812, 838, 843, 864], "liter": [45, 46, 50, 80, 81, 85, 112, 113, 117, 182, 183, 187, 451, 452, 456, 495, 496, 500, 686, 687, 691, 723, 724, 728, 759, 760, 764, 795, 799, 807, 808, 810, 812, 838, 839, 843], "python": [45, 80, 112, 182, 451, 495, 686, 723, 759, 807, 838, 873, 879, 883], "serialize_as_ani": [45, 46, 80, 81, 112, 113, 182, 183, 451, 452, 495, 496, 686, 687, 723, 724, 759, 760, 807, 808, 838, 839], "modelmodel_dump": [45, 80, 112, 182, 451, 495, 686, 723, 759, 807, 838], "represent": [45, 46, 80, 81, 112, 113, 182, 183, 220, 268, 308, 353, 375, 451, 452, 495, 496, 586, 587, 588, 589, 608, 686, 687, 723, 724, 759, 760, 807, 808, 838, 839, 864, 873], "to_python": [45, 80, 112, 182, 451, 495, 686, 723, 759, 807, 838], "serializ": [45, 80, 112, 182, 451, 495, 686, 723, 759, 807, 838], "mai": [45, 53, 80, 88, 112, 120, 182, 190, 195, 275, 295, 315, 339, 360, 403, 451, 459, 495, 503, 552, 564, 565, 605, 606, 686, 694, 708, 723, 731, 744, 759, 767, 807, 815, 819, 838, 846, 862, 864, 865, 866, 870, 873, 874, 878, 879, 883], "non": [45, 46, 51, 80, 81, 86, 112, 113, 118, 182, 183, 188, 217, 220, 274, 294, 314, 338, 359, 451, 452, 457, 495, 496, 501, 549, 602, 686, 687, 692, 723, 724, 729, 759, 760, 765, 807, 808, 813, 838, 839, 844, 865, 874, 878], "alia": [45, 80, 112, 182, 451, 495, 686, 723, 759, 807, 838], "defin": [45, 48, 80, 83, 112, 115, 182, 185, 207, 218, 451, 454, 495, 498, 557, 566, 585, 586, 587, 588, 589, 686, 689, 723, 726, 759, 762, 807, 810, 838, 841, 873, 878], "explicitli": [45, 46, 49, 80, 81, 84, 112, 113, 116, 182, 183, 186, 451, 452, 455, 495, 496, 499, 676, 686, 687, 690, 709, 723, 724, 727, 745, 759, 760, 763, 796, 807, 808, 811, 828, 838, 839, 842], "dump": [45, 46, 80, 81, 112, 113, 182, 183, 451, 452, 495, 496, 686, 687, 723, 724, 759, 760, 807, 808, 838, 839], "idempot": [45, 46, 80, 81, 112, 113, 182, 183, 451, 452, 495, 496, 686, 687, 723, 724, 759, 760, 807, 808, 838, 839], "t": [45, 46, 63, 80, 81, 112, 113, 182, 183, 280, 303, 320, 347, 365, 451, 452, 495, 496, 542, 543, 545, 568, 574, 575, 576, 593, 594, 596, 597, 598, 599, 600, 601, 602, 606, 607, 608, 609, 641, 645, 686, 687, 708, 716, 723, 724, 759, 760, 807, 808, 838, 839, 864, 865, 866, 873, 874, 878, 879, 883, 884], "how": [45, 46, 80, 81, 112, 113, 182, 183, 194, 207, 451, 452, 495, 496, 686, 687, 723, 724, 759, 760, 807, 808, 838, 839, 864, 865, 866, 867, 873, 874, 878, 880, 883, 884], "handl": [45, 46, 80, 81, 112, 113, 182, 183, 451, 452, 495, 496, 686, 687, 723, 724, 759, 760, 807, 808, 838, 839], "them": [45, 46, 80, 81, 112, 113, 182, 183, 451, 452, 495, 496, 543, 578, 581, 602, 686, 687, 723, 724, 744, 759, 760, 807, 808, 838, 839, 864, 865, 866, 873, 874, 878, 879, 883], "log": [45, 46, 80, 81, 112, 113, 182, 183, 210, 220, 222, 451, 452, 495, 496, 616, 686, 687, 723, 724, 759, 760, 807, 808, 838, 839, 861, 864, 865, 866, 869, 872, 873, 884], "pydanticserializationerror": [45, 46, 80, 81, 112, 113, 182, 183, 451, 452, 495, 496, 686, 687, 723, 724, 759, 760, 807, 808, 838, 839], "pydantic_cor": [45, 46, 80, 81, 112, 113, 182, 183, 451, 452, 495, 496, 676, 686, 687, 709, 723, 724, 745, 759, 760, 796, 807, 808, 828, 838, 839], "duck": [45, 46, 80, 81, 112, 113, 182, 183, 451, 452, 495, 496, 686, 687, 723, 724, 759, 760, 807, 808, 838, 839], "behavior": [45, 46, 80, 81, 112, 113, 182, 183, 383, 416, 451, 452, 495, 496, 600, 686, 687, 723, 724, 759, 760, 807, 808, 838, 839, 866, 874, 878, 880, 883], "indent": [46, 81, 113, 183, 452, 496, 687, 724, 760, 808, 839], "modelmodel_dump_json": [46, 81, 113, 183, 452, 496, 687, 724, 760, 808, 839], "to_json": [46, 81, 113, 183, 452, 496, 687, 724, 760, 808, 839], "compact": [46, 81, 113, 183, 452, 496, 605, 687, 724, 760, 808, 839], "alias": [46, 50, 81, 85, 113, 117, 183, 187, 452, 456, 496, 500, 687, 691, 724, 728, 760, 764, 808, 812, 839, 843], "string": [46, 49, 51, 55, 56, 81, 84, 86, 90, 91, 113, 116, 118, 122, 123, 183, 186, 188, 192, 193, 195, 440, 452, 455, 457, 461, 462, 484, 496, 499, 501, 505, 506, 551, 552, 558, 562, 586, 587, 588, 589, 605, 606, 646, 647, 687, 690, 692, 696, 697, 724, 727, 729, 733, 734, 760, 763, 765, 769, 770, 808, 811, 813, 817, 818, 819, 839, 842, 844, 848, 849], "get": [47, 82, 114, 184, 213, 453, 497, 542, 543, 568, 590, 591, 604, 605, 606, 646, 688, 725, 761, 809, 840, 863, 864, 865, 866, 867, 873, 874, 878, 883], "dure": [47, 53, 82, 88, 114, 120, 184, 190, 207, 273, 293, 313, 325, 337, 358, 436, 453, 459, 480, 497, 503, 656, 657, 688, 694, 725, 731, 761, 767, 809, 815, 840, 846, 865, 873, 874], "fieldinfo": [48, 83, 115, 185, 454, 498, 689, 726, 762, 810, 841], "annot": [48, 53, 88, 120, 185, 190, 440, 454, 459, 484, 498, 503, 689, 694, 726, 731, 762, 767, 810, 815, 841, 846], "requir": [48, 52, 53, 87, 88, 119, 120, 185, 189, 190, 248, 454, 458, 459, 498, 502, 503, 545, 565, 605, 662, 689, 693, 694, 714, 716, 726, 730, 731, 762, 766, 767, 810, 814, 815, 841, 845, 846, 864, 865, 866, 872, 873, 874, 878], "metadata": [48, 83, 115, 185, 454, 498, 609, 689, 726, 762, 810, 841], "replac": [48, 83, 115, 185, 454, 464, 498, 508, 600, 609, 657, 689, 726, 762, 810, 841], "__fields__": [48, 83, 115, 185, 454, 498, 689, 726, 762, 810, 841, 883], "v1": [48, 83, 115, 185, 454, 498, 689, 726, 762, 810, 841, 864, 866, 873, 874, 884], "e": [49, 84, 116, 149, 186, 207, 266, 455, 475, 499, 518, 545, 572, 575, 605, 631, 690, 708, 727, 744, 763, 793, 811, 842, 864, 883], "fill": [49, 84, 116, 186, 455, 478, 499, 521, 545, 572, 690, 727, 763, 811, 842, 859, 865], "ref_templ": [50, 61, 62, 85, 96, 97, 117, 128, 129, 187, 200, 201, 456, 471, 472, 500, 514, 515, 691, 701, 702, 728, 738, 739, 764, 775, 776, 812, 823, 824, 843, 854, 855], "def": [50, 61, 62, 85, 96, 97, 117, 128, 129, 187, 200, 201, 456, 471, 472, 500, 514, 515, 691, 701, 702, 728, 738, 739, 764, 775, 776, 812, 823, 824, 843, 854, 855, 874, 879], "schema_gener": [50, 85, 117, 187, 456, 500, 691, 728, 764, 812, 843], "json_schema": [50, 85, 117, 187, 456, 500, 691, 728, 764, 812, 843], "generatejsonschema": [50, 85, 117, 187, 456, 500, 691, 728, 764, 812, 843], "templat": [50, 85, 117, 187, 456, 500, 644, 691, 728, 764, 812, 843, 859, 874], "To": [50, 85, 117, 187, 248, 456, 500, 542, 574, 575, 593, 596, 662, 691, 728, 744, 764, 812, 843, 864, 865, 866, 868, 869, 870, 873, 874, 878, 880, 883, 884], "logic": [50, 85, 117, 187, 456, 500, 691, 728, 764, 812, 843, 883], "subclass": [50, 85, 117, 187, 270, 272, 279, 282, 289, 292, 301, 305, 310, 312, 319, 322, 331, 336, 345, 350, 353, 355, 357, 364, 367, 416, 456, 500, 558, 566, 691, 728, 764, 812, 843, 862, 874, 878, 879], "modif": [50, 85, 117, 187, 456, 500, 569, 691, 728, 764, 812, 843, 874, 884], "param": [51, 86, 118, 188, 213, 219, 371, 372, 373, 402, 457, 501, 692, 729, 765, 813, 844], "parametr": [51, 86, 118, 188, 457, 501, 692, 729, 765, 813, 844], "overridden": [51, 86, 118, 188, 457, 501, 542, 543, 692, 729, 765, 813, 844, 866, 874], "achiev": [51, 86, 118, 188, 457, 501, 692, 729, 765, 813, 844, 865, 870, 874], "scheme": [51, 86, 118, 188, 457, 501, 692, 729, 765, 813, 844, 865], "basemodel": [51, 86, 101, 118, 188, 457, 501, 692, 729, 765, 813, 844, 859, 883], "variabl": [51, 55, 56, 86, 90, 91, 118, 122, 123, 133, 188, 192, 193, 457, 461, 462, 501, 505, 506, 692, 696, 697, 729, 733, 734, 765, 769, 770, 813, 817, 818, 844, 848, 849, 865], "concret": [51, 86, 118, 188, 457, 501, 692, 729, 765, 813, 844], "would": [51, 86, 118, 188, 457, 501, 548, 692, 729, 765, 813, 844, 865, 874, 878, 883, 884], "where": [51, 86, 118, 188, 207, 222, 270, 278, 289, 300, 310, 318, 331, 344, 355, 363, 457, 464, 469, 501, 508, 512, 586, 587, 605, 606, 692, 708, 729, 765, 813, 844, 864, 865, 866, 873, 874, 878, 879, 880, 883], "cl": [51, 86, 118, 188, 457, 501, 642, 692, 729, 765, 813, 844], "typeerror": [51, 86, 118, 188, 457, 501, 604, 692, 729, 765, 813, 844], "try": [51, 53, 86, 88, 118, 120, 188, 190, 387, 406, 422, 457, 459, 501, 503, 604, 692, 694, 729, 731, 744, 765, 767, 813, 815, 844, 846, 866, 873, 874, 884], "_basemodel__context": [52, 87, 119, 189, 458, 502, 693, 730, 766, 814, 845], "after": [52, 87, 119, 170, 189, 276, 281, 296, 304, 316, 321, 340, 348, 361, 366, 458, 478, 502, 521, 693, 730, 766, 814, 845, 873], "__init__": [52, 87, 119, 189, 458, 478, 502, 521, 693, 730, 766, 814, 845, 866, 874, 879], "model_construct": [52, 87, 119, 189, 458, 502, 693, 730, 766, 814, 845], "want": [52, 87, 119, 189, 458, 502, 693, 730, 766, 814, 845, 864, 865, 872, 873, 874, 883], "do": [52, 63, 87, 119, 189, 458, 502, 662, 693, 730, 766, 814, 845, 862, 864, 865, 866, 868, 873, 874, 878, 879, 880, 883, 884], "some": [52, 87, 119, 189, 270, 272, 282, 289, 292, 305, 310, 312, 322, 331, 336, 350, 355, 357, 367, 383, 458, 502, 605, 662, 693, 730, 766, 814, 845, 864, 865, 866, 871, 873, 874, 878, 879, 883, 884], "forc": [53, 88, 120, 190, 393, 414, 430, 459, 503, 694, 731, 767, 815, 846, 873], "raise_error": [53, 88, 120, 190, 459, 503, 694, 731, 767, 815, 846], "_parent_namespace_depth": [53, 88, 120, 190, 459, 503, 694, 731, 767, 815, 846], "_types_namespac": [53, 88, 120, 190, 459, 503, 694, 731, 767, 815, 846], "rebuild": [53, 88, 120, 190, 459, 503, 694, 731, 767, 815, 846], "necessari": [53, 88, 120, 190, 459, 503, 694, 731, 767, 815, 846, 865, 866, 874, 878, 883, 884], "forwardref": [53, 88, 120, 190, 459, 503, 694, 731, 767, 815, 846], "could": [53, 54, 88, 89, 120, 121, 190, 191, 459, 460, 503, 504, 694, 695, 731, 732, 767, 768, 815, 816, 846, 847, 864, 865, 873], "resolv": [53, 88, 120, 190, 459, 503, 694, 731, 767, 815, 846], "depth": [53, 88, 120, 190, 459, 503, 694, 731, 767, 815, 846, 872, 874, 880], "level": [53, 88, 120, 190, 459, 503, 694, 731, 767, 815, 846, 869, 874, 879], "parent": [53, 88, 120, 190, 459, 503, 645, 694, 731, 767, 815, 846, 865], "namespac": [53, 88, 120, 190, 459, 503, 694, 731, 767, 815, 846], "complet": [53, 88, 120, 190, 194, 232, 459, 503, 657, 694, 731, 767, 815, 846, 862, 864, 865, 868, 873, 874, 878], "_was_": [53, 88, 120, 190, 459, 503, 694, 731, 767, 815, 846], "success": [53, 88, 120, 190, 459, 503, 694, 731, 767, 815, 846, 873], "otherwis": [53, 66, 88, 100, 120, 132, 146, 190, 205, 262, 459, 503, 542, 543, 553, 557, 578, 581, 604, 614, 628, 694, 731, 767, 790, 815, 846, 874], "strict": [54, 55, 56, 89, 90, 91, 121, 122, 123, 191, 192, 193, 460, 461, 462, 504, 505, 506, 695, 696, 697, 732, 733, 734, 768, 769, 770, 816, 817, 818, 847, 848, 849], "from_attribut": [54, 89, 121, 191, 460, 504, 695, 732, 768, 816, 847], "enforc": [54, 55, 56, 89, 90, 91, 121, 122, 123, 191, 192, 193, 460, 461, 462, 504, 505, 506, 641, 654, 695, 696, 697, 706, 707, 732, 733, 734, 768, 769, 770, 816, 817, 818, 847, 848, 849, 865], "strictli": [54, 55, 56, 89, 90, 91, 121, 122, 123, 191, 192, 193, 460, 461, 462, 504, 505, 506, 695, 696, 697, 732, 733, 734, 768, 769, 770, 816, 817, 818, 847, 848, 849], "extract": [54, 89, 121, 191, 460, 504, 695, 732, 768, 816, 847, 864, 865, 884], "validationerror": [54, 89, 121, 191, 460, 504, 676, 695, 706, 707, 709, 732, 745, 768, 796, 816, 828, 847], "json_data": [55, 90, 122, 192, 461, 505, 696, 733, 769, 817, 848], "byte": [55, 59, 90, 94, 122, 126, 192, 198, 461, 467, 505, 511, 549, 551, 696, 700, 733, 737, 769, 773, 817, 822, 848, 853], "bytearrai": [55, 90, 122, 192, 461, 505, 696, 733, 769, 817, 848], "pars": [55, 90, 122, 192, 461, 478, 505, 521, 676, 696, 709, 733, 745, 769, 796, 817, 828, 848], "content_typ": [57, 59, 92, 94, 124, 126, 196, 198, 465, 467, 509, 511, 698, 700, 735, 737, 771, 773, 820, 822, 851, 853], "utf8": [57, 59, 92, 94, 124, 126, 196, 198, 465, 467, 509, 511, 698, 700, 735, 737, 771, 773, 820, 822, 851, 853], "proto": [57, 59, 92, 94, 124, 126, 196, 198, 465, 467, 509, 511, 698, 700, 735, 737, 771, 773, 820, 822, 851, 853], "deprecatedparseprotocol": [57, 59, 92, 94, 124, 126, 196, 198, 465, 467, 509, 511, 698, 700, 735, 737, 771, 773, 820, 822, 851, 853], "allow_pickl": [57, 59, 92, 94, 124, 126, 196, 198, 465, 467, 509, 511, 698, 700, 735, 737, 771, 773, 820, 822, 851, 853], "b": [59, 94, 126, 198, 325, 467, 511, 542, 543, 545, 568, 575, 576, 585, 593, 594, 596, 597, 598, 599, 600, 602, 609, 611, 700, 737, 773, 822, 853, 862, 864, 873, 874, 878, 884], "file_format": [60, 66, 95, 100, 127, 132, 199, 205], "variou": [60, 66, 95, 100, 127, 132, 199, 205, 658, 744, 862, 864, 865, 866, 872, 873, 874, 880, 883], "intend": [60, 95, 127, 199, 569, 864], "being": [60, 95, 127, 199, 273, 293, 313, 337, 358, 403, 706, 710, 864, 865, 873, 874, 878, 883], "suffix": [60, 95, 127, 199], "ioerror": [60, 66, 95, 100, 127, 132, 199, 205], "cannot": [60, 66, 95, 100, 127, 132, 199, 205, 207, 545, 586, 587, 588, 676, 709, 745, 796, 828, 866, 878, 883], "reach": [60, 66, 95, 100, 127, 132, 199, 205], "assertionerror": [60, 66, 95, 100, 127, 132, 199, 205, 883], "specif": [63, 169, 215, 226, 231, 233, 238, 240, 245, 398, 527, 597, 752, 753, 774, 864, 865, 866, 873, 874, 883], "part": [63, 864, 865, 872, 873, 883, 884], "remotedatabas": [63, 278, 300, 344, 363, 866, 874], "default_query_schema": [63, 866, 874, 883], "don": [63, 606, 864, 865, 866, 874, 883], "worri": [63, 874], "own": [63, 545, 864, 865, 866, 873, 874, 878, 883], "localn": [64, 98, 130, 203, 477, 520, 704, 740, 777, 825, 857], "yaml": [66, 100, 132, 205, 633, 883], "prior": [66, 100, 132, 205, 222, 223, 433, 454, 865], "select": [66, 100, 132, 172, 205, 799, 864, 873, 874, 884], "auto_id": [67, 68], "default_unit": [67, 68], "special": [67, 383, 394, 416, 525, 606, 862, 864, 865, 873, 874, 879, 883, 884], "descriptor": [67, 133, 436, 480, 590, 591, 642, 874, 879], "deriv": [101, 207], "abstract": [101, 353, 479, 488, 489, 862, 866, 879], "simpli": [101, 248, 280, 303, 320, 347, 365, 436, 480, 542, 548, 864, 865, 866, 873, 874, 878, 884], "wrapper": [101, 232, 280, 303, 320, 347, 365, 383, 866], "dict_loc": [133, 134], "exampl": [134, 207, 280, 303, 320, 347, 365, 387, 406, 422, 542, 543, 545, 558, 568, 574, 575, 576, 593, 594, 596, 597, 598, 599, 600, 601, 602, 604, 607, 608, 609, 611, 864, 865, 866, 867, 868, 873, 874, 878, 879, 883, 884], "redshift": [134, 163, 540, 675, 862, 864, 873, 883, 884], "column_map": [134, 151, 185, 862, 864, 866, 883], "z": [134, 568, 575, 576, 593, 594, 596, 597, 663, 689, 862, 864, 873, 874, 883, 884], "so": [134, 219, 383, 551, 561, 569, 589, 590, 591, 605, 614, 662, 862, 864, 865, 866, 868, 873, 874, 878, 879, 880, 883], "schema_class": [135, 136, 141], "item": [139, 254, 297, 556, 586, 587, 588, 606, 621, 784, 864, 883], "d": [139, 140, 144, 145, 146, 149, 150, 207, 248, 254, 255, 258, 259, 262, 266, 267, 325, 326, 542, 543, 621, 622, 626, 627, 628, 631, 632, 784, 785, 788, 789, 790, 793, 794, 865, 878], "shallow": [140, 255, 553, 622, 785], "iter": [142, 149, 256, 266, 545, 572, 574, 575, 576, 594, 624, 631, 643, 645, 648, 786, 793, 873, 883], "els": [143, 148, 257, 265, 625, 630, 787, 792, 883], "like": [144, 145, 220, 258, 259, 374, 606, 608, 609, 611, 626, 627, 744, 788, 789, 859, 864, 865, 866, 871, 873, 874, 878, 879, 883, 884], "k": [146, 149, 207, 212, 248, 262, 266, 628, 631, 790, 793, 864, 878, 883], "v": [146, 149, 262, 266, 543, 628, 631, 790, 793, 864, 878, 883], "keyerror": [146, 147, 262, 263, 628, 629, 790, 791], "lifo": [147, 263, 629, 791], "last": [147, 263, 383, 416, 629, 791, 865, 883], "first": [147, 263, 280, 303, 320, 347, 365, 607, 629, 791, 864, 865, 866, 867, 873, 878, 880, 883, 884], "out": [147, 263, 562, 629, 791, 864, 865, 868, 873], "order": [147, 207, 263, 545, 548, 549, 567, 572, 601, 607, 629, 791, 864, 873, 874, 883], "empti": [147, 263, 386, 403, 405, 421, 604, 629, 791], "insert": [148, 265, 542, 543, 544, 630, 792], "f": [149, 222, 266, 280, 303, 320, 347, 365, 585, 631, 793, 864, 865, 866, 873, 874, 878, 880, 883], "present": [149, 266, 604, 631, 793, 865, 872, 873, 874, 878, 883], "lack": [149, 266, 631, 793], "either": [149, 207, 266, 270, 289, 310, 331, 355, 544, 569, 631, 708, 744, 779, 793, 864, 865, 873, 874, 878], "columnmap": [151, 166, 185, 827], "object_map": [151, 185, 883], "sourcetableschemaset": [151, 185, 202], "default_coord_system": [151, 170, 185, 795, 810, 862, 883], "icr": [151, 185, 795, 799, 810, 862, 864, 873, 874, 883, 884], "object_type_separ": [151, 185, 561, 614, 795, 810], "coordin": [152, 153, 159, 160, 165, 168, 169, 170, 172, 248, 272, 280, 292, 303, 312, 320, 336, 347, 357, 365, 377, 383, 385, 404, 416, 420, 529, 530, 536, 537, 560, 578, 581, 608, 651, 664, 665, 671, 672, 744, 799, 862, 864, 865, 866, 873, 874, 883, 884], "dec": [153, 326, 530, 608, 663, 665, 689, 744, 862, 864, 865, 866, 873, 874, 878, 883, 884], "galact": [154, 155, 156, 157, 280, 303, 320, 347, 365, 531, 532, 533, 534, 666, 667, 668, 669, 795, 799, 810, 862, 864, 865, 866, 874, 883], "latitud": [154, 155, 531, 532, 578, 666, 667, 744, 752, 862], "longitud": [156, 157, 533, 534, 581, 668, 669, 744, 753, 862, 864, 883], "main": [158, 535, 649, 662, 670, 869], "ra": [160, 326, 537, 608, 663, 672, 689, 708, 744, 862, 864, 865, 866, 873, 874, 878, 883, 884], "frame": [165, 170, 280, 303, 320, 347, 365, 379, 382, 383, 523, 524, 560, 578, 581, 862, 864, 866, 873, 874, 878, 883, 884], "between": [166, 194, 195, 222, 433, 538, 543, 819, 865, 866, 874, 878, 883], "recogn": [166, 865, 880, 883], "instruct": [166, 867], "mean": [166, 175, 207, 605, 606, 864, 865, 874, 878, 883, 884], "util": [166, 202, 433, 434, 435, 454, 478, 498, 521, 522, 578, 581, 861, 865, 866, 868, 873, 874, 878, 883], "tablecolumn": [168, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 689, 706, 707, 708, 710, 714, 726, 744, 752, 753, 762, 774], "genericfram": [169, 170, 377, 385, 404, 420, 523, 524], "unless": [170, 878], "nativ": [172, 194, 195, 383, 416, 549, 578, 581, 744, 799, 819, 865], "whichev": [172, 799], "suffici": [172, 799, 865, 874], "obtain": [172, 387, 406, 422, 560, 799, 865, 873, 878], "best": [175, 864, 865, 871, 873, 874], "guess": [175, 873, 878], "deduc": [175, 522, 874, 883, 884], "its": [175, 522, 860, 864, 865, 873, 874, 878], "final": [175, 436, 480, 864, 865, 884], "union": [185, 454, 689, 726, 762, 841], "nonetyp": [185, 454, 689, 726, 762, 841], "simbad": [194, 387, 406, 422, 864, 865, 866, 873, 874, 878, 883], "find": [194, 248, 475, 518, 864, 865, 866, 867, 868, 873, 874, 878, 883, 884], "here": [194, 195, 522, 558, 608, 819, 861, 864, 865, 866, 871, 872, 873, 874, 878, 879, 883, 884], "separ": [195, 280, 303, 320, 347, 365, 433, 538, 819, 864, 865, 873, 874, 878], "charact": [195, 551, 585, 586, 587, 588, 589, 819], "mani": [195, 569, 608, 616, 744, 819, 864, 866, 868, 872, 873, 874, 878, 879, 883, 884], "multipl": [195, 586, 587, 588, 589, 599, 606, 819, 864], "delimit": [195, 819], "singl": [195, 403, 544, 579, 594, 608, 819, 827, 864, 878], "entry_1": [195, 819], "entry_2": [195, 819], "gaussian": [206, 207, 878], "regress": [206, 221, 226, 231, 232, 233, 238, 240, 245], "length_scal": [207, 208], "length_scale_bound": [207, 208], "1e": [207, 208, 864, 873], "05": [207, 208, 243, 558, 873, 874], "100000": [207, 208], "radial": 207, "basi": [207, 433], "kernel": [207, 210, 212, 213, 216, 217, 218, 219, 220], "aka": 207, "squar": 207, "exponenti": 207, "haversin": [207, 230, 244], "distanc": [207, 230, 244, 865, 873, 874], "metric": [207, 230, 244, 864], "spheric": [207, 248, 383, 864, 865], "rbf": 207, "stationari": [207, 216], "also": [207, 232, 286, 403, 542, 543, 545, 572, 593, 594, 598, 742, 864, 865, 870, 872, 873, 874, 878, 883, 884], "parameter": 207, "length": [207, 218, 220, 403, 542, 543, 545, 558, 562, 572, 604, 609, 611, 866, 884], "scale": [207, 220, 873], "l": [207, 862, 864, 873, 874, 880, 883, 884], "scalar": [207, 270, 289, 310, 331, 355, 369, 542, 543, 604, 611, 641], "isotrop": 207, "variant": 207, "vector": [207, 218, 369, 865], "dimens": [207, 651], "x": [207, 212, 542, 543, 558, 568, 575, 576, 593, 594, 596, 597, 715, 864, 865, 868, 873, 878], "anisotrop": 207, "x_i": 207, "x_j": 207, "exp": [207, 222, 865, 878], "left": [207, 212, 222, 403, 586, 587, 588, 589, 865, 869, 878], "frac": [207, 222, 864, 865, 878], "2l": 207, "right": [207, 222, 586, 587, 588, 589, 864, 865, 869, 878, 879], "cdot": 207, "euclidean": [207, 865, 878], "advic": 207, "g": [207, 387, 406, 422, 545, 572, 575, 605, 873], "infinit": 207, "differenti": 207, "impli": [207, 744], "gp": 207, "covari": 207, "thu": [207, 222, 248, 708, 864, 865, 871, 873, 874, 878, 883], "veri": [207, 383, 542, 616, 864, 865, 874, 878, 879, 883], "smooth": [207, 865], "chapter": 207, "4": [207, 543, 545, 551, 558, 598, 599, 602, 611, 864, 865, 866, 873, 878, 884], "section": [207, 865, 867, 873, 874, 878, 883], "further": [207, 865, 871, 878], "read": [207, 384, 396, 418, 522, 637, 864, 865, 866, 867, 871, 872, 873, 874, 879, 883], "18": [207, 601, 607, 873], "ndarrai": [207, 210, 211, 212, 220, 548, 549, 600], "shape": [207, 210, 211, 212, 220], "n_featur": [207, 212], "arrai": [207, 229, 243, 270, 272, 289, 292, 310, 312, 331, 336, 355, 357, 383, 545, 548, 549, 551, 552, 553, 558, 562, 597, 641, 865, 868], "featur": [207, 218, 606, 873], "fix": [207, 217, 218, 220, 864], "1e5": 207, "lower": [207, 864], "upper": 207, "bound": 207, "hyperparamet": [207, 210, 211, 217, 220, 232], "tune": [207, 873], "david": 207, "duvenaud": 207, "2014": 207, "cookbook": [207, 863], "carl": 207, "edward": 207, "rasmussen": 207, "christoph": 207, "william": 207, "2006": 207, "machin": [207, 865], "learn": [207, 865, 867], "mit": 207, "press": 207, "sklearn": [207, 226, 232, 233, 240], "dataset": [207, 874], "load_iri": 207, "gaussianprocessclassifi": 207, "y": [207, 212, 542, 543, 568, 575, 576, 593, 594, 596, 597, 865, 873, 878], "return_x_i": 207, "gpc": 207, "random_st": 207, "fit": [207, 294, 338, 383, 384, 386, 396, 405, 416, 418, 421, 546, 864, 865, 866, 873, 874, 884], "9866666666666667": 207, "predict_proba": 207, "83548752": 207, "03228706": 207, "13222543": 207, "79064206": 207, "06525643": 207, "14410151": 207, "transform": [210, 220, 248, 878], "theta": [210, 211, 248, 383, 865, 880], "n_dim": [210, 211, 220], "clone": [211, 870], "diagon": 212, "ident": 212, "np": [212, 545, 549, 558, 572, 608, 864, 865, 884], "howev": [212, 549, 864, 865, 866, 873, 874, 878, 879, 883, 884], "evalu": [212, 605, 606, 864, 878], "effici": [212, 864], "sinc": [212, 575, 605, 606, 864], "n_samples_x": 212, "k_diag": 212, "estim": [213, 222], "subobject": 213, "backward": 218, "compat": [218, 556], "work": [219, 274, 294, 314, 338, 359, 432, 579, 594, 864, 865, 867, 873, 874, 883], "well": [219, 444, 488, 569, 864, 865, 873, 884], "nest": [219, 623, 643, 648], "latter": 219, "compon": [219, 865, 884], "__": 219, "possibl": [219, 605, 641, 864, 865, 873, 874, 878, 879, 884], "flatten": 220, "typic": [220, 274, 294, 314, 338, 359, 864, 865, 872, 874, 883, 884], "space": [220, 585, 865], "amen": 220, "natur": [220, 551, 878, 883], "live": 220, "baysianpoissonmapregressor": 222, "posterior": [222, 878], "sky": [222, 272, 282, 286, 292, 305, 312, 322, 336, 350, 357, 367, 374, 383, 416, 864, 865, 874, 878, 884], "densiti": [222, 864, 874, 880], "distribut": [222, 248, 715, 865, 868], "p": [222, 248, 585, 651, 653, 865, 868, 873, 874, 878], "beta": 222, "textbf": [222, 865, 878], "r": [222, 585, 864, 878], "n": [222, 248, 270, 289, 310, 331, 355, 369, 558, 585, 609, 864, 865, 878], "prod_": [222, 878], "a_if": 222, "r_i": 222, "n_i": [222, 864], "sum_": [222, 864, 873, 878], "c": [222, 542, 543, 545, 568, 575, 576, 593, 594, 596, 597, 598, 599, 602, 609, 611, 864, 865, 873, 884], "lambda_k": 222, "_k": 222, "n_k": 222, "rate": [222, 864, 865, 871], "healpix": [222, 375, 380, 383, 386, 391, 393, 405, 411, 414, 416, 421, 427, 430, 865], "cell": [222, 865], "problem": [222, 865, 873, 878], "discret": 222, "count_tabl": [224, 227, 231, 234, 238, 241, 245, 864], "object_typ": [224, 227, 231, 234, 238, 241, 245, 398, 399, 400, 401, 402, 403], "poissonmapregressor": [226, 240], "regressor_class": [226, 232, 233, 240], "regressor": [226, 227, 232, 233, 234, 240, 241, 246, 402, 865], "around": [226, 233, 240, 286, 415, 431, 864, 865, 869, 873, 878], "training_kw": [227, 234, 241, 402, 865], "param_kw": [227, 234, 241, 402, 865], "count": [227, 231, 234, 238, 241, 245, 270, 282, 289, 305, 310, 322, 331, 350, 355, 367, 369, 403, 407, 415, 423, 431, 554, 864, 874], "pull": [227, 234, 241, 280, 297, 298, 302, 303, 320, 346, 347, 365, 864, 865, 866, 874], "train": [227, 231, 232, 234, 238, 241, 245, 246, 325, 865], "n_neighbor": [229, 230, 865], "30": [229, 865, 873], "60": [229, 287], "120": [229, 329], "algorithm": [230, 244, 548, 607, 873], "auto": [230, 244], "training_fract": [231, 238, 245, 246, 865], "fraction": [231, 232, 238, 245, 865], "regressor_paramet": 232, "vari": [232, 275, 279, 280, 295, 301, 303, 315, 319, 320, 339, 345, 347, 360, 364, 365, 866], "default_training_fract": 232, "subset": [232, 403, 575, 873], "variat": 232, "permiss": 232, "radiu": [243, 244, 280, 303, 320, 347, 365, 369, 393, 414, 415, 430, 431, 864, 865, 866, 873, 874], "001": 243, "005": 243, "01": [243, 244, 558, 608, 873], "map_phi": 246, "map_theta": 246, "map_target_valu": 246, "statist": [247, 286, 865, 868, 871, 873, 874, 878, 879, 883], "n_point": 248, "uniform": [248, 864, 874], "sampl": [248, 270, 272, 282, 289, 292, 305, 310, 312, 322, 331, 336, 350, 355, 357, 367, 369, 415, 416, 431, 864, 865, 873, 878], "surfac": [248, 383, 416, 865, 873], "draw": 248, "phi": [248, 383, 865], "azimuth": 248, "rad": [248, 386, 405, 421, 864, 865, 884], "elev": 248, "angl": [248, 651], "reli": 248, "random": [248, 282, 305, 322, 350, 367, 369, 415, 416, 431, 606, 865], "segment": 248, "omega": [248, 865], "area": [248, 280, 282, 303, 305, 320, 322, 347, 350, 365, 367, 865, 874, 878], "sin": 248, "probabl": [248, 864, 865, 868, 874, 878, 880], "point": [248, 270, 282, 284, 285, 289, 305, 307, 310, 322, 324, 331, 350, 352, 355, 367, 369, 415, 431, 865, 873, 874, 878, 879], "region": [248, 864, 874], "sim": [248, 878], "u": [248, 543, 551, 552, 605, 608, 865, 866, 878, 884], "alpha": [248, 864, 865], "psi": 248, "accomplish": [248, 871, 873, 878, 879], "independ": [248, 878], "let": [248, 387, 406, 422, 605, 864, 865, 866, 869, 873, 874, 878, 883, 884], "co": [248, 865], "extern": [249, 859, 864, 866, 873], "local": [249, 268, 274, 276, 281, 284, 285, 294, 296, 304, 314, 316, 321, 338, 340, 348, 359, 361, 366, 605, 606, 864, 865], "except": [249, 383, 416, 522, 586, 587, 588, 589, 608, 865, 874], "primari": [250, 383, 416, 544, 595, 607, 608, 873], "purpos": [250, 864, 866, 867, 871, 874, 883, 884], "backend": [250, 650, 658, 859, 865, 873, 874, 883], "keep": [250, 576, 864, 874, 884], "db_name": [268, 269, 288, 308, 309, 330, 353, 354, 874], "poisson_path": [269, 288, 309, 330, 354], "poisson": [269, 270, 274, 278, 288, 289, 294, 300, 309, 310, 314, 318, 330, 331, 338, 344, 354, 355, 359, 363, 372, 373, 387, 394, 398, 402, 403, 406, 422, 866, 867], "atla": [269, 270, 274, 278, 288, 289, 294, 300, 309, 310, 314, 318, 330, 331, 338, 344, 354, 355, 359, 363, 372, 373, 375, 376, 377, 385, 387, 393, 398, 403, 404, 406, 407, 414, 415, 420, 422, 423, 430, 431, 865, 874], "query_config": [269, 288, 309, 330, 354, 866, 874], "query_schema": [269, 288, 309, 330, 354, 864, 866, 874], "correct_query_output": [269, 273, 288, 293, 309, 313, 330, 337, 354, 358, 873, 874], "radii": [270, 272, 282, 284, 285, 289, 292, 305, 307, 310, 312, 322, 324, 331, 336, 350, 352, 355, 357, 367, 369], "parallel_kwarg": [270, 272, 282, 284, 285, 289, 292, 305, 307, 310, 312, 322, 324, 331, 336, 350, 352, 355, 357, 367, 864, 874], "randomli": [270, 282, 289, 305, 310, 322, 331, 350, 355, 367, 415, 431, 865], "poissonatla": [270, 278, 289, 300, 310, 318, 331, 344, 355, 363, 369, 865, 874], "parallel": [270, 272, 282, 284, 285, 289, 292, 305, 307, 310, 312, 322, 324, 331, 336, 350, 352, 355, 357, 367, 874], "implement": [270, 272, 282, 289, 292, 305, 310, 312, 322, 331, 336, 350, 355, 357, 367, 522, 865, 866, 873, 874, 879], "multi": [270, 272, 282, 289, 292, 305, 310, 312, 322, 331, 336, 350, 355, 357, 367, 608], "thread": [270, 272, 282, 289, 292, 305, 310, 312, 322, 331, 336, 350, 355, 357, 367, 865, 873], "alter": [271, 280, 291, 303, 311, 320, 335, 347, 356, 365, 522, 561, 614, 874, 878, 883], "writabl": [271, 291, 311, 335, 356, 873], "document": [271, 291, 311, 335, 356, 522, 744, 861, 864, 865, 866, 872, 873, 874, 878, 879, 883, 884], "skycoord": [272, 280, 292, 303, 312, 320, 336, 347, 357, 365, 380, 391, 411, 427, 560, 608, 651, 864, 865, 866, 874], "thing": [273, 293, 313, 337, 358, 864, 865, 866, 873, 874, 878, 879, 883, 884], "home": [274, 294, 314, 338, 359, 873, 874], "runner": [274, 294, 314, 338, 359], "bin": [274, 294, 314, 338, 359, 864, 874, 883], "psn_map": [274, 294, 314, 338, 359, 865, 874], "remot": [274, 276, 280, 281, 286, 294, 296, 303, 304, 314, 316, 320, 321, 325, 338, 340, 347, 348, 359, 361, 365, 366, 864, 865, 883], "trivial": [274, 294, 314, 338, 359, 874, 878], "depend": [275, 295, 315, 339, 360, 864, 865, 878, 883], "substanti": [275, 295, 315, 339, 360, 575], "wish": [278, 300, 318, 344, 363], "direct": [278, 300, 318, 344, 363, 869], "particularli": [278, 300, 318, 344, 363, 522, 864, 866, 873, 874], "built": [278, 286, 300, 318, 325, 344, 363, 370, 864, 865, 866, 867, 873, 874, 883], "atlas": [278, 300, 318, 344, 363, 866], "angular": [280, 303, 320, 347, 365, 415, 431, 865, 874], "doesn": [280, 303, 320, 347, 365, 645, 708, 716, 865, 873, 874, 879, 884], "_query_radiu": [280, 303, 320, 347, 365, 874], "code": [280, 303, 320, 347, 365, 606, 662, 868, 872, 874, 878, 879], "ned": [280, 320, 347, 365, 864, 865, 866, 868, 873, 874, 883], "center": [280, 286, 303, 320, 347, 365, 586, 587, 588, 589, 651, 653, 866, 874], "database_inst": [280, 303, 320, 347, 365], "deg": [280, 303, 320, 347, 365, 608, 864, 865, 866, 874, 883], "print": [280, 303, 320, 347, 365, 542, 543, 545, 558, 568, 574, 575, 576, 585, 588, 589, 590, 591, 593, 594, 596, 597, 598, 599, 601, 602, 606, 607, 608, 660, 864, 865, 866, 873, 874, 883, 884], "2mass": [280, 303, 320, 347, 365, 874], "j17453276": [280, 303, 320, 347, 365], "2856166": [280, 303, 320, 347, 365], "981": [280, 303, 320, 347, 365], "source_t": [284, 285, 307, 324, 352, 883], "search_radiu": [284, 285, 415, 431, 864], "ned_std": [286, 288, 874], "ipac": [286, 865, 868, 874], "caltech": [286, 874], "websit": [286, 325], "comprehens": [286, 868, 871, 873, 874, 883, 884], "multiwavelength": 286, "extragalact": [286, 874], "systemat": 286, "ongo": 286, "fusion": 286, "integr": [286, 878], "hundr": [286, 864], "larg": [286, 565, 859, 861, 864, 865, 873, 883], "survei": [286, 864, 866, 868, 878, 884], "ten": 286, "thousand": 286, "research": [286, 864], "public": 286, "content": 286, "servic": 286, "span": 286, "observ": [286, 864, 878, 880], "spectrum": 286, "gamma": 286, "rai": [286, 864], "radio": 286, "frequenc": [286, 865], "As": [286, 864, 865, 866, 873, 874, 878, 879, 883], "publish": 286, "previou": [286, 585], "unifi": [286, 864], "retriev": [286, 567, 579, 580, 606, 865], "seamless": 286, "connect": [286, 592, 612, 862], "nasa": 286, "astrophys": [286, 878], "mission": [286, 864, 868, 880], "archiv": 286, "irsa": 286, "heasarc": 286, "mast": 286, "literatur": 286, "via": [286, 332, 349, 865, 873, 874], "world": [286, 872, 879], "respons": [287, 329], "time": [287, 329, 383, 558, 593, 596, 606, 608, 864, 865, 866, 873], "without": [287, 329, 641, 662, 714, 716, 865, 873, 874, 878], "second": [287, 329, 542, 543, 866, 873, 878], "object_nam": [297, 298, 302, 346], "spectra": [297, 871], "url": 297, "relat": [298, 302, 346, 432, 868], "localdatabas": [300, 318, 344, 363, 866, 874], "search_radii": [307, 324, 352], "simbad_std": [325, 330], "centr": 325, "de": 325, "donn\u00e9": 325, "astronomiqu": 325, "strasbourg": 325, "cd": [325, 651, 653, 870, 873], "acronym": 325, "et": [325, 878], "dentif": [325, 868], "m": [325, 608, 868, 878, 879], "easur": 325, "ibliographi": 325, "stronom": 325, "ata": 325, "softwar": [325, 864, 868, 871, 872, 873, 884], "develop": [325, 649, 864, 865, 868, 869, 883], "marc": 325, "wenger": 325, "retir": 325, "ana\u00ef": 325, "oberto": 325, "gr\u00e9gori": 325, "mantelet": 325, "contribut": [325, 868], "student": 325, "continu": [325, 871, 878], "votabl": [326, 327], "otyp": 326, "row": [328, 527, 541, 545, 561, 562, 567, 572, 575, 579, 580, 585, 586, 587, 588, 589, 596, 597, 601, 605, 606, 614, 865, 873, 884], "clear": [333, 865], "cach": [333, 606], "link": [342, 861, 865, 866, 871, 874], "asql": 349, "reason": [353, 864, 866, 878], "instanti": [353, 436, 480, 866, 874, 879], "database_nam": [369, 371, 372, 373, 873], "attach": [369, 642, 862, 864, 865, 874], "fetch": [371, 372, 373, 407, 423, 643, 651, 864, 865, 874], "interfac": [374, 585, 864, 874], "mapatla": [374, 376, 396, 416, 418], "act": [374, 864, 873], "hdu": [376, 383, 390, 410, 416, 426, 546], "inplac": [382, 398, 657, 865], "filepath": [383, 384, 394, 396, 416, 418, 873], "design": [383, 864, 873, 874, 878, 884], "On": [383, 416, 863, 865, 867, 873, 874], "few": [383, 416, 522, 608, 865, 866, 873, 884], "regard": [383, 416, 522, 878], "header": [383, 416, 475, 518, 585, 586, 587, 588, 589, 605, 883], "geometri": [383, 416], "npix": [383, 416, 865], "grid": [383, 386, 393, 405, 414, 416, 421, 430, 865], "nside": [383, 416, 865], "equival": [383, 416, 551, 707, 873], "csy": [383, 416, 865], "cdate": [383, 416], "date": [383, 416, 558], "edat": [383, 416], "than": [383, 575, 862, 864, 865, 866, 874, 878], "le": 383, "pi": [383, 864, 865, 878, 884], "measur": 383, "north": 383, "pole": 383, "never": [383, 874], "packag": [383, 616, 658, 662, 862, 865, 867, 868, 871, 872, 873, 874], "lon": [383, 560, 578, 744, 779, 864], "lat": [383, 560, 581, 744, 779, 864], "base_coordin": 383, "yet": [383, 645, 865, 879], "ti": 383, "physic": [383, 862, 871, 878], "interpret": [383, 744], "aforement": 383, "1xnpix": 383, "ismap": 383, "skyatla": [386, 405, 421, 865], "save": [386, 405, 421], "assum": [386, 405, 421, 578, 581, 715, 878], "galaxi": [387, 406, 422, 864], "poisson_atla": [387, 406, 422, 874], "get_default_poisson_atla": [387, 406, 422, 865], "reshap": [393, 414, 430], "encount": [393, 414, 430, 865, 872], "statatla": 394, "hudl": [397, 419], "knn": [398, 865], "calcul": [398, 865, 873, 878], "retrain": 402, "cross_valid": 402, "cv_kw": 402, "build_arg": 403, "build_kwarg": 403, "individu": [403, 557, 864, 866, 874], "append": [403, 542, 543, 546], "element": [403, 608, 611], "arbitrari": [403, 651], "similar": [403, 574, 865, 873, 874], "sub": [403, 645, 861, 871], "npoint": [415, 431], "dbname": 416, "guidanc": [432, 864], "recommend": [432, 522, 606, 884], "settings_head": [433, 454, 479, 498], "astrometry_param": [433, 454], "settings_flag": [433, 454, 479, 498], "enable_astrometri": [433, 454], "astrometric_reduct": [433, 454], "cross_match_databas": [433, 454, 478, 479, 498, 521, 864, 879], "fill_unknown": [433, 454, 479, 498, 864], "catalog_err": [433, 454, 864, 878], "icrscoordinatestderrorspecifi": [433, 434, 435, 454], "database_err": [433, 454, 864, 878], "lambda": [433, 454, 708, 726, 865, 880], "refin": [433, 878], "confid": [433, 865, 868, 871, 873, 878], "astrometr": [433, 744, 864], "precis": [433, 708, 864, 873, 878], "coordinatestderrorspecifi": [434, 435], "_parameter_dictionari": [436, 480, 879], "pydanticcmd": 439, "cmd": [439, 483, 864, 873], "debug": [440, 484, 649, 864, 869, 873, 874, 884], "statement": [440, 484, 649, 864, 874, 878], "seri": [444, 488, 558], "func": [444, 488, 689], "reduction_process_nam": [444, 488], "potenti": [444, 488, 864, 873, 874, 878, 880], "_cmdtypepydanticannot": [454, 498], "temp": [464, 469, 508, 512], "newli": [464, 508], "join": [464, 508, 873, 874], "tabul": [469, 512, 522], "runtime_param": [474, 517], "under": [475, 518, 865, 866, 873, 883], "abstract_process_param": [475, 518], "everyth": [475, 518, 883], "correctli": [475, 518, 865], "miss": [478, 521, 545, 572, 608], "succe": [478, 521], "enough": [478, 521, 865], "exactli": [522, 878], "top": [522, 869, 874, 883], "inher": 522, "slice": [522, 569, 597, 643, 645, 648], "latlon": [523, 524, 865], "mask": [527, 541, 545, 549, 557, 564, 565, 572, 608], "dtype": [527, 541, 545, 551, 552, 558, 572, 585, 586, 587, 588, 589, 604, 860], "copy_indic": [527, 541], "col": [542, 543, 569, 574, 600], "index": [542, 543, 544, 558, 567, 568, 569, 572, 579, 580, 595, 596, 605, 606, 607, 608, 864, 873], "rename_dupl": [542, 543], "default_nam": 542, "suppli": [542, 543, 544, 557, 586, 587, 588, 866], "mixin": [542, 543, 564, 566, 600, 604, 608], "broadcast": [542, 543, 604], "sever": [542, 593, 594, 596, 864, 873, 883], "onc": [542, 543, 656, 657, 864, 865, 866, 873], "There": [542, 862, 864, 865, 866, 869, 873, 874, 878, 883], "littl": [542, 543, 616, 883], "two": [542, 543, 744, 864, 865, 866, 873, 874, 878, 879, 884], "approach": [542, 865, 878], "uniquifi": [542, 543], "info": [542, 598, 873, 874], "number_of_column": 542, "third": 542, "col_c": [542, 543], "b_1": [542, 543], "unnam": [542, 543], "explicit": [542, 543, 864], "col2": 542, "perspect": [543, 879, 883], "loop": 543, "over": [543, 574, 575, 864, 865, 874, 878], "duplic": [543, 605, 864], "ones": [543, 883], "hstack": [543, 600, 609], "replace_column": [543, 609], "col_d": 543, "col_b": 543, "col0": [543, 574, 575], "colnam": [544, 595], "engin": 544, "among": 544, "indic": [544, 548, 569, 579, 580, 595, 605, 864, 873], "sortedarrai": 544, "bst": 544, "scengin": 544, "val": [545, 572, 647], "sequenc": [545, 572, 600], "zero": [545, 572], "give": [545, 572, 594, 864], "three": [545, 568, 575, 576, 593, 594, 596, 597, 598, 599, 601, 602], "8": [545, 551, 552, 608, 611, 865, 866, 869, 873, 884], "6": [545, 598, 599, 605, 606, 608, 864, 865, 866, 873], "9": [545, 865, 869, 873, 884], "conn": 547, "kind": [548, 551, 552, 607], "revers": [548, 607], "accord": [548, 562, 607, 884], "numpi": [548, 549, 558, 562, 600, 607, 860, 864, 865, 884], "quicksort": [548, 607], "mergesort": [548, 607], "heapsort": [548, 607], "stabl": [548, 607, 870], "index_arrai": 548, "keep_byteord": 549, "ma": 549, "maskedarrai": 549, "appropri": 549, "preserv": [549, 569], "table_arrai": 549, "unmask": 549, "bytestr": [551, 552], "unicod": [551, 552], "utf": [551, 552], "uc": 551, "ineffici": 551, "script": [551, 873], "manipul": [551, 873], "syntax": [551, 609, 883], "export": [552, 605], "copy_data": 553, "recarrai": 556, "fill_valu": 557, "filled_t": 557, "panda": [558, 608, 864], "numer": [558, 602, 641], "support": [558, 585, 608], "convers": [558, 651], "delta": [558, 865, 878], "timedelta": [558, 608], "importerror": [558, 608], "instal": [558, 608, 659, 865, 869, 872, 873], "qtabl": [558, 608], "1998": [558, 608], "2002": [558, 608], "datetime64": [558, 608], "dt": [558, 608], "timedelta64": [558, 608], "df": [558, 608], "option_context": [558, 608], "displai": [558, 605, 606, 608, 649, 864], "max_column": [558, 608], "20": [558, 597, 608, 864, 865], "dai": [558, 608], "00": [558, 608, 873, 874], "float64": [558, 609], "01t00": 558, "000": [558, 873], "autom": [559, 868], "detect": [561, 614, 864, 873, 878, 880], "reformat": [561, 614], "group": [562, 864], "split": 562, "tablegroup": 562, "wai": [562, 866, 873, 874, 878], "homogen": 562, "maskedcolumn": [564, 604, 608], "has_masked_valu": 564, "rel": [565, 865, 873], "slow": 565, "tableiloc": 567, "appear": [567, 708, 864, 874, 883], "freez": 569, "copy_on_getitem": 569, "discard_on_copi": 569, "whenev": [569, 883], "modifi": [569, 604, 874, 884], "exit": [569, 873], "refresh": [569, 585], "themselv": [569, 872, 874, 884], "scenario": [569, 865], "i0": 569, "i1": 569, "tableindic": 570, "col1": 574, "syntact": 574, "prefer": [574, 641], "especi": 575, "faster": 575, "tbl": 575, "slower": [575, 864], "wise": [575, 611], "coordinate_column": [578, 581], "get_coordin": [578, 581, 864], "tableloc": 579, "rang": [579, 866], "iloc": 579, "tablelocindic": 580, "max_lin": [585, 586, 587, 588, 589, 605], "max_width": [585, 586, 587, 588, 589], "show_nam": [585, 586, 587, 588, 589], "show_unit": [585, 586, 587, 588, 589], "show_dtyp": [585, 586, 587, 588, 589], "brows": 585, "page": [585, 606, 863, 867, 874, 884], "forward": 585, "back": [585, 865], "next": [585, 864, 873], "go": [585, 864, 865, 866, 869, 873, 874, 878, 879, 880, 884], "begin": [585, 865, 867, 873, 874, 878, 883], "q": [585, 608, 873], "quit": [585, 865, 866, 873, 874, 878, 879, 883, 884], "h": [585, 873, 878], "help": [585, 864, 873, 874, 878, 884], "line": [585, 586, 587, 588, 589, 870, 873, 874, 883], "width": [585, 586, 587, 588, 589], "html": [586, 587, 605, 606], "tableid": [586, 587, 605, 606], "align": [586, 587, 588, 589], "tableclass": [586, 587], "height": [586, 587, 588], "screen": [586, 587, 588, 589], "termin": [586, 587, 588, 589], "conf": [586, 587, 588], "neg": [586, 587, 588, 605], "limit": [586, 587, 588, 605, 606], "id": [586, 587, 605, 606], "tag": [586, 587, 605, 606, 873], "integ": [586, 587, 605, 606, 608, 873], "pad": [586, 587, 588, 589], "css": [586, 587, 605, 606], "pprint": [589, 865], "restrict": [589, 864], "maintain": [590, 591, 874, 883], "control": [590, 591, 608, 865, 873, 878], "visibl": [590, 591, 869], "inherit": [590, 591, 642], "metaattribut": [590, 591], "__attributes__": [590, 591], "pprint_include_nam": 590, "pprint_exclude_nam": 591, "tableread": 592, "del": 593, "involv": [595, 874, 880, 883], "recent": [595, 883], "remain": [595, 602, 864], "row_specifi": 597, "extend": 597, "outsid": [597, 874], "new_nam": [598, 599], "renam": [598, 599, 873, 874], "aa": [598, 599], "bb": 599, "add_column": [600, 609], "itself": [600, 605, 606, 864, 884], "float_a": 600, "astyp": 600, "place": [601, 602, 609, 873], "max": [601, 607, 864], "jo": [601, 607], "john": [601, 607], "miller": [601, 607], "jackson": [601, 607], "12": [601, 602, 607, 865, 866, 869, 873, 884], "15": [601, 607, 873], "firstnam": [601, 607], "tel": [601, 607], "decim": [602, 865], "25": 602, "55": [602, 865, 873], "123": 602, "85": [602, 865], "26": 602, "ensur": 604, "start": [604, 864, 865, 866, 867, 869, 873, 878], "t0": 604, "ham": 604, "spam": 604, "str4": 604, "breakfast": 604, "But": 604, "approv": 604, "5000": [605, 873], "jsviewer": [605, 606], "browser": [605, 606], "jskwarg": 605, "use_local_fil": 605, "table_class": [605, 606], "show_row_index": [605, 606], "idx": [605, 606], "plan": 605, "futur": 605, "activ": [605, 874], "pleas": 605, "know": [605, 708, 864, 865, 878], "16067": 605, "render": [605, 606], "web": 605, "low": [605, 864], "avoid": [605, 606, 864], "issu": [605, 608, 864, 873, 874], "prepend": 605, "javascript": [605, 606], "datat": [605, 606], "legal": 605, "firefox": 605, "chrome": 605, "safari": 605, "mac": 605, "open": [605, 865, 873], "applic": [605, 866], "googl": 605, "app": 605, "init": 605, "librari": [605, 662, 861, 863, 872, 884], "serv": 605, "style": [605, 606, 609, 865, 869], "www": [605, 870], "net": 605, "manual": [605, 864], "declar": [605, 606], "default_css": 605, "anoth": [605, 606, 609, 611, 744, 864, 873, 874], "display_length": 606, "50": [606, 865, 873], "dedic": 606, "bloomberg": 606, "ipydatagrid": 606, "bokeh": 606, "org": 606, "en": 606, "latest": 606, "user_guid": 606, "widget": 606, "dash": 606, "plotli": 606, "com": [606, 870], "ipython": [606, 883], "notebook": [606, 863, 865], "xxx": 606, "conflict": 606, "default_notebook_table_class": 606, "bootstrap": 606, "default_css_nb": 606, "unlik": [606, 866, 874, 880], "show_in_brows": 606, "onlin": [606, 864, 866], "due": [606, 874], "modern": 606, "henc": 606, "offlin": 606, "jqueri": 606, "argsort": 607, "rule": [607, 864], "use_nullable_int": 608, "vanilla": 608, "analog": 608, "nullabl": 608, "24": [608, 864, 873], "nan": 608, "dimension": 608, "tm": 608, "jyear": 608, "sc": 608, "200": 608, "03": 608, "merg": 609, "someth": [609, 744, 866, 873, 878, 879], "possibli": 609, "altern": [609, 873], "t1": [609, 611], "foo": 609, "bar": 609, "t2": [609, 611], "11": [609, 865], "str3": 609, "comparison": 611, "boolean": 611, "compar": [611, 866, 873, 878], "tablewrit": 612, "provi": 614, "environ": [616, 867, 873, 883, 884], "asid": 616, "practic": [616, 862, 873], "_map": 620, "preferred_unit": 641, "isn": [641, 874, 878], "descriptor_class": 642, "datadict": [643, 645, 648], "maplist": [643, 645, 648], "partial": 644, "attr": [646, 647], "recurs": [646, 647], "logger": 649, "mainlog": [649, 866], "devlog": 649, "dim": 651, "hips_path": [651, 653, 873], "dss2": [651, 653], "red": [651, 653, 864], "project": [651, 652, 653, 864, 865, 874, 878, 884], "ait": 651, "server": 651, "healpix_map": 652, "1000": [653, 864, 873], "matplotlib": [654, 864, 865, 873, 874, 884], "tqdm_kwarg": [656, 657], "chunk": [656, 657, 878], "tqdm": [656, 657], "_process": 657, "elsewher": [658, 861, 864, 866], "cli": [660, 873, 878], "titl": [660, 865], "boilerpl": 662, "lose": 662, "ra_err": [663, 689, 864, 883], "dec_err": [663, 689, 864, 883], "gal_l": [663, 689, 883], "gal_b": [663, 689, 864, 883], "gal_l_err": [663, 689, 883], "gal_b_err": [663, 689, 883], "sep": [663, 689], "validate_assign": [683, 804, 835], "aftervalid": 689, "validate_table_column_no_unit": 689, "pydact": [706, 707], "consist": [706, 707], "fault": [706, 707], "expected_unit": [706, 707], "base_column": [708, 714, 716, 726, 742], "error_column": [708, 716, 726, 742, 743], "error_valu": [708, 714, 726, 742, 743], "error_convert_to_std": [708, 726], "agnost": 708, "won": [708, 878], "anyth": [708, 883], "describ": [708, 710, 865, 873, 874, 878, 883, 884], "until": [708, 878], "failur": 708, "accur": [708, 865, 883], "lead": [708, 864, 865, 878], "late": 708, "columnerrorspecifi": [708, 714, 716], "understood": [708, 874], "archetyp": 708, "ra_prec": [708, 873], "dynam": 708, "who": [710, 872], "At": [714, 716, 742, 743, 865, 879], "least": [714, 716, 742, 743, 862], "deviat": 715, "normal": [715, 864, 866, 869], "uncorrect": 715, "global": 716, "flat": 716, "profil": 716, "_quantitytypepydanticannot": [726, 762], "assert": 742, "lon_error": [744, 762], "lat_error": [744, 762], "position_error": [744, 762], "compos": [744, 864, 871], "subtyp": 744, "sai": 744, "coordinateerrorspecifi": [744, 779, 878], "longitude_column": 744, "latitude_column": 744, "treat": [744, 864, 878], "circular": [774, 779, 865, 878], "bare": [780, 873], "bone": 780, "minlen": 810, "min_length": 810, "maxlen": 810, "max_length": 810, "_unittypepydanticannot": 841, "datamodel": 859, "useless": [859, 879], "typeengin": 860, "sqlalchemi": 860, "central": 861, "datatyp": [861, 883], "familiar": [861, 872, 879, 883, 884], "often": [861, 864, 873], "conveni": [861, 873, 883], "nonetheless": [861, 866, 874], "interest": [861, 862, 864, 868, 873, 878, 883], "etc": [862, 864, 865, 866, 873, 874, 883, 884], "throughout": 862, "awar": [862, 874], "raw": [862, 865, 866, 883], "job": 862, "NOT": [862, 873], "everi": [862, 864, 868, 872, 878, 883, 884], "fly": 862, "coordinate_system": [862, 883], "tell": [862, 864, 865, 883, 884], "welcom": 863, "jupyt": 863, "materi": 863, "coverag": 863, "overview": [863, 867, 868, 872], "quick": [863, 865], "dirti": 863, "feet": 863, "wet": 863, "bird": 864, "ey": 864, "basic": [864, 865, 867, 869, 873, 878], "analys": [864, 874, 879, 883], "speak": 864, "step": [864, 865, 873, 883, 884], "mind": [864, 874, 880, 884], "explor": [864, 865, 866], "identif": [864, 871, 873, 878, 884], "candid": [864, 871, 873, 878, 880], "3rd": 864, "phase": 864, "decid": 864, "scienc": 864, "outcom": [864, 878], "qualiti": [864, 878], "cutoff": 864, "aspect": [864, 872, 883, 884], "small": 864, "showcas": 864, "idea": [864, 865, 867, 878], "novel": [864, 871], "just": [864, 865, 866, 873, 874, 878, 883, 884], "fanci": 864, "less": 864, "aid": 864, "erosita": [864, 866, 873, 874, 884], "erass1": [864, 873], "ahead": [864, 865, 866, 873], "download": 864, "hard": [864, 866, 874], "band": [864, 866, 874, 880], "erass1_hard": [864, 866, 873, 874, 884], "tradit": 864, "come": [864, 868, 873, 878, 880], "lot": [864, 866, 869, 873, 878, 883, 884], "translat": [864, 883], "understand": [864, 865, 867, 874, 878, 883], "catschema": 864, "our": [864, 865, 866, 868, 869, 872, 873, 874, 878, 879, 880], "recogniz": 864, "lii": [864, 873, 874, 884], "bii": [864, 873, 874, 884], "iaunam": [864, 873, 874, 884], "weren": 864, "sourcecatalog": 864, "len": [864, 865, 866, 874], "_low_gal_lat": 864, "ab": 864, "to_valu": [864, 884], "plane": [864, 865], "bit": [864, 883], "insuffici": 864, "pick": 864, "naiv": [864, 873, 878], "33": 864, "ra_uperr": 864, "arcsec": 864, "dec_uperr": 864, "pyplot": [864, 865, 873, 874, 884], "hist": 864, "ec": 864, "fc": 864, "darkgreen": 864, "geomspac": 864, "40": 864, "xscale": 864, "yscale": 864, "ylabel": 864, "xlabel": 864, "sup": 864, "sigma_": [864, 865, 878], "mathrm": [864, 865], "34": [864, 873], "add_subplot": [864, 865, 884], "111": [864, 865, 873, 884], "aitoff": [864, 884], "latitut": 864, "ml_rate_0": [864, 884], "log10": [864, 884], "gnuplot_r": 864, "set_ylabel": [864, 865], "set_xlabel": [864, 865], "visual": [864, 865, 873], "35": 864, "transform_to": 864, "might": [864, 865, 866, 868, 873, 874, 878, 879, 880], "wonder": 864, "why": [864, 865], "blob": 864, "srg": 864, "overlap": 864, "exposur": 864, "increas": [864, 866], "ve": [864, 865, 866, 873, 874, 883], "suceed": 864, "intent": [864, 880], "versatil": [864, 879], "meet": [864, 865, 873, 874], "still": [864, 874, 883], "fall": 864, "categori": 864, "pretti": [864, 865, 879], "fast": 864, "easili": [864, 865, 884], "scalabl": 864, "real": 864, "experi": [864, 873, 874], "36": 864, "__class__": 864, "__name__": 864, "technic": 864, "std": 864, "query_radiu": [864, 866, 874], "37": [864, 873], "ned_inst": [864, 874], "crab": 864, "nebula": 864, "83": 864, "633212": 864, "22": [864, 873], "014460": 864, "fact": 864, "38": [864, 865, 873], "super": [864, 866, 873, 874, 879], "everytim": [864, 873, 883], "notic": [864, 866], "wasn": 864, "catch": 864, "again": 864, "talk": 864, "headwai": 864, "39": 864, "filter": [864, 873], "snr": 864, "supernova": 864, "remnant": 864, "filtered_result": 864, "introduc": [864, 873, 883, 884], "put": [864, 873, 874], "goal": [864, 873, 874], "plausibl": [864, 873], "quickli": 864, "narrow": 864, "100": [864, 873, 874], "max_work": [864, 865], "wow": 864, "happen": [864, 865], "combin": [864, 874], "bunch": [864, 865, 873, 883], "post": 864, "clean": [864, 873], "readi": [864, 867, 873], "importantli": 864, "41": [864, 865], "reflect": [864, 873], "42": [864, 865], "_match": [864, 873], "addition": [864, 865], "alwai": [864, 865, 873, 874, 879], "principl": 864, "book": 864, "analysi": [864, 873], "rerun": 864, "optim": [864, 865, 878, 883], "43": [864, 873], "propos": [864, 878], "ned_std_match": [864, 873], "BY": 864, "histogram": 864, "44": 864, "forestgreen": 864, "appar": [864, 878], "closer": 864, "45": 864, "special_sourc": 864, "loc": 864, "amax": [864, 865], "catalog_entri": 864, "1erass": [864, 873, 884], "j071730": 864, "374539": 864, "ext_lik": 864, "match_typ": 864, "46": 864, "cluster": [864, 871, 873], "assort": 864, "question": [864, 865, 878, 880], "stage": [864, 865, 871, 873], "realli": [864, 865, 874, 879], "shine": 864, "scientist": 864, "ever": 864, "highli": [864, 865, 874, 878, 884], "criteria": 864, "qualifi": 864, "good": [864, 865, 878], "bandpass": 864, "whatev": [864, 878], "constitut": 864, "sens": [864, 865, 871, 873, 874, 878, 883], "spit": 864, "likelihood": [864, 865, 874, 878, 880], "common": [864, 865, 866, 868, 871, 873, 883], "sometim": [864, 865, 883], "tricki": 864, "complex": [864, 865, 866, 872, 873, 874, 884], "attent": [864, 873], "paid": 864, "t_i": 864, "j": 864, "label": [864, 865], "psi_": 864, "ij": 864, "overal": [864, 878], "xi_j": 864, "sum_i": [864, 878], "min": 864, "averag": 864, "preced": 864, "rest": 864, "astrometricreductionprocess": [864, 878], "resourc": [864, 874], "exhaust": 864, "explan": 864, "arp": 864, "proced": 864, "reduction_result": 864, "catra": [864, 873], "catdec": [864, 873], "catnmatch": 864, "astrometric_reduction_scor": 864, "poissonpointreduct": 865, "behind": [865, 867, 880], "chanc": [865, 873], "spuriou": [865, 873, 874], "difficult": [865, 873, 878], "walk": [865, 866], "ins": 865, "rnn": 865, "event": 865, "period": 865, "becom": [865, 879, 883], "Then": [865, 878], "p_": 865, "ge": 865, "underbrac": [865, 878], "approx": 865, "_": [865, 878], "conduct": 865, "great": [865, 867, 873, 878], "deal": [865, 878], "sophist": 865, "gone": [865, 874], "interpol": 865, "undertak": [865, 873], "solut": 865, "break": [865, 874], "tile": 865, "equal": 865, "cover": [865, 866], "worth": [865, 866, 868, 872, 874, 878, 884], "dictat": 865, "n_": 865, "mathbb": [865, 878], "omega_": 865, "pix": 865, "theta_": 865, "097": 865, "sr": 865, "extens": 865, "bintabl": 865, "eventu": 865, "imagearrai": 865, "astronom": [865, 868, 871, 874, 878, 884], "finish": 865, "tutori": 865, "mpl": 865, "rich": [865, 869], "skip": 865, "ned_atla": 865, "simbad_atla": 865, "get_poisson_atla": 865, "get_point": 865, "advantag": [865, 872], "scratch": 865, "pix_id": 865, "improv": [865, 873, 878], "thread_kw": 865, "speed": 865, "sample_from_databas": 865, "chunk_siz": 865, "500": 865, "geo": 865, "convert_skycoord": 865, "set_styl": 865, "symlognorm": [865, 873], "point_data": 865, "mollweid": 865, "set_facecolor": 865, "linthresh": [865, 873], "gnuplot": [865, 873, 874], "colorbar": 865, "scalarmapp": 865, "sigma": [865, 878], "far": [865, 874, 878, 883], "seen": 865, "sake": 865, "briefli": [865, 871], "mention": [865, 873], "maphdu": 865, "unfamiliar": 865, "heirarch": 865, "n_side": 865, "map_nam": 865, "truli": 865, "aquaint": [865, 866], "constitu": 865, "turn": 865, "simpler": 865, "irs_map": 865, "get_map": [865, 874], "ir": [865, 873, 874], "ed": 865, "meth": 865, "consid": [865, 878], "phi_0": 865, "theta_0": 865, "round": 865, "prob": 865, "53": 865, "build_poisson_map": 865, "75": 865, "54": [865, 873, 874], "healpi": 865, "hp": 865, "mollview": 865, "flip": 865, "transform_map_coordin": 865, "drawn": 865, "upon": 865, "scene": 865, "mess": [865, 869], "fine": [865, 873], "grain": 865, "nitti": 865, "gritti": 865, "abov": [865, 866, 873, 874, 878], "summar": [865, 867, 871, 874], "star": [865, 874, 883], "stellar": 865, "peak": 865, "spot": 865, "sphere": [865, 878], "bayesian": [865, 878], "techniqu": 865, "hood": [865, 866, 873, 883], "mathbf": [865, 878], "baysian": 865, "constraint": [865, 871], "solver": 865, "longer": [865, 866], "abl": [865, 878, 883], "address": 865, "Not": [865, 874], "spatial": 865, "pro": 865, "con": 865, "No": [865, 873], "fiddl": 865, "robust": 865, "interv": [865, 873], "linear": 865, "solv": [865, 878], "27": [865, 873, 884], "graticul": 865, "fulli": 865, "suggest": [865, 878], "term": [865, 878], "validat": 865, "portion": 865, "held": 865, "hyper": 865, "cv": 865, "versu": [865, 866], "test": [865, 873, 878], "score_threshold": 865, "cv_threshold": 865, "immedi": [865, 866, 883], "investig": 865, "came": 865, "47": 865, "notext": 865, "neightbor": 865, "minor": [865, 869], "twist": 865, "constant": 865, "48": 865, "intuit": [866, 874], "successfulli": [866, 873, 883, 884], "choos": [866, 878], "demonstr": [866, 873], "erass": [866, 884], "unzip": 866, "pyxm": [866, 873], "verbos": 866, "example_databas": [866, 874], "congrat": 866, "much": [866, 874, 878, 884], "degre": [866, 873], "query_data": 866, "transit": 866, "moder": 866, "topic": [866, 868, 872, 874, 883], "major": [866, 869], "send": 866, "receiv": 866, "therefor": [866, 878], "infrastructur": 866, "scope": [866, 874], "brief": [866, 868], "exact": [866, 883], "kept_column": 866, "respond": 866, "database_class": 866, "ned_database_standard": 866, "default_ned_schema": 866, "ned_database_custom": 866, "ned_custom": 866, "advanc": 866, "backbon": 866, "descend": 866, "stop": [867, 873], "introduct": 867, "concern": [867, 878], "yourself": [867, 872, 884], "roll": 867, "devic": 867, "ython": 868, "atch": 868, "ackag": 868, "quantifi": [868, 871], "wide": 868, "methodologi": [868, 872, 878], "soon": 868, "quickstart": 868, "dive": [868, 883], "hint": [868, 873, 878], "mini": 869, "levelnam": 869, "asctim": 869, "messag": [869, 873], "stream": 869, "stderr": 869, "output_directori": 869, "add_on": 869, "text": [869, 873, 878], "usetex": 869, "xtick": 869, "ytick": 869, "bottom": 869, "labeltop": 869, "labelbottom": 869, "labelleft": 869, "labelright": 869, "font": 869, "inferno": 869, "pip": 870, "git": 870, "github": 870, "eliza": 870, "diggin": 870, "product": [871, 878], "telescop": [871, 880], "unknown": 871, "framework": [871, 873, 878], "rapidli": 871, "uniformli": 871, "cone": 871, "account": [871, 874, 878, 880], "instrument": [871, 873, 878], "poissonian": 871, "dust": 871, "toolkit": 871, "unidentifi": 871, "studi": 871, "predominantli": 871, "mix": 871, "knowledg": [871, 878, 883], "grow": 871, "character": 871, "suitabl": 872, "audienc": 872, "hello": [872, 879], "recount": 872, "greater": 872, "poisson_map": [872, 874], "psf": [872, 878], "stretch": 872, "nut": 872, "bolt": 872, "complic": 873, "aris": 873, "sensibl": 873, "my": [873, 879], "abil": [873, 874], "command": 873, "csv": [873, 874], "txt": 873, "difficulti": 873, "assur": [873, 883], "filetyp": 873, "xmatch": 873, "db1": 873, "db2": 873, "dbn": 873, "proper": 873, "2024": [873, 874, 884], "04": [873, 884], "28": 873, "13": [873, 874, 884], "265": 873, "322": 873, "ned_match": 873, "699": 873, "simbad_match": 873, "750": 873, "5466": [873, 884], "751": 873, "752": 873, "753": 873, "763": 873, "003": 873, "006": 873, "157": 873, "57": 873, "linearli": 873, "minut": 873, "equat": 873, "hour": 873, "full": [873, 879], "insid": 873, "conjoin": 873, "source_match": [873, 874], "goe": 873, "cross_matching_databas": 873, "create_blank_cross_matching_t": 873, "search_databas": 873, "add_extra_info": 873, "cross_matching_t": 873, "obvious": [873, 878, 879], "rememb": [873, 878], "declin": 873, "problemat": 873, "bad": 873, "catalog_t": [873, 878], "ediggin": [873, 874], "pyrosita_test": [873, 874], "sqlite3": 873, "31": [873, 874], "2020": 873, "19": 873, "enter": [873, 883], "IF": 873, "detuid": [873, 884], "skytil": 873, "id_src": 873, "uid": 873, "bigint": 873, "flag_sp_lga": 873, "smallint": 873, "flag_sp_gc_con": 873, "flag_no_radec_err": 873, "flag_no_ext_err": 873, "flag_no_cts_err": 873, "flag_opt": [873, 884], "date_run": 873, "veloc": 873, "magnitud": 873, "photometri": 873, "diamet": 873, "simbad_std_match": 873, "dec_prec": 873, "coo_err_maja": 873, "coo_err_mina": 873, "coo_err_angl": 873, "coo_qual": 873, "coo_wavelength": 873, "coo_bibcod": 873, "ra_d_a": 873, "dec_d_d": 873, "script_number_id": 873, "power": [873, 883], "fortun": 873, "plai": 873, "role": 873, "organ": 873, "analyz": 873, "made": 873, "slightli": [873, 884], "protocol": 873, "sound": [873, 878], "catalog_includ": 873, "sun": 873, "apr": 873, "23": 873, "object_correct": 873, "column_correct": 873, "action": 873, "correct_object_typ": 873, "correct_column_nam": 873, "correct_coordinate_column": 873, "correct_coordin": 873, "later": 873, "articl": 873, "capabl": 873, "ned_match_t": 873, "catalog_ra": 873, "j013729": [873, 884], "195637": [873, 884], "371790": 873, "wisea": 873, "j013725": 873, "195648": 873, "j013726": 873, "195650": 873, "61": 873, "195716": 873, "73": 873, "195620": 873, "91": 873, "195636": 873, "183741": 873, "j062052": 873, "284050": 873, "95": 873, "217384": 873, "79": 873, "284119": 873, "183742": 873, "j062053": 873, "284146": 873, "183743": 873, "284054": 873, "183744": 873, "89": 873, "284012": 873, "183745": 873, "j062055": 873, "65": 873, "284021": 873, "183746": 873, "One": [873, 874, 878, 880, 883], "plot_match": 873, "bullet": 873, "jwst": 873, "smac": 873, "j0723": 873, "7327": 873, "j072316": 873, "732718": 873, "gle": 873, "clg": 873, "desi": 873, "hst": 873, "w": 873, "marker": 873, "o": [873, 874], "f444w": 873, "composit": 873, "white": 873, "subject": [873, 880], "chosen": [873, 884], "pai": 873, "decis": 873, "fidel": 873, "legitim": 873, "significantli": [873, 878], "cost": [873, 878], "minim": [873, 874], "subprocess": 873, "perfect": [873, 878], "total": [873, 874], "c_i": 873, "th": 873, "instrumental_reduct": 873, "corner": 874, "stone": 874, "scientif": [874, 884], "infer": [874, 878], "state": 874, "coupl": [874, 879], "share": 874, "simplest": 874, "gc": 874, "query_output": 874, "59": 874, "485": 874, "j17453717": 874, "2856090": 874, "tsk2008": 874, "0223": 874, "21": [874, 884], "high": 874, "surpris": 874, "1790": 874, "add_sources_to_poisson": 874, "08": 874, "11it": 874, "14": 874, "07": 874, "043": 874, "pyx": 874, "1800": 874, "extent": 874, "obviou": [874, 880], "searchabl": 874, "vizier": 874, "vastli": 874, "distinctli": 874, "despit": 874, "effort": 874, "led": 874, "gotcha": 874, "smaller": 874, "tb": 874, "17": 874, "721": 874, "722": 874, "723": 874, "complementari": 874, "tend": 874, "margin": 874, "popular": 874, "_std": 874, "pictur": [874, 878], "shown": 874, "psn": 874, "hand": [874, 878], "prescript": 874, "stress": 874, "rather": 874, "source_match_memori": 874, "beyond": 874, "freedom": 874, "counterpart": 874, "encourag": 874, "off": 874, "_remotetempl": 874, "default_poisson_atlas_path": 874, "poisson_map_directori": 874, "class_nam": 874, "default_query_config": 874, "_databaseconfigset": 874, "default_source_schema_registri": [874, 883], "query_config_setting_1": 874, "query_config_setting_2": 874, "config_n": 874, "got": 874, "astro": 874, "usual": [874, 878], "default_correct_query_output": 874, "your_custom_query_cod": 874, "request": 874, "connectionerror": 874, "databaseerror": 874, "timeout": 874, "builtin_schema": [874, 883], "awai": 874, "face": 874, "inaccur": 878, "boil": 878, "down": 878, "premis": 878, "hypothes": 878, "h_0": 878, "null": 878, "hypothesi": 878, "h_1": 878, "h_i": 878, "grasp": 878, "pose": 878, "neither": 878, "observatori": 878, "ask": 878, "answer": 878, "budavari": 878, "al": 878, "busz08": 878, "m_": 878, "cat": 878, "int_": 878, "similarli": 878, "symmetr": 878, "displac": 878, "becas": 878, "arriv": 878, "box": 878, "consider": 878, "customiz": 878, "poserr": 878, "unfortun": 878, "astrometry_mode_cat": 878, "astrometry_mode_db": 878, "axial": 878, "ellips": 878, "signific": 878, "influenc": 878, "unbias": 878, "prepar": 878, "easier": 878, "ruin": 878, "flaw": 878, "pricei": 878, "catalog_row": 878, "prerog": 878, "explain": 878, "standpoint": 878, "_i": 878, "accuraci": 878, "mu": 878, "uninform": 878, "symmetri": 878, "analyt": 878, "sqrt": 878, "mathcal": 878, "_1": 878, "_2": 878, "mathmat": 878, "expon": 878, "sigma_1": 878, "sigma_2": 878, "_2r": 878, "nu": 878, "prod_i": 878, "sigma_i": 878, "x_1": 878, "x_2": 878, "recal": 878, "yield": 878, "intric": 878, "plethora": 878, "piec": 878, "window": 878, "naiveti": 878, "headach": 878, "ideal": 878, "p_i": 878, "recalcul": 878, "stabil": 878, "threshold": 878, "budav\u00e1ri": 878, "szalai": 878, "2008": 878, "probabilist": 878, "journal": 878, "679": 878, "301": 878, "demand": 879, "masteri": 879, "validate_param": 879, "__call__": 879, "scaffold": 879, "protect": 879, "myprocess": 879, "mystandardnam": 879, "ooop": 879, "reductionprocessparamet": 879, "benefit": 879, "realpython": 879, "parameter_1": 879, "parameter_2": 879, "red_proc": 879, "elimin": 880, "pattern": 880, "emiss": 880, "objecttypereduct": 880, "characterist": 880, "seemingli": 880, "continuum": 880, "wavelength": 880, "luminos": 880, "dataclass": 883, "reductionschema": 883, "feed": 883, "move": [883, 884], "tab": 883, "worthwhil": 883, "toml": 883, "my_type_column": 883, "my_redshift_column": 883, "my_object_id": 883, "my_ra": 883, "my_dec": 883, "definit": 883, "g_cluster": 883, "gclstr": 883, "schemaregistri": 883, "as_list": 883, "ned_schema": 883, "regist": 883, "behav": 883, "regular": 883, "dict_kei": 883, "getattr": 883, "usefulli": 883, "too": 883, "builtin_fram": 883, "available_coordinate_fram": 883, "traceback": 883, "16": 883, "073ab00b423": 883, "455": 883, "astro_coord": 883, "progress": 883, "had": 884, "therein": 884, "bytes23": 884, "bytes32": 884, "int16": 884, "j002937": 884, "310209": 884, "eb01_009120_020_ml00004_002_c010": 884, "j004207": 884, "283154": 884, "eb01_012120_020_ml00002_002_c010": 884, "j004922": 884, "293108": 884, "eb01_012120_020_ml00003_002_c010": 884, "j005448": 884, "311230": 884, "eb01_012120_020_ml00004_002_c010": 884, "j012910": 884, "214156": 884, "eb01_021111_020_ml00001_002_c010": 884, "j012338": 884, "231059": 884, "eb01_021114_020_ml00001_002_c010": 884, "eb01_024111_020_ml00005_003_c010": 884, "j015219": 884, "183235": 884, "eb01_027108_020_ml00003_002_c010": 884, "j015721": 884, "161420": 884, "eb01_029105_020_ml00003_002_c010": 884, "j061245": 884, "520045": 884, "em01_095141_020_ml01024_003_c010": 884, "j130424": 884, "132131": 884, "em01_197078_020_ml00270_003_c010": 884, "j130833": 884, "032916": 884, "em01_197087_020_ml00223_003_c010": 884, "j131142": 884, "303349": 884, "em01_197120_020_ml00303_002_c010": 884, "j060719": 884, "715042": 884, "em01_095162_020_ml01380_002_c010": 884, "j061241": 884, "705749": 884, "em01_095162_020_ml02377_002_c010": 884, "j062748": 884, "230934": 884, "em01_096114_020_ml00478_002_c010": 884, "j062429": 884, "351724": 884, "em01_096126_020_ml00282_002_c010": 884, "j131252": 884, "161006": 884, "em01_198105_020_ml00374_002_c010": 884, "j130904": 884, "260824": 884, "em01_198117_020_ml00487_002_c010": 884, "classic": 884, "broader": 884, "308": 884, "318": 884, "320": 884, "whoa": 884, "did": 884, "viabl": 884, "j020037": 884, "164905": 884, "j062733": 884, "513408": 884}, "objects": {"": [[0, 0, 0, "-", "cross_reference"], [32, 0, 0, "-", "schema"]], "cross_reference": [[1, 1, 1, "", "CrossMatchDatabase"], [30, 5, 1, "", "cross_match"], [31, 5, 1, "", "cross_match_table"]], "cross_reference.CrossMatchDatabase": [[2, 2, 1, "", "__init__"], [3, 2, 1, "", "add_catalog"], [4, 2, 1, "", "add_catalog_from_table"], [5, 2, 1, "", "build_meta_table"], [6, 2, 1, "", "check_meta"], [7, 2, 1, "", "chunk_db_operation"], [8, 2, 1, "", "chunk_db_table_operation"], [9, 2, 1, "", "connect"], [10, 2, 1, "", "correct_object_types"], [11, 2, 1, "", "cross_match"], [12, 2, 1, "", "drop_table"], [13, 2, 1, "", "from_file"], [14, 2, 1, "", "get_database"], [15, 3, 1, "", "has_catalog"], [16, 3, 1, "", "match_tables"], [17, 3, 1, "", "meta"], [18, 2, 1, "", "meta_add"], [19, 2, 1, "", "meta_remove"], [20, 2, 1, "", "meta_reset"], [21, 2, 1, "", "overwrite_schema"], [22, 4, 1, "", "path"], [23, 2, 1, "", "plot_matches"], [24, 2, 1, "", "query"], [25, 2, 1, "", "run_reduction"], [26, 3, 1, "", "schema"], [27, 2, 1, "", "score_matches"], [28, 2, 1, "", "standardize_coordinates"], [29, 3, 1, "", "tables"]], "schema": [[33, 1, 1, "", "CMDSchema"], [67, 1, 1, "", "ColumnEntry"], [69, 1, 1, "", "ReductionSchema"], [101, 1, 1, "", "Schema"], [133, 1, 1, "", "SchemaEntry"], [135, 1, 1, "", "SchemaRegistry"], [151, 1, 1, "", "SourceTableSchema"]], "schema.CMDSchema": [[34, 2, 1, "", "__init__"], [35, 4, 1, "", "catalog_schema"], [36, 2, 1, "", "construct"], [37, 2, 1, "", "copy"], [38, 2, 1, "", "dict"], [39, 2, 1, "", "from_orm"], [40, 2, 1, "", "json"], [41, 4, 1, "", "model_computed_fields"], [42, 4, 1, "", "model_config"], [43, 2, 1, "", "model_construct"], [44, 2, 1, "", "model_copy"], [45, 2, 1, "", "model_dump"], [46, 2, 1, "", "model_dump_json"], [47, 3, 1, "", "model_extra"], [48, 4, 1, "", "model_fields"], [49, 3, 1, "", "model_fields_set"], [50, 2, 1, "", "model_json_schema"], [51, 2, 1, "", "model_parametrized_name"], [52, 2, 1, "", "model_post_init"], [53, 2, 1, "", "model_rebuild"], [54, 2, 1, "", "model_validate"], [55, 2, 1, "", "model_validate_json"], [56, 2, 1, "", "model_validate_strings"], [57, 2, 1, "", "parse_file"], [58, 2, 1, "", "parse_obj"], [59, 2, 1, "", "parse_raw"], [60, 2, 1, "", "read"], [61, 2, 1, "", "schema"], [62, 2, 1, "", "schema_json"], [63, 4, 1, "", "table_schema"], [64, 2, 1, "", "update_forward_refs"], [65, 2, 1, "", "validate"], [66, 2, 1, "", "write"]], "schema.ColumnEntry": [[68, 2, 1, "", "__init__"]], "schema.ReductionSchema": [[70, 2, 1, "", "__init__"], [71, 2, 1, "", "construct"], [72, 2, 1, "", "copy"], [73, 2, 1, "", "dict"], [74, 2, 1, "", "from_orm"], [75, 2, 1, "", "json"], [76, 4, 1, "", "model_computed_fields"], [77, 4, 1, "", "model_config"], [78, 2, 1, "", "model_construct"], [79, 2, 1, "", "model_copy"], [80, 2, 1, "", "model_dump"], [81, 2, 1, "", "model_dump_json"], [82, 3, 1, "", "model_extra"], [83, 4, 1, "", "model_fields"], [84, 3, 1, "", "model_fields_set"], [85, 2, 1, "", "model_json_schema"], [86, 2, 1, "", "model_parametrized_name"], [87, 2, 1, "", "model_post_init"], [88, 2, 1, "", "model_rebuild"], [89, 2, 1, "", "model_validate"], [90, 2, 1, "", "model_validate_json"], [91, 2, 1, "", "model_validate_strings"], [92, 2, 1, "", "parse_file"], [93, 2, 1, "", "parse_obj"], [94, 2, 1, "", "parse_raw"], [95, 2, 1, "", "read"], [96, 2, 1, "", "schema"], [97, 2, 1, "", "schema_json"], [98, 2, 1, "", "update_forward_refs"], [99, 2, 1, "", "validate"], [100, 2, 1, "", "write"]], "schema.Schema": [[102, 2, 1, "", "__init__"], [103, 2, 1, "", "construct"], [104, 2, 1, "", "copy"], [105, 2, 1, "", "dict"], [106, 2, 1, "", "from_orm"], [107, 2, 1, "", "json"], [108, 4, 1, "", "model_computed_fields"], [109, 4, 1, "", "model_config"], [110, 2, 1, "", "model_construct"], [111, 2, 1, "", "model_copy"], [112, 2, 1, "", "model_dump"], [113, 2, 1, "", "model_dump_json"], [114, 3, 1, "", "model_extra"], [115, 4, 1, "", "model_fields"], [116, 3, 1, "", "model_fields_set"], [117, 2, 1, "", "model_json_schema"], [118, 2, 1, "", "model_parametrized_name"], [119, 2, 1, "", "model_post_init"], [120, 2, 1, "", "model_rebuild"], [121, 2, 1, "", "model_validate"], [122, 2, 1, "", "model_validate_json"], [123, 2, 1, "", "model_validate_strings"], [124, 2, 1, "", "parse_file"], [125, 2, 1, "", "parse_obj"], [126, 2, 1, "", "parse_raw"], [127, 2, 1, "", "read"], [128, 2, 1, "", "schema"], [129, 2, 1, "", "schema_json"], [130, 2, 1, "", "update_forward_refs"], [131, 2, 1, "", "validate"], [132, 2, 1, "", "write"]], "schema.SchemaEntry": [[134, 2, 1, "", "__init__"]], "schema.SchemaRegistry": [[136, 2, 1, "", "__init__"], [137, 2, 1, "", "add"], [138, 2, 1, "", "as_list"], [139, 2, 1, "", "clear"], [140, 2, 1, "", "copy"], [141, 2, 1, "", "from_directory"], [142, 2, 1, "", "fromkeys"], [143, 2, 1, "", "get"], [144, 2, 1, "", "items"], [145, 2, 1, "", "keys"], [146, 2, 1, "", "pop"], [147, 2, 1, "", "popitem"], [148, 2, 1, "", "setdefault"], [149, 2, 1, "", "update"], [150, 2, 1, "", "values"]], "schema.SourceTableSchema": [[152, 4, 1, "", "DEC"], [153, 4, 1, "", "DEC_ERR"], [154, 4, 1, "", "GAL_B"], [155, 4, 1, "", "GAL_B_ERR"], [156, 4, 1, "", "GAL_L"], [157, 4, 1, "", "GAL_L_ERR"], [158, 4, 1, "", "NAME"], [159, 4, 1, "", "RA"], [160, 4, 1, "", "RA_ERR"], [161, 4, 1, "", "SEP"], [162, 4, 1, "", "TYPE"], [163, 4, 1, "", "Z"], [164, 2, 1, "", "__init__"], [165, 2, 1, "", "available_coordinate_frames"], [166, 4, 1, "", "column_map"], [167, 2, 1, "", "construct"], [168, 3, 1, "", "coordinate_columns"], [169, 3, 1, "", "coordinate_frame"], [170, 3, 1, "", "coordinate_system"], [171, 2, 1, "", "copy"], [172, 4, 1, "", "default_coord_system"], [173, 2, 1, "", "dict"], [174, 2, 1, "", "from_orm"], [175, 2, 1, "", "from_table"], [176, 2, 1, "", "guess_coordinate_standard_error_struct"], [177, 2, 1, "", "json"], [178, 4, 1, "", "model_computed_fields"], [179, 4, 1, "", "model_config"], [180, 2, 1, "", "model_construct"], [181, 2, 1, "", "model_copy"], [182, 2, 1, "", "model_dump"], [183, 2, 1, "", "model_dump_json"], [184, 3, 1, "", "model_extra"], [185, 4, 1, "", "model_fields"], [186, 3, 1, "", "model_fields_set"], [187, 2, 1, "", "model_json_schema"], [188, 2, 1, "", "model_parametrized_name"], [189, 2, 1, "", "model_post_init"], [190, 2, 1, "", "model_rebuild"], [191, 2, 1, "", "model_validate"], [192, 2, 1, "", "model_validate_json"], [193, 2, 1, "", "model_validate_strings"], [194, 4, 1, "", "object_map"], [195, 4, 1, "", "object_type_separator"], [196, 2, 1, "", "parse_file"], [197, 2, 1, "", "parse_obj"], [198, 2, 1, "", "parse_raw"], [199, 2, 1, "", "read"], [200, 2, 1, "", "schema"], [201, 2, 1, "", "schema_json"], [202, 4, 1, "", "settings"], [203, 2, 1, "", "update_forward_refs"], [204, 2, 1, "", "validate"], [205, 2, 1, "", "write"]], "stats": [[206, 0, 0, "-", "gaussian_process"], [221, 0, 0, "-", "map_regression"], [247, 0, 0, "-", "utilities"]], "stats.gaussian_process": [[207, 1, 1, "", "Haversine_RBF"]], "stats.gaussian_process.Haversine_RBF": [[208, 2, 1, "", "__init__"], [209, 3, 1, "", "anisotropic"], [210, 3, 1, "", "bounds"], [211, 2, 1, "", "clone_with_theta"], [212, 2, 1, "", "diag"], [213, 2, 1, "", "get_params"], [214, 3, 1, "", "hyperparameter_length_scale"], [215, 3, 1, "", "hyperparameters"], [216, 2, 1, "", "is_stationary"], [217, 3, 1, "", "n_dims"], [218, 3, 1, "", "requires_vector_input"], [219, 2, 1, "", "set_params"], [220, 3, 1, "", "theta"]], "stats.map_regression": [[222, 1, 1, "", "BayesianPoissonMapRegressor"], [225, 1, 1, "", "KNNeighborMapRegressor"], [232, 1, 1, "", "PoissonMapRegressor"], [239, 1, 1, "", "RNNeighborMapRegressor"], [246, 5, 1, "", "train_map_regressor"]], "stats.map_regression.BayesianPoissonMapRegressor": [[223, 2, 1, "", "__init__"], [224, 2, 1, "", "build_map_MAP"]], "stats.map_regression.KNNeighborMapRegressor": [[226, 2, 1, "", "__init__"], [227, 2, 1, "", "cross_validate"], [228, 4, 1, "", "default_training_fraction"], [229, 4, 1, "", "hyperparameters"], [230, 4, 1, "", "regressor_parameters"], [231, 2, 1, "", "train_model"]], "stats.map_regression.PoissonMapRegressor": [[233, 2, 1, "", "__init__"], [234, 2, 1, "", "cross_validate"], [235, 4, 1, "", "default_training_fraction"], [236, 4, 1, "", "hyperparameters"], [237, 4, 1, "", "regressor_parameters"], [238, 2, 1, "", "train_model"]], "stats.map_regression.RNNeighborMapRegressor": [[240, 2, 1, "", "__init__"], [241, 2, 1, "", "cross_validate"], [242, 4, 1, "", "default_training_fraction"], [243, 4, 1, "", "hyperparameters"], [244, 4, 1, "", "regressor_parameters"], [245, 2, 1, "", "train_model"]], "stats.utilities": [[248, 5, 1, "", "uniform_sample_spherical"]], "structures": [[249, 0, 0, "-", "databases"], [374, 0, 0, "-", "map"], [432, 0, 0, "-", "reduction"], [522, 0, 0, "-", "table"]], "structures.databases": [[250, 1, 1, "", "DBRegistry"], [268, 1, 1, "", "LocalDatabase"], [286, 1, 1, "", "NED"], [308, 1, 1, "", "RemoteDatabase"], [325, 1, 1, "", "SIMBAD"], [353, 1, 1, "", "SourceDatabase"], [369, 5, 1, "", "add_points_to_poisson_map"], [370, 5, 1, "", "builtin_databases"], [371, 5, 1, "", "get_database"], [372, 5, 1, "", "get_poisson_atlas"], [373, 5, 1, "", "get_poisson_path"]], "structures.databases.DBRegistry": [[251, 2, 1, "", "__init__"], [252, 2, 1, "", "add"], [253, 2, 1, "", "as_list"], [254, 2, 1, "", "clear"], [255, 2, 1, "", "copy"], [256, 2, 1, "", "fromkeys"], [257, 2, 1, "", "get"], [258, 2, 1, "", "items"], [259, 2, 1, "", "keys"], [260, 3, 1, "", "locals"], [261, 3, 1, "", "names"], [262, 2, 1, "", "pop"], [263, 2, 1, "", "popitem"], [264, 3, 1, "", "remotes"], [265, 2, 1, "", "setdefault"], [266, 2, 1, "", "update"], [267, 2, 1, "", "values"]], "structures.databases.LocalDatabase": [[269, 2, 1, "", "__init__"], [270, 2, 1, "", "add_sources_to_poisson"], [271, 4, 1, "", "correct_query_output"], [272, 2, 1, "", "count"], [273, 2, 1, "", "default_correct_query_output"], [274, 4, 1, "", "default_poisson_atlas_path"], [275, 4, 1, "", "default_query_config"], [276, 4, 1, "", "default_query_schema"], [277, 4, 1, "", "name"], [278, 3, 1, "", "poisson_atlas"], [279, 4, 1, "", "query_config"], [280, 2, 1, "", "query_radius"], [281, 4, 1, "", "query_schema"], [282, 2, 1, "", "random_sample_count"], [283, 2, 1, "", "register"], [284, 2, 1, "", "source_match"], [285, 2, 1, "", "source_match_memory"]], "structures.databases.NED": [[287, 4, 1, "", "TIMEOUT"], [288, 2, 1, "", "__init__"], [289, 2, 1, "", "add_sources_to_poisson"], [290, 2, 1, "", "config_ned"], [291, 4, 1, "", "correct_query_output"], [292, 2, 1, "", "count"], [293, 2, 1, "", "default_correct_query_output"], [294, 4, 1, "", "default_poisson_atlas_path"], [295, 4, 1, "", "default_query_config"], [296, 4, 1, "", "default_query_schema"], [297, 2, 1, "", "get_image_list"], [298, 2, 1, "", "get_table"], [299, 4, 1, "", "name"], [300, 3, 1, "", "poisson_atlas"], [301, 4, 1, "", "query_config"], [302, 2, 1, "", "query_object"], [303, 2, 1, "", "query_radius"], [304, 4, 1, "", "query_schema"], [305, 2, 1, "", "random_sample_count"], [306, 2, 1, "", "register"], [307, 2, 1, "", "source_match"]], "structures.databases.RemoteDatabase": [[309, 2, 1, "", "__init__"], [310, 2, 1, "", "add_sources_to_poisson"], [311, 4, 1, "", "correct_query_output"], [312, 2, 1, "", "count"], [313, 2, 1, "", "default_correct_query_output"], [314, 4, 1, "", "default_poisson_atlas_path"], [315, 4, 1, "", "default_query_config"], [316, 4, 1, "", "default_query_schema"], [317, 4, 1, "", "name"], [318, 3, 1, "", "poisson_atlas"], [319, 4, 1, "", "query_config"], [320, 2, 1, "", "query_radius"], [321, 4, 1, "", "query_schema"], [322, 2, 1, "", "random_sample_count"], [323, 2, 1, "", "register"], [324, 2, 1, "", "source_match"]], "structures.databases.SIMBAD": [[326, 4, 1, "", "EXTRA_COLUMNS"], [327, 4, 1, "", "REMOVED_COLUMNS"], [328, 4, 1, "", "ROW_LIMIT"], [329, 4, 1, "", "TIMEOUT"], [330, 2, 1, "", "__init__"], [331, 2, 1, "", "add_sources_to_poisson"], [332, 3, 1, "", "available_tables"], [333, 2, 1, "", "clear_cache"], [334, 2, 1, "", "config_simbad"], [335, 4, 1, "", "correct_query_output"], [336, 2, 1, "", "count"], [337, 2, 1, "", "default_correct_query_output"], [338, 4, 1, "", "default_poisson_atlas_path"], [339, 4, 1, "", "default_query_config"], [340, 4, 1, "", "default_query_schema"], [341, 2, 1, "", "list_columns"], [342, 2, 1, "", "list_linked_tables"], [343, 4, 1, "", "name"], [344, 3, 1, "", "poisson_atlas"], [345, 4, 1, "", "query_config"], [346, 2, 1, "", "query_object"], [347, 2, 1, "", "query_radius"], [348, 4, 1, "", "query_schema"], [349, 2, 1, "", "query_tap"], [350, 2, 1, "", "random_sample_count"], [351, 2, 1, "", "register"], [352, 2, 1, "", "source_match"]], "structures.databases.SourceDatabase": [[354, 2, 1, "", "__init__"], [355, 2, 1, "", "add_sources_to_poisson"], [356, 4, 1, "", "correct_query_output"], [357, 2, 1, "", "count"], [358, 2, 1, "", "default_correct_query_output"], [359, 4, 1, "", "default_poisson_atlas_path"], [360, 4, 1, "", "default_query_config"], [361, 4, 1, "", "default_query_schema"], [362, 4, 1, "", "name"], [363, 3, 1, "", "poisson_atlas"], [364, 4, 1, "", "query_config"], [365, 2, 1, "", "query_radius"], [366, 4, 1, "", "query_schema"], [367, 2, 1, "", "random_sample_count"], [368, 2, 1, "", "register"]], "structures.map": [[375, 1, 1, "", "Map"], [383, 1, 1, "", "MapAtlas"], [394, 1, 1, "", "PoissonAtlas"], [416, 1, 1, "", "StatAtlas"]], "structures.map.Map": [[376, 2, 1, "", "__init__"], [377, 3, 1, "", "coordinate_frame"], [378, 3, 1, "", "data"], [379, 2, 1, "", "get_healpix_id"], [380, 3, 1, "", "pixel_positions"], [381, 2, 1, "", "plot"], [382, 2, 1, "", "transform_map_coordinates"]], "structures.map.MapAtlas": [[384, 2, 1, "", "__init__"], [385, 3, 1, "", "coordinate_frame"], [386, 2, 1, "", "generate"], [387, 2, 1, "", "get_map"], [388, 3, 1, "", "has_maps"], [389, 3, 1, "", "hdus"], [390, 3, 1, "", "map_names"], [391, 3, 1, "", "pixel_positions"], [392, 2, 1, "", "remove"], [393, 2, 1, "", "reshape_healpix"]], "structures.map.PoissonAtlas": [[395, 3, 1, "", "COUNTS"], [396, 2, 1, "", "__init__"], [397, 2, 1, "", "append_to_fits"], [398, 2, 1, "", "build_poisson_map"], [399, 2, 1, "", "build_poisson_map_KNN"], [400, 2, 1, "", "build_poisson_map_MAP"], [401, 2, 1, "", "build_poisson_map_RNN"], [402, 2, 1, "", "build_poisson_map_regressor"], [403, 2, 1, "", "build_poisson_maps"], [404, 3, 1, "", "coordinate_frame"], [405, 2, 1, "", "generate"], [406, 2, 1, "", "get_map"], [407, 2, 1, "", "get_points"], [408, 3, 1, "", "has_maps"], [409, 3, 1, "", "hdus"], [410, 3, 1, "", "map_names"], [411, 3, 1, "", "pixel_positions"], [412, 2, 1, "", "remove"], [413, 2, 1, "", "reset"], [414, 2, 1, "", "reshape_healpix"], [415, 2, 1, "", "sample_from_database"]], "structures.map.StatAtlas": [[417, 3, 1, "", "COUNTS"], [418, 2, 1, "", "__init__"], [419, 2, 1, "", "append_to_fits"], [420, 3, 1, "", "coordinate_frame"], [421, 2, 1, "", "generate"], [422, 2, 1, "", "get_map"], [423, 2, 1, "", "get_points"], [424, 3, 1, "", "has_maps"], [425, 3, 1, "", "hdus"], [426, 3, 1, "", "map_names"], [427, 3, 1, "", "pixel_positions"], [428, 2, 1, "", "remove"], [429, 2, 1, "", "reset"], [430, 2, 1, "", "reshape_healpix"], [431, 2, 1, "", "sample_from_database"]], "structures.reduction": [[433, 1, 1, "", "AstrometricReductionProcess"], [479, 1, 1, "", "ReductionProcess"]], "structures.reduction.AstrometricReductionProcess": [[434, 4, 1, "", "CATALOG_ERR"], [435, 4, 1, "", "DATABASE_ERR"], [436, 2, 1, "", "__init__"], [437, 2, 1, "", "construct"], [438, 2, 1, "", "copy"], [439, 4, 1, "", "cross_match_database"], [440, 3, 1, "", "debug_flag"], [441, 2, 1, "", "dict"], [442, 4, 1, "", "fill_unknown"], [443, 2, 1, "", "from_orm"], [444, 2, 1, "", "generate_operator"], [445, 2, 1, "", "generate_sql_query"], [446, 2, 1, "", "json"], [447, 4, 1, "", "model_computed_fields"], [448, 4, 1, "", "model_config"], [449, 2, 1, "", "model_construct"], [450, 2, 1, "", "model_copy"], [451, 2, 1, "", "model_dump"], [452, 2, 1, "", "model_dump_json"], [453, 3, 1, "", "model_extra"], [454, 4, 1, "", "model_fields"], [455, 3, 1, "", "model_fields_set"], [456, 2, 1, "", "model_json_schema"], [457, 2, 1, "", "model_parametrized_name"], [458, 2, 1, "", "model_post_init"], [459, 2, 1, "", "model_rebuild"], [460, 2, 1, "", "model_validate"], [461, 2, 1, "", "model_validate_json"], [462, 2, 1, "", "model_validate_strings"], [463, 3, 1, "", "obj_col"], [464, 3, 1, "", "op_tmp_table"], [465, 2, 1, "", "parse_file"], [466, 2, 1, "", "parse_obj"], [467, 2, 1, "", "parse_raw"], [468, 4, 1, "", "prior"], [469, 3, 1, "", "proc_tmp_table"], [470, 4, 1, "", "process_name"], [471, 2, 1, "", "schema"], [472, 2, 1, "", "schema_json"], [473, 3, 1, "", "score_col"], [474, 4, 1, "", "settings_flag"], [475, 4, 1, "", "settings_header"], [476, 4, 1, "", "table"], [477, 2, 1, "", "update_forward_refs"], [478, 2, 1, "", "validate"]], "structures.reduction.ReductionProcess": [[480, 2, 1, "", "__init__"], [481, 2, 1, "", "construct"], [482, 2, 1, "", "copy"], [483, 4, 1, "", "cross_match_database"], [484, 3, 1, "", "debug_flag"], [485, 2, 1, "", "dict"], [486, 4, 1, "", "fill_unknown"], [487, 2, 1, "", "from_orm"], [488, 2, 1, "", "generate_operator"], [489, 2, 1, "", "generate_sql_query"], [490, 2, 1, "", "json"], [491, 4, 1, "", "model_computed_fields"], [492, 4, 1, "", "model_config"], [493, 2, 1, "", "model_construct"], [494, 2, 1, "", "model_copy"], [495, 2, 1, "", "model_dump"], [496, 2, 1, "", "model_dump_json"], [497, 3, 1, "", "model_extra"], [498, 4, 1, "", "model_fields"], [499, 3, 1, "", "model_fields_set"], [500, 2, 1, "", "model_json_schema"], [501, 2, 1, "", "model_parametrized_name"], [502, 2, 1, "", "model_post_init"], [503, 2, 1, "", "model_rebuild"], [504, 2, 1, "", "model_validate"], [505, 2, 1, "", "model_validate_json"], [506, 2, 1, "", "model_validate_strings"], [507, 3, 1, "", "obj_col"], [508, 3, 1, "", "op_tmp_table"], [509, 2, 1, "", "parse_file"], [510, 2, 1, "", "parse_obj"], [511, 2, 1, "", "parse_raw"], [512, 3, 1, "", "proc_tmp_table"], [513, 4, 1, "", "process_name"], [514, 2, 1, "", "schema"], [515, 2, 1, "", "schema_json"], [516, 3, 1, "", "score_col"], [517, 4, 1, "", "settings_flag"], [518, 4, 1, "", "settings_header"], [519, 4, 1, "", "table"], [520, 2, 1, "", "update_forward_refs"], [521, 2, 1, "", "validate"]], "structures.table": [[523, 1, 1, "", "CoordinateColumn"], [525, 1, 1, "", "SchemaColumn"], [527, 1, 1, "", "SourceTable"], [613, 5, 1, "", "correct_column_types"], [614, 5, 1, "", "format_table_types"], [615, 5, 1, "", "load"]], "structures.table.CoordinateColumn": [[524, 2, 1, "", "__init__"]], "structures.table.SchemaColumn": [[526, 2, 1, "", "__init__"]], "structures.table.SourceTable": [[528, 3, 1, "", "ColumnClass"], [529, 4, 1, "", "DEC"], [530, 4, 1, "", "DEC_ERR"], [531, 4, 1, "", "GAL_B"], [532, 4, 1, "", "GAL_B_ERR"], [533, 4, 1, "", "GAL_L"], [534, 4, 1, "", "GAL_L_ERR"], [535, 4, 1, "", "NAME"], [536, 4, 1, "", "RA"], [537, 4, 1, "", "RA_ERR"], [538, 4, 1, "", "SEP"], [539, 4, 1, "", "TYPE"], [540, 4, 1, "", "Z"], [541, 2, 1, "", "__init__"], [542, 2, 1, "", "add_column"], [543, 2, 1, "", "add_columns"], [544, 2, 1, "", "add_index"], [545, 2, 1, "", "add_row"], [546, 2, 1, "", "append_to_fits"], [547, 2, 1, "", "append_to_sql"], [548, 2, 1, "", "argsort"], [549, 2, 1, "", "as_array"], [550, 3, 1, "", "colnames"], [551, 2, 1, "", "convert_bytestring_to_unicode"], [552, 2, 1, "", "convert_unicode_to_bytestring"], [553, 2, 1, "", "copy"], [554, 2, 1, "", "count_types"], [555, 3, 1, "", "dtype"], [556, 2, 1, "", "field"], [557, 2, 1, "", "filled"], [558, 2, 1, "", "from_pandas"], [559, 2, 1, "", "generate_schema"], [560, 2, 1, "", "get_coordinates"], [561, 2, 1, "", "get_formatted_types"], [562, 2, 1, "", "group_by"], [563, 3, 1, "", "groups"], [564, 3, 1, "", "has_masked_columns"], [565, 3, 1, "", "has_masked_values"], [566, 3, 1, "", "has_mixin_columns"], [567, 3, 1, "", "iloc"], [568, 2, 1, "", "index_column"], [569, 2, 1, "", "index_mode"], [570, 3, 1, "", "indices"], [571, 4, 1, "", "info"], [572, 2, 1, "", "insert_row"], [573, 2, 1, "", "items"], [574, 2, 1, "", "itercols"], [575, 2, 1, "", "iterrows"], [576, 2, 1, "", "keep_columns"], [577, 2, 1, "", "keys"], [578, 3, 1, "", "lat"], [579, 3, 1, "", "loc"], [580, 3, 1, "", "loc_indices"], [581, 3, 1, "", "lon"], [582, 3, 1, "", "mask"], [583, 3, 1, "", "masked"], [584, 4, 1, "", "meta"], [585, 2, 1, "", "more"], [586, 2, 1, "", "pformat"], [587, 2, 1, "", "pformat_all"], [588, 2, 1, "", "pprint"], [589, 2, 1, "", "pprint_all"], [590, 4, 1, "", "pprint_exclude_names"], [591, 4, 1, "", "pprint_include_names"], [592, 4, 1, "", "read"], [593, 2, 1, "", "remove_column"], [594, 2, 1, "", "remove_columns"], [595, 2, 1, "", "remove_indices"], [596, 2, 1, "", "remove_row"], [597, 2, 1, "", "remove_rows"], [598, 2, 1, "", "rename_column"], [599, 2, 1, "", "rename_columns"], [600, 2, 1, "", "replace_column"], [601, 2, 1, "", "reverse"], [602, 2, 1, "", "round"], [603, 3, 1, "", "schema"], [604, 2, 1, "", "setdefault"], [605, 2, 1, "", "show_in_browser"], [606, 2, 1, "", "show_in_notebook"], [607, 2, 1, "", "sort"], [608, 2, 1, "", "to_pandas"], [609, 2, 1, "", "update"], [610, 2, 1, "", "values"], [611, 2, 1, "", "values_equal"], [612, 4, 1, "", "write"]], "utilities": [[616, 0, 0, "-", "core"], [649, 0, 0, "-", "logging"], [650, 0, 0, "-", "plot"], [655, 0, 0, "-", "sql"], [658, 0, 0, "-", "text"], [662, 0, 0, "-", "types"]], "utilities.core": [[617, 1, 1, "", "AttrDict"], [633, 1, 1, "", "YAMLConfiguration"], [641, 5, 1, "", "enforce_units"], [642, 5, 1, "", "find_descriptors"], [643, 5, 1, "", "getFromDict"], [644, 5, 1, "", "merge_dicts"], [645, 5, 1, "", "produce_dict_heading"], [646, 5, 1, "", "rgetattr"], [647, 5, 1, "", "rsetattr"], [648, 5, 1, "", "setInDict"]], "utilities.core.AttrDict": [[618, 2, 1, "", "__init__"], [619, 2, 1, "", "clean"], [620, 2, 1, "", "clean_types"], [621, 2, 1, "", "clear"], [622, 2, 1, "", "copy"], [623, 2, 1, "", "from_nested_dict"], [624, 2, 1, "", "fromkeys"], [625, 2, 1, "", "get"], [626, 2, 1, "", "items"], [627, 2, 1, "", "keys"], [628, 2, 1, "", "pop"], [629, 2, 1, "", "popitem"], [630, 2, 1, "", "setdefault"], [631, 2, 1, "", "update"], [632, 2, 1, "", "values"]], "utilities.core.YAMLConfiguration": [[634, 2, 1, "", "__init__"], [635, 3, 1, "", "config"], [636, 2, 1, "", "load"], [637, 2, 1, "", "load_from_path"], [638, 2, 1, "", "reload"], [639, 2, 1, "", "set_on_disk"], [640, 2, 1, "", "set_param"]], "utilities.plot": [[651, 5, 1, "", "get_hips_image"], [652, 5, 1, "", "plot_healpix"], [653, 5, 1, "", "plot_hips"], [654, 5, 1, "", "set_style"]], "utilities.sql": [[656, 5, 1, "", "chunk_sql_query_operation"], [657, 5, 1, "", "chunk_sql_table_operation"]], "utilities.text": [[659, 5, 1, "", "get_package_version"], [660, 5, 1, "", "print_cli_header"], [661, 5, 1, "", "print_version"]], "utilities.types": [[663, 1, 1, "", "ColumnMap"], [708, 1, 1, "", "ColumnStdErrorSpecifier"], [744, 1, 1, "", "ICRSCoordinateStdErrorSpecifier"], [780, 1, 1, "", "Registry"], [795, 1, 1, "", "SourceTableSchemaSettings"], [827, 1, 1, "", "TableColumn"], [859, 5, 1, "", "construct_template"], [860, 5, 1, "", "convert_np_type_to_sql"]], "utilities.types.ColumnMap": [[664, 4, 1, "", "DEC"], [665, 4, 1, "", "DEC_ERR"], [666, 4, 1, "", "GAL_B"], [667, 4, 1, "", "GAL_B_ERR"], [668, 4, 1, "", "GAL_L"], [669, 4, 1, "", "GAL_L_ERR"], [670, 4, 1, "", "NAME"], [671, 4, 1, "", "RA"], [672, 4, 1, "", "RA_ERR"], [673, 4, 1, "", "SEP"], [674, 4, 1, "", "TYPE"], [675, 4, 1, "", "Z"], [676, 2, 1, "", "__init__"], [677, 2, 1, "", "construct"], [678, 2, 1, "", "copy"], [679, 2, 1, "", "dict"], [680, 2, 1, "", "from_orm"], [681, 2, 1, "", "json"], [682, 4, 1, "", "model_computed_fields"], [683, 4, 1, "", "model_config"], [684, 2, 1, "", "model_construct"], [685, 2, 1, "", "model_copy"], [686, 2, 1, "", "model_dump"], [687, 2, 1, "", "model_dump_json"], [688, 3, 1, "", "model_extra"], [689, 4, 1, "", "model_fields"], [690, 3, 1, "", "model_fields_set"], [691, 2, 1, "", "model_json_schema"], [692, 2, 1, "", "model_parametrized_name"], [693, 2, 1, "", "model_post_init"], [694, 2, 1, "", "model_rebuild"], [695, 2, 1, "", "model_validate"], [696, 2, 1, "", "model_validate_json"], [697, 2, 1, "", "model_validate_strings"], [698, 2, 1, "", "parse_file"], [699, 2, 1, "", "parse_obj"], [700, 2, 1, "", "parse_raw"], [701, 2, 1, "", "schema"], [702, 2, 1, "", "schema_json"], [703, 2, 1, "", "search_inverse"], [704, 2, 1, "", "update_forward_refs"], [705, 2, 1, "", "validate"], [706, 2, 1, "", "validate_table_column_no_unit"], [707, 2, 1, "", "validate_table_column_unit"]], "utilities.types.ColumnStdErrorSpecifier": [[709, 2, 1, "", "__init__"], [710, 4, 1, "", "base_column"], [711, 2, 1, "", "construct"], [712, 2, 1, "", "copy"], [713, 2, 1, "", "dict"], [714, 4, 1, "", "error_column"], [715, 4, 1, "", "error_convert_to_std"], [716, 4, 1, "", "error_value"], [717, 2, 1, "", "from_orm"], [718, 2, 1, "", "json"], [719, 4, 1, "", "model_computed_fields"], [720, 4, 1, "", "model_config"], [721, 2, 1, "", "model_construct"], [722, 2, 1, "", "model_copy"], [723, 2, 1, "", "model_dump"], [724, 2, 1, "", "model_dump_json"], [725, 3, 1, "", "model_extra"], [726, 4, 1, "", "model_fields"], [727, 3, 1, "", "model_fields_set"], [728, 2, 1, "", "model_json_schema"], [729, 2, 1, "", "model_parametrized_name"], [730, 2, 1, "", "model_post_init"], [731, 2, 1, "", "model_rebuild"], [732, 2, 1, "", "model_validate"], [733, 2, 1, "", "model_validate_json"], [734, 2, 1, "", "model_validate_strings"], [735, 2, 1, "", "parse_file"], [736, 2, 1, "", "parse_obj"], [737, 2, 1, "", "parse_raw"], [738, 2, 1, "", "schema"], [739, 2, 1, "", "schema_json"], [740, 2, 1, "", "update_forward_refs"], [741, 2, 1, "", "validate"], [742, 2, 1, "", "validate_on_table"], [743, 2, 1, "", "validator"]], "utilities.types.ICRSCoordinateStdErrorSpecifier": [[745, 2, 1, "", "__init__"], [746, 2, 1, "", "check_empty"], [747, 2, 1, "", "construct"], [748, 2, 1, "", "copy"], [749, 2, 1, "", "dict"], [750, 2, 1, "", "from_orm"], [751, 2, 1, "", "json"], [752, 4, 1, "", "lat_error"], [753, 4, 1, "", "lon_error"], [754, 3, 1, "", "mode"], [755, 4, 1, "", "model_computed_fields"], [756, 4, 1, "", "model_config"], [757, 2, 1, "", "model_construct"], [758, 2, 1, "", "model_copy"], [759, 2, 1, "", "model_dump"], [760, 2, 1, "", "model_dump_json"], [761, 3, 1, "", "model_extra"], [762, 4, 1, "", "model_fields"], [763, 3, 1, "", "model_fields_set"], [764, 2, 1, "", "model_json_schema"], [765, 2, 1, "", "model_parametrized_name"], [766, 2, 1, "", "model_post_init"], [767, 2, 1, "", "model_rebuild"], [768, 2, 1, "", "model_validate"], [769, 2, 1, "", "model_validate_json"], [770, 2, 1, "", "model_validate_strings"], [771, 2, 1, "", "parse_file"], [772, 2, 1, "", "parse_obj"], [773, 2, 1, "", "parse_raw"], [774, 4, 1, "", "position_error"], [775, 2, 1, "", "schema"], [776, 2, 1, "", "schema_json"], [777, 2, 1, "", "update_forward_refs"], [778, 2, 1, "", "validate"], [779, 2, 1, "", "validator"]], "utilities.types.Registry": [[781, 2, 1, "", "__init__"], [782, 2, 1, "", "add"], [783, 2, 1, "", "as_list"], [784, 2, 1, "", "clear"], [785, 2, 1, "", "copy"], [786, 2, 1, "", "fromkeys"], [787, 2, 1, "", "get"], [788, 2, 1, "", "items"], [789, 2, 1, "", "keys"], [790, 2, 1, "", "pop"], [791, 2, 1, "", "popitem"], [792, 2, 1, "", "setdefault"], [793, 2, 1, "", "update"], [794, 2, 1, "", "values"]], "utilities.types.SourceTableSchemaSettings": [[796, 2, 1, "", "__init__"], [797, 2, 1, "", "construct"], [798, 2, 1, "", "copy"], [799, 4, 1, "", "default_coord_system"], [800, 2, 1, "", "dict"], [801, 2, 1, "", "from_orm"], [802, 2, 1, "", "json"], [803, 4, 1, "", "model_computed_fields"], [804, 4, 1, "", "model_config"], [805, 2, 1, "", "model_construct"], [806, 2, 1, "", "model_copy"], [807, 2, 1, "", "model_dump"], [808, 2, 1, "", "model_dump_json"], [809, 3, 1, "", "model_extra"], [810, 4, 1, "", "model_fields"], [811, 3, 1, "", "model_fields_set"], [812, 2, 1, "", "model_json_schema"], [813, 2, 1, "", "model_parametrized_name"], [814, 2, 1, "", "model_post_init"], [815, 2, 1, "", "model_rebuild"], [816, 2, 1, "", "model_validate"], [817, 2, 1, "", "model_validate_json"], [818, 2, 1, "", "model_validate_strings"], [819, 4, 1, "", "object_type_separator"], [820, 2, 1, "", "parse_file"], [821, 2, 1, "", "parse_obj"], [822, 2, 1, "", "parse_raw"], [823, 2, 1, "", "schema"], [824, 2, 1, "", "schema_json"], [825, 2, 1, "", "update_forward_refs"], [826, 2, 1, "", "validate"]], "utilities.types.TableColumn": [[828, 2, 1, "", "__init__"], [829, 2, 1, "", "construct"], [830, 2, 1, "", "copy"], [831, 2, 1, "", "dict"], [832, 2, 1, "", "from_orm"], [833, 2, 1, "", "json"], [834, 4, 1, "", "model_computed_fields"], [835, 4, 1, "", "model_config"], [836, 2, 1, "", "model_construct"], [837, 2, 1, "", "model_copy"], [838, 2, 1, "", "model_dump"], [839, 2, 1, "", "model_dump_json"], [840, 3, 1, "", "model_extra"], [841, 4, 1, "", "model_fields"], [842, 3, 1, "", "model_fields_set"], [843, 2, 1, "", "model_json_schema"], [844, 2, 1, "", "model_parametrized_name"], [845, 2, 1, "", "model_post_init"], [846, 2, 1, "", "model_rebuild"], [847, 2, 1, "", "model_validate"], [848, 2, 1, "", "model_validate_json"], [849, 2, 1, "", "model_validate_strings"], [850, 4, 1, "", "name"], [851, 2, 1, "", "parse_file"], [852, 2, 1, "", "parse_obj"], [853, 2, 1, "", "parse_raw"], [854, 2, 1, "", "schema"], [855, 2, 1, "", "schema_json"], [856, 4, 1, "", "unit"], [857, 2, 1, "", "update_forward_refs"], [858, 2, 1, "", "validate"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"cross_refer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "crossmatchdatabas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 873], "__init__": [2, 34, 68, 70, 102, 134, 136, 164, 208, 223, 226, 233, 240, 251, 269, 288, 309, 330, 354, 376, 384, 396, 418, 436, 480, 524, 526, 541, 618, 634, 676, 709, 745, 781, 796, 828], "add_catalog": 3, "add_catalog_from_t": 4, "build_meta_t": 5, "check_meta": 6, "chunk_db_oper": 7, "chunk_db_table_oper": 8, "connect": 9, "correct_object_typ": 10, "cross_match": [11, 30], "drop_tabl": 12, "from_fil": 13, "get_databas": [14, 371], "has_catalog": 15, "match_tabl": 16, "meta": [17, 584, 873], "meta_add": 18, "meta_remov": 19, "meta_reset": 20, "overwrite_schema": 21, "path": 22, "plot_match": 23, "queri": [24, 866, 874], "run_reduct": 25, "schema": [26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 471, 514, 603, 701, 738, 775, 823, 854, 862, 864, 874, 882, 883, 884], "score_match": 27, "standardize_coordin": 28, "tabl": [29, 476, 519, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 865, 873, 884], "cross_match_t": 31, "cmdschema": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "catalog_schema": 35, "construct": [36, 71, 103, 167, 437, 481, 677, 711, 747, 797, 829, 865], "copi": [37, 72, 104, 140, 171, 255, 438, 482, 553, 622, 678, 712, 748, 785, 798, 830], "dict": [38, 73, 105, 173, 441, 485, 679, 713, 749, 800, 831], "from_orm": [39, 74, 106, 174, 443, 487, 680, 717, 750, 801, 832], "json": [40, 75, 107, 177, 446, 490, 681, 718, 751, 802, 833], "model_computed_field": [41, 76, 108, 178, 447, 491, 682, 719, 755, 803, 834], "model_config": [42, 77, 109, 179, 448, 492, 683, 720, 756, 804, 835], "model_construct": [43, 78, 110, 180, 449, 493, 684, 721, 757, 805, 836], "model_copi": [44, 79, 111, 181, 450, 494, 685, 722, 758, 806, 837], "model_dump": [45, 80, 112, 182, 451, 495, 686, 723, 759, 807, 838], "model_dump_json": [46, 81, 113, 183, 452, 496, 687, 724, 760, 808, 839], "model_extra": [47, 82, 114, 184, 453, 497, 688, 725, 761, 809, 840], "model_field": [48, 83, 115, 185, 454, 498, 689, 726, 762, 810, 841], "model_fields_set": [49, 84, 116, 186, 455, 499, 690, 727, 763, 811, 842], "model_json_schema": [50, 85, 117, 187, 456, 500, 691, 728, 764, 812, 843], "model_parametrized_nam": [51, 86, 118, 188, 457, 501, 692, 729, 765, 813, 844], "model_post_init": [52, 87, 119, 189, 458, 502, 693, 730, 766, 814, 845], "model_rebuild": [53, 88, 120, 190, 459, 503, 694, 731, 767, 815, 846], "model_valid": [54, 89, 121, 191, 460, 504, 695, 732, 768, 816, 847], "model_validate_json": [55, 90, 122, 192, 461, 505, 696, 733, 769, 817, 848], "model_validate_str": [56, 91, 123, 193, 462, 506, 697, 734, 770, 818, 849], "parse_fil": [57, 92, 124, 196, 465, 509, 698, 735, 771, 820, 851], "parse_obj": [58, 93, 125, 197, 466, 510, 699, 736, 772, 821, 852], "parse_raw": [59, 94, 126, 198, 467, 511, 700, 737, 773, 822, 853], "read": [60, 95, 127, 199, 592], "schema_json": [62, 97, 129, 201, 472, 515, 702, 739, 776, 824, 855], "table_schema": 63, "update_forward_ref": [64, 98, 130, 203, 477, 520, 704, 740, 777, 825, 857], "valid": [65, 99, 131, 204, 478, 521, 705, 741, 743, 778, 779, 826, 858], "write": [66, 100, 132, 205, 612, 879, 882, 883], "columnentri": [67, 68], "reductionschema": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "schemaentri": [133, 134], "schemaregistri": [135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "add": [137, 252, 782], "as_list": [138, 253, 783], "clear": [139, 254, 621, 784], "from_directori": 141, "fromkei": [142, 256, 624, 786], "get": [143, 257, 625, 787, 872], "item": [144, 258, 573, 626, 788], "kei": [145, 259, 577, 627, 789, 878], "pop": [146, 262, 628, 790], "popitem": [147, 263, 629, 791], "setdefault": [148, 265, 604, 630, 792], "updat": [149, 266, 609, 631, 793], "valu": [150, 267, 610, 632, 794], "sourcetableschema": [151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "dec": [152, 529, 664], "dec_err": [153, 530, 665], "gal_b": [154, 531, 666], "gal_b_err": [155, 532, 667], "gal_l": [156, 533, 668], "gal_l_err": [157, 534, 669], "name": [158, 261, 277, 299, 317, 343, 362, 535, 670, 850], "ra": [159, 536, 671], "ra_err": [160, 537, 672], "sep": [161, 538, 673], "type": [162, 539, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 874, 880, 883], "z": [163, 540, 675], "available_coordinate_fram": 165, "column_map": 166, "coordinate_column": 168, "coordinate_fram": [169, 377, 385, 404, 420], "coordinate_system": 170, "default_coord_system": [172, 799], "from_tabl": 175, "guess_coordinate_standard_error_struct": 176, "object_map": 194, "object_type_separ": [195, 819], "set": 202, "stat": [206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248], "gaussian_process": [206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "haversine_rbf": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "anisotrop": 209, "bound": 210, "clone_with_theta": 211, "diag": 212, "get_param": 213, "hyperparameter_length_scal": 214, "hyperparamet": [215, 229, 236, 243], "is_stationari": 216, "n_dim": 217, "requires_vector_input": 218, "set_param": [219, 640], "theta": 220, "map_regress": [221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246], "bayesianpoissonmapregressor": [222, 223, 224], "build_map_map": 224, "knneighbormapregressor": [225, 226, 227, 228, 229, 230, 231], "cross_valid": [227, 234, 241], "default_training_fract": [228, 235, 242], "regressor_paramet": [230, 237, 244], "train_model": [231, 238, 245], "poissonmapregressor": [232, 233, 234, 235, 236, 237, 238], "rnneighbormapregressor": [239, 240, 241, 242, 243, 244, 245], "train_map_regressor": 246, "util": [247, 248, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860], "uniform_sample_spher": 248, "structur": [249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 862, 879], "databas": [249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 862, 864, 866, 873, 874], "dbregistri": [250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267], "local": [260, 866, 874], "remot": [264, 866, 874], "localdatabas": [268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285], "add_sources_to_poisson": [270, 289, 310, 331, 355], "correct_query_output": [271, 291, 311, 335, 356], "count": [272, 292, 312, 336, 357, 395, 417, 865], "default_correct_query_output": [273, 293, 313, 337, 358], "default_poisson_atlas_path": [274, 294, 314, 338, 359], "default_query_config": [275, 295, 315, 339, 360], "default_query_schema": [276, 296, 316, 340, 361], "poisson_atla": [278, 300, 318, 344, 363], "query_config": [279, 301, 319, 345, 364], "query_radiu": [280, 303, 320, 347, 365], "dev": [280, 303, 320, 347, 365], "note": [280, 303, 320, 347, 365], "query_schema": [281, 304, 321, 348, 366], "random_sample_count": [282, 305, 322, 350, 367], "regist": [283, 306, 323, 351, 368], "source_match": [284, 307, 324, 352], "source_match_memori": 285, "ned": [286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "timeout": [287, 329], "config_n": 290, "get_image_list": 297, "get_tabl": 298, "query_object": [302, 346], "remotedatabas": [308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "simbad": [325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352], "extra_column": 326, "removed_column": 327, "row_limit": 328, "available_t": 332, "clear_cach": 333, "config_simbad": 334, "list_column": 341, "list_linked_t": 342, "query_tap": 349, "sourcedatabas": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368], "add_points_to_poisson_map": 369, "builtin_databas": 370, "get_poisson_atla": 372, "get_poisson_path": 373, "map": [374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 865], "data": [378, 862, 864, 873, 884], "get_healpix_id": 379, "pixel_posit": [380, 391, 411, 427], "plot": [381, 650, 651, 652, 653, 654, 873, 876], "transform_map_coordin": 382, "mapatla": [383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393], "gener": [386, 405, 421], "get_map": [387, 406, 422], "has_map": [388, 408, 424], "hdu": [389, 409, 425, 865], "map_nam": [390, 410, 426], "remov": [392, 412, 428], "reshape_healpix": [393, 414, 430], "poissonatla": [394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415], "append_to_fit": [397, 419, 546], "build_poisson_map": [398, 403], "build_poisson_map_knn": 399, "build_poisson_map_map": 400, "build_poisson_map_rnn": 401, "build_poisson_map_regressor": 402, "get_point": [407, 423], "reset": [413, 429], "sample_from_databas": [415, 431], "statatla": [416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431], "reduct": [432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 864, 873, 878, 879, 880, 882], "astrometricreductionprocess": [433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478], "catalog_err": 434, "database_err": 435, "cross_match_databas": [439, 483], "debug_flag": [440, 484], "fill_unknown": [442, 486], "generate_oper": [444, 488], "generate_sql_queri": [445, 489], "obj_col": [463, 507], "op_tmp_tabl": [464, 508], "prior": [468, 878], "proc_tmp_tabl": [469, 512], "process_nam": [470, 513], "score_col": [473, 516], "settings_flag": [474, 517], "settings_head": [475, 518], "reductionprocess": [479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "coordinatecolumn": [523, 524], "schemacolumn": [525, 526], "sourcet": [527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612], "columnclass": 528, "add_column": [542, 543], "add_index": 544, "add_row": 545, "append_to_sql": 547, "argsort": 548, "as_arrai": 549, "colnam": 550, "convert_bytestring_to_unicod": 551, "convert_unicode_to_bytestr": 552, "count_typ": 554, "dtype": 555, "field": 556, "fill": 557, "from_panda": 558, "generate_schema": 559, "get_coordin": 560, "get_formatted_typ": 561, "group_bi": 562, "group": 563, "has_masked_column": 564, "has_masked_valu": 565, "has_mixin_column": 566, "iloc": 567, "index_column": 568, "index_mod": 569, "indic": 570, "info": 571, "insert_row": 572, "itercol": 574, "iterrow": 575, "keep_column": 576, "lat": 578, "loc": 579, "loc_indic": 580, "lon": 581, "mask": [582, 583], "more": 585, "pformat": 586, "pformat_al": 587, "pprint": 588, "pprint_al": 589, "pprint_exclude_nam": 590, "pprint_include_nam": 591, "remove_column": [593, 594], "remove_indic": 595, "remove_row": [596, 597], "rename_column": [598, 599], "replace_column": 600, "revers": 601, "round": 602, "show_in_brows": 605, "show_in_notebook": 606, "sort": 607, "to_panda": 608, "values_equ": 611, "correct_column_typ": 613, "format_table_typ": 614, "load": [615, 636, 864, 884], "core": [616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 861], "attrdict": [617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632], "clean": 619, "clean_typ": 620, "from_nested_dict": 623, "yamlconfigur": [633, 634, 635, 636, 637, 638, 639, 640], "config": 635, "load_from_path": 637, "reload": 638, "set_on_disk": 639, "enforce_unit": 641, "find_descriptor": 642, "getfromdict": 643, "merge_dict": 644, "produce_dict_head": 645, "rgetattr": 646, "rsetattr": 647, "setindict": 648, "log": [649, 875], "get_hips_imag": 651, "plot_healpix": 652, "plot_hip": 653, "set_styl": 654, "sql": [655, 656, 657], "chunk_sql_query_oper": 656, "chunk_sql_table_oper": 657, "text": [658, 659, 660, 661], "get_package_vers": 659, "print_cli_head": 660, "print_vers": 661, "columnmap": [663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707], "search_invers": 703, "validate_table_column_no_unit": 706, "validate_table_column_unit": 707, "columnstderrorspecifi": [708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743], "base_column": 710, "error_column": 714, "error_convert_to_std": 715, "error_valu": 716, "validate_on_t": 742, "icrscoordinatestderrorspecifi": [744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779], "check_empti": 746, "lat_error": 752, "lon_error": 753, "mode": [754, 878], "position_error": 774, "registri": [780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794], "sourcetableschemaset": [795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826], "tablecolumn": [827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858], "unit": 856, "construct_templ": 859, "convert_np_type_to_sql": 860, "api": 861, "modul": 861, "statist": [861, 872], "other": 861, "sky": 862, "collect": 862, "format": 862, "exampl": 863, "cross": [864, 873, 874], "referenc": [864, 873], "overview": [864, 871, 873, 878], "content": [864, 865, 866], "match": [864, 873, 874], "against": 864, "astrometri": [864, 878], "poisson": [865, 874], "introduct": 865, "repres": 865, "atlas": [865, 874], "The": [865, 873], "densiti": 865, "estim": [865, 878], "maximum": 865, "A": [865, 873, 874], "posteriori": [865, 878], "regress": 865, "k": 865, "nearest": 865, "neighbor": 865, "r": 865, "us": 866, "pyxmip": [866, 867, 869, 870, 871, 883], "access": 866, "basic": [866, 872, 879], "properti": 866, "beyond": 866, "simpl": 866, "what": [866, 871, 873, 879, 883], "i": [866, 871, 873, 879, 883], "quickstart": 867, "guid": 867, "instal": [867, 870], "setup": [867, 878], "critic": 867, "compon": 867, "featur": 868, "resourc": 868, "page": 868, "configur": [869, 874], "from": [870, 873, 878, 884], "pypi": 870, "sourc": [870, 884], "can": 871, "do": 871, "With": [871, 883, 884], "how": 871, "doe": 871, "work": [871, 884], "refer": [872, 878], "start": 872, "usag": [872, 878], "visual": 872, "result": 872, "advanc": 872, "expand": 872, "avail": 872, "datatyp": 872, "backend": 872, "exactli": 873, "explor": 873, "output": [873, 874], "make": 873, "crossmatchingdatabas": 873, "instanc": 873, "alter": 873, "interact": [873, 883], "raw": 873, "pull": 873, "mathemat": [873, 878], "sub": 873, "process": [873, 878, 879], "further": 873, "inform": [873, 874], "At": 874, "glanc": 874, "definit": 874, "differ": 874, "know": 874, "creat": [874, 876], "custom": 874, "develop": 874, "standard": 874, "psf": 877, "model": [877, 878, 880], "astrometr": 878, "basi": 878, "assumpt": 878, "paramet": [878, 879], "uncertainti": 878, "select": 878, "initi": 878, "run": 878, "normal": 878, "distribut": 878, "error": 878, "bay": 878, "factor": 878, "self": 878, "consist": 878, "By": 878, "iter": 878, "method": 878, "new": 879, "object": 880, "astronom": 880, "instrument": 880, "class": 883, "autom": 883, "catalog": 884, "disk": 884}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"cross_reference": [[0, "module-cross_reference"]], "cross_reference.CrossMatchDatabase": [[1, "cross-reference-crossmatchdatabase"]], "cross_reference.CrossMatchDatabase.__init__": [[2, "cross-reference-crossmatchdatabase-init"]], "cross_reference.CrossMatchDatabase.add_catalog": [[3, "cross-reference-crossmatchdatabase-add-catalog"]], "cross_reference.CrossMatchDatabase.add_catalog_from_table": [[4, "cross-reference-crossmatchdatabase-add-catalog-from-table"]], "cross_reference.CrossMatchDatabase.build_meta_table": [[5, "cross-reference-crossmatchdatabase-build-meta-table"]], "cross_reference.CrossMatchDatabase.check_meta": [[6, "cross-reference-crossmatchdatabase-check-meta"]], "cross_reference.CrossMatchDatabase.chunk_db_operation": [[7, "cross-reference-crossmatchdatabase-chunk-db-operation"]], "cross_reference.CrossMatchDatabase.chunk_db_table_operation": [[8, "cross-reference-crossmatchdatabase-chunk-db-table-operation"]], "cross_reference.CrossMatchDatabase.connect": [[9, "cross-reference-crossmatchdatabase-connect"]], "cross_reference.CrossMatchDatabase.correct_object_types": [[10, "cross-reference-crossmatchdatabase-correct-object-types"]], "cross_reference.CrossMatchDatabase.cross_match": [[11, "cross-reference-crossmatchdatabase-cross-match"]], "cross_reference.CrossMatchDatabase.drop_table": [[12, "cross-reference-crossmatchdatabase-drop-table"]], "cross_reference.CrossMatchDatabase.from_file": [[13, "cross-reference-crossmatchdatabase-from-file"]], "cross_reference.CrossMatchDatabase.get_database": [[14, "cross-reference-crossmatchdatabase-get-database"]], "cross_reference.CrossMatchDatabase.has_catalog": [[15, "cross-reference-crossmatchdatabase-has-catalog"]], "cross_reference.CrossMatchDatabase.match_tables": [[16, "cross-reference-crossmatchdatabase-match-tables"]], "cross_reference.CrossMatchDatabase.meta": [[17, "cross-reference-crossmatchdatabase-meta"]], "cross_reference.CrossMatchDatabase.meta_add": [[18, "cross-reference-crossmatchdatabase-meta-add"]], "cross_reference.CrossMatchDatabase.meta_remove": [[19, "cross-reference-crossmatchdatabase-meta-remove"]], "cross_reference.CrossMatchDatabase.meta_reset": [[20, "cross-reference-crossmatchdatabase-meta-reset"]], "cross_reference.CrossMatchDatabase.overwrite_schema": [[21, "cross-reference-crossmatchdatabase-overwrite-schema"]], "cross_reference.CrossMatchDatabase.path": [[22, "cross-reference-crossmatchdatabase-path"]], "cross_reference.CrossMatchDatabase.plot_matches": [[23, "cross-reference-crossmatchdatabase-plot-matches"]], "cross_reference.CrossMatchDatabase.query": [[24, "cross-reference-crossmatchdatabase-query"]], "cross_reference.CrossMatchDatabase.run_reduction": [[25, "cross-reference-crossmatchdatabase-run-reduction"]], "cross_reference.CrossMatchDatabase.schema": [[26, "cross-reference-crossmatchdatabase-schema"]], "cross_reference.CrossMatchDatabase.score_matches": [[27, "cross-reference-crossmatchdatabase-score-matches"]], "cross_reference.CrossMatchDatabase.standardize_coordinates": [[28, "cross-reference-crossmatchdatabase-standardize-coordinates"]], "cross_reference.CrossMatchDatabase.tables": [[29, "cross-reference-crossmatchdatabase-tables"]], "cross_reference.cross_match": [[30, "cross-reference-cross-match"]], "cross_reference.cross_match_table": [[31, "cross-reference-cross-match-table"]], "schema": [[32, "module-schema"]], "schema.CMDSchema": [[33, "schema-cmdschema"]], "schema.CMDSchema.__init__": [[34, "schema-cmdschema-init"]], "schema.CMDSchema.catalog_schema": [[35, "schema-cmdschema-catalog-schema"]], "schema.CMDSchema.construct": [[36, "schema-cmdschema-construct"]], "schema.CMDSchema.copy": [[37, "schema-cmdschema-copy"]], "schema.CMDSchema.dict": [[38, "schema-cmdschema-dict"]], "schema.CMDSchema.from_orm": [[39, "schema-cmdschema-from-orm"]], "schema.CMDSchema.json": [[40, "schema-cmdschema-json"]], "schema.CMDSchema.model_computed_fields": [[41, "schema-cmdschema-model-computed-fields"]], "schema.CMDSchema.model_config": [[42, "schema-cmdschema-model-config"]], "schema.CMDSchema.model_construct": [[43, "schema-cmdschema-model-construct"]], "schema.CMDSchema.model_copy": [[44, "schema-cmdschema-model-copy"]], "schema.CMDSchema.model_dump": [[45, "schema-cmdschema-model-dump"]], "schema.CMDSchema.model_dump_json": [[46, "schema-cmdschema-model-dump-json"]], "schema.CMDSchema.model_extra": [[47, "schema-cmdschema-model-extra"]], "schema.CMDSchema.model_fields": [[48, "schema-cmdschema-model-fields"]], "schema.CMDSchema.model_fields_set": [[49, "schema-cmdschema-model-fields-set"]], "schema.CMDSchema.model_json_schema": [[50, "schema-cmdschema-model-json-schema"]], "schema.CMDSchema.model_parametrized_name": [[51, "schema-cmdschema-model-parametrized-name"]], "schema.CMDSchema.model_post_init": [[52, "schema-cmdschema-model-post-init"]], "schema.CMDSchema.model_rebuild": [[53, "schema-cmdschema-model-rebuild"]], "schema.CMDSchema.model_validate": [[54, "schema-cmdschema-model-validate"]], "schema.CMDSchema.model_validate_json": [[55, "schema-cmdschema-model-validate-json"]], "schema.CMDSchema.model_validate_strings": [[56, "schema-cmdschema-model-validate-strings"]], "schema.CMDSchema.parse_file": [[57, "schema-cmdschema-parse-file"]], "schema.CMDSchema.parse_obj": [[58, "schema-cmdschema-parse-obj"]], "schema.CMDSchema.parse_raw": [[59, "schema-cmdschema-parse-raw"]], "schema.CMDSchema.read": [[60, "schema-cmdschema-read"]], "schema.CMDSchema.schema": [[61, "schema-cmdschema-schema"]], "schema.CMDSchema.schema_json": [[62, "schema-cmdschema-schema-json"]], "schema.CMDSchema.table_schema": [[63, "schema-cmdschema-table-schema"]], "schema.CMDSchema.update_forward_refs": [[64, "schema-cmdschema-update-forward-refs"]], "schema.CMDSchema.validate": [[65, "schema-cmdschema-validate"]], "schema.CMDSchema.write": [[66, "schema-cmdschema-write"]], "schema.ColumnEntry": [[67, "schema-columnentry"]], "schema.ColumnEntry.__init__": [[68, "schema-columnentry-init"]], "schema.ReductionSchema": [[69, "schema-reductionschema"]], "schema.ReductionSchema.__init__": [[70, "schema-reductionschema-init"]], "schema.ReductionSchema.construct": [[71, "schema-reductionschema-construct"]], "schema.ReductionSchema.copy": [[72, "schema-reductionschema-copy"]], "schema.ReductionSchema.dict": [[73, "schema-reductionschema-dict"]], "schema.ReductionSchema.from_orm": [[74, "schema-reductionschema-from-orm"]], "schema.ReductionSchema.json": [[75, "schema-reductionschema-json"]], "schema.ReductionSchema.model_computed_fields": [[76, "schema-reductionschema-model-computed-fields"]], "schema.ReductionSchema.model_config": [[77, "schema-reductionschema-model-config"]], "schema.ReductionSchema.model_construct": [[78, "schema-reductionschema-model-construct"]], "schema.ReductionSchema.model_copy": [[79, "schema-reductionschema-model-copy"]], "schema.ReductionSchema.model_dump": [[80, "schema-reductionschema-model-dump"]], "schema.ReductionSchema.model_dump_json": [[81, "schema-reductionschema-model-dump-json"]], "schema.ReductionSchema.model_extra": [[82, "schema-reductionschema-model-extra"]], "schema.ReductionSchema.model_fields": [[83, "schema-reductionschema-model-fields"]], "schema.ReductionSchema.model_fields_set": [[84, "schema-reductionschema-model-fields-set"]], "schema.ReductionSchema.model_json_schema": [[85, "schema-reductionschema-model-json-schema"]], "schema.ReductionSchema.model_parametrized_name": [[86, "schema-reductionschema-model-parametrized-name"]], "schema.ReductionSchema.model_post_init": [[87, "schema-reductionschema-model-post-init"]], "schema.ReductionSchema.model_rebuild": [[88, "schema-reductionschema-model-rebuild"]], "schema.ReductionSchema.model_validate": [[89, "schema-reductionschema-model-validate"]], "schema.ReductionSchema.model_validate_json": [[90, "schema-reductionschema-model-validate-json"]], "schema.ReductionSchema.model_validate_strings": [[91, "schema-reductionschema-model-validate-strings"]], "schema.ReductionSchema.parse_file": [[92, "schema-reductionschema-parse-file"]], "schema.ReductionSchema.parse_obj": [[93, "schema-reductionschema-parse-obj"]], "schema.ReductionSchema.parse_raw": [[94, "schema-reductionschema-parse-raw"]], "schema.ReductionSchema.read": [[95, "schema-reductionschema-read"]], "schema.ReductionSchema.schema": [[96, "schema-reductionschema-schema"]], "schema.ReductionSchema.schema_json": [[97, "schema-reductionschema-schema-json"]], "schema.ReductionSchema.update_forward_refs": [[98, "schema-reductionschema-update-forward-refs"]], "schema.ReductionSchema.validate": [[99, "schema-reductionschema-validate"]], "schema.ReductionSchema.write": [[100, "schema-reductionschema-write"]], "schema.Schema": [[101, "schema-schema"]], "schema.Schema.__init__": [[102, "schema-schema-init"]], "schema.Schema.construct": [[103, "schema-schema-construct"]], "schema.Schema.copy": [[104, "schema-schema-copy"]], "schema.Schema.dict": [[105, "schema-schema-dict"]], "schema.Schema.from_orm": [[106, "schema-schema-from-orm"]], "schema.Schema.json": [[107, "schema-schema-json"]], "schema.Schema.model_computed_fields": [[108, "schema-schema-model-computed-fields"]], "schema.Schema.model_config": [[109, "schema-schema-model-config"]], "schema.Schema.model_construct": [[110, "schema-schema-model-construct"]], "schema.Schema.model_copy": [[111, "schema-schema-model-copy"]], "schema.Schema.model_dump": [[112, "schema-schema-model-dump"]], "schema.Schema.model_dump_json": [[113, "schema-schema-model-dump-json"]], "schema.Schema.model_extra": [[114, "schema-schema-model-extra"]], "schema.Schema.model_fields": [[115, "schema-schema-model-fields"]], "schema.Schema.model_fields_set": [[116, "schema-schema-model-fields-set"]], "schema.Schema.model_json_schema": [[117, "schema-schema-model-json-schema"]], "schema.Schema.model_parametrized_name": [[118, "schema-schema-model-parametrized-name"]], "schema.Schema.model_post_init": [[119, "schema-schema-model-post-init"]], "schema.Schema.model_rebuild": [[120, "schema-schema-model-rebuild"]], "schema.Schema.model_validate": [[121, "schema-schema-model-validate"]], "schema.Schema.model_validate_json": [[122, "schema-schema-model-validate-json"]], "schema.Schema.model_validate_strings": [[123, "schema-schema-model-validate-strings"]], "schema.Schema.parse_file": [[124, "schema-schema-parse-file"]], "schema.Schema.parse_obj": [[125, "schema-schema-parse-obj"]], "schema.Schema.parse_raw": [[126, "schema-schema-parse-raw"]], "schema.Schema.read": [[127, "schema-schema-read"]], "schema.Schema.schema": [[128, "schema-schema-schema"]], "schema.Schema.schema_json": [[129, "schema-schema-schema-json"]], "schema.Schema.update_forward_refs": [[130, "schema-schema-update-forward-refs"]], "schema.Schema.validate": [[131, "schema-schema-validate"]], "schema.Schema.write": [[132, "schema-schema-write"]], "schema.SchemaEntry": [[133, "schema-schemaentry"]], "schema.SchemaEntry.__init__": [[134, "schema-schemaentry-init"]], "schema.SchemaRegistry": [[135, "schema-schemaregistry"]], "schema.SchemaRegistry.__init__": [[136, "schema-schemaregistry-init"]], "schema.SchemaRegistry.add": [[137, "schema-schemaregistry-add"]], "schema.SchemaRegistry.as_list": [[138, "schema-schemaregistry-as-list"]], "schema.SchemaRegistry.clear": [[139, "schema-schemaregistry-clear"]], "schema.SchemaRegistry.copy": [[140, "schema-schemaregistry-copy"]], "schema.SchemaRegistry.from_directory": [[141, "schema-schemaregistry-from-directory"]], "schema.SchemaRegistry.fromkeys": [[142, "schema-schemaregistry-fromkeys"]], "schema.SchemaRegistry.get": [[143, "schema-schemaregistry-get"]], "schema.SchemaRegistry.items": [[144, "schema-schemaregistry-items"]], "schema.SchemaRegistry.keys": [[145, "schema-schemaregistry-keys"]], "schema.SchemaRegistry.pop": [[146, "schema-schemaregistry-pop"]], "schema.SchemaRegistry.popitem": [[147, "schema-schemaregistry-popitem"]], "schema.SchemaRegistry.setdefault": [[148, "schema-schemaregistry-setdefault"]], "schema.SchemaRegistry.update": [[149, "schema-schemaregistry-update"]], "schema.SchemaRegistry.values": [[150, "schema-schemaregistry-values"]], "schema.SourceTableSchema": [[151, "schema-sourcetableschema"]], "schema.SourceTableSchema.DEC": [[152, "schema-sourcetableschema-dec"]], "schema.SourceTableSchema.DEC_ERR": [[153, "schema-sourcetableschema-dec-err"]], "schema.SourceTableSchema.GAL_B": [[154, "schema-sourcetableschema-gal-b"]], "schema.SourceTableSchema.GAL_B_ERR": [[155, "schema-sourcetableschema-gal-b-err"]], "schema.SourceTableSchema.GAL_L": [[156, "schema-sourcetableschema-gal-l"]], "schema.SourceTableSchema.GAL_L_ERR": [[157, "schema-sourcetableschema-gal-l-err"]], "schema.SourceTableSchema.NAME": [[158, "schema-sourcetableschema-name"]], "schema.SourceTableSchema.RA": [[159, "schema-sourcetableschema-ra"]], "schema.SourceTableSchema.RA_ERR": [[160, "schema-sourcetableschema-ra-err"]], "schema.SourceTableSchema.SEP": [[161, "schema-sourcetableschema-sep"]], "schema.SourceTableSchema.TYPE": [[162, "schema-sourcetableschema-type"]], "schema.SourceTableSchema.Z": [[163, "schema-sourcetableschema-z"]], "schema.SourceTableSchema.__init__": [[164, "schema-sourcetableschema-init"]], "schema.SourceTableSchema.available_coordinate_frames": [[165, "schema-sourcetableschema-available-coordinate-frames"]], "schema.SourceTableSchema.column_map": [[166, "schema-sourcetableschema-column-map"]], "schema.SourceTableSchema.construct": [[167, "schema-sourcetableschema-construct"]], "schema.SourceTableSchema.coordinate_columns": [[168, "schema-sourcetableschema-coordinate-columns"]], "schema.SourceTableSchema.coordinate_frame": [[169, "schema-sourcetableschema-coordinate-frame"]], "schema.SourceTableSchema.coordinate_system": [[170, "schema-sourcetableschema-coordinate-system"]], "schema.SourceTableSchema.copy": [[171, "schema-sourcetableschema-copy"]], "schema.SourceTableSchema.default_coord_system": [[172, "schema-sourcetableschema-default-coord-system"]], "schema.SourceTableSchema.dict": [[173, "schema-sourcetableschema-dict"]], "schema.SourceTableSchema.from_orm": [[174, "schema-sourcetableschema-from-orm"]], "schema.SourceTableSchema.from_table": [[175, "schema-sourcetableschema-from-table"]], "schema.SourceTableSchema.guess_coordinate_standard_error_struct": [[176, "schema-sourcetableschema-guess-coordinate-standard-error-struct"]], "schema.SourceTableSchema.json": [[177, "schema-sourcetableschema-json"]], "schema.SourceTableSchema.model_computed_fields": [[178, "schema-sourcetableschema-model-computed-fields"]], "schema.SourceTableSchema.model_config": [[179, "schema-sourcetableschema-model-config"]], "schema.SourceTableSchema.model_construct": [[180, "schema-sourcetableschema-model-construct"]], "schema.SourceTableSchema.model_copy": [[181, "schema-sourcetableschema-model-copy"]], "schema.SourceTableSchema.model_dump": [[182, "schema-sourcetableschema-model-dump"]], "schema.SourceTableSchema.model_dump_json": [[183, "schema-sourcetableschema-model-dump-json"]], "schema.SourceTableSchema.model_extra": [[184, "schema-sourcetableschema-model-extra"]], "schema.SourceTableSchema.model_fields": [[185, "schema-sourcetableschema-model-fields"]], "schema.SourceTableSchema.model_fields_set": [[186, "schema-sourcetableschema-model-fields-set"]], "schema.SourceTableSchema.model_json_schema": [[187, "schema-sourcetableschema-model-json-schema"]], "schema.SourceTableSchema.model_parametrized_name": [[188, "schema-sourcetableschema-model-parametrized-name"]], "schema.SourceTableSchema.model_post_init": [[189, "schema-sourcetableschema-model-post-init"]], "schema.SourceTableSchema.model_rebuild": [[190, "schema-sourcetableschema-model-rebuild"]], "schema.SourceTableSchema.model_validate": [[191, "schema-sourcetableschema-model-validate"]], "schema.SourceTableSchema.model_validate_json": [[192, "schema-sourcetableschema-model-validate-json"]], "schema.SourceTableSchema.model_validate_strings": [[193, "schema-sourcetableschema-model-validate-strings"]], "schema.SourceTableSchema.object_map": [[194, "schema-sourcetableschema-object-map"]], "schema.SourceTableSchema.object_type_separator": [[195, "schema-sourcetableschema-object-type-separator"]], "schema.SourceTableSchema.parse_file": [[196, "schema-sourcetableschema-parse-file"]], "schema.SourceTableSchema.parse_obj": [[197, "schema-sourcetableschema-parse-obj"]], "schema.SourceTableSchema.parse_raw": [[198, "schema-sourcetableschema-parse-raw"]], "schema.SourceTableSchema.read": [[199, "schema-sourcetableschema-read"]], "schema.SourceTableSchema.schema": [[200, "schema-sourcetableschema-schema"]], "schema.SourceTableSchema.schema_json": [[201, "schema-sourcetableschema-schema-json"]], "schema.SourceTableSchema.settings": [[202, "schema-sourcetableschema-settings"]], "schema.SourceTableSchema.update_forward_refs": [[203, "schema-sourcetableschema-update-forward-refs"]], "schema.SourceTableSchema.validate": [[204, "schema-sourcetableschema-validate"]], "schema.SourceTableSchema.write": [[205, "schema-sourcetableschema-write"]], "stats.gaussian_process": [[206, "module-stats.gaussian_process"]], "stats.gaussian_process.Haversine_RBF": [[207, "stats-gaussian-process-haversine-rbf"]], "stats.gaussian_process.Haversine_RBF.__init__": [[208, "stats-gaussian-process-haversine-rbf-init"]], "stats.gaussian_process.Haversine_RBF.anisotropic": [[209, "stats-gaussian-process-haversine-rbf-anisotropic"]], "stats.gaussian_process.Haversine_RBF.bounds": [[210, "stats-gaussian-process-haversine-rbf-bounds"]], "stats.gaussian_process.Haversine_RBF.clone_with_theta": [[211, "stats-gaussian-process-haversine-rbf-clone-with-theta"]], "stats.gaussian_process.Haversine_RBF.diag": [[212, "stats-gaussian-process-haversine-rbf-diag"]], "stats.gaussian_process.Haversine_RBF.get_params": [[213, "stats-gaussian-process-haversine-rbf-get-params"]], "stats.gaussian_process.Haversine_RBF.hyperparameter_length_scale": [[214, "stats-gaussian-process-haversine-rbf-hyperparameter-length-scale"]], "stats.gaussian_process.Haversine_RBF.hyperparameters": [[215, "stats-gaussian-process-haversine-rbf-hyperparameters"]], "stats.gaussian_process.Haversine_RBF.is_stationary": [[216, "stats-gaussian-process-haversine-rbf-is-stationary"]], "stats.gaussian_process.Haversine_RBF.n_dims": [[217, "stats-gaussian-process-haversine-rbf-n-dims"]], "stats.gaussian_process.Haversine_RBF.requires_vector_input": [[218, "stats-gaussian-process-haversine-rbf-requires-vector-input"]], "stats.gaussian_process.Haversine_RBF.set_params": [[219, "stats-gaussian-process-haversine-rbf-set-params"]], "stats.gaussian_process.Haversine_RBF.theta": [[220, "stats-gaussian-process-haversine-rbf-theta"]], "stats.map_regression": [[221, "module-stats.map_regression"]], "stats.map_regression.BayesianPoissonMapRegressor": [[222, "stats-map-regression-bayesianpoissonmapregressor"]], "stats.map_regression.BayesianPoissonMapRegressor.__init__": [[223, "stats-map-regression-bayesianpoissonmapregressor-init"]], "stats.map_regression.BayesianPoissonMapRegressor.build_map_MAP": [[224, "stats-map-regression-bayesianpoissonmapregressor-build-map-map"]], "stats.map_regression.KNNeighborMapRegressor": [[225, "stats-map-regression-knneighbormapregressor"]], "stats.map_regression.KNNeighborMapRegressor.__init__": [[226, "stats-map-regression-knneighbormapregressor-init"]], "stats.map_regression.KNNeighborMapRegressor.cross_validate": [[227, "stats-map-regression-knneighbormapregressor-cross-validate"]], "stats.map_regression.KNNeighborMapRegressor.default_training_fraction": [[228, "stats-map-regression-knneighbormapregressor-default-training-fraction"]], "stats.map_regression.KNNeighborMapRegressor.hyperparameters": [[229, "stats-map-regression-knneighbormapregressor-hyperparameters"]], "stats.map_regression.KNNeighborMapRegressor.regressor_parameters": [[230, "stats-map-regression-knneighbormapregressor-regressor-parameters"]], "stats.map_regression.KNNeighborMapRegressor.train_model": [[231, "stats-map-regression-knneighbormapregressor-train-model"]], "stats.map_regression.PoissonMapRegressor": [[232, "stats-map-regression-poissonmapregressor"]], "stats.map_regression.PoissonMapRegressor.__init__": [[233, "stats-map-regression-poissonmapregressor-init"]], "stats.map_regression.PoissonMapRegressor.cross_validate": [[234, "stats-map-regression-poissonmapregressor-cross-validate"]], "stats.map_regression.PoissonMapRegressor.default_training_fraction": [[235, "stats-map-regression-poissonmapregressor-default-training-fraction"]], "stats.map_regression.PoissonMapRegressor.hyperparameters": [[236, "stats-map-regression-poissonmapregressor-hyperparameters"]], "stats.map_regression.PoissonMapRegressor.regressor_parameters": [[237, "stats-map-regression-poissonmapregressor-regressor-parameters"]], "stats.map_regression.PoissonMapRegressor.train_model": [[238, "stats-map-regression-poissonmapregressor-train-model"]], "stats.map_regression.RNNeighborMapRegressor": [[239, "stats-map-regression-rnneighbormapregressor"]], "stats.map_regression.RNNeighborMapRegressor.__init__": [[240, "stats-map-regression-rnneighbormapregressor-init"]], "stats.map_regression.RNNeighborMapRegressor.cross_validate": [[241, "stats-map-regression-rnneighbormapregressor-cross-validate"]], "stats.map_regression.RNNeighborMapRegressor.default_training_fraction": [[242, "stats-map-regression-rnneighbormapregressor-default-training-fraction"]], "stats.map_regression.RNNeighborMapRegressor.hyperparameters": [[243, "stats-map-regression-rnneighbormapregressor-hyperparameters"]], "stats.map_regression.RNNeighborMapRegressor.regressor_parameters": [[244, "stats-map-regression-rnneighbormapregressor-regressor-parameters"]], "stats.map_regression.RNNeighborMapRegressor.train_model": [[245, "stats-map-regression-rnneighbormapregressor-train-model"]], "stats.map_regression.train_map_regressor": [[246, "stats-map-regression-train-map-regressor"]], "stats.utilities": [[247, "module-stats.utilities"]], "stats.utilities.uniform_sample_spherical": [[248, "stats-utilities-uniform-sample-spherical"]], "structures.databases": [[249, "module-structures.databases"]], "structures.databases.DBRegistry": [[250, "structures-databases-dbregistry"]], "structures.databases.DBRegistry.__init__": [[251, "structures-databases-dbregistry-init"]], "structures.databases.DBRegistry.add": [[252, "structures-databases-dbregistry-add"]], "structures.databases.DBRegistry.as_list": [[253, "structures-databases-dbregistry-as-list"]], "structures.databases.DBRegistry.clear": [[254, "structures-databases-dbregistry-clear"]], "structures.databases.DBRegistry.copy": [[255, "structures-databases-dbregistry-copy"]], "structures.databases.DBRegistry.fromkeys": [[256, "structures-databases-dbregistry-fromkeys"]], "structures.databases.DBRegistry.get": [[257, "structures-databases-dbregistry-get"]], "structures.databases.DBRegistry.items": [[258, "structures-databases-dbregistry-items"]], "structures.databases.DBRegistry.keys": [[259, "structures-databases-dbregistry-keys"]], "structures.databases.DBRegistry.locals": [[260, "structures-databases-dbregistry-locals"]], "structures.databases.DBRegistry.names": [[261, "structures-databases-dbregistry-names"]], "structures.databases.DBRegistry.pop": [[262, "structures-databases-dbregistry-pop"]], "structures.databases.DBRegistry.popitem": [[263, "structures-databases-dbregistry-popitem"]], "structures.databases.DBRegistry.remotes": [[264, "structures-databases-dbregistry-remotes"]], "structures.databases.DBRegistry.setdefault": [[265, "structures-databases-dbregistry-setdefault"]], "structures.databases.DBRegistry.update": [[266, "structures-databases-dbregistry-update"]], "structures.databases.DBRegistry.values": [[267, "structures-databases-dbregistry-values"]], "structures.databases.LocalDatabase": [[268, "structures-databases-localdatabase"]], "structures.databases.LocalDatabase.__init__": [[269, "structures-databases-localdatabase-init"]], "structures.databases.LocalDatabase.add_sources_to_poisson": [[270, "structures-databases-localdatabase-add-sources-to-poisson"]], "structures.databases.LocalDatabase.correct_query_output": [[271, "structures-databases-localdatabase-correct-query-output"]], "structures.databases.LocalDatabase.count": [[272, "structures-databases-localdatabase-count"]], "structures.databases.LocalDatabase.default_correct_query_output": [[273, "structures-databases-localdatabase-default-correct-query-output"]], "structures.databases.LocalDatabase.default_poisson_atlas_path": [[274, "structures-databases-localdatabase-default-poisson-atlas-path"]], "structures.databases.LocalDatabase.default_query_config": [[275, "structures-databases-localdatabase-default-query-config"]], "structures.databases.LocalDatabase.default_query_schema": [[276, "structures-databases-localdatabase-default-query-schema"]], "structures.databases.LocalDatabase.name": [[277, "structures-databases-localdatabase-name"]], "structures.databases.LocalDatabase.poisson_atlas": [[278, "structures-databases-localdatabase-poisson-atlas"]], "structures.databases.LocalDatabase.query_config": [[279, "structures-databases-localdatabase-query-config"]], "structures.databases.LocalDatabase.query_radius": [[280, "structures-databases-localdatabase-query-radius"]], "Dev-Note": [[280, null], [303, null], [320, null], [347, null], [365, null]], "structures.databases.LocalDatabase.query_schema": [[281, "structures-databases-localdatabase-query-schema"]], "structures.databases.LocalDatabase.random_sample_count": [[282, "structures-databases-localdatabase-random-sample-count"]], "structures.databases.LocalDatabase.register": [[283, "structures-databases-localdatabase-register"]], "structures.databases.LocalDatabase.source_match": [[284, "structures-databases-localdatabase-source-match"]], "structures.databases.LocalDatabase.source_match_memory": [[285, "structures-databases-localdatabase-source-match-memory"]], "structures.databases.NED": [[286, "structures-databases-ned"]], "structures.databases.NED.TIMEOUT": [[287, "structures-databases-ned-timeout"]], "structures.databases.NED.__init__": [[288, "structures-databases-ned-init"]], "structures.databases.NED.add_sources_to_poisson": [[289, "structures-databases-ned-add-sources-to-poisson"]], "structures.databases.NED.config_ned": [[290, "structures-databases-ned-config-ned"]], "structures.databases.NED.correct_query_output": [[291, "structures-databases-ned-correct-query-output"]], "structures.databases.NED.count": [[292, "structures-databases-ned-count"]], "structures.databases.NED.default_correct_query_output": [[293, "structures-databases-ned-default-correct-query-output"]], "structures.databases.NED.default_poisson_atlas_path": [[294, "structures-databases-ned-default-poisson-atlas-path"]], "structures.databases.NED.default_query_config": [[295, "structures-databases-ned-default-query-config"]], "structures.databases.NED.default_query_schema": [[296, "structures-databases-ned-default-query-schema"]], "structures.databases.NED.get_image_list": [[297, "structures-databases-ned-get-image-list"]], "structures.databases.NED.get_table": [[298, "structures-databases-ned-get-table"]], "structures.databases.NED.name": [[299, "structures-databases-ned-name"]], "structures.databases.NED.poisson_atlas": [[300, "structures-databases-ned-poisson-atlas"]], "structures.databases.NED.query_config": [[301, "structures-databases-ned-query-config"]], "structures.databases.NED.query_object": [[302, "structures-databases-ned-query-object"]], "structures.databases.NED.query_radius": [[303, "structures-databases-ned-query-radius"]], "structures.databases.NED.query_schema": [[304, "structures-databases-ned-query-schema"]], "structures.databases.NED.random_sample_count": [[305, "structures-databases-ned-random-sample-count"]], "structures.databases.NED.register": [[306, "structures-databases-ned-register"]], "structures.databases.NED.source_match": [[307, "structures-databases-ned-source-match"]], "structures.databases.RemoteDatabase": [[308, "structures-databases-remotedatabase"]], "structures.databases.RemoteDatabase.__init__": [[309, "structures-databases-remotedatabase-init"]], "structures.databases.RemoteDatabase.add_sources_to_poisson": [[310, "structures-databases-remotedatabase-add-sources-to-poisson"]], "structures.databases.RemoteDatabase.correct_query_output": [[311, "structures-databases-remotedatabase-correct-query-output"]], "structures.databases.RemoteDatabase.count": [[312, "structures-databases-remotedatabase-count"]], "structures.databases.RemoteDatabase.default_correct_query_output": [[313, "structures-databases-remotedatabase-default-correct-query-output"]], "structures.databases.RemoteDatabase.default_poisson_atlas_path": [[314, "structures-databases-remotedatabase-default-poisson-atlas-path"]], "structures.databases.RemoteDatabase.default_query_config": [[315, "structures-databases-remotedatabase-default-query-config"]], "structures.databases.RemoteDatabase.default_query_schema": [[316, "structures-databases-remotedatabase-default-query-schema"]], "structures.databases.RemoteDatabase.name": [[317, "structures-databases-remotedatabase-name"]], "structures.databases.RemoteDatabase.poisson_atlas": [[318, "structures-databases-remotedatabase-poisson-atlas"]], "structures.databases.RemoteDatabase.query_config": [[319, "structures-databases-remotedatabase-query-config"]], "structures.databases.RemoteDatabase.query_radius": [[320, "structures-databases-remotedatabase-query-radius"]], "structures.databases.RemoteDatabase.query_schema": [[321, "structures-databases-remotedatabase-query-schema"]], "structures.databases.RemoteDatabase.random_sample_count": [[322, "structures-databases-remotedatabase-random-sample-count"]], "structures.databases.RemoteDatabase.register": [[323, "structures-databases-remotedatabase-register"]], "structures.databases.RemoteDatabase.source_match": [[324, "structures-databases-remotedatabase-source-match"]], "structures.databases.SIMBAD": [[325, "structures-databases-simbad"]], "structures.databases.SIMBAD.EXTRA_COLUMNS": [[326, "structures-databases-simbad-extra-columns"]], "structures.databases.SIMBAD.REMOVED_COLUMNS": [[327, "structures-databases-simbad-removed-columns"]], "structures.databases.SIMBAD.ROW_LIMIT": [[328, "structures-databases-simbad-row-limit"]], "structures.databases.SIMBAD.TIMEOUT": [[329, "structures-databases-simbad-timeout"]], "structures.databases.SIMBAD.__init__": [[330, "structures-databases-simbad-init"]], "structures.databases.SIMBAD.add_sources_to_poisson": [[331, "structures-databases-simbad-add-sources-to-poisson"]], "structures.databases.SIMBAD.available_tables": [[332, "structures-databases-simbad-available-tables"]], "structures.databases.SIMBAD.clear_cache": [[333, "structures-databases-simbad-clear-cache"]], "structures.databases.SIMBAD.config_simbad": [[334, "structures-databases-simbad-config-simbad"]], "structures.databases.SIMBAD.correct_query_output": [[335, "structures-databases-simbad-correct-query-output"]], "structures.databases.SIMBAD.count": [[336, "structures-databases-simbad-count"]], "structures.databases.SIMBAD.default_correct_query_output": [[337, "structures-databases-simbad-default-correct-query-output"]], "structures.databases.SIMBAD.default_poisson_atlas_path": [[338, "structures-databases-simbad-default-poisson-atlas-path"]], "structures.databases.SIMBAD.default_query_config": [[339, "structures-databases-simbad-default-query-config"]], "structures.databases.SIMBAD.default_query_schema": [[340, "structures-databases-simbad-default-query-schema"]], "structures.databases.SIMBAD.list_columns": [[341, "structures-databases-simbad-list-columns"]], "structures.databases.SIMBAD.list_linked_tables": [[342, "structures-databases-simbad-list-linked-tables"]], "structures.databases.SIMBAD.name": [[343, "structures-databases-simbad-name"]], "structures.databases.SIMBAD.poisson_atlas": [[344, "structures-databases-simbad-poisson-atlas"]], "structures.databases.SIMBAD.query_config": [[345, "structures-databases-simbad-query-config"]], "structures.databases.SIMBAD.query_object": [[346, "structures-databases-simbad-query-object"]], "structures.databases.SIMBAD.query_radius": [[347, "structures-databases-simbad-query-radius"]], "structures.databases.SIMBAD.query_schema": [[348, "structures-databases-simbad-query-schema"]], "structures.databases.SIMBAD.query_tap": [[349, "structures-databases-simbad-query-tap"]], "structures.databases.SIMBAD.random_sample_count": [[350, "structures-databases-simbad-random-sample-count"]], "structures.databases.SIMBAD.register": [[351, "structures-databases-simbad-register"]], "structures.databases.SIMBAD.source_match": [[352, "structures-databases-simbad-source-match"]], "structures.databases.SourceDatabase": [[353, "structures-databases-sourcedatabase"]], "structures.databases.SourceDatabase.__init__": [[354, "structures-databases-sourcedatabase-init"]], "structures.databases.SourceDatabase.add_sources_to_poisson": [[355, "structures-databases-sourcedatabase-add-sources-to-poisson"]], "structures.databases.SourceDatabase.correct_query_output": [[356, "structures-databases-sourcedatabase-correct-query-output"]], "structures.databases.SourceDatabase.count": [[357, "structures-databases-sourcedatabase-count"]], "structures.databases.SourceDatabase.default_correct_query_output": [[358, "structures-databases-sourcedatabase-default-correct-query-output"]], "structures.databases.SourceDatabase.default_poisson_atlas_path": [[359, "structures-databases-sourcedatabase-default-poisson-atlas-path"]], "structures.databases.SourceDatabase.default_query_config": [[360, "structures-databases-sourcedatabase-default-query-config"]], "structures.databases.SourceDatabase.default_query_schema": [[361, "structures-databases-sourcedatabase-default-query-schema"]], "structures.databases.SourceDatabase.name": [[362, "structures-databases-sourcedatabase-name"]], "structures.databases.SourceDatabase.poisson_atlas": [[363, "structures-databases-sourcedatabase-poisson-atlas"]], "structures.databases.SourceDatabase.query_config": [[364, "structures-databases-sourcedatabase-query-config"]], "structures.databases.SourceDatabase.query_radius": [[365, "structures-databases-sourcedatabase-query-radius"]], "structures.databases.SourceDatabase.query_schema": [[366, "structures-databases-sourcedatabase-query-schema"]], "structures.databases.SourceDatabase.random_sample_count": [[367, "structures-databases-sourcedatabase-random-sample-count"]], "structures.databases.SourceDatabase.register": [[368, "structures-databases-sourcedatabase-register"]], "structures.databases.add_points_to_poisson_map": [[369, "structures-databases-add-points-to-poisson-map"]], "structures.databases.builtin_databases": [[370, "structures-databases-builtin-databases"]], "structures.databases.get_database": [[371, "structures-databases-get-database"]], "structures.databases.get_poisson_atlas": [[372, "structures-databases-get-poisson-atlas"]], "structures.databases.get_poisson_path": [[373, "structures-databases-get-poisson-path"]], "structures.map": [[374, "module-structures.map"]], "structures.map.Map": [[375, "structures-map-map"]], "structures.map.Map.__init__": [[376, "structures-map-map-init"]], "structures.map.Map.coordinate_frame": [[377, "structures-map-map-coordinate-frame"]], "structures.map.Map.data": [[378, "structures-map-map-data"]], "structures.map.Map.get_healpix_id": [[379, "structures-map-map-get-healpix-id"]], "structures.map.Map.pixel_positions": [[380, "structures-map-map-pixel-positions"]], "structures.map.Map.plot": [[381, "structures-map-map-plot"]], "structures.map.Map.transform_map_coordinates": [[382, "structures-map-map-transform-map-coordinates"]], "structures.map.MapAtlas": [[383, "structures-map-mapatlas"]], "structures.map.MapAtlas.__init__": [[384, "structures-map-mapatlas-init"]], "structures.map.MapAtlas.coordinate_frame": [[385, "structures-map-mapatlas-coordinate-frame"]], "structures.map.MapAtlas.generate": [[386, "structures-map-mapatlas-generate"]], "structures.map.MapAtlas.get_map": [[387, "structures-map-mapatlas-get-map"]], "structures.map.MapAtlas.has_maps": [[388, "structures-map-mapatlas-has-maps"]], "structures.map.MapAtlas.hdus": [[389, "structures-map-mapatlas-hdus"]], "structures.map.MapAtlas.map_names": [[390, "structures-map-mapatlas-map-names"]], "structures.map.MapAtlas.pixel_positions": [[391, "structures-map-mapatlas-pixel-positions"]], "structures.map.MapAtlas.remove": [[392, "structures-map-mapatlas-remove"]], "structures.map.MapAtlas.reshape_healpix": [[393, "structures-map-mapatlas-reshape-healpix"]], "structures.map.PoissonAtlas": [[394, "structures-map-poissonatlas"]], "structures.map.PoissonAtlas.COUNTS": [[395, "structures-map-poissonatlas-counts"]], "structures.map.PoissonAtlas.__init__": [[396, "structures-map-poissonatlas-init"]], "structures.map.PoissonAtlas.append_to_fits": [[397, "structures-map-poissonatlas-append-to-fits"]], "structures.map.PoissonAtlas.build_poisson_map": [[398, "structures-map-poissonatlas-build-poisson-map"]], "structures.map.PoissonAtlas.build_poisson_map_KNN": [[399, "structures-map-poissonatlas-build-poisson-map-knn"]], "structures.map.PoissonAtlas.build_poisson_map_MAP": [[400, "structures-map-poissonatlas-build-poisson-map-map"]], "structures.map.PoissonAtlas.build_poisson_map_RNN": [[401, "structures-map-poissonatlas-build-poisson-map-rnn"]], "structures.map.PoissonAtlas.build_poisson_map_regressor": [[402, "structures-map-poissonatlas-build-poisson-map-regressor"]], "structures.map.PoissonAtlas.build_poisson_maps": [[403, "structures-map-poissonatlas-build-poisson-maps"]], "structures.map.PoissonAtlas.coordinate_frame": [[404, "structures-map-poissonatlas-coordinate-frame"]], "structures.map.PoissonAtlas.generate": [[405, "structures-map-poissonatlas-generate"]], "structures.map.PoissonAtlas.get_map": [[406, "structures-map-poissonatlas-get-map"]], "structures.map.PoissonAtlas.get_points": [[407, "structures-map-poissonatlas-get-points"]], "structures.map.PoissonAtlas.has_maps": [[408, "structures-map-poissonatlas-has-maps"]], "structures.map.PoissonAtlas.hdus": [[409, "structures-map-poissonatlas-hdus"]], "structures.map.PoissonAtlas.map_names": [[410, "structures-map-poissonatlas-map-names"]], "structures.map.PoissonAtlas.pixel_positions": [[411, "structures-map-poissonatlas-pixel-positions"]], "structures.map.PoissonAtlas.remove": [[412, "structures-map-poissonatlas-remove"]], "structures.map.PoissonAtlas.reset": [[413, "structures-map-poissonatlas-reset"]], "structures.map.PoissonAtlas.reshape_healpix": [[414, "structures-map-poissonatlas-reshape-healpix"]], "structures.map.PoissonAtlas.sample_from_database": [[415, "structures-map-poissonatlas-sample-from-database"]], "structures.map.StatAtlas": [[416, "structures-map-statatlas"]], "structures.map.StatAtlas.COUNTS": [[417, "structures-map-statatlas-counts"]], "structures.map.StatAtlas.__init__": [[418, "structures-map-statatlas-init"]], "structures.map.StatAtlas.append_to_fits": [[419, "structures-map-statatlas-append-to-fits"]], "structures.map.StatAtlas.coordinate_frame": [[420, "structures-map-statatlas-coordinate-frame"]], "structures.map.StatAtlas.generate": [[421, "structures-map-statatlas-generate"]], "structures.map.StatAtlas.get_map": [[422, "structures-map-statatlas-get-map"]], "structures.map.StatAtlas.get_points": [[423, "structures-map-statatlas-get-points"]], "structures.map.StatAtlas.has_maps": [[424, "structures-map-statatlas-has-maps"]], "structures.map.StatAtlas.hdus": [[425, "structures-map-statatlas-hdus"]], "structures.map.StatAtlas.map_names": [[426, "structures-map-statatlas-map-names"]], "structures.map.StatAtlas.pixel_positions": [[427, "structures-map-statatlas-pixel-positions"]], "structures.map.StatAtlas.remove": [[428, "structures-map-statatlas-remove"]], "structures.map.StatAtlas.reset": [[429, "structures-map-statatlas-reset"]], "structures.map.StatAtlas.reshape_healpix": [[430, "structures-map-statatlas-reshape-healpix"]], "structures.map.StatAtlas.sample_from_database": [[431, "structures-map-statatlas-sample-from-database"]], "structures.reduction": [[432, "module-structures.reduction"]], "structures.reduction.AstrometricReductionProcess": [[433, "structures-reduction-astrometricreductionprocess"]], "structures.reduction.AstrometricReductionProcess.CATALOG_ERR": [[434, "structures-reduction-astrometricreductionprocess-catalog-err"]], "structures.reduction.AstrometricReductionProcess.DATABASE_ERR": [[435, "structures-reduction-astrometricreductionprocess-database-err"]], "structures.reduction.AstrometricReductionProcess.__init__": [[436, "structures-reduction-astrometricreductionprocess-init"]], "structures.reduction.AstrometricReductionProcess.construct": [[437, "structures-reduction-astrometricreductionprocess-construct"]], "structures.reduction.AstrometricReductionProcess.copy": [[438, "structures-reduction-astrometricreductionprocess-copy"]], "structures.reduction.AstrometricReductionProcess.cross_match_database": [[439, "structures-reduction-astrometricreductionprocess-cross-match-database"]], "structures.reduction.AstrometricReductionProcess.debug_flag": [[440, "structures-reduction-astrometricreductionprocess-debug-flag"]], "structures.reduction.AstrometricReductionProcess.dict": [[441, "structures-reduction-astrometricreductionprocess-dict"]], "structures.reduction.AstrometricReductionProcess.fill_unknown": [[442, "structures-reduction-astrometricreductionprocess-fill-unknown"]], "structures.reduction.AstrometricReductionProcess.from_orm": [[443, "structures-reduction-astrometricreductionprocess-from-orm"]], "structures.reduction.AstrometricReductionProcess.generate_operator": [[444, "structures-reduction-astrometricreductionprocess-generate-operator"]], "structures.reduction.AstrometricReductionProcess.generate_sql_query": [[445, "structures-reduction-astrometricreductionprocess-generate-sql-query"]], "structures.reduction.AstrometricReductionProcess.json": [[446, "structures-reduction-astrometricreductionprocess-json"]], "structures.reduction.AstrometricReductionProcess.model_computed_fields": [[447, "structures-reduction-astrometricreductionprocess-model-computed-fields"]], "structures.reduction.AstrometricReductionProcess.model_config": [[448, "structures-reduction-astrometricreductionprocess-model-config"]], "structures.reduction.AstrometricReductionProcess.model_construct": [[449, "structures-reduction-astrometricreductionprocess-model-construct"]], "structures.reduction.AstrometricReductionProcess.model_copy": [[450, "structures-reduction-astrometricreductionprocess-model-copy"]], "structures.reduction.AstrometricReductionProcess.model_dump": [[451, "structures-reduction-astrometricreductionprocess-model-dump"]], "structures.reduction.AstrometricReductionProcess.model_dump_json": [[452, "structures-reduction-astrometricreductionprocess-model-dump-json"]], "structures.reduction.AstrometricReductionProcess.model_extra": [[453, "structures-reduction-astrometricreductionprocess-model-extra"]], "structures.reduction.AstrometricReductionProcess.model_fields": [[454, "structures-reduction-astrometricreductionprocess-model-fields"]], "structures.reduction.AstrometricReductionProcess.model_fields_set": [[455, "structures-reduction-astrometricreductionprocess-model-fields-set"]], "structures.reduction.AstrometricReductionProcess.model_json_schema": [[456, "structures-reduction-astrometricreductionprocess-model-json-schema"]], "structures.reduction.AstrometricReductionProcess.model_parametrized_name": [[457, "structures-reduction-astrometricreductionprocess-model-parametrized-name"]], "structures.reduction.AstrometricReductionProcess.model_post_init": [[458, "structures-reduction-astrometricreductionprocess-model-post-init"]], "structures.reduction.AstrometricReductionProcess.model_rebuild": [[459, "structures-reduction-astrometricreductionprocess-model-rebuild"]], "structures.reduction.AstrometricReductionProcess.model_validate": [[460, "structures-reduction-astrometricreductionprocess-model-validate"]], "structures.reduction.AstrometricReductionProcess.model_validate_json": [[461, "structures-reduction-astrometricreductionprocess-model-validate-json"]], "structures.reduction.AstrometricReductionProcess.model_validate_strings": [[462, "structures-reduction-astrometricreductionprocess-model-validate-strings"]], "structures.reduction.AstrometricReductionProcess.obj_col": [[463, "structures-reduction-astrometricreductionprocess-obj-col"]], "structures.reduction.AstrometricReductionProcess.op_tmp_table": [[464, "structures-reduction-astrometricreductionprocess-op-tmp-table"]], "structures.reduction.AstrometricReductionProcess.parse_file": [[465, "structures-reduction-astrometricreductionprocess-parse-file"]], "structures.reduction.AstrometricReductionProcess.parse_obj": [[466, "structures-reduction-astrometricreductionprocess-parse-obj"]], "structures.reduction.AstrometricReductionProcess.parse_raw": [[467, "structures-reduction-astrometricreductionprocess-parse-raw"]], "structures.reduction.AstrometricReductionProcess.prior": [[468, "structures-reduction-astrometricreductionprocess-prior"]], "structures.reduction.AstrometricReductionProcess.proc_tmp_table": [[469, "structures-reduction-astrometricreductionprocess-proc-tmp-table"]], "structures.reduction.AstrometricReductionProcess.process_name": [[470, "structures-reduction-astrometricreductionprocess-process-name"]], "structures.reduction.AstrometricReductionProcess.schema": [[471, "structures-reduction-astrometricreductionprocess-schema"]], "structures.reduction.AstrometricReductionProcess.schema_json": [[472, "structures-reduction-astrometricreductionprocess-schema-json"]], "structures.reduction.AstrometricReductionProcess.score_col": [[473, "structures-reduction-astrometricreductionprocess-score-col"]], "structures.reduction.AstrometricReductionProcess.settings_flag": [[474, "structures-reduction-astrometricreductionprocess-settings-flag"]], "structures.reduction.AstrometricReductionProcess.settings_header": [[475, "structures-reduction-astrometricreductionprocess-settings-header"]], "structures.reduction.AstrometricReductionProcess.table": [[476, "structures-reduction-astrometricreductionprocess-table"]], "structures.reduction.AstrometricReductionProcess.update_forward_refs": [[477, "structures-reduction-astrometricreductionprocess-update-forward-refs"]], "structures.reduction.AstrometricReductionProcess.validate": [[478, "structures-reduction-astrometricreductionprocess-validate"]], "structures.reduction.ReductionProcess": [[479, "structures-reduction-reductionprocess"]], "structures.reduction.ReductionProcess.__init__": [[480, "structures-reduction-reductionprocess-init"]], "structures.reduction.ReductionProcess.construct": [[481, "structures-reduction-reductionprocess-construct"]], "structures.reduction.ReductionProcess.copy": [[482, "structures-reduction-reductionprocess-copy"]], "structures.reduction.ReductionProcess.cross_match_database": [[483, "structures-reduction-reductionprocess-cross-match-database"]], "structures.reduction.ReductionProcess.debug_flag": [[484, "structures-reduction-reductionprocess-debug-flag"]], "structures.reduction.ReductionProcess.dict": [[485, "structures-reduction-reductionprocess-dict"]], "structures.reduction.ReductionProcess.fill_unknown": [[486, "structures-reduction-reductionprocess-fill-unknown"]], "structures.reduction.ReductionProcess.from_orm": [[487, "structures-reduction-reductionprocess-from-orm"]], "structures.reduction.ReductionProcess.generate_operator": [[488, "structures-reduction-reductionprocess-generate-operator"]], "structures.reduction.ReductionProcess.generate_sql_query": [[489, "structures-reduction-reductionprocess-generate-sql-query"]], "structures.reduction.ReductionProcess.json": [[490, "structures-reduction-reductionprocess-json"]], "structures.reduction.ReductionProcess.model_computed_fields": [[491, "structures-reduction-reductionprocess-model-computed-fields"]], "structures.reduction.ReductionProcess.model_config": [[492, "structures-reduction-reductionprocess-model-config"]], "structures.reduction.ReductionProcess.model_construct": [[493, "structures-reduction-reductionprocess-model-construct"]], "structures.reduction.ReductionProcess.model_copy": [[494, "structures-reduction-reductionprocess-model-copy"]], "structures.reduction.ReductionProcess.model_dump": [[495, "structures-reduction-reductionprocess-model-dump"]], "structures.reduction.ReductionProcess.model_dump_json": [[496, "structures-reduction-reductionprocess-model-dump-json"]], "structures.reduction.ReductionProcess.model_extra": [[497, "structures-reduction-reductionprocess-model-extra"]], "structures.reduction.ReductionProcess.model_fields": [[498, "structures-reduction-reductionprocess-model-fields"]], "structures.reduction.ReductionProcess.model_fields_set": [[499, "structures-reduction-reductionprocess-model-fields-set"]], "structures.reduction.ReductionProcess.model_json_schema": [[500, "structures-reduction-reductionprocess-model-json-schema"]], "structures.reduction.ReductionProcess.model_parametrized_name": [[501, "structures-reduction-reductionprocess-model-parametrized-name"]], "structures.reduction.ReductionProcess.model_post_init": [[502, "structures-reduction-reductionprocess-model-post-init"]], "structures.reduction.ReductionProcess.model_rebuild": [[503, "structures-reduction-reductionprocess-model-rebuild"]], "structures.reduction.ReductionProcess.model_validate": [[504, "structures-reduction-reductionprocess-model-validate"]], "structures.reduction.ReductionProcess.model_validate_json": [[505, "structures-reduction-reductionprocess-model-validate-json"]], "structures.reduction.ReductionProcess.model_validate_strings": [[506, "structures-reduction-reductionprocess-model-validate-strings"]], "structures.reduction.ReductionProcess.obj_col": [[507, "structures-reduction-reductionprocess-obj-col"]], "structures.reduction.ReductionProcess.op_tmp_table": [[508, "structures-reduction-reductionprocess-op-tmp-table"]], "structures.reduction.ReductionProcess.parse_file": [[509, "structures-reduction-reductionprocess-parse-file"]], "structures.reduction.ReductionProcess.parse_obj": [[510, "structures-reduction-reductionprocess-parse-obj"]], "structures.reduction.ReductionProcess.parse_raw": [[511, "structures-reduction-reductionprocess-parse-raw"]], "structures.reduction.ReductionProcess.proc_tmp_table": [[512, "structures-reduction-reductionprocess-proc-tmp-table"]], "structures.reduction.ReductionProcess.process_name": [[513, "structures-reduction-reductionprocess-process-name"]], "structures.reduction.ReductionProcess.schema": [[514, "structures-reduction-reductionprocess-schema"]], "structures.reduction.ReductionProcess.schema_json": [[515, "structures-reduction-reductionprocess-schema-json"]], "structures.reduction.ReductionProcess.score_col": [[516, "structures-reduction-reductionprocess-score-col"]], "structures.reduction.ReductionProcess.settings_flag": [[517, "structures-reduction-reductionprocess-settings-flag"]], "structures.reduction.ReductionProcess.settings_header": [[518, "structures-reduction-reductionprocess-settings-header"]], "structures.reduction.ReductionProcess.table": [[519, "structures-reduction-reductionprocess-table"]], "structures.reduction.ReductionProcess.update_forward_refs": [[520, "structures-reduction-reductionprocess-update-forward-refs"]], "structures.reduction.ReductionProcess.validate": [[521, "structures-reduction-reductionprocess-validate"]], "structures.table": [[522, "module-structures.table"]], "structures.table.CoordinateColumn": [[523, "structures-table-coordinatecolumn"]], "structures.table.CoordinateColumn.__init__": [[524, "structures-table-coordinatecolumn-init"]], "structures.table.SchemaColumn": [[525, "structures-table-schemacolumn"]], "structures.table.SchemaColumn.__init__": [[526, "structures-table-schemacolumn-init"]], "structures.table.SourceTable": [[527, "structures-table-sourcetable"]], "structures.table.SourceTable.ColumnClass": [[528, "structures-table-sourcetable-columnclass"]], "structures.table.SourceTable.DEC": [[529, "structures-table-sourcetable-dec"]], "structures.table.SourceTable.DEC_ERR": [[530, "structures-table-sourcetable-dec-err"]], "structures.table.SourceTable.GAL_B": [[531, "structures-table-sourcetable-gal-b"]], "structures.table.SourceTable.GAL_B_ERR": [[532, "structures-table-sourcetable-gal-b-err"]], "structures.table.SourceTable.GAL_L": [[533, "structures-table-sourcetable-gal-l"]], "structures.table.SourceTable.GAL_L_ERR": [[534, "structures-table-sourcetable-gal-l-err"]], "structures.table.SourceTable.NAME": [[535, "structures-table-sourcetable-name"]], "structures.table.SourceTable.RA": [[536, "structures-table-sourcetable-ra"]], "structures.table.SourceTable.RA_ERR": [[537, "structures-table-sourcetable-ra-err"]], "structures.table.SourceTable.SEP": [[538, "structures-table-sourcetable-sep"]], "structures.table.SourceTable.TYPE": [[539, "structures-table-sourcetable-type"]], "structures.table.SourceTable.Z": [[540, "structures-table-sourcetable-z"]], "structures.table.SourceTable.__init__": [[541, "structures-table-sourcetable-init"]], "structures.table.SourceTable.add_column": [[542, "structures-table-sourcetable-add-column"]], "structures.table.SourceTable.add_columns": [[543, "structures-table-sourcetable-add-columns"]], "structures.table.SourceTable.add_index": [[544, "structures-table-sourcetable-add-index"]], "structures.table.SourceTable.add_row": [[545, "structures-table-sourcetable-add-row"]], "structures.table.SourceTable.append_to_fits": [[546, "structures-table-sourcetable-append-to-fits"]], "structures.table.SourceTable.append_to_sql": [[547, "structures-table-sourcetable-append-to-sql"]], "structures.table.SourceTable.argsort": [[548, "structures-table-sourcetable-argsort"]], "structures.table.SourceTable.as_array": [[549, "structures-table-sourcetable-as-array"]], "structures.table.SourceTable.colnames": [[550, "structures-table-sourcetable-colnames"]], "structures.table.SourceTable.convert_bytestring_to_unicode": [[551, "structures-table-sourcetable-convert-bytestring-to-unicode"]], "structures.table.SourceTable.convert_unicode_to_bytestring": [[552, "structures-table-sourcetable-convert-unicode-to-bytestring"]], "structures.table.SourceTable.copy": [[553, "structures-table-sourcetable-copy"]], "structures.table.SourceTable.count_types": [[554, "structures-table-sourcetable-count-types"]], "structures.table.SourceTable.dtype": [[555, "structures-table-sourcetable-dtype"]], "structures.table.SourceTable.field": [[556, "structures-table-sourcetable-field"]], "structures.table.SourceTable.filled": [[557, "structures-table-sourcetable-filled"]], "structures.table.SourceTable.from_pandas": [[558, "structures-table-sourcetable-from-pandas"]], "structures.table.SourceTable.generate_schema": [[559, "structures-table-sourcetable-generate-schema"]], "structures.table.SourceTable.get_coordinates": [[560, "structures-table-sourcetable-get-coordinates"]], "structures.table.SourceTable.get_formatted_types": [[561, "structures-table-sourcetable-get-formatted-types"]], "structures.table.SourceTable.group_by": [[562, "structures-table-sourcetable-group-by"]], "structures.table.SourceTable.groups": [[563, "structures-table-sourcetable-groups"]], "structures.table.SourceTable.has_masked_columns": [[564, "structures-table-sourcetable-has-masked-columns"]], "structures.table.SourceTable.has_masked_values": [[565, "structures-table-sourcetable-has-masked-values"]], "structures.table.SourceTable.has_mixin_columns": [[566, "structures-table-sourcetable-has-mixin-columns"]], "structures.table.SourceTable.iloc": [[567, "structures-table-sourcetable-iloc"]], "structures.table.SourceTable.index_column": [[568, "structures-table-sourcetable-index-column"]], "structures.table.SourceTable.index_mode": [[569, "structures-table-sourcetable-index-mode"]], "structures.table.SourceTable.indices": [[570, "structures-table-sourcetable-indices"]], "structures.table.SourceTable.info": [[571, "structures-table-sourcetable-info"]], "structures.table.SourceTable.insert_row": [[572, "structures-table-sourcetable-insert-row"]], "structures.table.SourceTable.items": [[573, "structures-table-sourcetable-items"]], "structures.table.SourceTable.itercols": [[574, "structures-table-sourcetable-itercols"]], "structures.table.SourceTable.iterrows": [[575, "structures-table-sourcetable-iterrows"]], "structures.table.SourceTable.keep_columns": [[576, "structures-table-sourcetable-keep-columns"]], "structures.table.SourceTable.keys": [[577, "structures-table-sourcetable-keys"]], "structures.table.SourceTable.lat": [[578, "structures-table-sourcetable-lat"]], "structures.table.SourceTable.loc": [[579, "structures-table-sourcetable-loc"]], "structures.table.SourceTable.loc_indices": [[580, "structures-table-sourcetable-loc-indices"]], "structures.table.SourceTable.lon": [[581, "structures-table-sourcetable-lon"]], "structures.table.SourceTable.mask": [[582, "structures-table-sourcetable-mask"]], "structures.table.SourceTable.masked": [[583, "structures-table-sourcetable-masked"]], "structures.table.SourceTable.meta": [[584, "structures-table-sourcetable-meta"]], "structures.table.SourceTable.more": [[585, "structures-table-sourcetable-more"]], "structures.table.SourceTable.pformat": [[586, "structures-table-sourcetable-pformat"]], "structures.table.SourceTable.pformat_all": [[587, "structures-table-sourcetable-pformat-all"]], "structures.table.SourceTable.pprint": [[588, "structures-table-sourcetable-pprint"]], "structures.table.SourceTable.pprint_all": [[589, "structures-table-sourcetable-pprint-all"]], "structures.table.SourceTable.pprint_exclude_names": [[590, "structures-table-sourcetable-pprint-exclude-names"]], "structures.table.SourceTable.pprint_include_names": [[591, "structures-table-sourcetable-pprint-include-names"]], "structures.table.SourceTable.read": [[592, "structures-table-sourcetable-read"]], "structures.table.SourceTable.remove_column": [[593, "structures-table-sourcetable-remove-column"]], "structures.table.SourceTable.remove_columns": [[594, "structures-table-sourcetable-remove-columns"]], "structures.table.SourceTable.remove_indices": [[595, "structures-table-sourcetable-remove-indices"]], "structures.table.SourceTable.remove_row": [[596, "structures-table-sourcetable-remove-row"]], "structures.table.SourceTable.remove_rows": [[597, "structures-table-sourcetable-remove-rows"]], "structures.table.SourceTable.rename_column": [[598, "structures-table-sourcetable-rename-column"]], "structures.table.SourceTable.rename_columns": [[599, "structures-table-sourcetable-rename-columns"]], "structures.table.SourceTable.replace_column": [[600, "structures-table-sourcetable-replace-column"]], "structures.table.SourceTable.reverse": [[601, "structures-table-sourcetable-reverse"]], "structures.table.SourceTable.round": [[602, "structures-table-sourcetable-round"]], "structures.table.SourceTable.schema": [[603, "structures-table-sourcetable-schema"]], "structures.table.SourceTable.setdefault": [[604, "structures-table-sourcetable-setdefault"]], "structures.table.SourceTable.show_in_browser": [[605, "structures-table-sourcetable-show-in-browser"]], "structures.table.SourceTable.show_in_notebook": [[606, "structures-table-sourcetable-show-in-notebook"]], "structures.table.SourceTable.sort": [[607, "structures-table-sourcetable-sort"]], "structures.table.SourceTable.to_pandas": [[608, "structures-table-sourcetable-to-pandas"]], "structures.table.SourceTable.update": [[609, "structures-table-sourcetable-update"]], "structures.table.SourceTable.values": [[610, "structures-table-sourcetable-values"]], "structures.table.SourceTable.values_equal": [[611, "structures-table-sourcetable-values-equal"]], "structures.table.SourceTable.write": [[612, "structures-table-sourcetable-write"]], "structures.table.correct_column_types": [[613, "structures-table-correct-column-types"]], "structures.table.format_table_types": [[614, "structures-table-format-table-types"]], "structures.table.load": [[615, "structures-table-load"]], "utilities.core": [[616, "module-utilities.core"]], "utilities.core.AttrDict": [[617, "utilities-core-attrdict"]], "utilities.core.AttrDict.__init__": [[618, "utilities-core-attrdict-init"]], "utilities.core.AttrDict.clean": [[619, "utilities-core-attrdict-clean"]], "utilities.core.AttrDict.clean_types": [[620, "utilities-core-attrdict-clean-types"]], "utilities.core.AttrDict.clear": [[621, "utilities-core-attrdict-clear"]], "utilities.core.AttrDict.copy": [[622, "utilities-core-attrdict-copy"]], "utilities.core.AttrDict.from_nested_dict": [[623, "utilities-core-attrdict-from-nested-dict"]], "utilities.core.AttrDict.fromkeys": [[624, "utilities-core-attrdict-fromkeys"]], "utilities.core.AttrDict.get": [[625, "utilities-core-attrdict-get"]], "utilities.core.AttrDict.items": [[626, "utilities-core-attrdict-items"]], "utilities.core.AttrDict.keys": [[627, "utilities-core-attrdict-keys"]], "utilities.core.AttrDict.pop": [[628, "utilities-core-attrdict-pop"]], "utilities.core.AttrDict.popitem": [[629, "utilities-core-attrdict-popitem"]], "utilities.core.AttrDict.setdefault": [[630, "utilities-core-attrdict-setdefault"]], "utilities.core.AttrDict.update": [[631, "utilities-core-attrdict-update"]], "utilities.core.AttrDict.values": [[632, "utilities-core-attrdict-values"]], "utilities.core.YAMLConfiguration": [[633, "utilities-core-yamlconfiguration"]], "utilities.core.YAMLConfiguration.__init__": [[634, "utilities-core-yamlconfiguration-init"]], "utilities.core.YAMLConfiguration.config": [[635, "utilities-core-yamlconfiguration-config"]], "utilities.core.YAMLConfiguration.load": [[636, "utilities-core-yamlconfiguration-load"]], "utilities.core.YAMLConfiguration.load_from_path": [[637, "utilities-core-yamlconfiguration-load-from-path"]], "utilities.core.YAMLConfiguration.reload": [[638, "utilities-core-yamlconfiguration-reload"]], "utilities.core.YAMLConfiguration.set_on_disk": [[639, "utilities-core-yamlconfiguration-set-on-disk"]], "utilities.core.YAMLConfiguration.set_param": [[640, "utilities-core-yamlconfiguration-set-param"]], "utilities.core.enforce_units": [[641, "utilities-core-enforce-units"]], "utilities.core.find_descriptors": [[642, "utilities-core-find-descriptors"]], "utilities.core.getFromDict": [[643, "utilities-core-getfromdict"]], "utilities.core.merge_dicts": [[644, "utilities-core-merge-dicts"]], "utilities.core.produce_dict_heading": [[645, "utilities-core-produce-dict-heading"]], "utilities.core.rgetattr": [[646, "utilities-core-rgetattr"]], "utilities.core.rsetattr": [[647, "utilities-core-rsetattr"]], "utilities.core.setInDict": [[648, "utilities-core-setindict"]], "utilities.logging": [[649, "module-utilities.logging"]], "utilities.plot": [[650, "module-utilities.plot"]], "utilities.plot.get_hips_image": [[651, "utilities-plot-get-hips-image"]], "utilities.plot.plot_healpix": [[652, "utilities-plot-plot-healpix"]], "utilities.plot.plot_hips": [[653, "utilities-plot-plot-hips"]], "utilities.plot.set_style": [[654, "utilities-plot-set-style"]], "utilities.sql": [[655, "module-utilities.sql"]], "utilities.sql.chunk_sql_query_operation": [[656, "utilities-sql-chunk-sql-query-operation"]], "utilities.sql.chunk_sql_table_operation": [[657, "utilities-sql-chunk-sql-table-operation"]], "utilities.text": [[658, "module-utilities.text"]], "utilities.text.get_package_version": [[659, "utilities-text-get-package-version"]], "utilities.text.print_cli_header": [[660, "utilities-text-print-cli-header"]], "utilities.text.print_version": [[661, "utilities-text-print-version"]], "utilities.types": [[662, "module-utilities.types"]], "utilities.types.ColumnMap": [[663, "utilities-types-columnmap"]], "utilities.types.ColumnMap.DEC": [[664, "utilities-types-columnmap-dec"]], "utilities.types.ColumnMap.DEC_ERR": [[665, "utilities-types-columnmap-dec-err"]], "utilities.types.ColumnMap.GAL_B": [[666, "utilities-types-columnmap-gal-b"]], "utilities.types.ColumnMap.GAL_B_ERR": [[667, "utilities-types-columnmap-gal-b-err"]], "utilities.types.ColumnMap.GAL_L": [[668, "utilities-types-columnmap-gal-l"]], "utilities.types.ColumnMap.GAL_L_ERR": [[669, "utilities-types-columnmap-gal-l-err"]], "utilities.types.ColumnMap.NAME": [[670, "utilities-types-columnmap-name"]], "utilities.types.ColumnMap.RA": [[671, "utilities-types-columnmap-ra"]], "utilities.types.ColumnMap.RA_ERR": [[672, "utilities-types-columnmap-ra-err"]], "utilities.types.ColumnMap.SEP": [[673, "utilities-types-columnmap-sep"]], "utilities.types.ColumnMap.TYPE": [[674, "utilities-types-columnmap-type"]], "utilities.types.ColumnMap.Z": [[675, "utilities-types-columnmap-z"]], "utilities.types.ColumnMap.__init__": [[676, "utilities-types-columnmap-init"]], "utilities.types.ColumnMap.construct": [[677, "utilities-types-columnmap-construct"]], "utilities.types.ColumnMap.copy": [[678, "utilities-types-columnmap-copy"]], "utilities.types.ColumnMap.dict": [[679, "utilities-types-columnmap-dict"]], "utilities.types.ColumnMap.from_orm": [[680, "utilities-types-columnmap-from-orm"]], "utilities.types.ColumnMap.json": [[681, "utilities-types-columnmap-json"]], "utilities.types.ColumnMap.model_computed_fields": [[682, "utilities-types-columnmap-model-computed-fields"]], "utilities.types.ColumnMap.model_config": [[683, "utilities-types-columnmap-model-config"]], "utilities.types.ColumnMap.model_construct": [[684, "utilities-types-columnmap-model-construct"]], "utilities.types.ColumnMap.model_copy": [[685, "utilities-types-columnmap-model-copy"]], "utilities.types.ColumnMap.model_dump": [[686, "utilities-types-columnmap-model-dump"]], "utilities.types.ColumnMap.model_dump_json": [[687, "utilities-types-columnmap-model-dump-json"]], "utilities.types.ColumnMap.model_extra": [[688, "utilities-types-columnmap-model-extra"]], "utilities.types.ColumnMap.model_fields": [[689, "utilities-types-columnmap-model-fields"]], "utilities.types.ColumnMap.model_fields_set": [[690, "utilities-types-columnmap-model-fields-set"]], "utilities.types.ColumnMap.model_json_schema": [[691, "utilities-types-columnmap-model-json-schema"]], "utilities.types.ColumnMap.model_parametrized_name": [[692, "utilities-types-columnmap-model-parametrized-name"]], "utilities.types.ColumnMap.model_post_init": [[693, "utilities-types-columnmap-model-post-init"]], "utilities.types.ColumnMap.model_rebuild": [[694, "utilities-types-columnmap-model-rebuild"]], "utilities.types.ColumnMap.model_validate": [[695, "utilities-types-columnmap-model-validate"]], "utilities.types.ColumnMap.model_validate_json": [[696, "utilities-types-columnmap-model-validate-json"]], "utilities.types.ColumnMap.model_validate_strings": [[697, "utilities-types-columnmap-model-validate-strings"]], "utilities.types.ColumnMap.parse_file": [[698, "utilities-types-columnmap-parse-file"]], "utilities.types.ColumnMap.parse_obj": [[699, "utilities-types-columnmap-parse-obj"]], "utilities.types.ColumnMap.parse_raw": [[700, "utilities-types-columnmap-parse-raw"]], "utilities.types.ColumnMap.schema": [[701, "utilities-types-columnmap-schema"]], "utilities.types.ColumnMap.schema_json": [[702, "utilities-types-columnmap-schema-json"]], "utilities.types.ColumnMap.search_inverse": [[703, "utilities-types-columnmap-search-inverse"]], "utilities.types.ColumnMap.update_forward_refs": [[704, "utilities-types-columnmap-update-forward-refs"]], "utilities.types.ColumnMap.validate": [[705, "utilities-types-columnmap-validate"]], "utilities.types.ColumnMap.validate_table_column_no_unit": [[706, "utilities-types-columnmap-validate-table-column-no-unit"]], "utilities.types.ColumnMap.validate_table_column_unit": [[707, "utilities-types-columnmap-validate-table-column-unit"]], "utilities.types.ColumnStdErrorSpecifier": [[708, "utilities-types-columnstderrorspecifier"]], "utilities.types.ColumnStdErrorSpecifier.__init__": [[709, "utilities-types-columnstderrorspecifier-init"]], "utilities.types.ColumnStdErrorSpecifier.base_column": [[710, "utilities-types-columnstderrorspecifier-base-column"]], "utilities.types.ColumnStdErrorSpecifier.construct": [[711, "utilities-types-columnstderrorspecifier-construct"]], "utilities.types.ColumnStdErrorSpecifier.copy": [[712, "utilities-types-columnstderrorspecifier-copy"]], "utilities.types.ColumnStdErrorSpecifier.dict": [[713, "utilities-types-columnstderrorspecifier-dict"]], "utilities.types.ColumnStdErrorSpecifier.error_column": [[714, "utilities-types-columnstderrorspecifier-error-column"]], "utilities.types.ColumnStdErrorSpecifier.error_convert_to_std": [[715, "utilities-types-columnstderrorspecifier-error-convert-to-std"]], "utilities.types.ColumnStdErrorSpecifier.error_value": [[716, "utilities-types-columnstderrorspecifier-error-value"]], "utilities.types.ColumnStdErrorSpecifier.from_orm": [[717, "utilities-types-columnstderrorspecifier-from-orm"]], "utilities.types.ColumnStdErrorSpecifier.json": [[718, "utilities-types-columnstderrorspecifier-json"]], "utilities.types.ColumnStdErrorSpecifier.model_computed_fields": [[719, "utilities-types-columnstderrorspecifier-model-computed-fields"]], "utilities.types.ColumnStdErrorSpecifier.model_config": [[720, "utilities-types-columnstderrorspecifier-model-config"]], "utilities.types.ColumnStdErrorSpecifier.model_construct": [[721, "utilities-types-columnstderrorspecifier-model-construct"]], "utilities.types.ColumnStdErrorSpecifier.model_copy": [[722, "utilities-types-columnstderrorspecifier-model-copy"]], "utilities.types.ColumnStdErrorSpecifier.model_dump": [[723, "utilities-types-columnstderrorspecifier-model-dump"]], "utilities.types.ColumnStdErrorSpecifier.model_dump_json": [[724, "utilities-types-columnstderrorspecifier-model-dump-json"]], "utilities.types.ColumnStdErrorSpecifier.model_extra": [[725, "utilities-types-columnstderrorspecifier-model-extra"]], "utilities.types.ColumnStdErrorSpecifier.model_fields": [[726, "utilities-types-columnstderrorspecifier-model-fields"]], "utilities.types.ColumnStdErrorSpecifier.model_fields_set": [[727, "utilities-types-columnstderrorspecifier-model-fields-set"]], "utilities.types.ColumnStdErrorSpecifier.model_json_schema": [[728, "utilities-types-columnstderrorspecifier-model-json-schema"]], "utilities.types.ColumnStdErrorSpecifier.model_parametrized_name": [[729, "utilities-types-columnstderrorspecifier-model-parametrized-name"]], "utilities.types.ColumnStdErrorSpecifier.model_post_init": [[730, "utilities-types-columnstderrorspecifier-model-post-init"]], "utilities.types.ColumnStdErrorSpecifier.model_rebuild": [[731, "utilities-types-columnstderrorspecifier-model-rebuild"]], "utilities.types.ColumnStdErrorSpecifier.model_validate": [[732, "utilities-types-columnstderrorspecifier-model-validate"]], "utilities.types.ColumnStdErrorSpecifier.model_validate_json": [[733, "utilities-types-columnstderrorspecifier-model-validate-json"]], "utilities.types.ColumnStdErrorSpecifier.model_validate_strings": [[734, "utilities-types-columnstderrorspecifier-model-validate-strings"]], "utilities.types.ColumnStdErrorSpecifier.parse_file": [[735, "utilities-types-columnstderrorspecifier-parse-file"]], "utilities.types.ColumnStdErrorSpecifier.parse_obj": [[736, "utilities-types-columnstderrorspecifier-parse-obj"]], "utilities.types.ColumnStdErrorSpecifier.parse_raw": [[737, "utilities-types-columnstderrorspecifier-parse-raw"]], "utilities.types.ColumnStdErrorSpecifier.schema": [[738, "utilities-types-columnstderrorspecifier-schema"]], "utilities.types.ColumnStdErrorSpecifier.schema_json": [[739, "utilities-types-columnstderrorspecifier-schema-json"]], "utilities.types.ColumnStdErrorSpecifier.update_forward_refs": [[740, "utilities-types-columnstderrorspecifier-update-forward-refs"]], "utilities.types.ColumnStdErrorSpecifier.validate": [[741, "utilities-types-columnstderrorspecifier-validate"]], "utilities.types.ColumnStdErrorSpecifier.validate_on_table": [[742, "utilities-types-columnstderrorspecifier-validate-on-table"]], "utilities.types.ColumnStdErrorSpecifier.validator": [[743, "utilities-types-columnstderrorspecifier-validator"]], "utilities.types.ICRSCoordinateStdErrorSpecifier": [[744, "utilities-types-icrscoordinatestderrorspecifier"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.__init__": [[745, "utilities-types-icrscoordinatestderrorspecifier-init"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.check_empty": [[746, "utilities-types-icrscoordinatestderrorspecifier-check-empty"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.construct": [[747, "utilities-types-icrscoordinatestderrorspecifier-construct"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.copy": [[748, "utilities-types-icrscoordinatestderrorspecifier-copy"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.dict": [[749, "utilities-types-icrscoordinatestderrorspecifier-dict"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.from_orm": [[750, "utilities-types-icrscoordinatestderrorspecifier-from-orm"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.json": [[751, "utilities-types-icrscoordinatestderrorspecifier-json"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.lat_error": [[752, "utilities-types-icrscoordinatestderrorspecifier-lat-error"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.lon_error": [[753, "utilities-types-icrscoordinatestderrorspecifier-lon-error"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.mode": [[754, "utilities-types-icrscoordinatestderrorspecifier-mode"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_computed_fields": [[755, "utilities-types-icrscoordinatestderrorspecifier-model-computed-fields"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_config": [[756, "utilities-types-icrscoordinatestderrorspecifier-model-config"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_construct": [[757, "utilities-types-icrscoordinatestderrorspecifier-model-construct"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_copy": [[758, "utilities-types-icrscoordinatestderrorspecifier-model-copy"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_dump": [[759, "utilities-types-icrscoordinatestderrorspecifier-model-dump"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_dump_json": [[760, "utilities-types-icrscoordinatestderrorspecifier-model-dump-json"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_extra": [[761, "utilities-types-icrscoordinatestderrorspecifier-model-extra"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_fields": [[762, "utilities-types-icrscoordinatestderrorspecifier-model-fields"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_fields_set": [[763, "utilities-types-icrscoordinatestderrorspecifier-model-fields-set"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_json_schema": [[764, "utilities-types-icrscoordinatestderrorspecifier-model-json-schema"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_parametrized_name": [[765, "utilities-types-icrscoordinatestderrorspecifier-model-parametrized-name"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_post_init": [[766, "utilities-types-icrscoordinatestderrorspecifier-model-post-init"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_rebuild": [[767, "utilities-types-icrscoordinatestderrorspecifier-model-rebuild"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate": [[768, "utilities-types-icrscoordinatestderrorspecifier-model-validate"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate_json": [[769, "utilities-types-icrscoordinatestderrorspecifier-model-validate-json"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate_strings": [[770, "utilities-types-icrscoordinatestderrorspecifier-model-validate-strings"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.parse_file": [[771, "utilities-types-icrscoordinatestderrorspecifier-parse-file"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.parse_obj": [[772, "utilities-types-icrscoordinatestderrorspecifier-parse-obj"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.parse_raw": [[773, "utilities-types-icrscoordinatestderrorspecifier-parse-raw"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.position_error": [[774, "utilities-types-icrscoordinatestderrorspecifier-position-error"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.schema": [[775, "utilities-types-icrscoordinatestderrorspecifier-schema"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.schema_json": [[776, "utilities-types-icrscoordinatestderrorspecifier-schema-json"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.update_forward_refs": [[777, "utilities-types-icrscoordinatestderrorspecifier-update-forward-refs"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.validate": [[778, "utilities-types-icrscoordinatestderrorspecifier-validate"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.validator": [[779, "utilities-types-icrscoordinatestderrorspecifier-validator"]], "utilities.types.Registry": [[780, "utilities-types-registry"]], "utilities.types.Registry.__init__": [[781, "utilities-types-registry-init"]], "utilities.types.Registry.add": [[782, "utilities-types-registry-add"]], "utilities.types.Registry.as_list": [[783, "utilities-types-registry-as-list"]], "utilities.types.Registry.clear": [[784, "utilities-types-registry-clear"]], "utilities.types.Registry.copy": [[785, "utilities-types-registry-copy"]], "utilities.types.Registry.fromkeys": [[786, "utilities-types-registry-fromkeys"]], "utilities.types.Registry.get": [[787, "utilities-types-registry-get"]], "utilities.types.Registry.items": [[788, "utilities-types-registry-items"]], "utilities.types.Registry.keys": [[789, "utilities-types-registry-keys"]], "utilities.types.Registry.pop": [[790, "utilities-types-registry-pop"]], "utilities.types.Registry.popitem": [[791, "utilities-types-registry-popitem"]], "utilities.types.Registry.setdefault": [[792, "utilities-types-registry-setdefault"]], "utilities.types.Registry.update": [[793, "utilities-types-registry-update"]], "utilities.types.Registry.values": [[794, "utilities-types-registry-values"]], "utilities.types.SourceTableSchemaSettings": [[795, "utilities-types-sourcetableschemasettings"]], "utilities.types.SourceTableSchemaSettings.__init__": [[796, "utilities-types-sourcetableschemasettings-init"]], "utilities.types.SourceTableSchemaSettings.construct": [[797, "utilities-types-sourcetableschemasettings-construct"]], "utilities.types.SourceTableSchemaSettings.copy": [[798, "utilities-types-sourcetableschemasettings-copy"]], "utilities.types.SourceTableSchemaSettings.default_coord_system": [[799, "utilities-types-sourcetableschemasettings-default-coord-system"]], "utilities.types.SourceTableSchemaSettings.dict": [[800, "utilities-types-sourcetableschemasettings-dict"]], "utilities.types.SourceTableSchemaSettings.from_orm": [[801, "utilities-types-sourcetableschemasettings-from-orm"]], "utilities.types.SourceTableSchemaSettings.json": [[802, "utilities-types-sourcetableschemasettings-json"]], "utilities.types.SourceTableSchemaSettings.model_computed_fields": [[803, "utilities-types-sourcetableschemasettings-model-computed-fields"]], "utilities.types.SourceTableSchemaSettings.model_config": [[804, "utilities-types-sourcetableschemasettings-model-config"]], "utilities.types.SourceTableSchemaSettings.model_construct": [[805, "utilities-types-sourcetableschemasettings-model-construct"]], "utilities.types.SourceTableSchemaSettings.model_copy": [[806, "utilities-types-sourcetableschemasettings-model-copy"]], "utilities.types.SourceTableSchemaSettings.model_dump": [[807, "utilities-types-sourcetableschemasettings-model-dump"]], "utilities.types.SourceTableSchemaSettings.model_dump_json": [[808, "utilities-types-sourcetableschemasettings-model-dump-json"]], "utilities.types.SourceTableSchemaSettings.model_extra": [[809, "utilities-types-sourcetableschemasettings-model-extra"]], "utilities.types.SourceTableSchemaSettings.model_fields": [[810, "utilities-types-sourcetableschemasettings-model-fields"]], "utilities.types.SourceTableSchemaSettings.model_fields_set": [[811, "utilities-types-sourcetableschemasettings-model-fields-set"]], "utilities.types.SourceTableSchemaSettings.model_json_schema": [[812, "utilities-types-sourcetableschemasettings-model-json-schema"]], "utilities.types.SourceTableSchemaSettings.model_parametrized_name": [[813, "utilities-types-sourcetableschemasettings-model-parametrized-name"]], "utilities.types.SourceTableSchemaSettings.model_post_init": [[814, "utilities-types-sourcetableschemasettings-model-post-init"]], "utilities.types.SourceTableSchemaSettings.model_rebuild": [[815, "utilities-types-sourcetableschemasettings-model-rebuild"]], "utilities.types.SourceTableSchemaSettings.model_validate": [[816, "utilities-types-sourcetableschemasettings-model-validate"]], "utilities.types.SourceTableSchemaSettings.model_validate_json": [[817, "utilities-types-sourcetableschemasettings-model-validate-json"]], "utilities.types.SourceTableSchemaSettings.model_validate_strings": [[818, "utilities-types-sourcetableschemasettings-model-validate-strings"]], "utilities.types.SourceTableSchemaSettings.object_type_separator": [[819, "utilities-types-sourcetableschemasettings-object-type-separator"]], "utilities.types.SourceTableSchemaSettings.parse_file": [[820, "utilities-types-sourcetableschemasettings-parse-file"]], "utilities.types.SourceTableSchemaSettings.parse_obj": [[821, "utilities-types-sourcetableschemasettings-parse-obj"]], "utilities.types.SourceTableSchemaSettings.parse_raw": [[822, "utilities-types-sourcetableschemasettings-parse-raw"]], "utilities.types.SourceTableSchemaSettings.schema": [[823, "utilities-types-sourcetableschemasettings-schema"]], "utilities.types.SourceTableSchemaSettings.schema_json": [[824, "utilities-types-sourcetableschemasettings-schema-json"]], "utilities.types.SourceTableSchemaSettings.update_forward_refs": [[825, "utilities-types-sourcetableschemasettings-update-forward-refs"]], "utilities.types.SourceTableSchemaSettings.validate": [[826, "utilities-types-sourcetableschemasettings-validate"]], "utilities.types.TableColumn": [[827, "utilities-types-tablecolumn"]], "utilities.types.TableColumn.__init__": [[828, "utilities-types-tablecolumn-init"]], "utilities.types.TableColumn.construct": [[829, "utilities-types-tablecolumn-construct"]], "utilities.types.TableColumn.copy": [[830, "utilities-types-tablecolumn-copy"]], "utilities.types.TableColumn.dict": [[831, "utilities-types-tablecolumn-dict"]], "utilities.types.TableColumn.from_orm": [[832, "utilities-types-tablecolumn-from-orm"]], "utilities.types.TableColumn.json": [[833, "utilities-types-tablecolumn-json"]], "utilities.types.TableColumn.model_computed_fields": [[834, "utilities-types-tablecolumn-model-computed-fields"]], "utilities.types.TableColumn.model_config": [[835, "utilities-types-tablecolumn-model-config"]], "utilities.types.TableColumn.model_construct": [[836, "utilities-types-tablecolumn-model-construct"]], "utilities.types.TableColumn.model_copy": [[837, "utilities-types-tablecolumn-model-copy"]], "utilities.types.TableColumn.model_dump": [[838, "utilities-types-tablecolumn-model-dump"]], "utilities.types.TableColumn.model_dump_json": [[839, "utilities-types-tablecolumn-model-dump-json"]], "utilities.types.TableColumn.model_extra": [[840, "utilities-types-tablecolumn-model-extra"]], "utilities.types.TableColumn.model_fields": [[841, "utilities-types-tablecolumn-model-fields"]], "utilities.types.TableColumn.model_fields_set": [[842, "utilities-types-tablecolumn-model-fields-set"]], "utilities.types.TableColumn.model_json_schema": [[843, "utilities-types-tablecolumn-model-json-schema"]], "utilities.types.TableColumn.model_parametrized_name": [[844, "utilities-types-tablecolumn-model-parametrized-name"]], "utilities.types.TableColumn.model_post_init": [[845, "utilities-types-tablecolumn-model-post-init"]], "utilities.types.TableColumn.model_rebuild": [[846, "utilities-types-tablecolumn-model-rebuild"]], "utilities.types.TableColumn.model_validate": [[847, "utilities-types-tablecolumn-model-validate"]], "utilities.types.TableColumn.model_validate_json": [[848, "utilities-types-tablecolumn-model-validate-json"]], "utilities.types.TableColumn.model_validate_strings": [[849, "utilities-types-tablecolumn-model-validate-strings"]], "utilities.types.TableColumn.name": [[850, "utilities-types-tablecolumn-name"]], "utilities.types.TableColumn.parse_file": [[851, "utilities-types-tablecolumn-parse-file"]], "utilities.types.TableColumn.parse_obj": [[852, "utilities-types-tablecolumn-parse-obj"]], "utilities.types.TableColumn.parse_raw": [[853, "utilities-types-tablecolumn-parse-raw"]], "utilities.types.TableColumn.schema": [[854, "utilities-types-tablecolumn-schema"]], "utilities.types.TableColumn.schema_json": [[855, "utilities-types-tablecolumn-schema-json"]], "utilities.types.TableColumn.unit": [[856, "utilities-types-tablecolumn-unit"]], "utilities.types.TableColumn.update_forward_refs": [[857, "utilities-types-tablecolumn-update-forward-refs"]], "utilities.types.TableColumn.validate": [[858, "utilities-types-tablecolumn-validate"]], "utilities.types.construct_template": [[859, "utilities-types-construct-template"]], "utilities.types.convert_np_type_to_sql": [[860, "utilities-types-convert-np-type-to-sql"]], "API": [[861, "api"]], "Core Modules": [[861, "core-modules"]], "Statistics": [[861, "statistics"], [872, "statistics"]], "Other": [[861, "other"]], "Data Structures": [[862, "data-structures"]], "DATABASES": [[862, "databases"]], "SCHEMAS": [[862, "schemas"]], "Sky Collection Schema": [[862, "sky-collection-schema"]], "Formatting": [[862, "formatting"]], "Examples": [[863, "examples"]], "Cross Referencing Overview": [[864, "Cross-Referencing-Overview"]], "Contents": [[864, "Contents"], [865, "Contents"], [866, "Contents"]], "Loading Data": [[864, "Loading-Data"]], "Schemas": [[864, "Schemas"]], "Cross Matching": [[864, "Cross-Matching"], [873, "cross-matching"], [874, "cross-matching"]], "Cross Matching Against Databases": [[864, "Cross-Matching-Against-Databases"]], "Cross Match Databases": [[864, "Cross-Match-Databases"]], "Reduction": [[864, "Reduction"]], "Astrometry Reduction": [[864, "Astrometry-Reduction"]], "Poisson Mapping": [[865, "Poisson-Mapping"]], "Introduction": [[865, "Introduction"]], "Representing Poisson Maps": [[865, "Representing-Poisson-Maps"]], "Poisson Atlases": [[865, "Poisson-Atlases"], [874, "poisson-atlases"]], "The Counts Table": [[865, "The-Counts-Table"]], "Map HDUs": [[865, "Map-HDUs"]], "Poisson Maps": [[865, "Poisson-Maps"]], "Constructing Poisson Maps": [[865, "Constructing-Poisson-Maps"]], "Density Estimation": [[865, "Density-Estimation"]], "Maximum A Posteriori Regression": [[865, "Maximum-A-Posteriori-Regression"]], "K-Nearest Neighbor Regression": [[865, "K-Nearest-Neighbor-Regression"]], "R-Nearest Neighbor Regression": [[865, "R-Nearest-Neighbor-Regression"]], "Using Databases in PyXMIP": [[866, "Using-Databases-in-PyXMIP"]], "Accessing Databases": [[866, "Accessing-Databases"]], "Local Databases": [[866, "Local-Databases"], [874, "local-databases"], [874, "id2"]], "Basic Properties of Local Databases": [[866, "Basic-Properties-of-Local-Databases"]], "Remote Databases": [[866, "Remote-Databases"], [874, "remote-databases"], [874, "id3"]], "Beyond Simple Queries": [[866, "Beyond-Simple-Queries"]], "What is a database?": [[866, "What-is-a-database?"]], "pyXMIP Quickstart Guide": [[867, "pyxmip-quickstart-guide"]], "Installation + Setup": [[867, "installation-setup"]], "Critical Components": [[867, "critical-components"]], "Features": [[868, "features"]], "Resources": [[868, "resources"]], "Pages": [[868, "pages"]], "Configuring pyXMIP": [[869, "configuring-pyxmip"]], "Installing pyXMIP": [[870, "installing-pyxmip"]], "Installing From PyPy": [[870, "installing-from-pypy"]], "Installing From Source": [[870, "installing-from-source"]], "Overview": [[871, "overview"], [878, "overview"]], "What Can I Do With pyXMIP?": [[871, "what-can-i-do-with-pyxmip"]], "How Does it Work?": [[871, "how-does-it-work"]], "Reference": [[872, "reference"]], "Getting Started": [[872, "getting-started"]], "Basic Usage": [[872, "basic-usage"]], "Visualizing Results": [[872, "visualizing-results"]], "Advanced Usage": [[872, "advanced-usage"]], "Expanding Available Datatypes": [[872, "expanding-available-datatypes"]], "Backend": [[872, "backend"]], "Cross Referencing": [[873, "cross-referencing"]], "What Exactly is Cross Matching?": [[873, "what-exactly-is-cross-matching"]], "Match Tables": [[873, "match-tables"]], "Exploring Cross Matching Outputs": [[873, "exploring-cross-matching-outputs"]], "Cross Match Database": [[873, "cross-match-database"]], "What is a CrossMatchDatabase?": [[873, "what-is-a-crossmatchdatabase"]], "Making CrossMatchingDatabase Instances": [[873, "making-crossmatchingdatabase-instances"]], "Database Alterations": [[873, "database-alterations"]], "The META table": [[873, "the-meta-table"]], "Interacting with Raw Data": [[873, "interacting-with-raw-data"]], "Pull Matches from Tables": [[873, "pull-matches-from-tables"]], "Plot A Match": [[873, "plot-a-match"]], "Match Reduction": [[873, "match-reduction"]], "Mathematical Overview": [[873, "mathematical-overview"]], "Sub-Process Overview": [[873, "sub-process-overview"]], "Further Information": [[873, "further-information"]], "Databases": [[874, "databases"]], "Databases At A Glance": [[874, "databases-at-a-glance"]], "Querying Databases": [[874, "querying-databases"]], "definition": [[874, null]], "Types of Databases": [[874, "types-of-databases"]], "Differences to Know": [[874, "differences-to-know"]], "Creating Custom Databases": [[874, "creating-custom-databases"]], "Developer Information": [[874, "developer-information"]], "Query Schema": [[874, "query-schema"]], "Query Configurations": [[874, "query-configurations"]], "Output Standardization": [[874, "output-standardization"]], "Logging": [[875, "logging"]], "Creating Plots": [[876, "creating-plots"]], "PSF Modeling": [[877, "psf-modeling"]], "Astrometric Reduction Process": [[878, "astrometric-reduction-process"]], "Mathematics Basis": [[878, "mathematics-basis"]], "Key Assumptions": [[878, null]], "Usage": [[878, "usage"], [878, "id2"]], "Setup and Parameters": [[878, "setup-and-parameters"], [878, "id3"]], "Modeling Astrometric Uncertainty": [[878, "modeling-astrometric-uncertainty"]], "Astrometry Modes": [[878, "astrometry-modes"]], "Selecting a Prior": [[878, "selecting-a-prior"]], "Initializing": [[878, "initializing"]], "Running the Reduction": [[878, "running-the-reduction"]], "Mathematics": [[878, "mathematics"]], "Astrometry": [[878, "astrometry"]], "Normally Distributed Error": [[878, "normally-distributed-error"]], "From Bayes Factor to Posteriori Estimates": [[878, "from-bayes-factor-to-posteriori-estimates"]], "Self-Consistent Priors By Iterative Methods": [[878, "self-consistent-priors-by-iterative-methods"]], "References": [[878, "references"]], "Writing New Reduction Processes": [[879, "writing-new-reduction-processes"]], "What is a Reduction Process?": [[879, "what-is-a-reduction-process"]], "Writing Reductions": [[879, "writing-reductions"]], "Basic Structure": [[879, "basic-structure"]], "Reduction Parameters": [[879, "reduction-parameters"]], "Object Type Reduction": [[880, "object-type-reduction"]], "Modeling Astronomical Objects": [[880, "modeling-astronomical-objects"]], "Modeling Instruments": [[880, "modeling-instruments"]], "Reduction Schema Writing": [[882, "reduction-schema-writing"]], "pyXMIP Schema Classes": [[883, "pyxmip-schema-classes"]], "What is a Schema": [[883, "what-is-a-schema"]], "Writing Schema": [[883, "writing-schema"]], "Schema Types": [[883, "schema-types"]], "Interaction With Schema": [[883, "interaction-with-schema"]], "Automated Schema": [[883, "automated-schema"]], "Loading Source Data": [[884, "loading-source-data"]], "Loading a Catalog from Disk": [[884, "loading-a-catalog-from-disk"]], "Working With Catalogs": [[884, "working-with-catalogs"]], "Table Schema": [[884, "table-schema"]]}, "indexentries": {"cross_reference": [[0, "module-cross_reference"]], "module": [[0, "module-cross_reference"], [32, "module-schema"], [206, "module-stats.gaussian_process"], [221, "module-stats.map_regression"], [247, "module-stats.utilities"], [249, "module-structures.databases"], [374, "module-structures.map"], [432, "module-structures.reduction"], [522, "module-structures.table"], [616, "module-utilities.core"], [649, "module-utilities.logging"], [650, "module-utilities.plot"], [655, "module-utilities.sql"], [658, "module-utilities.text"], [662, "module-utilities.types"]], "crossmatchdatabase (class in cross_reference)": [[1, "cross_reference.CrossMatchDatabase"]], "__init__() (cross_reference.crossmatchdatabase method)": [[2, "cross_reference.CrossMatchDatabase.__init__"]], "add_catalog() (cross_reference.crossmatchdatabase method)": [[3, "cross_reference.CrossMatchDatabase.add_catalog"]], "add_catalog_from_table() (cross_reference.crossmatchdatabase method)": [[4, "cross_reference.CrossMatchDatabase.add_catalog_from_table"]], "build_meta_table() (cross_reference.crossmatchdatabase method)": [[5, "cross_reference.CrossMatchDatabase.build_meta_table"]], "check_meta() (cross_reference.crossmatchdatabase method)": [[6, "cross_reference.CrossMatchDatabase.check_meta"]], "chunk_db_operation() (cross_reference.crossmatchdatabase static method)": [[7, "cross_reference.CrossMatchDatabase.chunk_db_operation"]], "chunk_db_table_operation() (cross_reference.crossmatchdatabase static method)": [[8, "cross_reference.CrossMatchDatabase.chunk_db_table_operation"]], "connect() (cross_reference.crossmatchdatabase method)": [[9, "cross_reference.CrossMatchDatabase.connect"]], "correct_object_types() (cross_reference.crossmatchdatabase method)": [[10, "cross_reference.CrossMatchDatabase.correct_object_types"]], "cross_match() (cross_reference.crossmatchdatabase method)": [[11, "cross_reference.CrossMatchDatabase.cross_match"]], "drop_table() (cross_reference.crossmatchdatabase method)": [[12, "cross_reference.CrossMatchDatabase.drop_table"]], "from_file() (cross_reference.crossmatchdatabase class method)": [[13, "cross_reference.CrossMatchDatabase.from_file"]], "get_database() (cross_reference.crossmatchdatabase method)": [[14, "cross_reference.CrossMatchDatabase.get_database"]], "has_catalog (cross_reference.crossmatchdatabase property)": [[15, "cross_reference.CrossMatchDatabase.has_catalog"]], "match_tables (cross_reference.crossmatchdatabase property)": [[16, "cross_reference.CrossMatchDatabase.match_tables"]], "meta (cross_reference.crossmatchdatabase property)": [[17, "cross_reference.CrossMatchDatabase.meta"]], "meta_add() (cross_reference.crossmatchdatabase method)": [[18, "cross_reference.CrossMatchDatabase.meta_add"]], "meta_remove() (cross_reference.crossmatchdatabase method)": [[19, "cross_reference.CrossMatchDatabase.meta_remove"]], "meta_reset() (cross_reference.crossmatchdatabase method)": [[20, "cross_reference.CrossMatchDatabase.meta_reset"]], "overwrite_schema() (cross_reference.crossmatchdatabase method)": [[21, "cross_reference.CrossMatchDatabase.overwrite_schema"]], "path (cross_reference.crossmatchdatabase attribute)": [[22, "cross_reference.CrossMatchDatabase.path"]], "plot_matches() (cross_reference.crossmatchdatabase method)": [[23, "cross_reference.CrossMatchDatabase.plot_matches"]], "query() (cross_reference.crossmatchdatabase method)": [[24, "cross_reference.CrossMatchDatabase.query"]], "run_reduction() (cross_reference.crossmatchdatabase method)": [[25, "cross_reference.CrossMatchDatabase.run_reduction"]], "schema (cross_reference.crossmatchdatabase property)": [[26, "cross_reference.CrossMatchDatabase.schema"]], "score_matches() (cross_reference.crossmatchdatabase method)": [[27, "cross_reference.CrossMatchDatabase.score_matches"]], "standardize_coordinates() (cross_reference.crossmatchdatabase method)": [[28, "cross_reference.CrossMatchDatabase.standardize_coordinates"]], "tables (cross_reference.crossmatchdatabase property)": [[29, "cross_reference.CrossMatchDatabase.tables"]], "cross_match() (in module cross_reference)": [[30, "cross_reference.cross_match"]], "cross_match_table() (in module cross_reference)": [[31, "cross_reference.cross_match_table"]], "schema": [[32, "module-schema"]], "cmdschema (class in schema)": [[33, "schema.CMDSchema"]], "__init__() (schema.cmdschema method)": [[34, "schema.CMDSchema.__init__"]], "catalog_schema (schema.cmdschema attribute)": [[35, "schema.CMDSchema.catalog_schema"]], "construct() (schema.cmdschema class method)": [[36, "schema.CMDSchema.construct"]], "copy() (schema.cmdschema method)": [[37, "schema.CMDSchema.copy"]], "dict() (schema.cmdschema method)": [[38, "schema.CMDSchema.dict"]], "from_orm() (schema.cmdschema class method)": [[39, "schema.CMDSchema.from_orm"]], "json() (schema.cmdschema method)": [[40, "schema.CMDSchema.json"]], "model_computed_fields (schema.cmdschema attribute)": [[41, "schema.CMDSchema.model_computed_fields"]], "model_config (schema.cmdschema attribute)": [[42, "schema.CMDSchema.model_config"]], "model_construct() (schema.cmdschema class method)": [[43, "schema.CMDSchema.model_construct"]], "model_copy() (schema.cmdschema method)": [[44, "schema.CMDSchema.model_copy"]], "model_dump() (schema.cmdschema method)": [[45, "schema.CMDSchema.model_dump"]], "model_dump_json() (schema.cmdschema method)": [[46, "schema.CMDSchema.model_dump_json"]], "model_extra (schema.cmdschema property)": [[47, "schema.CMDSchema.model_extra"]], "model_fields (schema.cmdschema attribute)": [[48, "schema.CMDSchema.model_fields"]], "model_fields_set (schema.cmdschema property)": [[49, "schema.CMDSchema.model_fields_set"]], "model_json_schema() (schema.cmdschema class method)": [[50, "schema.CMDSchema.model_json_schema"]], "model_parametrized_name() (schema.cmdschema class method)": [[51, "schema.CMDSchema.model_parametrized_name"]], "model_post_init() (schema.cmdschema method)": [[52, "schema.CMDSchema.model_post_init"]], "model_rebuild() (schema.cmdschema class method)": [[53, "schema.CMDSchema.model_rebuild"]], "model_validate() (schema.cmdschema class method)": [[54, "schema.CMDSchema.model_validate"]], "model_validate_json() (schema.cmdschema class method)": [[55, "schema.CMDSchema.model_validate_json"]], "model_validate_strings() (schema.cmdschema class method)": [[56, "schema.CMDSchema.model_validate_strings"]], "parse_file() (schema.cmdschema class method)": [[57, "schema.CMDSchema.parse_file"]], "parse_obj() (schema.cmdschema class method)": [[58, "schema.CMDSchema.parse_obj"]], "parse_raw() (schema.cmdschema class method)": [[59, "schema.CMDSchema.parse_raw"]], "read() (schema.cmdschema class method)": [[60, "schema.CMDSchema.read"]], "schema() (schema.cmdschema class method)": [[61, "schema.CMDSchema.schema"]], "schema_json() (schema.cmdschema class method)": [[62, "schema.CMDSchema.schema_json"]], "table_schema (schema.cmdschema attribute)": [[63, "schema.CMDSchema.table_schema"]], "update_forward_refs() (schema.cmdschema class method)": [[64, "schema.CMDSchema.update_forward_refs"]], "validate() (schema.cmdschema class method)": [[65, "schema.CMDSchema.validate"]], "write() (schema.cmdschema method)": [[66, "schema.CMDSchema.write"]], "columnentry (class in schema)": [[67, "schema.ColumnEntry"]], "__init__() (schema.columnentry method)": [[68, "schema.ColumnEntry.__init__"]], "reductionschema (class in schema)": [[69, "schema.ReductionSchema"]], "__init__() (schema.reductionschema method)": [[70, "schema.ReductionSchema.__init__"]], "construct() (schema.reductionschema class method)": [[71, "schema.ReductionSchema.construct"]], "copy() (schema.reductionschema method)": [[72, "schema.ReductionSchema.copy"]], "dict() (schema.reductionschema method)": [[73, "schema.ReductionSchema.dict"]], "from_orm() (schema.reductionschema class method)": [[74, "schema.ReductionSchema.from_orm"]], "json() (schema.reductionschema method)": [[75, "schema.ReductionSchema.json"]], "model_computed_fields (schema.reductionschema attribute)": [[76, "schema.ReductionSchema.model_computed_fields"]], "model_config (schema.reductionschema attribute)": [[77, "schema.ReductionSchema.model_config"]], "model_construct() (schema.reductionschema class method)": [[78, "schema.ReductionSchema.model_construct"]], "model_copy() (schema.reductionschema method)": [[79, "schema.ReductionSchema.model_copy"]], "model_dump() (schema.reductionschema method)": [[80, "schema.ReductionSchema.model_dump"]], "model_dump_json() (schema.reductionschema method)": [[81, "schema.ReductionSchema.model_dump_json"]], "model_extra (schema.reductionschema property)": [[82, "schema.ReductionSchema.model_extra"]], "model_fields (schema.reductionschema attribute)": [[83, "schema.ReductionSchema.model_fields"]], "model_fields_set (schema.reductionschema property)": [[84, "schema.ReductionSchema.model_fields_set"]], "model_json_schema() (schema.reductionschema class method)": [[85, "schema.ReductionSchema.model_json_schema"]], "model_parametrized_name() (schema.reductionschema class method)": [[86, "schema.ReductionSchema.model_parametrized_name"]], "model_post_init() (schema.reductionschema method)": [[87, "schema.ReductionSchema.model_post_init"]], "model_rebuild() (schema.reductionschema class method)": [[88, "schema.ReductionSchema.model_rebuild"]], "model_validate() (schema.reductionschema class method)": [[89, "schema.ReductionSchema.model_validate"]], "model_validate_json() (schema.reductionschema class method)": [[90, "schema.ReductionSchema.model_validate_json"]], "model_validate_strings() (schema.reductionschema class method)": [[91, "schema.ReductionSchema.model_validate_strings"]], "parse_file() (schema.reductionschema class method)": [[92, "schema.ReductionSchema.parse_file"]], "parse_obj() (schema.reductionschema class method)": [[93, "schema.ReductionSchema.parse_obj"]], "parse_raw() (schema.reductionschema class method)": [[94, "schema.ReductionSchema.parse_raw"]], "read() (schema.reductionschema class method)": [[95, "schema.ReductionSchema.read"]], "schema() (schema.reductionschema class method)": [[96, "schema.ReductionSchema.schema"]], "schema_json() (schema.reductionschema class method)": [[97, "schema.ReductionSchema.schema_json"]], "update_forward_refs() (schema.reductionschema class method)": [[98, "schema.ReductionSchema.update_forward_refs"]], "validate() (schema.reductionschema class method)": [[99, "schema.ReductionSchema.validate"]], "write() (schema.reductionschema method)": [[100, "schema.ReductionSchema.write"]], "schema (class in schema)": [[101, "schema.Schema"]], "__init__() (schema.schema method)": [[102, "schema.Schema.__init__"]], "construct() (schema.schema class method)": [[103, "schema.Schema.construct"]], "copy() (schema.schema method)": [[104, "schema.Schema.copy"]], "dict() (schema.schema method)": [[105, "schema.Schema.dict"]], "from_orm() (schema.schema class method)": [[106, "schema.Schema.from_orm"]], "json() (schema.schema method)": [[107, "schema.Schema.json"]], "model_computed_fields (schema.schema attribute)": [[108, "schema.Schema.model_computed_fields"]], "model_config (schema.schema attribute)": [[109, "schema.Schema.model_config"]], "model_construct() (schema.schema class method)": [[110, "schema.Schema.model_construct"]], "model_copy() (schema.schema method)": [[111, "schema.Schema.model_copy"]], "model_dump() (schema.schema method)": [[112, "schema.Schema.model_dump"]], "model_dump_json() (schema.schema method)": [[113, "schema.Schema.model_dump_json"]], "model_extra (schema.schema property)": [[114, "schema.Schema.model_extra"]], "model_fields (schema.schema attribute)": [[115, "schema.Schema.model_fields"]], "model_fields_set (schema.schema property)": [[116, "schema.Schema.model_fields_set"]], "model_json_schema() (schema.schema class method)": [[117, "schema.Schema.model_json_schema"]], "model_parametrized_name() (schema.schema class method)": [[118, "schema.Schema.model_parametrized_name"]], "model_post_init() (schema.schema method)": [[119, "schema.Schema.model_post_init"]], "model_rebuild() (schema.schema class method)": [[120, "schema.Schema.model_rebuild"]], "model_validate() (schema.schema class method)": [[121, "schema.Schema.model_validate"]], "model_validate_json() (schema.schema class method)": [[122, "schema.Schema.model_validate_json"]], "model_validate_strings() (schema.schema class method)": [[123, "schema.Schema.model_validate_strings"]], "parse_file() (schema.schema class method)": [[124, "schema.Schema.parse_file"]], "parse_obj() (schema.schema class method)": [[125, "schema.Schema.parse_obj"]], "parse_raw() (schema.schema class method)": [[126, "schema.Schema.parse_raw"]], "read() (schema.schema class method)": [[127, "schema.Schema.read"]], "schema() (schema.schema class method)": [[128, "schema.Schema.schema"]], "schema_json() (schema.schema class method)": [[129, "schema.Schema.schema_json"]], "update_forward_refs() (schema.schema class method)": [[130, "schema.Schema.update_forward_refs"]], "validate() (schema.schema class method)": [[131, "schema.Schema.validate"]], "write() (schema.schema method)": [[132, "schema.Schema.write"]], "schemaentry (class in schema)": [[133, "schema.SchemaEntry"]], "__init__() (schema.schemaentry method)": [[134, "schema.SchemaEntry.__init__"]], "schemaregistry (class in schema)": [[135, "schema.SchemaRegistry"]], "__init__() (schema.schemaregistry method)": [[136, "schema.SchemaRegistry.__init__"]], "add() (schema.schemaregistry method)": [[137, "schema.SchemaRegistry.add"]], "as_list() (schema.schemaregistry method)": [[138, "schema.SchemaRegistry.as_list"]], "clear() (schema.schemaregistry method)": [[139, "schema.SchemaRegistry.clear"]], "copy() (schema.schemaregistry method)": [[140, "schema.SchemaRegistry.copy"]], "from_directory() (schema.schemaregistry class method)": [[141, "schema.SchemaRegistry.from_directory"]], "fromkeys() (schema.schemaregistry method)": [[142, "schema.SchemaRegistry.fromkeys"]], "get() (schema.schemaregistry method)": [[143, "schema.SchemaRegistry.get"]], "items() (schema.schemaregistry method)": [[144, "schema.SchemaRegistry.items"]], "keys() (schema.schemaregistry method)": [[145, "schema.SchemaRegistry.keys"]], "pop() (schema.schemaregistry method)": [[146, "schema.SchemaRegistry.pop"]], "popitem() (schema.schemaregistry method)": [[147, "schema.SchemaRegistry.popitem"]], "setdefault() (schema.schemaregistry method)": [[148, "schema.SchemaRegistry.setdefault"]], "update() (schema.schemaregistry method)": [[149, "schema.SchemaRegistry.update"]], "values() (schema.schemaregistry method)": [[150, "schema.SchemaRegistry.values"]], "sourcetableschema (class in schema)": [[151, "schema.SourceTableSchema"]], "dec (schema.sourcetableschema attribute)": [[152, "schema.SourceTableSchema.DEC"]], "dec_err (schema.sourcetableschema attribute)": [[153, "schema.SourceTableSchema.DEC_ERR"]], "gal_b (schema.sourcetableschema attribute)": [[154, "schema.SourceTableSchema.GAL_B"]], "gal_b_err (schema.sourcetableschema attribute)": [[155, "schema.SourceTableSchema.GAL_B_ERR"]], "gal_l (schema.sourcetableschema attribute)": [[156, "schema.SourceTableSchema.GAL_L"]], "gal_l_err (schema.sourcetableschema attribute)": [[157, "schema.SourceTableSchema.GAL_L_ERR"]], "name (schema.sourcetableschema attribute)": [[158, "schema.SourceTableSchema.NAME"]], "ra (schema.sourcetableschema attribute)": [[159, "schema.SourceTableSchema.RA"]], "ra_err (schema.sourcetableschema attribute)": [[160, "schema.SourceTableSchema.RA_ERR"]], "sep (schema.sourcetableschema attribute)": [[161, "schema.SourceTableSchema.SEP"]], "type (schema.sourcetableschema attribute)": [[162, "schema.SourceTableSchema.TYPE"]], "z (schema.sourcetableschema attribute)": [[163, "schema.SourceTableSchema.Z"]], "__init__() (schema.sourcetableschema method)": [[164, "schema.SourceTableSchema.__init__"]], "available_coordinate_frames() (schema.sourcetableschema method)": [[165, "schema.SourceTableSchema.available_coordinate_frames"]], "column_map (schema.sourcetableschema attribute)": [[166, "schema.SourceTableSchema.column_map"]], "construct() (schema.sourcetableschema class method)": [[167, "schema.SourceTableSchema.construct"]], "coordinate_columns (schema.sourcetableschema property)": [[168, "schema.SourceTableSchema.coordinate_columns"]], "coordinate_frame (schema.sourcetableschema property)": [[169, "schema.SourceTableSchema.coordinate_frame"]], "coordinate_system (schema.sourcetableschema property)": [[170, "schema.SourceTableSchema.coordinate_system"]], "copy() (schema.sourcetableschema method)": [[171, "schema.SourceTableSchema.copy"]], "default_coord_system (schema.sourcetableschema attribute)": [[172, "schema.SourceTableSchema.default_coord_system"]], "dict() (schema.sourcetableschema method)": [[173, "schema.SourceTableSchema.dict"]], "from_orm() (schema.sourcetableschema class method)": [[174, "schema.SourceTableSchema.from_orm"]], "from_table() (schema.sourcetableschema class method)": [[175, "schema.SourceTableSchema.from_table"]], "guess_coordinate_standard_error_struct() (schema.sourcetableschema method)": [[176, "schema.SourceTableSchema.guess_coordinate_standard_error_struct"]], "json() (schema.sourcetableschema method)": [[177, "schema.SourceTableSchema.json"]], "model_computed_fields (schema.sourcetableschema attribute)": [[178, "schema.SourceTableSchema.model_computed_fields"]], "model_config (schema.sourcetableschema attribute)": [[179, "schema.SourceTableSchema.model_config"]], "model_construct() (schema.sourcetableschema class method)": [[180, "schema.SourceTableSchema.model_construct"]], "model_copy() (schema.sourcetableschema method)": [[181, "schema.SourceTableSchema.model_copy"]], "model_dump() (schema.sourcetableschema method)": [[182, "schema.SourceTableSchema.model_dump"]], "model_dump_json() (schema.sourcetableschema method)": [[183, "schema.SourceTableSchema.model_dump_json"]], "model_extra (schema.sourcetableschema property)": [[184, "schema.SourceTableSchema.model_extra"]], "model_fields (schema.sourcetableschema attribute)": [[185, "schema.SourceTableSchema.model_fields"]], "model_fields_set (schema.sourcetableschema property)": [[186, "schema.SourceTableSchema.model_fields_set"]], "model_json_schema() (schema.sourcetableschema class method)": [[187, "schema.SourceTableSchema.model_json_schema"]], "model_parametrized_name() (schema.sourcetableschema class method)": [[188, "schema.SourceTableSchema.model_parametrized_name"]], "model_post_init() (schema.sourcetableschema method)": [[189, "schema.SourceTableSchema.model_post_init"]], "model_rebuild() (schema.sourcetableschema class method)": [[190, "schema.SourceTableSchema.model_rebuild"]], "model_validate() (schema.sourcetableschema class method)": [[191, "schema.SourceTableSchema.model_validate"]], "model_validate_json() (schema.sourcetableschema class method)": [[192, "schema.SourceTableSchema.model_validate_json"]], "model_validate_strings() (schema.sourcetableschema class method)": [[193, "schema.SourceTableSchema.model_validate_strings"]], "object_map (schema.sourcetableschema attribute)": [[194, "schema.SourceTableSchema.object_map"]], "object_type_separator (schema.sourcetableschema attribute)": [[195, "schema.SourceTableSchema.object_type_separator"]], "parse_file() (schema.sourcetableschema class method)": [[196, "schema.SourceTableSchema.parse_file"]], "parse_obj() (schema.sourcetableschema class method)": [[197, "schema.SourceTableSchema.parse_obj"]], "parse_raw() (schema.sourcetableschema class method)": [[198, "schema.SourceTableSchema.parse_raw"]], "read() (schema.sourcetableschema class method)": [[199, "schema.SourceTableSchema.read"]], "schema() (schema.sourcetableschema class method)": [[200, "schema.SourceTableSchema.schema"]], "schema_json() (schema.sourcetableschema class method)": [[201, "schema.SourceTableSchema.schema_json"]], "settings (schema.sourcetableschema attribute)": [[202, "schema.SourceTableSchema.settings"]], "update_forward_refs() (schema.sourcetableschema class method)": [[203, "schema.SourceTableSchema.update_forward_refs"]], "validate() (schema.sourcetableschema class method)": [[204, "schema.SourceTableSchema.validate"]], "write() (schema.sourcetableschema method)": [[205, "schema.SourceTableSchema.write"]], "stats.gaussian_process": [[206, "module-stats.gaussian_process"]], "haversine_rbf (class in stats.gaussian_process)": [[207, "stats.gaussian_process.Haversine_RBF"]], "__init__() (stats.gaussian_process.haversine_rbf method)": [[208, "stats.gaussian_process.Haversine_RBF.__init__"]], "anisotropic (stats.gaussian_process.haversine_rbf property)": [[209, "stats.gaussian_process.Haversine_RBF.anisotropic"]], "bounds (stats.gaussian_process.haversine_rbf property)": [[210, "stats.gaussian_process.Haversine_RBF.bounds"]], "clone_with_theta() (stats.gaussian_process.haversine_rbf method)": [[211, "stats.gaussian_process.Haversine_RBF.clone_with_theta"]], "diag() (stats.gaussian_process.haversine_rbf method)": [[212, "stats.gaussian_process.Haversine_RBF.diag"]], "get_params() (stats.gaussian_process.haversine_rbf method)": [[213, "stats.gaussian_process.Haversine_RBF.get_params"]], "hyperparameter_length_scale (stats.gaussian_process.haversine_rbf property)": [[214, "stats.gaussian_process.Haversine_RBF.hyperparameter_length_scale"]], "hyperparameters (stats.gaussian_process.haversine_rbf property)": [[215, "stats.gaussian_process.Haversine_RBF.hyperparameters"]], "is_stationary() (stats.gaussian_process.haversine_rbf method)": [[216, "stats.gaussian_process.Haversine_RBF.is_stationary"]], "n_dims (stats.gaussian_process.haversine_rbf property)": [[217, "stats.gaussian_process.Haversine_RBF.n_dims"]], "requires_vector_input (stats.gaussian_process.haversine_rbf property)": [[218, "stats.gaussian_process.Haversine_RBF.requires_vector_input"]], "set_params() (stats.gaussian_process.haversine_rbf method)": [[219, "stats.gaussian_process.Haversine_RBF.set_params"]], "theta (stats.gaussian_process.haversine_rbf property)": [[220, "stats.gaussian_process.Haversine_RBF.theta"]], "stats.map_regression": [[221, "module-stats.map_regression"]], "bayesianpoissonmapregressor (class in stats.map_regression)": [[222, "stats.map_regression.BayesianPoissonMapRegressor"]], "__init__() (stats.map_regression.bayesianpoissonmapregressor method)": [[223, "stats.map_regression.BayesianPoissonMapRegressor.__init__"]], "build_map_map() (stats.map_regression.bayesianpoissonmapregressor method)": [[224, "stats.map_regression.BayesianPoissonMapRegressor.build_map_MAP"]], "knneighbormapregressor (class in stats.map_regression)": [[225, "stats.map_regression.KNNeighborMapRegressor"]], "__init__() (stats.map_regression.knneighbormapregressor method)": [[226, "stats.map_regression.KNNeighborMapRegressor.__init__"]], "cross_validate() (stats.map_regression.knneighbormapregressor method)": [[227, "stats.map_regression.KNNeighborMapRegressor.cross_validate"]], "default_training_fraction (stats.map_regression.knneighbormapregressor attribute)": [[228, "stats.map_regression.KNNeighborMapRegressor.default_training_fraction"]], "hyperparameters (stats.map_regression.knneighbormapregressor attribute)": [[229, "stats.map_regression.KNNeighborMapRegressor.hyperparameters"]], "regressor_parameters (stats.map_regression.knneighbormapregressor attribute)": [[230, "stats.map_regression.KNNeighborMapRegressor.regressor_parameters"]], "train_model() (stats.map_regression.knneighbormapregressor method)": [[231, "stats.map_regression.KNNeighborMapRegressor.train_model"]], "poissonmapregressor (class in stats.map_regression)": [[232, "stats.map_regression.PoissonMapRegressor"]], "default_training_fraction (stats.map_regression.poissonmapregressor attribute)": [[232, "stats.map_regression.PoissonMapRegressor.default_training_fraction"], [235, "stats.map_regression.PoissonMapRegressor.default_training_fraction"]], "hyperparameters (stats.map_regression.poissonmapregressor attribute)": [[232, "stats.map_regression.PoissonMapRegressor.hyperparameters"], [236, "stats.map_regression.PoissonMapRegressor.hyperparameters"]], "regressor_parameters (stats.map_regression.poissonmapregressor attribute)": [[232, "stats.map_regression.PoissonMapRegressor.regressor_parameters"], [237, "stats.map_regression.PoissonMapRegressor.regressor_parameters"]], "__init__() (stats.map_regression.poissonmapregressor method)": [[233, "stats.map_regression.PoissonMapRegressor.__init__"]], "cross_validate() (stats.map_regression.poissonmapregressor method)": [[234, "stats.map_regression.PoissonMapRegressor.cross_validate"]], "train_model() (stats.map_regression.poissonmapregressor method)": [[238, "stats.map_regression.PoissonMapRegressor.train_model"]], "rnneighbormapregressor (class in stats.map_regression)": [[239, "stats.map_regression.RNNeighborMapRegressor"]], "__init__() (stats.map_regression.rnneighbormapregressor method)": [[240, "stats.map_regression.RNNeighborMapRegressor.__init__"]], "cross_validate() (stats.map_regression.rnneighbormapregressor method)": [[241, "stats.map_regression.RNNeighborMapRegressor.cross_validate"]], "default_training_fraction (stats.map_regression.rnneighbormapregressor attribute)": [[242, "stats.map_regression.RNNeighborMapRegressor.default_training_fraction"]], "hyperparameters (stats.map_regression.rnneighbormapregressor attribute)": [[243, "stats.map_regression.RNNeighborMapRegressor.hyperparameters"]], "regressor_parameters (stats.map_regression.rnneighbormapregressor attribute)": [[244, "stats.map_regression.RNNeighborMapRegressor.regressor_parameters"]], "train_model() (stats.map_regression.rnneighbormapregressor method)": [[245, "stats.map_regression.RNNeighborMapRegressor.train_model"]], "train_map_regressor() (in module stats.map_regression)": [[246, "stats.map_regression.train_map_regressor"]], "stats.utilities": [[247, "module-stats.utilities"]], "uniform_sample_spherical() (in module stats.utilities)": [[248, "stats.utilities.uniform_sample_spherical"]], "structures.databases": [[249, "module-structures.databases"]], "dbregistry (class in structures.databases)": [[250, "structures.databases.DBRegistry"]], "__init__() (structures.databases.dbregistry method)": [[251, "structures.databases.DBRegistry.__init__"]], "add() (structures.databases.dbregistry method)": [[252, "structures.databases.DBRegistry.add"]], "as_list() (structures.databases.dbregistry method)": [[253, "structures.databases.DBRegistry.as_list"]], "clear() (structures.databases.dbregistry method)": [[254, "structures.databases.DBRegistry.clear"]], "copy() (structures.databases.dbregistry method)": [[255, "structures.databases.DBRegistry.copy"]], "fromkeys() (structures.databases.dbregistry method)": [[256, "structures.databases.DBRegistry.fromkeys"]], "get() (structures.databases.dbregistry method)": [[257, "structures.databases.DBRegistry.get"]], "items() (structures.databases.dbregistry method)": [[258, "structures.databases.DBRegistry.items"]], "keys() (structures.databases.dbregistry method)": [[259, "structures.databases.DBRegistry.keys"]], "locals (structures.databases.dbregistry property)": [[260, "structures.databases.DBRegistry.locals"]], "names (structures.databases.dbregistry property)": [[261, "structures.databases.DBRegistry.names"]], "pop() (structures.databases.dbregistry method)": [[262, "structures.databases.DBRegistry.pop"]], "popitem() (structures.databases.dbregistry method)": [[263, "structures.databases.DBRegistry.popitem"]], "remotes (structures.databases.dbregistry property)": [[264, "structures.databases.DBRegistry.remotes"]], "setdefault() (structures.databases.dbregistry method)": [[265, "structures.databases.DBRegistry.setdefault"]], "update() (structures.databases.dbregistry method)": [[266, "structures.databases.DBRegistry.update"]], "values() (structures.databases.dbregistry method)": [[267, "structures.databases.DBRegistry.values"]], "localdatabase (class in structures.databases)": [[268, "structures.databases.LocalDatabase"]], "__init__() (structures.databases.localdatabase method)": [[269, "structures.databases.LocalDatabase.__init__"]], "add_sources_to_poisson() (structures.databases.localdatabase method)": [[270, "structures.databases.LocalDatabase.add_sources_to_poisson"]], "correct_query_output (structures.databases.localdatabase attribute)": [[271, "structures.databases.LocalDatabase.correct_query_output"]], "count() (structures.databases.localdatabase method)": [[272, "structures.databases.LocalDatabase.count"]], "default_correct_query_output() (structures.databases.localdatabase method)": [[273, "structures.databases.LocalDatabase.default_correct_query_output"]], "default_poisson_atlas_path (structures.databases.localdatabase attribute)": [[274, "structures.databases.LocalDatabase.default_poisson_atlas_path"]], "default_query_config (structures.databases.localdatabase attribute)": [[275, "structures.databases.LocalDatabase.default_query_config"]], "default_query_schema (structures.databases.localdatabase attribute)": [[276, "structures.databases.LocalDatabase.default_query_schema"]], "name (structures.databases.localdatabase attribute)": [[277, "structures.databases.LocalDatabase.name"]], "poisson_atlas (structures.databases.localdatabase property)": [[278, "structures.databases.LocalDatabase.poisson_atlas"]], "query_config (structures.databases.localdatabase attribute)": [[279, "structures.databases.LocalDatabase.query_config"]], "query_radius() (structures.databases.localdatabase method)": [[280, "structures.databases.LocalDatabase.query_radius"]], "query_schema (structures.databases.localdatabase attribute)": [[281, "structures.databases.LocalDatabase.query_schema"]], "random_sample_count() (structures.databases.localdatabase method)": [[282, "structures.databases.LocalDatabase.random_sample_count"]], "register() (structures.databases.localdatabase method)": [[283, "structures.databases.LocalDatabase.register"]], "source_match() (structures.databases.localdatabase method)": [[284, "structures.databases.LocalDatabase.source_match"]], "source_match_memory() (structures.databases.localdatabase method)": [[285, "structures.databases.LocalDatabase.source_match_memory"]], "ned (class in structures.databases)": [[286, "structures.databases.NED"]], "timeout (structures.databases.ned attribute)": [[287, "structures.databases.NED.TIMEOUT"]], "__init__() (structures.databases.ned method)": [[288, "structures.databases.NED.__init__"]], "add_sources_to_poisson() (structures.databases.ned method)": [[289, "structures.databases.NED.add_sources_to_poisson"]], "config_ned() (structures.databases.ned method)": [[290, "structures.databases.NED.config_ned"]], "correct_query_output (structures.databases.ned attribute)": [[291, "structures.databases.NED.correct_query_output"]], "count() (structures.databases.ned method)": [[292, "structures.databases.NED.count"]], "default_correct_query_output() (structures.databases.ned method)": [[293, "structures.databases.NED.default_correct_query_output"]], "default_poisson_atlas_path (structures.databases.ned attribute)": [[294, "structures.databases.NED.default_poisson_atlas_path"]], "default_query_config (structures.databases.ned attribute)": [[295, "structures.databases.NED.default_query_config"]], "default_query_schema (structures.databases.ned attribute)": [[296, "structures.databases.NED.default_query_schema"]], "get_image_list() (structures.databases.ned static method)": [[297, "structures.databases.NED.get_image_list"]], "get_table() (structures.databases.ned static method)": [[298, "structures.databases.NED.get_table"]], "name (structures.databases.ned attribute)": [[299, "structures.databases.NED.name"]], "poisson_atlas (structures.databases.ned property)": [[300, "structures.databases.NED.poisson_atlas"]], "query_config (structures.databases.ned attribute)": [[301, "structures.databases.NED.query_config"]], "query_object() (structures.databases.ned method)": [[302, "structures.databases.NED.query_object"]], "query_radius() (structures.databases.ned method)": [[303, "structures.databases.NED.query_radius"]], "query_schema (structures.databases.ned attribute)": [[304, "structures.databases.NED.query_schema"]], "random_sample_count() (structures.databases.ned method)": [[305, "structures.databases.NED.random_sample_count"]], "register() (structures.databases.ned method)": [[306, "structures.databases.NED.register"]], "source_match() (structures.databases.ned method)": [[307, "structures.databases.NED.source_match"]], "remotedatabase (class in structures.databases)": [[308, "structures.databases.RemoteDatabase"]], "__init__() (structures.databases.remotedatabase method)": [[309, "structures.databases.RemoteDatabase.__init__"]], "add_sources_to_poisson() (structures.databases.remotedatabase method)": [[310, "structures.databases.RemoteDatabase.add_sources_to_poisson"]], "correct_query_output (structures.databases.remotedatabase attribute)": [[311, "structures.databases.RemoteDatabase.correct_query_output"]], "count() (structures.databases.remotedatabase method)": [[312, "structures.databases.RemoteDatabase.count"]], "default_correct_query_output() (structures.databases.remotedatabase method)": [[313, "structures.databases.RemoteDatabase.default_correct_query_output"]], "default_poisson_atlas_path (structures.databases.remotedatabase attribute)": [[314, "structures.databases.RemoteDatabase.default_poisson_atlas_path"]], "default_query_config (structures.databases.remotedatabase attribute)": [[315, "structures.databases.RemoteDatabase.default_query_config"]], "default_query_schema (structures.databases.remotedatabase attribute)": [[316, "structures.databases.RemoteDatabase.default_query_schema"]], "name (structures.databases.remotedatabase attribute)": [[317, "structures.databases.RemoteDatabase.name"]], "poisson_atlas (structures.databases.remotedatabase property)": [[318, "structures.databases.RemoteDatabase.poisson_atlas"]], "query_config (structures.databases.remotedatabase attribute)": [[319, "structures.databases.RemoteDatabase.query_config"]], "query_radius() (structures.databases.remotedatabase method)": [[320, "structures.databases.RemoteDatabase.query_radius"]], "query_schema (structures.databases.remotedatabase attribute)": [[321, "structures.databases.RemoteDatabase.query_schema"]], "random_sample_count() (structures.databases.remotedatabase method)": [[322, "structures.databases.RemoteDatabase.random_sample_count"]], "register() (structures.databases.remotedatabase method)": [[323, "structures.databases.RemoteDatabase.register"]], "source_match() (structures.databases.remotedatabase method)": [[324, "structures.databases.RemoteDatabase.source_match"]], "simbad (class in structures.databases)": [[325, "structures.databases.SIMBAD"]], "extra_columns (structures.databases.simbad attribute)": [[326, "structures.databases.SIMBAD.EXTRA_COLUMNS"]], "removed_columns (structures.databases.simbad attribute)": [[327, "structures.databases.SIMBAD.REMOVED_COLUMNS"]], "row_limit (structures.databases.simbad attribute)": [[328, "structures.databases.SIMBAD.ROW_LIMIT"]], "timeout (structures.databases.simbad attribute)": [[329, "structures.databases.SIMBAD.TIMEOUT"]], "__init__() (structures.databases.simbad method)": [[330, "structures.databases.SIMBAD.__init__"]], "add_sources_to_poisson() (structures.databases.simbad method)": [[331, "structures.databases.SIMBAD.add_sources_to_poisson"]], "available_tables (structures.databases.simbad property)": [[332, "structures.databases.SIMBAD.available_tables"]], "clear_cache() (structures.databases.simbad static method)": [[333, "structures.databases.SIMBAD.clear_cache"]], "config_simbad() (structures.databases.simbad method)": [[334, "structures.databases.SIMBAD.config_simbad"]], "correct_query_output (structures.databases.simbad attribute)": [[335, "structures.databases.SIMBAD.correct_query_output"]], "count() (structures.databases.simbad method)": [[336, "structures.databases.SIMBAD.count"]], "default_correct_query_output() (structures.databases.simbad method)": [[337, "structures.databases.SIMBAD.default_correct_query_output"]], "default_poisson_atlas_path (structures.databases.simbad attribute)": [[338, "structures.databases.SIMBAD.default_poisson_atlas_path"]], "default_query_config (structures.databases.simbad attribute)": [[339, "structures.databases.SIMBAD.default_query_config"]], "default_query_schema (structures.databases.simbad attribute)": [[340, "structures.databases.SIMBAD.default_query_schema"]], "list_columns() (structures.databases.simbad static method)": [[341, "structures.databases.SIMBAD.list_columns"]], "list_linked_tables() (structures.databases.simbad static method)": [[342, "structures.databases.SIMBAD.list_linked_tables"]], "name (structures.databases.simbad attribute)": [[343, "structures.databases.SIMBAD.name"]], "poisson_atlas (structures.databases.simbad property)": [[344, "structures.databases.SIMBAD.poisson_atlas"]], "query_config (structures.databases.simbad attribute)": [[345, "structures.databases.SIMBAD.query_config"]], "query_object() (structures.databases.simbad method)": [[346, "structures.databases.SIMBAD.query_object"]], "query_radius() (structures.databases.simbad method)": [[347, "structures.databases.SIMBAD.query_radius"]], "query_schema (structures.databases.simbad attribute)": [[348, "structures.databases.SIMBAD.query_schema"]], "query_tap() (structures.databases.simbad static method)": [[349, "structures.databases.SIMBAD.query_tap"]], "random_sample_count() (structures.databases.simbad method)": [[350, "structures.databases.SIMBAD.random_sample_count"]], "register() (structures.databases.simbad method)": [[351, "structures.databases.SIMBAD.register"]], "source_match() (structures.databases.simbad method)": [[352, "structures.databases.SIMBAD.source_match"]], "sourcedatabase (class in structures.databases)": [[353, "structures.databases.SourceDatabase"]], "__init__() (structures.databases.sourcedatabase method)": [[354, "structures.databases.SourceDatabase.__init__"]], "add_sources_to_poisson() (structures.databases.sourcedatabase method)": [[355, "structures.databases.SourceDatabase.add_sources_to_poisson"]], "correct_query_output (structures.databases.sourcedatabase attribute)": [[356, "structures.databases.SourceDatabase.correct_query_output"]], "count() (structures.databases.sourcedatabase method)": [[357, "structures.databases.SourceDatabase.count"]], "default_correct_query_output() (structures.databases.sourcedatabase method)": [[358, "structures.databases.SourceDatabase.default_correct_query_output"]], "default_poisson_atlas_path (structures.databases.sourcedatabase attribute)": [[359, "structures.databases.SourceDatabase.default_poisson_atlas_path"]], "default_query_config (structures.databases.sourcedatabase attribute)": [[360, "structures.databases.SourceDatabase.default_query_config"]], "default_query_schema (structures.databases.sourcedatabase attribute)": [[361, "structures.databases.SourceDatabase.default_query_schema"]], "name (structures.databases.sourcedatabase attribute)": [[362, "structures.databases.SourceDatabase.name"]], "poisson_atlas (structures.databases.sourcedatabase property)": [[363, "structures.databases.SourceDatabase.poisson_atlas"]], "query_config (structures.databases.sourcedatabase attribute)": [[364, "structures.databases.SourceDatabase.query_config"]], "query_radius() (structures.databases.sourcedatabase method)": [[365, "structures.databases.SourceDatabase.query_radius"]], "query_schema (structures.databases.sourcedatabase attribute)": [[366, "structures.databases.SourceDatabase.query_schema"]], "random_sample_count() (structures.databases.sourcedatabase method)": [[367, "structures.databases.SourceDatabase.random_sample_count"]], "register() (structures.databases.sourcedatabase method)": [[368, "structures.databases.SourceDatabase.register"]], "add_points_to_poisson_map() (in module structures.databases)": [[369, "structures.databases.add_points_to_poisson_map"]], "builtin_databases() (in module structures.databases)": [[370, "structures.databases.builtin_databases"]], "get_database() (in module structures.databases)": [[371, "structures.databases.get_database"]], "get_poisson_atlas() (in module structures.databases)": [[372, "structures.databases.get_poisson_atlas"]], "get_poisson_path() (in module structures.databases)": [[373, "structures.databases.get_poisson_path"]], "structures.map": [[374, "module-structures.map"]], "map (class in structures.map)": [[375, "structures.map.Map"]], "__init__() (structures.map.map method)": [[376, "structures.map.Map.__init__"]], "coordinate_frame (structures.map.map property)": [[377, "structures.map.Map.coordinate_frame"]], "data (structures.map.map property)": [[378, "structures.map.Map.data"]], "get_healpix_id() (structures.map.map method)": [[379, "structures.map.Map.get_healpix_id"]], "pixel_positions (structures.map.map property)": [[380, "structures.map.Map.pixel_positions"]], "plot() (structures.map.map method)": [[381, "structures.map.Map.plot"]], "transform_map_coordinates() (structures.map.map method)": [[382, "structures.map.Map.transform_map_coordinates"]], "mapatlas (class in structures.map)": [[383, "structures.map.MapAtlas"]], "__init__() (structures.map.mapatlas method)": [[384, "structures.map.MapAtlas.__init__"]], "coordinate_frame (structures.map.mapatlas property)": [[385, "structures.map.MapAtlas.coordinate_frame"]], "generate() (structures.map.mapatlas class method)": [[386, "structures.map.MapAtlas.generate"]], "get_map() (structures.map.mapatlas method)": [[387, "structures.map.MapAtlas.get_map"]], "has_maps (structures.map.mapatlas property)": [[388, "structures.map.MapAtlas.has_maps"]], "hdus (structures.map.mapatlas property)": [[389, "structures.map.MapAtlas.hdus"]], "map_names (structures.map.mapatlas property)": [[390, "structures.map.MapAtlas.map_names"]], "pixel_positions (structures.map.mapatlas property)": [[391, "structures.map.MapAtlas.pixel_positions"]], "remove() (structures.map.mapatlas method)": [[392, "structures.map.MapAtlas.remove"]], "reshape_healpix() (structures.map.mapatlas method)": [[393, "structures.map.MapAtlas.reshape_healpix"]], "poissonatlas (class in structures.map)": [[394, "structures.map.PoissonAtlas"]], "counts (structures.map.poissonatlas property)": [[395, "structures.map.PoissonAtlas.COUNTS"]], "__init__() (structures.map.poissonatlas method)": [[396, "structures.map.PoissonAtlas.__init__"]], "append_to_fits() (structures.map.poissonatlas method)": [[397, "structures.map.PoissonAtlas.append_to_fits"]], "build_poisson_map() (structures.map.poissonatlas method)": [[398, "structures.map.PoissonAtlas.build_poisson_map"]], "build_poisson_map_knn() (structures.map.poissonatlas method)": [[399, "structures.map.PoissonAtlas.build_poisson_map_KNN"]], "build_poisson_map_map() (structures.map.poissonatlas method)": [[400, "structures.map.PoissonAtlas.build_poisson_map_MAP"]], "build_poisson_map_rnn() (structures.map.poissonatlas method)": [[401, "structures.map.PoissonAtlas.build_poisson_map_RNN"]], "build_poisson_map_regressor() (structures.map.poissonatlas method)": [[402, "structures.map.PoissonAtlas.build_poisson_map_regressor"]], "build_poisson_maps() (structures.map.poissonatlas method)": [[403, "structures.map.PoissonAtlas.build_poisson_maps"]], "coordinate_frame (structures.map.poissonatlas property)": [[404, "structures.map.PoissonAtlas.coordinate_frame"]], "generate() (structures.map.poissonatlas class method)": [[405, "structures.map.PoissonAtlas.generate"]], "get_map() (structures.map.poissonatlas method)": [[406, "structures.map.PoissonAtlas.get_map"]], "get_points() (structures.map.poissonatlas method)": [[407, "structures.map.PoissonAtlas.get_points"]], "has_maps (structures.map.poissonatlas property)": [[408, "structures.map.PoissonAtlas.has_maps"]], "hdus (structures.map.poissonatlas property)": [[409, "structures.map.PoissonAtlas.hdus"]], "map_names (structures.map.poissonatlas property)": [[410, "structures.map.PoissonAtlas.map_names"]], "pixel_positions (structures.map.poissonatlas property)": [[411, "structures.map.PoissonAtlas.pixel_positions"]], "remove() (structures.map.poissonatlas method)": [[412, "structures.map.PoissonAtlas.remove"]], "reset() (structures.map.poissonatlas method)": [[413, "structures.map.PoissonAtlas.reset"]], "reshape_healpix() (structures.map.poissonatlas method)": [[414, "structures.map.PoissonAtlas.reshape_healpix"]], "sample_from_database() (structures.map.poissonatlas method)": [[415, "structures.map.PoissonAtlas.sample_from_database"]], "statatlas (class in structures.map)": [[416, "structures.map.StatAtlas"]], "counts (structures.map.statatlas property)": [[417, "structures.map.StatAtlas.COUNTS"]], "__init__() (structures.map.statatlas method)": [[418, "structures.map.StatAtlas.__init__"]], "append_to_fits() (structures.map.statatlas method)": [[419, "structures.map.StatAtlas.append_to_fits"]], "coordinate_frame (structures.map.statatlas property)": [[420, "structures.map.StatAtlas.coordinate_frame"]], "generate() (structures.map.statatlas class method)": [[421, "structures.map.StatAtlas.generate"]], "get_map() (structures.map.statatlas method)": [[422, "structures.map.StatAtlas.get_map"]], "get_points() (structures.map.statatlas method)": [[423, "structures.map.StatAtlas.get_points"]], "has_maps (structures.map.statatlas property)": [[424, "structures.map.StatAtlas.has_maps"]], "hdus (structures.map.statatlas property)": [[425, "structures.map.StatAtlas.hdus"]], "map_names (structures.map.statatlas property)": [[426, "structures.map.StatAtlas.map_names"]], "pixel_positions (structures.map.statatlas property)": [[427, "structures.map.StatAtlas.pixel_positions"]], "remove() (structures.map.statatlas method)": [[428, "structures.map.StatAtlas.remove"]], "reset() (structures.map.statatlas method)": [[429, "structures.map.StatAtlas.reset"]], "reshape_healpix() (structures.map.statatlas method)": [[430, "structures.map.StatAtlas.reshape_healpix"]], "sample_from_database() (structures.map.statatlas method)": [[431, "structures.map.StatAtlas.sample_from_database"]], "structures.reduction": [[432, "module-structures.reduction"]], "astrometricreductionprocess (class in structures.reduction)": [[433, "structures.reduction.AstrometricReductionProcess"]], "catalog_err (structures.reduction.astrometricreductionprocess attribute)": [[434, "structures.reduction.AstrometricReductionProcess.CATALOG_ERR"]], "database_err (structures.reduction.astrometricreductionprocess attribute)": [[435, "structures.reduction.AstrometricReductionProcess.DATABASE_ERR"]], "__init__() (structures.reduction.astrometricreductionprocess method)": [[436, "structures.reduction.AstrometricReductionProcess.__init__"]], "construct() (structures.reduction.astrometricreductionprocess class method)": [[437, "structures.reduction.AstrometricReductionProcess.construct"]], "copy() (structures.reduction.astrometricreductionprocess method)": [[438, "structures.reduction.AstrometricReductionProcess.copy"]], "cross_match_database (structures.reduction.astrometricreductionprocess attribute)": [[439, "structures.reduction.AstrometricReductionProcess.cross_match_database"]], "debug_flag (structures.reduction.astrometricreductionprocess property)": [[440, "structures.reduction.AstrometricReductionProcess.debug_flag"]], "dict() (structures.reduction.astrometricreductionprocess method)": [[441, "structures.reduction.AstrometricReductionProcess.dict"]], "fill_unknown (structures.reduction.astrometricreductionprocess attribute)": [[442, "structures.reduction.AstrometricReductionProcess.fill_unknown"]], "from_orm() (structures.reduction.astrometricreductionprocess class method)": [[443, "structures.reduction.AstrometricReductionProcess.from_orm"]], "generate_operator() (structures.reduction.astrometricreductionprocess method)": [[444, "structures.reduction.AstrometricReductionProcess.generate_operator"]], "generate_sql_query() (structures.reduction.astrometricreductionprocess method)": [[445, "structures.reduction.AstrometricReductionProcess.generate_sql_query"]], "json() (structures.reduction.astrometricreductionprocess method)": [[446, "structures.reduction.AstrometricReductionProcess.json"]], "model_computed_fields (structures.reduction.astrometricreductionprocess attribute)": [[447, "structures.reduction.AstrometricReductionProcess.model_computed_fields"]], "model_config (structures.reduction.astrometricreductionprocess attribute)": [[448, "structures.reduction.AstrometricReductionProcess.model_config"]], "model_construct() (structures.reduction.astrometricreductionprocess class method)": [[449, "structures.reduction.AstrometricReductionProcess.model_construct"]], "model_copy() (structures.reduction.astrometricreductionprocess method)": [[450, "structures.reduction.AstrometricReductionProcess.model_copy"]], "model_dump() (structures.reduction.astrometricreductionprocess method)": [[451, "structures.reduction.AstrometricReductionProcess.model_dump"]], "model_dump_json() (structures.reduction.astrometricreductionprocess method)": [[452, "structures.reduction.AstrometricReductionProcess.model_dump_json"]], "model_extra (structures.reduction.astrometricreductionprocess property)": [[453, "structures.reduction.AstrometricReductionProcess.model_extra"]], "model_fields (structures.reduction.astrometricreductionprocess attribute)": [[454, "structures.reduction.AstrometricReductionProcess.model_fields"]], "model_fields_set (structures.reduction.astrometricreductionprocess property)": [[455, "structures.reduction.AstrometricReductionProcess.model_fields_set"]], "model_json_schema() (structures.reduction.astrometricreductionprocess class method)": [[456, "structures.reduction.AstrometricReductionProcess.model_json_schema"]], "model_parametrized_name() (structures.reduction.astrometricreductionprocess class method)": [[457, "structures.reduction.AstrometricReductionProcess.model_parametrized_name"]], "model_post_init() (structures.reduction.astrometricreductionprocess method)": [[458, "structures.reduction.AstrometricReductionProcess.model_post_init"]], "model_rebuild() (structures.reduction.astrometricreductionprocess class method)": [[459, "structures.reduction.AstrometricReductionProcess.model_rebuild"]], "model_validate() (structures.reduction.astrometricreductionprocess class method)": [[460, "structures.reduction.AstrometricReductionProcess.model_validate"]], "model_validate_json() (structures.reduction.astrometricreductionprocess class method)": [[461, "structures.reduction.AstrometricReductionProcess.model_validate_json"]], "model_validate_strings() (structures.reduction.astrometricreductionprocess class method)": [[462, "structures.reduction.AstrometricReductionProcess.model_validate_strings"]], "obj_col (structures.reduction.astrometricreductionprocess property)": [[463, "structures.reduction.AstrometricReductionProcess.obj_col"]], "op_tmp_table (structures.reduction.astrometricreductionprocess property)": [[464, "structures.reduction.AstrometricReductionProcess.op_tmp_table"]], "parse_file() (structures.reduction.astrometricreductionprocess class method)": [[465, "structures.reduction.AstrometricReductionProcess.parse_file"]], "parse_obj() (structures.reduction.astrometricreductionprocess class method)": [[466, "structures.reduction.AstrometricReductionProcess.parse_obj"]], "parse_raw() (structures.reduction.astrometricreductionprocess class method)": [[467, "structures.reduction.AstrometricReductionProcess.parse_raw"]], "prior (structures.reduction.astrometricreductionprocess attribute)": [[468, "structures.reduction.AstrometricReductionProcess.prior"]], "proc_tmp_table (structures.reduction.astrometricreductionprocess property)": [[469, "structures.reduction.AstrometricReductionProcess.proc_tmp_table"]], "process_name (structures.reduction.astrometricreductionprocess attribute)": [[470, "structures.reduction.AstrometricReductionProcess.process_name"]], "schema() (structures.reduction.astrometricreductionprocess class method)": [[471, "structures.reduction.AstrometricReductionProcess.schema"]], "schema_json() (structures.reduction.astrometricreductionprocess class method)": [[472, "structures.reduction.AstrometricReductionProcess.schema_json"]], "score_col (structures.reduction.astrometricreductionprocess property)": [[473, "structures.reduction.AstrometricReductionProcess.score_col"]], "settings_flag (structures.reduction.astrometricreductionprocess attribute)": [[474, "structures.reduction.AstrometricReductionProcess.settings_flag"]], "settings_header (structures.reduction.astrometricreductionprocess attribute)": [[475, "structures.reduction.AstrometricReductionProcess.settings_header"]], "table (structures.reduction.astrometricreductionprocess attribute)": [[476, "structures.reduction.AstrometricReductionProcess.table"]], "update_forward_refs() (structures.reduction.astrometricreductionprocess class method)": [[477, "structures.reduction.AstrometricReductionProcess.update_forward_refs"]], "validate() (structures.reduction.astrometricreductionprocess method)": [[478, "structures.reduction.AstrometricReductionProcess.validate"]], "reductionprocess (class in structures.reduction)": [[479, "structures.reduction.ReductionProcess"]], "__init__() (structures.reduction.reductionprocess method)": [[480, "structures.reduction.ReductionProcess.__init__"]], "construct() (structures.reduction.reductionprocess class method)": [[481, "structures.reduction.ReductionProcess.construct"]], "copy() (structures.reduction.reductionprocess method)": [[482, "structures.reduction.ReductionProcess.copy"]], "cross_match_database (structures.reduction.reductionprocess attribute)": [[483, "structures.reduction.ReductionProcess.cross_match_database"]], "debug_flag (structures.reduction.reductionprocess property)": [[484, "structures.reduction.ReductionProcess.debug_flag"]], "dict() (structures.reduction.reductionprocess method)": [[485, "structures.reduction.ReductionProcess.dict"]], "fill_unknown (structures.reduction.reductionprocess attribute)": [[486, "structures.reduction.ReductionProcess.fill_unknown"]], "from_orm() (structures.reduction.reductionprocess class method)": [[487, "structures.reduction.ReductionProcess.from_orm"]], "generate_operator() (structures.reduction.reductionprocess method)": [[488, "structures.reduction.ReductionProcess.generate_operator"]], "generate_sql_query() (structures.reduction.reductionprocess method)": [[489, "structures.reduction.ReductionProcess.generate_sql_query"]], "json() (structures.reduction.reductionprocess method)": [[490, "structures.reduction.ReductionProcess.json"]], "model_computed_fields (structures.reduction.reductionprocess attribute)": [[491, "structures.reduction.ReductionProcess.model_computed_fields"]], "model_config (structures.reduction.reductionprocess attribute)": [[492, "structures.reduction.ReductionProcess.model_config"]], "model_construct() (structures.reduction.reductionprocess class method)": [[493, "structures.reduction.ReductionProcess.model_construct"]], "model_copy() (structures.reduction.reductionprocess method)": [[494, "structures.reduction.ReductionProcess.model_copy"]], "model_dump() (structures.reduction.reductionprocess method)": [[495, "structures.reduction.ReductionProcess.model_dump"]], "model_dump_json() (structures.reduction.reductionprocess method)": [[496, "structures.reduction.ReductionProcess.model_dump_json"]], "model_extra (structures.reduction.reductionprocess property)": [[497, "structures.reduction.ReductionProcess.model_extra"]], "model_fields (structures.reduction.reductionprocess attribute)": [[498, "structures.reduction.ReductionProcess.model_fields"]], "model_fields_set (structures.reduction.reductionprocess property)": [[499, "structures.reduction.ReductionProcess.model_fields_set"]], "model_json_schema() (structures.reduction.reductionprocess class method)": [[500, "structures.reduction.ReductionProcess.model_json_schema"]], "model_parametrized_name() (structures.reduction.reductionprocess class method)": [[501, "structures.reduction.ReductionProcess.model_parametrized_name"]], "model_post_init() (structures.reduction.reductionprocess method)": [[502, "structures.reduction.ReductionProcess.model_post_init"]], "model_rebuild() (structures.reduction.reductionprocess class method)": [[503, "structures.reduction.ReductionProcess.model_rebuild"]], "model_validate() (structures.reduction.reductionprocess class method)": [[504, "structures.reduction.ReductionProcess.model_validate"]], "model_validate_json() (structures.reduction.reductionprocess class method)": [[505, "structures.reduction.ReductionProcess.model_validate_json"]], "model_validate_strings() (structures.reduction.reductionprocess class method)": [[506, "structures.reduction.ReductionProcess.model_validate_strings"]], "obj_col (structures.reduction.reductionprocess property)": [[507, "structures.reduction.ReductionProcess.obj_col"]], "op_tmp_table (structures.reduction.reductionprocess property)": [[508, "structures.reduction.ReductionProcess.op_tmp_table"]], "parse_file() (structures.reduction.reductionprocess class method)": [[509, "structures.reduction.ReductionProcess.parse_file"]], "parse_obj() (structures.reduction.reductionprocess class method)": [[510, "structures.reduction.ReductionProcess.parse_obj"]], "parse_raw() (structures.reduction.reductionprocess class method)": [[511, "structures.reduction.ReductionProcess.parse_raw"]], "proc_tmp_table (structures.reduction.reductionprocess property)": [[512, "structures.reduction.ReductionProcess.proc_tmp_table"]], "process_name (structures.reduction.reductionprocess attribute)": [[513, "structures.reduction.ReductionProcess.process_name"]], "schema() (structures.reduction.reductionprocess class method)": [[514, "structures.reduction.ReductionProcess.schema"]], "schema_json() (structures.reduction.reductionprocess class method)": [[515, "structures.reduction.ReductionProcess.schema_json"]], "score_col (structures.reduction.reductionprocess property)": [[516, "structures.reduction.ReductionProcess.score_col"]], "settings_flag (structures.reduction.reductionprocess attribute)": [[517, "structures.reduction.ReductionProcess.settings_flag"]], "settings_header (structures.reduction.reductionprocess attribute)": [[518, "structures.reduction.ReductionProcess.settings_header"]], "table (structures.reduction.reductionprocess attribute)": [[519, "structures.reduction.ReductionProcess.table"]], "update_forward_refs() (structures.reduction.reductionprocess class method)": [[520, "structures.reduction.ReductionProcess.update_forward_refs"]], "validate() (structures.reduction.reductionprocess method)": [[521, "structures.reduction.ReductionProcess.validate"]], "structures.table": [[522, "module-structures.table"]], "coordinatecolumn (class in structures.table)": [[523, "structures.table.CoordinateColumn"]], "__init__() (structures.table.coordinatecolumn method)": [[524, "structures.table.CoordinateColumn.__init__"]], "schemacolumn (class in structures.table)": [[525, "structures.table.SchemaColumn"]], "__init__() (structures.table.schemacolumn method)": [[526, "structures.table.SchemaColumn.__init__"]], "sourcetable (class in structures.table)": [[527, "structures.table.SourceTable"]], "columnclass (structures.table.sourcetable property)": [[528, "structures.table.SourceTable.ColumnClass"]], "dec (structures.table.sourcetable attribute)": [[529, "structures.table.SourceTable.DEC"]], "dec_err (structures.table.sourcetable attribute)": [[530, "structures.table.SourceTable.DEC_ERR"]], "gal_b (structures.table.sourcetable attribute)": [[531, "structures.table.SourceTable.GAL_B"]], "gal_b_err (structures.table.sourcetable attribute)": [[532, "structures.table.SourceTable.GAL_B_ERR"]], "gal_l (structures.table.sourcetable attribute)": [[533, "structures.table.SourceTable.GAL_L"]], "gal_l_err (structures.table.sourcetable attribute)": [[534, "structures.table.SourceTable.GAL_L_ERR"]], "name (structures.table.sourcetable attribute)": [[535, "structures.table.SourceTable.NAME"]], "ra (structures.table.sourcetable attribute)": [[536, "structures.table.SourceTable.RA"]], "ra_err (structures.table.sourcetable attribute)": [[537, "structures.table.SourceTable.RA_ERR"]], "sep (structures.table.sourcetable attribute)": [[538, "structures.table.SourceTable.SEP"]], "type (structures.table.sourcetable attribute)": [[539, "structures.table.SourceTable.TYPE"]], "z (structures.table.sourcetable attribute)": [[540, "structures.table.SourceTable.Z"]], "__init__() (structures.table.sourcetable method)": [[541, "structures.table.SourceTable.__init__"]], "add_column() (structures.table.sourcetable method)": [[542, "structures.table.SourceTable.add_column"]], "add_columns() (structures.table.sourcetable method)": [[543, "structures.table.SourceTable.add_columns"]], "add_index() (structures.table.sourcetable method)": [[544, "structures.table.SourceTable.add_index"]], "add_row() (structures.table.sourcetable method)": [[545, "structures.table.SourceTable.add_row"]], "append_to_fits() (structures.table.sourcetable method)": [[546, "structures.table.SourceTable.append_to_fits"]], "append_to_sql() (structures.table.sourcetable method)": [[547, "structures.table.SourceTable.append_to_sql"]], "argsort() (structures.table.sourcetable method)": [[548, "structures.table.SourceTable.argsort"]], "as_array() (structures.table.sourcetable method)": [[549, "structures.table.SourceTable.as_array"]], "colnames (structures.table.sourcetable property)": [[550, "structures.table.SourceTable.colnames"]], "convert_bytestring_to_unicode() (structures.table.sourcetable method)": [[551, "structures.table.SourceTable.convert_bytestring_to_unicode"]], "convert_unicode_to_bytestring() (structures.table.sourcetable method)": [[552, "structures.table.SourceTable.convert_unicode_to_bytestring"]], "copy() (structures.table.sourcetable method)": [[553, "structures.table.SourceTable.copy"]], "count_types() (structures.table.sourcetable method)": [[554, "structures.table.SourceTable.count_types"]], "dtype (structures.table.sourcetable property)": [[555, "structures.table.SourceTable.dtype"]], "field() (structures.table.sourcetable method)": [[556, "structures.table.SourceTable.field"]], "filled() (structures.table.sourcetable method)": [[557, "structures.table.SourceTable.filled"]], "from_pandas() (structures.table.sourcetable class method)": [[558, "structures.table.SourceTable.from_pandas"]], "generate_schema() (structures.table.sourcetable method)": [[559, "structures.table.SourceTable.generate_schema"]], "get_coordinates() (structures.table.sourcetable method)": [[560, "structures.table.SourceTable.get_coordinates"]], "get_formatted_types() (structures.table.sourcetable method)": [[561, "structures.table.SourceTable.get_formatted_types"]], "group_by() (structures.table.sourcetable method)": [[562, "structures.table.SourceTable.group_by"]], "groups (structures.table.sourcetable property)": [[563, "structures.table.SourceTable.groups"]], "has_masked_columns (structures.table.sourcetable property)": [[564, "structures.table.SourceTable.has_masked_columns"]], "has_masked_values (structures.table.sourcetable property)": [[565, "structures.table.SourceTable.has_masked_values"]], "has_mixin_columns (structures.table.sourcetable property)": [[566, "structures.table.SourceTable.has_mixin_columns"]], "iloc (structures.table.sourcetable property)": [[567, "structures.table.SourceTable.iloc"]], "index_column() (structures.table.sourcetable method)": [[568, "structures.table.SourceTable.index_column"]], "index_mode() (structures.table.sourcetable method)": [[569, "structures.table.SourceTable.index_mode"]], "indices (structures.table.sourcetable property)": [[570, "structures.table.SourceTable.indices"]], "info (structures.table.sourcetable attribute)": [[571, "structures.table.SourceTable.info"]], "insert_row() (structures.table.sourcetable method)": [[572, "structures.table.SourceTable.insert_row"]], "items() (structures.table.sourcetable method)": [[573, "structures.table.SourceTable.items"]], "itercols() (structures.table.sourcetable method)": [[574, "structures.table.SourceTable.itercols"]], "iterrows() (structures.table.sourcetable method)": [[575, "structures.table.SourceTable.iterrows"]], "keep_columns() (structures.table.sourcetable method)": [[576, "structures.table.SourceTable.keep_columns"]], "keys() (structures.table.sourcetable method)": [[577, "structures.table.SourceTable.keys"]], "lat (structures.table.sourcetable property)": [[578, "structures.table.SourceTable.lat"]], "loc (structures.table.sourcetable property)": [[579, "structures.table.SourceTable.loc"]], "loc_indices (structures.table.sourcetable property)": [[580, "structures.table.SourceTable.loc_indices"]], "lon (structures.table.sourcetable property)": [[581, "structures.table.SourceTable.lon"]], "mask (structures.table.sourcetable property)": [[582, "structures.table.SourceTable.mask"]], "masked (structures.table.sourcetable property)": [[583, "structures.table.SourceTable.masked"]], "meta (structures.table.sourcetable attribute)": [[584, "structures.table.SourceTable.meta"]], "more() (structures.table.sourcetable method)": [[585, "structures.table.SourceTable.more"]], "pformat() (structures.table.sourcetable method)": [[586, "structures.table.SourceTable.pformat"]], "pformat_all() (structures.table.sourcetable method)": [[587, "structures.table.SourceTable.pformat_all"]], "pprint() (structures.table.sourcetable method)": [[588, "structures.table.SourceTable.pprint"]], "pprint_all() (structures.table.sourcetable method)": [[589, "structures.table.SourceTable.pprint_all"]], "pprint_exclude_names (structures.table.sourcetable attribute)": [[590, "structures.table.SourceTable.pprint_exclude_names"]], "pprint_include_names (structures.table.sourcetable attribute)": [[591, "structures.table.SourceTable.pprint_include_names"]], "read (structures.table.sourcetable attribute)": [[592, "structures.table.SourceTable.read"]], "remove_column() (structures.table.sourcetable method)": [[593, "structures.table.SourceTable.remove_column"]], "remove_columns() (structures.table.sourcetable method)": [[594, "structures.table.SourceTable.remove_columns"]], "remove_indices() (structures.table.sourcetable method)": [[595, "structures.table.SourceTable.remove_indices"]], "remove_row() (structures.table.sourcetable method)": [[596, "structures.table.SourceTable.remove_row"]], "remove_rows() (structures.table.sourcetable method)": [[597, "structures.table.SourceTable.remove_rows"]], "rename_column() (structures.table.sourcetable method)": [[598, "structures.table.SourceTable.rename_column"]], "rename_columns() (structures.table.sourcetable method)": [[599, "structures.table.SourceTable.rename_columns"]], "replace_column() (structures.table.sourcetable method)": [[600, "structures.table.SourceTable.replace_column"]], "reverse() (structures.table.sourcetable method)": [[601, "structures.table.SourceTable.reverse"]], "round() (structures.table.sourcetable method)": [[602, "structures.table.SourceTable.round"]], "schema (structures.table.sourcetable property)": [[603, "structures.table.SourceTable.schema"]], "setdefault() (structures.table.sourcetable method)": [[604, "structures.table.SourceTable.setdefault"]], "show_in_browser() (structures.table.sourcetable method)": [[605, "structures.table.SourceTable.show_in_browser"]], "show_in_notebook() (structures.table.sourcetable method)": [[606, "structures.table.SourceTable.show_in_notebook"]], "sort() (structures.table.sourcetable method)": [[607, "structures.table.SourceTable.sort"]], "to_pandas() (structures.table.sourcetable method)": [[608, "structures.table.SourceTable.to_pandas"]], "update() (structures.table.sourcetable method)": [[609, "structures.table.SourceTable.update"]], "values() (structures.table.sourcetable method)": [[610, "structures.table.SourceTable.values"]], "values_equal() (structures.table.sourcetable method)": [[611, "structures.table.SourceTable.values_equal"]], "write (structures.table.sourcetable attribute)": [[612, "structures.table.SourceTable.write"]], "correct_column_types() (in module structures.table)": [[613, "structures.table.correct_column_types"]], "format_table_types() (in module structures.table)": [[614, "structures.table.format_table_types"]], "load() (in module structures.table)": [[615, "structures.table.load"]], "utilities.core": [[616, "module-utilities.core"]], "attrdict (class in utilities.core)": [[617, "utilities.core.AttrDict"]], "__init__() (utilities.core.attrdict method)": [[618, "utilities.core.AttrDict.__init__"]], "clean() (utilities.core.attrdict method)": [[619, "utilities.core.AttrDict.clean"]], "clean_types() (utilities.core.attrdict class method)": [[620, "utilities.core.AttrDict.clean_types"]], "clear() (utilities.core.attrdict method)": [[621, "utilities.core.AttrDict.clear"]], "copy() (utilities.core.attrdict method)": [[622, "utilities.core.AttrDict.copy"]], "from_nested_dict() (utilities.core.attrdict class method)": [[623, "utilities.core.AttrDict.from_nested_dict"]], "fromkeys() (utilities.core.attrdict method)": [[624, "utilities.core.AttrDict.fromkeys"]], "get() (utilities.core.attrdict method)": [[625, "utilities.core.AttrDict.get"]], "items() (utilities.core.attrdict method)": [[626, "utilities.core.AttrDict.items"]], "keys() (utilities.core.attrdict method)": [[627, "utilities.core.AttrDict.keys"]], "pop() (utilities.core.attrdict method)": [[628, "utilities.core.AttrDict.pop"]], "popitem() (utilities.core.attrdict method)": [[629, "utilities.core.AttrDict.popitem"]], "setdefault() (utilities.core.attrdict method)": [[630, "utilities.core.AttrDict.setdefault"]], "update() (utilities.core.attrdict method)": [[631, "utilities.core.AttrDict.update"]], "values() (utilities.core.attrdict method)": [[632, "utilities.core.AttrDict.values"]], "yamlconfiguration (class in utilities.core)": [[633, "utilities.core.YAMLConfiguration"]], "__init__() (utilities.core.yamlconfiguration method)": [[634, "utilities.core.YAMLConfiguration.__init__"]], "config (utilities.core.yamlconfiguration property)": [[635, "utilities.core.YAMLConfiguration.config"]], "load() (utilities.core.yamlconfiguration method)": [[636, "utilities.core.YAMLConfiguration.load"]], "load_from_path() (utilities.core.yamlconfiguration class method)": [[637, "utilities.core.YAMLConfiguration.load_from_path"]], "reload() (utilities.core.yamlconfiguration method)": [[638, "utilities.core.YAMLConfiguration.reload"]], "set_on_disk() (utilities.core.yamlconfiguration class method)": [[639, "utilities.core.YAMLConfiguration.set_on_disk"]], "set_param() (utilities.core.yamlconfiguration method)": [[640, "utilities.core.YAMLConfiguration.set_param"]], "enforce_units() (in module utilities.core)": [[641, "utilities.core.enforce_units"]], "find_descriptors() (in module utilities.core)": [[642, "utilities.core.find_descriptors"]], "getfromdict() (in module utilities.core)": [[643, "utilities.core.getFromDict"]], "merge_dicts() (in module utilities.core)": [[644, "utilities.core.merge_dicts"]], "produce_dict_heading() (in module utilities.core)": [[645, "utilities.core.produce_dict_heading"]], "rgetattr() (in module utilities.core)": [[646, "utilities.core.rgetattr"]], "rsetattr() (in module utilities.core)": [[647, "utilities.core.rsetattr"]], "setindict() (in module utilities.core)": [[648, "utilities.core.setInDict"]], "utilities.logging": [[649, "module-utilities.logging"]], "utilities.plot": [[650, "module-utilities.plot"]], "get_hips_image() (in module utilities.plot)": [[651, "utilities.plot.get_hips_image"]], "plot_healpix() (in module utilities.plot)": [[652, "utilities.plot.plot_healpix"]], "plot_hips() (in module utilities.plot)": [[653, "utilities.plot.plot_hips"]], "set_style() (in module utilities.plot)": [[654, "utilities.plot.set_style"]], "utilities.sql": [[655, "module-utilities.sql"]], "chunk_sql_query_operation() (in module utilities.sql)": [[656, "utilities.sql.chunk_sql_query_operation"]], "chunk_sql_table_operation() (in module utilities.sql)": [[657, "utilities.sql.chunk_sql_table_operation"]], "utilities.text": [[658, "module-utilities.text"]], "get_package_version() (in module utilities.text)": [[659, "utilities.text.get_package_version"]], "print_cli_header() (in module utilities.text)": [[660, "utilities.text.print_cli_header"]], "print_version() (in module utilities.text)": [[661, "utilities.text.print_version"]], "utilities.types": [[662, "module-utilities.types"]], "columnmap (class in utilities.types)": [[663, "utilities.types.ColumnMap"]], "dec (utilities.types.columnmap attribute)": [[664, "utilities.types.ColumnMap.DEC"]], "dec_err (utilities.types.columnmap attribute)": [[665, "utilities.types.ColumnMap.DEC_ERR"]], "gal_b (utilities.types.columnmap attribute)": [[666, "utilities.types.ColumnMap.GAL_B"]], "gal_b_err (utilities.types.columnmap attribute)": [[667, "utilities.types.ColumnMap.GAL_B_ERR"]], "gal_l (utilities.types.columnmap attribute)": [[668, "utilities.types.ColumnMap.GAL_L"]], "gal_l_err (utilities.types.columnmap attribute)": [[669, "utilities.types.ColumnMap.GAL_L_ERR"]], "name (utilities.types.columnmap attribute)": [[670, "utilities.types.ColumnMap.NAME"]], "ra (utilities.types.columnmap attribute)": [[671, "utilities.types.ColumnMap.RA"]], "ra_err (utilities.types.columnmap attribute)": [[672, "utilities.types.ColumnMap.RA_ERR"]], "sep (utilities.types.columnmap attribute)": [[673, "utilities.types.ColumnMap.SEP"]], "type (utilities.types.columnmap attribute)": [[674, "utilities.types.ColumnMap.TYPE"]], "z (utilities.types.columnmap attribute)": [[675, "utilities.types.ColumnMap.Z"]], "__init__() (utilities.types.columnmap method)": [[676, "utilities.types.ColumnMap.__init__"]], "construct() (utilities.types.columnmap class method)": [[677, "utilities.types.ColumnMap.construct"]], "copy() (utilities.types.columnmap method)": [[678, "utilities.types.ColumnMap.copy"]], "dict() (utilities.types.columnmap method)": [[679, "utilities.types.ColumnMap.dict"]], "from_orm() (utilities.types.columnmap class method)": [[680, "utilities.types.ColumnMap.from_orm"]], "json() (utilities.types.columnmap method)": [[681, "utilities.types.ColumnMap.json"]], "model_computed_fields (utilities.types.columnmap attribute)": [[682, "utilities.types.ColumnMap.model_computed_fields"]], "model_config (utilities.types.columnmap attribute)": [[683, "utilities.types.ColumnMap.model_config"]], "model_construct() (utilities.types.columnmap class method)": [[684, "utilities.types.ColumnMap.model_construct"]], "model_copy() (utilities.types.columnmap method)": [[685, "utilities.types.ColumnMap.model_copy"]], "model_dump() (utilities.types.columnmap method)": [[686, "utilities.types.ColumnMap.model_dump"]], "model_dump_json() (utilities.types.columnmap method)": [[687, "utilities.types.ColumnMap.model_dump_json"]], "model_extra (utilities.types.columnmap property)": [[688, "utilities.types.ColumnMap.model_extra"]], "model_fields (utilities.types.columnmap attribute)": [[689, "utilities.types.ColumnMap.model_fields"]], "model_fields_set (utilities.types.columnmap property)": [[690, "utilities.types.ColumnMap.model_fields_set"]], "model_json_schema() (utilities.types.columnmap class method)": [[691, "utilities.types.ColumnMap.model_json_schema"]], "model_parametrized_name() (utilities.types.columnmap class method)": [[692, "utilities.types.ColumnMap.model_parametrized_name"]], "model_post_init() (utilities.types.columnmap method)": [[693, "utilities.types.ColumnMap.model_post_init"]], "model_rebuild() (utilities.types.columnmap class method)": [[694, "utilities.types.ColumnMap.model_rebuild"]], "model_validate() (utilities.types.columnmap class method)": [[695, "utilities.types.ColumnMap.model_validate"]], "model_validate_json() (utilities.types.columnmap class method)": [[696, "utilities.types.ColumnMap.model_validate_json"]], "model_validate_strings() (utilities.types.columnmap class method)": [[697, "utilities.types.ColumnMap.model_validate_strings"]], "parse_file() (utilities.types.columnmap class method)": [[698, "utilities.types.ColumnMap.parse_file"]], "parse_obj() (utilities.types.columnmap class method)": [[699, "utilities.types.ColumnMap.parse_obj"]], "parse_raw() (utilities.types.columnmap class method)": [[700, "utilities.types.ColumnMap.parse_raw"]], "schema() (utilities.types.columnmap class method)": [[701, "utilities.types.ColumnMap.schema"]], "schema_json() (utilities.types.columnmap class method)": [[702, "utilities.types.ColumnMap.schema_json"]], "search_inverse() (utilities.types.columnmap method)": [[703, "utilities.types.ColumnMap.search_inverse"]], "update_forward_refs() (utilities.types.columnmap class method)": [[704, "utilities.types.ColumnMap.update_forward_refs"]], "validate() (utilities.types.columnmap class method)": [[705, "utilities.types.ColumnMap.validate"]], "validate_table_column_no_unit() (utilities.types.columnmap static method)": [[706, "utilities.types.ColumnMap.validate_table_column_no_unit"]], "validate_table_column_unit() (utilities.types.columnmap static method)": [[707, "utilities.types.ColumnMap.validate_table_column_unit"]], "columnstderrorspecifier (class in utilities.types)": [[708, "utilities.types.ColumnStdErrorSpecifier"]], "__init__() (utilities.types.columnstderrorspecifier method)": [[709, "utilities.types.ColumnStdErrorSpecifier.__init__"]], "base_column (utilities.types.columnstderrorspecifier attribute)": [[710, "utilities.types.ColumnStdErrorSpecifier.base_column"]], "construct() (utilities.types.columnstderrorspecifier class method)": [[711, "utilities.types.ColumnStdErrorSpecifier.construct"]], "copy() (utilities.types.columnstderrorspecifier method)": [[712, "utilities.types.ColumnStdErrorSpecifier.copy"]], "dict() (utilities.types.columnstderrorspecifier method)": [[713, "utilities.types.ColumnStdErrorSpecifier.dict"]], "error_column (utilities.types.columnstderrorspecifier attribute)": [[714, "utilities.types.ColumnStdErrorSpecifier.error_column"]], "error_convert_to_std (utilities.types.columnstderrorspecifier attribute)": [[715, "utilities.types.ColumnStdErrorSpecifier.error_convert_to_std"]], "error_value (utilities.types.columnstderrorspecifier attribute)": [[716, "utilities.types.ColumnStdErrorSpecifier.error_value"]], "from_orm() (utilities.types.columnstderrorspecifier class method)": [[717, "utilities.types.ColumnStdErrorSpecifier.from_orm"]], "json() (utilities.types.columnstderrorspecifier method)": [[718, "utilities.types.ColumnStdErrorSpecifier.json"]], "model_computed_fields (utilities.types.columnstderrorspecifier attribute)": [[719, "utilities.types.ColumnStdErrorSpecifier.model_computed_fields"]], "model_config (utilities.types.columnstderrorspecifier attribute)": [[720, "utilities.types.ColumnStdErrorSpecifier.model_config"]], "model_construct() (utilities.types.columnstderrorspecifier class method)": [[721, "utilities.types.ColumnStdErrorSpecifier.model_construct"]], "model_copy() (utilities.types.columnstderrorspecifier method)": [[722, "utilities.types.ColumnStdErrorSpecifier.model_copy"]], "model_dump() (utilities.types.columnstderrorspecifier method)": [[723, "utilities.types.ColumnStdErrorSpecifier.model_dump"]], "model_dump_json() (utilities.types.columnstderrorspecifier method)": [[724, "utilities.types.ColumnStdErrorSpecifier.model_dump_json"]], "model_extra (utilities.types.columnstderrorspecifier property)": [[725, "utilities.types.ColumnStdErrorSpecifier.model_extra"]], "model_fields (utilities.types.columnstderrorspecifier attribute)": [[726, "utilities.types.ColumnStdErrorSpecifier.model_fields"]], "model_fields_set (utilities.types.columnstderrorspecifier property)": [[727, "utilities.types.ColumnStdErrorSpecifier.model_fields_set"]], "model_json_schema() (utilities.types.columnstderrorspecifier class method)": [[728, "utilities.types.ColumnStdErrorSpecifier.model_json_schema"]], "model_parametrized_name() (utilities.types.columnstderrorspecifier class method)": [[729, "utilities.types.ColumnStdErrorSpecifier.model_parametrized_name"]], "model_post_init() (utilities.types.columnstderrorspecifier method)": [[730, "utilities.types.ColumnStdErrorSpecifier.model_post_init"]], "model_rebuild() (utilities.types.columnstderrorspecifier class method)": [[731, "utilities.types.ColumnStdErrorSpecifier.model_rebuild"]], "model_validate() (utilities.types.columnstderrorspecifier class method)": [[732, "utilities.types.ColumnStdErrorSpecifier.model_validate"]], "model_validate_json() (utilities.types.columnstderrorspecifier class method)": [[733, "utilities.types.ColumnStdErrorSpecifier.model_validate_json"]], "model_validate_strings() (utilities.types.columnstderrorspecifier class method)": [[734, "utilities.types.ColumnStdErrorSpecifier.model_validate_strings"]], "parse_file() (utilities.types.columnstderrorspecifier class method)": [[735, "utilities.types.ColumnStdErrorSpecifier.parse_file"]], "parse_obj() (utilities.types.columnstderrorspecifier class method)": [[736, "utilities.types.ColumnStdErrorSpecifier.parse_obj"]], "parse_raw() (utilities.types.columnstderrorspecifier class method)": [[737, "utilities.types.ColumnStdErrorSpecifier.parse_raw"]], "schema() (utilities.types.columnstderrorspecifier class method)": [[738, "utilities.types.ColumnStdErrorSpecifier.schema"]], "schema_json() (utilities.types.columnstderrorspecifier class method)": [[739, "utilities.types.ColumnStdErrorSpecifier.schema_json"]], "update_forward_refs() (utilities.types.columnstderrorspecifier class method)": [[740, "utilities.types.ColumnStdErrorSpecifier.update_forward_refs"]], "validate() (utilities.types.columnstderrorspecifier class method)": [[741, "utilities.types.ColumnStdErrorSpecifier.validate"]], "validate_on_table() (utilities.types.columnstderrorspecifier method)": [[742, "utilities.types.ColumnStdErrorSpecifier.validate_on_table"]], "validator() (utilities.types.columnstderrorspecifier method)": [[743, "utilities.types.ColumnStdErrorSpecifier.validator"]], "icrscoordinatestderrorspecifier (class in utilities.types)": [[744, "utilities.types.ICRSCoordinateStdErrorSpecifier"]], "__init__() (utilities.types.icrscoordinatestderrorspecifier method)": [[745, "utilities.types.ICRSCoordinateStdErrorSpecifier.__init__"]], "check_empty() (utilities.types.icrscoordinatestderrorspecifier method)": [[746, "utilities.types.ICRSCoordinateStdErrorSpecifier.check_empty"]], "construct() (utilities.types.icrscoordinatestderrorspecifier class method)": [[747, "utilities.types.ICRSCoordinateStdErrorSpecifier.construct"]], "copy() (utilities.types.icrscoordinatestderrorspecifier method)": [[748, "utilities.types.ICRSCoordinateStdErrorSpecifier.copy"]], "dict() (utilities.types.icrscoordinatestderrorspecifier method)": [[749, "utilities.types.ICRSCoordinateStdErrorSpecifier.dict"]], "from_orm() (utilities.types.icrscoordinatestderrorspecifier class method)": [[750, "utilities.types.ICRSCoordinateStdErrorSpecifier.from_orm"]], "json() (utilities.types.icrscoordinatestderrorspecifier method)": [[751, "utilities.types.ICRSCoordinateStdErrorSpecifier.json"]], "lat_error (utilities.types.icrscoordinatestderrorspecifier attribute)": [[752, "utilities.types.ICRSCoordinateStdErrorSpecifier.lat_error"]], "lon_error (utilities.types.icrscoordinatestderrorspecifier attribute)": [[753, "utilities.types.ICRSCoordinateStdErrorSpecifier.lon_error"]], "mode (utilities.types.icrscoordinatestderrorspecifier property)": [[754, "utilities.types.ICRSCoordinateStdErrorSpecifier.mode"]], "model_computed_fields (utilities.types.icrscoordinatestderrorspecifier attribute)": [[755, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_computed_fields"]], "model_config (utilities.types.icrscoordinatestderrorspecifier attribute)": [[756, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_config"]], "model_construct() (utilities.types.icrscoordinatestderrorspecifier class method)": [[757, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_construct"]], "model_copy() (utilities.types.icrscoordinatestderrorspecifier method)": [[758, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_copy"]], "model_dump() (utilities.types.icrscoordinatestderrorspecifier method)": [[759, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_dump"]], "model_dump_json() (utilities.types.icrscoordinatestderrorspecifier method)": [[760, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_dump_json"]], "model_extra (utilities.types.icrscoordinatestderrorspecifier property)": [[761, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_extra"]], "model_fields (utilities.types.icrscoordinatestderrorspecifier attribute)": [[762, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_fields"]], "model_fields_set (utilities.types.icrscoordinatestderrorspecifier property)": [[763, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_fields_set"]], "model_json_schema() (utilities.types.icrscoordinatestderrorspecifier class method)": [[764, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_json_schema"]], "model_parametrized_name() (utilities.types.icrscoordinatestderrorspecifier class method)": [[765, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_parametrized_name"]], "model_post_init() (utilities.types.icrscoordinatestderrorspecifier method)": [[766, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_post_init"]], "model_rebuild() (utilities.types.icrscoordinatestderrorspecifier class method)": [[767, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_rebuild"]], "model_validate() (utilities.types.icrscoordinatestderrorspecifier class method)": [[768, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate"]], "model_validate_json() (utilities.types.icrscoordinatestderrorspecifier class method)": [[769, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate_json"]], "model_validate_strings() (utilities.types.icrscoordinatestderrorspecifier class method)": [[770, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate_strings"]], "parse_file() (utilities.types.icrscoordinatestderrorspecifier class method)": [[771, "utilities.types.ICRSCoordinateStdErrorSpecifier.parse_file"]], "parse_obj() (utilities.types.icrscoordinatestderrorspecifier class method)": [[772, "utilities.types.ICRSCoordinateStdErrorSpecifier.parse_obj"]], "parse_raw() (utilities.types.icrscoordinatestderrorspecifier class method)": [[773, "utilities.types.ICRSCoordinateStdErrorSpecifier.parse_raw"]], "position_error (utilities.types.icrscoordinatestderrorspecifier attribute)": [[774, "utilities.types.ICRSCoordinateStdErrorSpecifier.position_error"]], "schema() (utilities.types.icrscoordinatestderrorspecifier class method)": [[775, "utilities.types.ICRSCoordinateStdErrorSpecifier.schema"]], "schema_json() (utilities.types.icrscoordinatestderrorspecifier class method)": [[776, "utilities.types.ICRSCoordinateStdErrorSpecifier.schema_json"]], "update_forward_refs() (utilities.types.icrscoordinatestderrorspecifier class method)": [[777, "utilities.types.ICRSCoordinateStdErrorSpecifier.update_forward_refs"]], "validate() (utilities.types.icrscoordinatestderrorspecifier class method)": [[778, "utilities.types.ICRSCoordinateStdErrorSpecifier.validate"]], "validator() (utilities.types.icrscoordinatestderrorspecifier method)": [[779, "utilities.types.ICRSCoordinateStdErrorSpecifier.validator"]], "registry (class in utilities.types)": [[780, "utilities.types.Registry"]], "__init__() (utilities.types.registry method)": [[781, "utilities.types.Registry.__init__"]], "add() (utilities.types.registry method)": [[782, "utilities.types.Registry.add"]], "as_list() (utilities.types.registry method)": [[783, "utilities.types.Registry.as_list"]], "clear() (utilities.types.registry method)": [[784, "utilities.types.Registry.clear"]], "copy() (utilities.types.registry method)": [[785, "utilities.types.Registry.copy"]], "fromkeys() (utilities.types.registry method)": [[786, "utilities.types.Registry.fromkeys"]], "get() (utilities.types.registry method)": [[787, "utilities.types.Registry.get"]], "items() (utilities.types.registry method)": [[788, "utilities.types.Registry.items"]], "keys() (utilities.types.registry method)": [[789, "utilities.types.Registry.keys"]], "pop() (utilities.types.registry method)": [[790, "utilities.types.Registry.pop"]], "popitem() (utilities.types.registry method)": [[791, "utilities.types.Registry.popitem"]], "setdefault() (utilities.types.registry method)": [[792, "utilities.types.Registry.setdefault"]], "update() (utilities.types.registry method)": [[793, "utilities.types.Registry.update"]], "values() (utilities.types.registry method)": [[794, "utilities.types.Registry.values"]], "sourcetableschemasettings (class in utilities.types)": [[795, "utilities.types.SourceTableSchemaSettings"]], "__init__() (utilities.types.sourcetableschemasettings method)": [[796, "utilities.types.SourceTableSchemaSettings.__init__"]], "construct() (utilities.types.sourcetableschemasettings class method)": [[797, "utilities.types.SourceTableSchemaSettings.construct"]], "copy() (utilities.types.sourcetableschemasettings method)": [[798, "utilities.types.SourceTableSchemaSettings.copy"]], "default_coord_system (utilities.types.sourcetableschemasettings attribute)": [[799, "utilities.types.SourceTableSchemaSettings.default_coord_system"]], "dict() (utilities.types.sourcetableschemasettings method)": [[800, "utilities.types.SourceTableSchemaSettings.dict"]], "from_orm() (utilities.types.sourcetableschemasettings class method)": [[801, "utilities.types.SourceTableSchemaSettings.from_orm"]], "json() (utilities.types.sourcetableschemasettings method)": [[802, "utilities.types.SourceTableSchemaSettings.json"]], "model_computed_fields (utilities.types.sourcetableschemasettings attribute)": [[803, "utilities.types.SourceTableSchemaSettings.model_computed_fields"]], "model_config (utilities.types.sourcetableschemasettings attribute)": [[804, "utilities.types.SourceTableSchemaSettings.model_config"]], "model_construct() (utilities.types.sourcetableschemasettings class method)": [[805, "utilities.types.SourceTableSchemaSettings.model_construct"]], "model_copy() (utilities.types.sourcetableschemasettings method)": [[806, "utilities.types.SourceTableSchemaSettings.model_copy"]], "model_dump() (utilities.types.sourcetableschemasettings method)": [[807, "utilities.types.SourceTableSchemaSettings.model_dump"]], "model_dump_json() (utilities.types.sourcetableschemasettings method)": [[808, "utilities.types.SourceTableSchemaSettings.model_dump_json"]], "model_extra (utilities.types.sourcetableschemasettings property)": [[809, "utilities.types.SourceTableSchemaSettings.model_extra"]], "model_fields (utilities.types.sourcetableschemasettings attribute)": [[810, "utilities.types.SourceTableSchemaSettings.model_fields"]], "model_fields_set (utilities.types.sourcetableschemasettings property)": [[811, "utilities.types.SourceTableSchemaSettings.model_fields_set"]], "model_json_schema() (utilities.types.sourcetableschemasettings class method)": [[812, "utilities.types.SourceTableSchemaSettings.model_json_schema"]], "model_parametrized_name() (utilities.types.sourcetableschemasettings class method)": [[813, "utilities.types.SourceTableSchemaSettings.model_parametrized_name"]], "model_post_init() (utilities.types.sourcetableschemasettings method)": [[814, "utilities.types.SourceTableSchemaSettings.model_post_init"]], "model_rebuild() (utilities.types.sourcetableschemasettings class method)": [[815, "utilities.types.SourceTableSchemaSettings.model_rebuild"]], "model_validate() (utilities.types.sourcetableschemasettings class method)": [[816, "utilities.types.SourceTableSchemaSettings.model_validate"]], "model_validate_json() (utilities.types.sourcetableschemasettings class method)": [[817, "utilities.types.SourceTableSchemaSettings.model_validate_json"]], "model_validate_strings() (utilities.types.sourcetableschemasettings class method)": [[818, "utilities.types.SourceTableSchemaSettings.model_validate_strings"]], "object_type_separator (utilities.types.sourcetableschemasettings attribute)": [[819, "utilities.types.SourceTableSchemaSettings.object_type_separator"]], "parse_file() (utilities.types.sourcetableschemasettings class method)": [[820, "utilities.types.SourceTableSchemaSettings.parse_file"]], "parse_obj() (utilities.types.sourcetableschemasettings class method)": [[821, "utilities.types.SourceTableSchemaSettings.parse_obj"]], "parse_raw() (utilities.types.sourcetableschemasettings class method)": [[822, "utilities.types.SourceTableSchemaSettings.parse_raw"]], "schema() (utilities.types.sourcetableschemasettings class method)": [[823, "utilities.types.SourceTableSchemaSettings.schema"]], "schema_json() (utilities.types.sourcetableschemasettings class method)": [[824, "utilities.types.SourceTableSchemaSettings.schema_json"]], "update_forward_refs() (utilities.types.sourcetableschemasettings class method)": [[825, "utilities.types.SourceTableSchemaSettings.update_forward_refs"]], "validate() (utilities.types.sourcetableschemasettings class method)": [[826, "utilities.types.SourceTableSchemaSettings.validate"]], "tablecolumn (class in utilities.types)": [[827, "utilities.types.TableColumn"]], "__init__() (utilities.types.tablecolumn method)": [[828, "utilities.types.TableColumn.__init__"]], "construct() (utilities.types.tablecolumn class method)": [[829, "utilities.types.TableColumn.construct"]], "copy() (utilities.types.tablecolumn method)": [[830, "utilities.types.TableColumn.copy"]], "dict() (utilities.types.tablecolumn method)": [[831, "utilities.types.TableColumn.dict"]], "from_orm() (utilities.types.tablecolumn class method)": [[832, "utilities.types.TableColumn.from_orm"]], "json() (utilities.types.tablecolumn method)": [[833, "utilities.types.TableColumn.json"]], "model_computed_fields (utilities.types.tablecolumn attribute)": [[834, "utilities.types.TableColumn.model_computed_fields"]], "model_config (utilities.types.tablecolumn attribute)": [[835, "utilities.types.TableColumn.model_config"]], "model_construct() (utilities.types.tablecolumn class method)": [[836, "utilities.types.TableColumn.model_construct"]], "model_copy() (utilities.types.tablecolumn method)": [[837, "utilities.types.TableColumn.model_copy"]], "model_dump() (utilities.types.tablecolumn method)": [[838, "utilities.types.TableColumn.model_dump"]], "model_dump_json() (utilities.types.tablecolumn method)": [[839, "utilities.types.TableColumn.model_dump_json"]], "model_extra (utilities.types.tablecolumn property)": [[840, "utilities.types.TableColumn.model_extra"]], "model_fields (utilities.types.tablecolumn attribute)": [[841, "utilities.types.TableColumn.model_fields"]], "model_fields_set (utilities.types.tablecolumn property)": [[842, "utilities.types.TableColumn.model_fields_set"]], "model_json_schema() (utilities.types.tablecolumn class method)": [[843, "utilities.types.TableColumn.model_json_schema"]], "model_parametrized_name() (utilities.types.tablecolumn class method)": [[844, "utilities.types.TableColumn.model_parametrized_name"]], "model_post_init() (utilities.types.tablecolumn method)": [[845, "utilities.types.TableColumn.model_post_init"]], "model_rebuild() (utilities.types.tablecolumn class method)": [[846, "utilities.types.TableColumn.model_rebuild"]], "model_validate() (utilities.types.tablecolumn class method)": [[847, "utilities.types.TableColumn.model_validate"]], "model_validate_json() (utilities.types.tablecolumn class method)": [[848, "utilities.types.TableColumn.model_validate_json"]], "model_validate_strings() (utilities.types.tablecolumn class method)": [[849, "utilities.types.TableColumn.model_validate_strings"]], "name (utilities.types.tablecolumn attribute)": [[850, "utilities.types.TableColumn.name"]], "parse_file() (utilities.types.tablecolumn class method)": [[851, "utilities.types.TableColumn.parse_file"]], "parse_obj() (utilities.types.tablecolumn class method)": [[852, "utilities.types.TableColumn.parse_obj"]], "parse_raw() (utilities.types.tablecolumn class method)": [[853, "utilities.types.TableColumn.parse_raw"]], "schema() (utilities.types.tablecolumn class method)": [[854, "utilities.types.TableColumn.schema"]], "schema_json() (utilities.types.tablecolumn class method)": [[855, "utilities.types.TableColumn.schema_json"]], "unit (utilities.types.tablecolumn attribute)": [[856, "utilities.types.TableColumn.unit"]], "update_forward_refs() (utilities.types.tablecolumn class method)": [[857, "utilities.types.TableColumn.update_forward_refs"]], "validate() (utilities.types.tablecolumn class method)": [[858, "utilities.types.TableColumn.validate"]], "construct_template() (in module utilities.types)": [[859, "utilities.types.construct_template"]], "convert_np_type_to_sql() (in module utilities.types)": [[860, "utilities.types.convert_np_type_to_sql"]]}})
Search.setIndex({"docnames": ["_as_gen/cross_reference", "_as_gen/cross_reference.CrossMatchDatabase", "_as_gen/cross_reference.CrossMatchDatabase.__init__", "_as_gen/cross_reference.CrossMatchDatabase.add_catalog", "_as_gen/cross_reference.CrossMatchDatabase.build_meta_table", "_as_gen/cross_reference.CrossMatchDatabase.check_meta", "_as_gen/cross_reference.CrossMatchDatabase.correct_column_names", "_as_gen/cross_reference.CrossMatchDatabase.correct_object_types", "_as_gen/cross_reference.CrossMatchDatabase.drop_table", "_as_gen/cross_reference.CrossMatchDatabase.from_file", "_as_gen/cross_reference.CrossMatchDatabase.has_catalog", "_as_gen/cross_reference.CrossMatchDatabase.match_tables", "_as_gen/cross_reference.CrossMatchDatabase.meta", "_as_gen/cross_reference.CrossMatchDatabase.meta_add", "_as_gen/cross_reference.CrossMatchDatabase.meta_remove", "_as_gen/cross_reference.CrossMatchDatabase.meta_reset", "_as_gen/cross_reference.CrossMatchDatabase.query", "_as_gen/cross_reference.CrossMatchDatabase.tables", "_as_gen/cross_reference.cross_match", "_as_gen/cross_reference.cross_match_table", "_as_gen/schema", "_as_gen/schema.ReductionSchema", "_as_gen/schema.ReductionSchema.DBPATH", "_as_gen/schema.ReductionSchema.INSTRUMENTAL", "_as_gen/schema.ReductionSchema.INSTRUMENT_PARAMS", "_as_gen/schema.ReductionSchema.IO_PARAMS", "_as_gen/schema.ReductionSchema.OBJECT_PARAMS", "_as_gen/schema.ReductionSchema.OTYPES", "_as_gen/schema.ReductionSchema.POISSON", "_as_gen/schema.ReductionSchema.POISSON_PARAMS", "_as_gen/schema.ReductionSchema.PSF", "_as_gen/schema.ReductionSchema.REFDBS", "_as_gen/schema.ReductionSchema.RUN_PARAMS", "_as_gen/schema.ReductionSchema.__init__", "_as_gen/schema.ReductionSchema.clear", "_as_gen/schema.ReductionSchema.copy", "_as_gen/schema.ReductionSchema.from_file", "_as_gen/schema.ReductionSchema.fromkeys", "_as_gen/schema.ReductionSchema.get", "_as_gen/schema.ReductionSchema.isvalid", "_as_gen/schema.ReductionSchema.items", "_as_gen/schema.ReductionSchema.keys", "_as_gen/schema.ReductionSchema.pop", "_as_gen/schema.ReductionSchema.popitem", "_as_gen/schema.ReductionSchema.setdefault", "_as_gen/schema.ReductionSchema.update", "_as_gen/schema.ReductionSchema.values", "_as_gen/schema.Schema", "_as_gen/schema.Schema.__init__", "_as_gen/schema.Schema.clear", "_as_gen/schema.Schema.copy", "_as_gen/schema.Schema.from_file", "_as_gen/schema.Schema.fromkeys", "_as_gen/schema.Schema.get", "_as_gen/schema.Schema.isvalid", "_as_gen/schema.Schema.items", "_as_gen/schema.Schema.keys", "_as_gen/schema.Schema.pop", "_as_gen/schema.Schema.popitem", "_as_gen/schema.Schema.setdefault", "_as_gen/schema.Schema.update", "_as_gen/schema.Schema.values", "_as_gen/schema.SourceTableSchema", "_as_gen/schema.SourceTableSchema.__init__", "_as_gen/schema.SourceTableSchema.available_coordinate_frames", "_as_gen/schema.SourceTableSchema.clear", "_as_gen/schema.SourceTableSchema.column_map", "_as_gen/schema.SourceTableSchema.construct", "_as_gen/schema.SourceTableSchema.coordinate_columns", "_as_gen/schema.SourceTableSchema.coordinate_frame", "_as_gen/schema.SourceTableSchema.coordinate_system", "_as_gen/schema.SourceTableSchema.copy", "_as_gen/schema.SourceTableSchema.default_coord_system", "_as_gen/schema.SourceTableSchema.from_file", "_as_gen/schema.SourceTableSchema.fromkeys", "_as_gen/schema.SourceTableSchema.get", "_as_gen/schema.SourceTableSchema.inv_column_map", "_as_gen/schema.SourceTableSchema.isvalid", "_as_gen/schema.SourceTableSchema.items", "_as_gen/schema.SourceTableSchema.keys", "_as_gen/schema.SourceTableSchema.object_map", "_as_gen/schema.SourceTableSchema.pop", "_as_gen/schema.SourceTableSchema.popitem", "_as_gen/schema.SourceTableSchema.setdefault", "_as_gen/schema.SourceTableSchema.update", "_as_gen/schema.SourceTableSchema.values", "_as_gen/stats.utilities", "_as_gen/stats.utilities.uniform_sample_spherical", "_as_gen/structures.databases", "_as_gen/structures.databases.DBRegistry", "_as_gen/structures.databases.DBRegistry.__init__", "_as_gen/structures.databases.DBRegistry.as_list", "_as_gen/structures.databases.DBRegistry.clear", "_as_gen/structures.databases.DBRegistry.copy", "_as_gen/structures.databases.DBRegistry.fromkeys", "_as_gen/structures.databases.DBRegistry.get", "_as_gen/structures.databases.DBRegistry.items", "_as_gen/structures.databases.DBRegistry.keys", "_as_gen/structures.databases.DBRegistry.pop", "_as_gen/structures.databases.DBRegistry.popitem", "_as_gen/structures.databases.DBRegistry.setdefault", "_as_gen/structures.databases.DBRegistry.update", "_as_gen/structures.databases.DBRegistry.values", "_as_gen/structures.databases.LocalDatabase", "_as_gen/structures.databases.LocalDatabase.__init__", "_as_gen/structures.databases.LocalDatabase.add_sources_to_poisson", "_as_gen/structures.databases.LocalDatabase.class_table_schema", "_as_gen/structures.databases.LocalDatabase.count", "_as_gen/structures.databases.LocalDatabase.create_poisson_atlas", "_as_gen/structures.databases.LocalDatabase.default_poisson_map", "_as_gen/structures.databases.LocalDatabase.get_default_poisson_atlas", "_as_gen/structures.databases.LocalDatabase.get_poisson_atlas", "_as_gen/structures.databases.LocalDatabase.poisson_map", "_as_gen/structures.databases.LocalDatabase.query_radius", "_as_gen/structures.databases.LocalDatabase.random_sample_count", "_as_gen/structures.databases.LocalDatabase.set_poisson_atlas", "_as_gen/structures.databases.LocalDatabase.source_match", "_as_gen/structures.databases.NED", "_as_gen/structures.databases.NED.__init__", "_as_gen/structures.databases.NED.add_sources_to_poisson", "_as_gen/structures.databases.NED.class_table_schema", "_as_gen/structures.databases.NED.count", "_as_gen/structures.databases.NED.create_poisson_atlas", "_as_gen/structures.databases.NED.default_poisson_map", "_as_gen/structures.databases.NED.get_default_poisson_atlas", "_as_gen/structures.databases.NED.get_poisson_atlas", "_as_gen/structures.databases.NED.poisson_map", "_as_gen/structures.databases.NED.query_radius", "_as_gen/structures.databases.NED.random_sample_count", "_as_gen/structures.databases.NED.set_poisson_atlas", "_as_gen/structures.databases.NED.source_match", "_as_gen/structures.databases.RemoteDatabase", "_as_gen/structures.databases.RemoteDatabase.__init__", "_as_gen/structures.databases.RemoteDatabase.add_sources_to_poisson", "_as_gen/structures.databases.RemoteDatabase.class_table_schema", "_as_gen/structures.databases.RemoteDatabase.count", "_as_gen/structures.databases.RemoteDatabase.create_poisson_atlas", "_as_gen/structures.databases.RemoteDatabase.default_poisson_map", "_as_gen/structures.databases.RemoteDatabase.get_default_poisson_atlas", "_as_gen/structures.databases.RemoteDatabase.get_poisson_atlas", "_as_gen/structures.databases.RemoteDatabase.poisson_map", "_as_gen/structures.databases.RemoteDatabase.query_radius", "_as_gen/structures.databases.RemoteDatabase.random_sample_count", "_as_gen/structures.databases.RemoteDatabase.set_poisson_atlas", "_as_gen/structures.databases.RemoteDatabase.source_match", "_as_gen/structures.databases.SIMBAD", "_as_gen/structures.databases.SIMBAD.__init__", "_as_gen/structures.databases.SIMBAD.add_sources_to_poisson", "_as_gen/structures.databases.SIMBAD.class_table_schema", "_as_gen/structures.databases.SIMBAD.count", "_as_gen/structures.databases.SIMBAD.create_poisson_atlas", "_as_gen/structures.databases.SIMBAD.default_poisson_map", "_as_gen/structures.databases.SIMBAD.get_default_poisson_atlas", "_as_gen/structures.databases.SIMBAD.get_poisson_atlas", "_as_gen/structures.databases.SIMBAD.poisson_map", "_as_gen/structures.databases.SIMBAD.query_radius", "_as_gen/structures.databases.SIMBAD.random_sample_count", "_as_gen/structures.databases.SIMBAD.set_poisson_atlas", "_as_gen/structures.databases.SIMBAD.source_match", "_as_gen/structures.databases.SourceDatabase", "_as_gen/structures.databases.SourceDatabase.__init__", "_as_gen/structures.databases.SourceDatabase.add_sources_to_poisson", "_as_gen/structures.databases.SourceDatabase.class_table_schema", "_as_gen/structures.databases.SourceDatabase.count", "_as_gen/structures.databases.SourceDatabase.create_poisson_atlas", "_as_gen/structures.databases.SourceDatabase.default_poisson_map", "_as_gen/structures.databases.SourceDatabase.get_default_poisson_atlas", "_as_gen/structures.databases.SourceDatabase.get_poisson_atlas", "_as_gen/structures.databases.SourceDatabase.poisson_map", "_as_gen/structures.databases.SourceDatabase.query_radius", "_as_gen/structures.databases.SourceDatabase.random_sample_count", "_as_gen/structures.databases.SourceDatabase.set_poisson_atlas", "_as_gen/structures.databases.SourceDatabase.source_match", "_as_gen/structures.databases.add_points_to_poisson_map", "_as_gen/structures.databases.get_database", "_as_gen/structures.databases.get_poisson_map", "_as_gen/structures.databases.get_poisson_path", "_as_gen/structures.map", "_as_gen/structures.map.Map", "_as_gen/structures.map.Map.__init__", "_as_gen/structures.map.Map.coordinate_frame", "_as_gen/structures.map.Map.data", "_as_gen/structures.map.Map.get_healpix_id", "_as_gen/structures.map.Map.pixel_positions", "_as_gen/structures.map.Map.plot", "_as_gen/structures.map.Map.transform_map_coordinates", "_as_gen/structures.map.MapAtlas", "_as_gen/structures.map.MapAtlas.__init__", "_as_gen/structures.map.MapAtlas.coordinate_frame", "_as_gen/structures.map.MapAtlas.generate", "_as_gen/structures.map.MapAtlas.get_map", "_as_gen/structures.map.MapAtlas.has_maps", "_as_gen/structures.map.MapAtlas.hdus", "_as_gen/structures.map.MapAtlas.map_names", "_as_gen/structures.map.MapAtlas.pixel_positions", "_as_gen/structures.map.MapAtlas.remove", "_as_gen/structures.map.MapAtlas.reshape_healpix", "_as_gen/structures.map.PoissonAtlas", "_as_gen/structures.map.PoissonAtlas.__init__", "_as_gen/structures.map.PoissonAtlas.append_to_fits", "_as_gen/structures.map.PoissonAtlas.build_poisson_map", "_as_gen/structures.map.PoissonAtlas.build_poisson_map_KNN", "_as_gen/structures.map.PoissonAtlas.build_poisson_map_MAP", "_as_gen/structures.map.PoissonAtlas.build_poisson_map_RNN", "_as_gen/structures.map.PoissonAtlas.build_poisson_map_regressor", "_as_gen/structures.map.PoissonAtlas.build_poisson_maps", "_as_gen/structures.map.PoissonAtlas.coordinate_frame", "_as_gen/structures.map.PoissonAtlas.generate", "_as_gen/structures.map.PoissonAtlas.get_map", "_as_gen/structures.map.PoissonAtlas.get_points", "_as_gen/structures.map.PoissonAtlas.has_maps", "_as_gen/structures.map.PoissonAtlas.hdus", "_as_gen/structures.map.PoissonAtlas.map_names", "_as_gen/structures.map.PoissonAtlas.pixel_positions", "_as_gen/structures.map.PoissonAtlas.remove", "_as_gen/structures.map.PoissonAtlas.reset", "_as_gen/structures.map.PoissonAtlas.reshape_healpix", "_as_gen/structures.map.PoissonAtlas.sample_from_database", "_as_gen/structures.map.StatAtlas", "_as_gen/structures.map.StatAtlas.__init__", "_as_gen/structures.map.StatAtlas.append_to_fits", "_as_gen/structures.map.StatAtlas.coordinate_frame", "_as_gen/structures.map.StatAtlas.generate", "_as_gen/structures.map.StatAtlas.get_map", "_as_gen/structures.map.StatAtlas.get_points", "_as_gen/structures.map.StatAtlas.has_maps", "_as_gen/structures.map.StatAtlas.hdus", "_as_gen/structures.map.StatAtlas.map_names", "_as_gen/structures.map.StatAtlas.pixel_positions", "_as_gen/structures.map.StatAtlas.remove", "_as_gen/structures.map.StatAtlas.reset", "_as_gen/structures.map.StatAtlas.reshape_healpix", "_as_gen/structures.map.StatAtlas.sample_from_database", "_as_gen/structures.table", "_as_gen/structures.table.SourceTable", "_as_gen/structures.table.SourceTable.ColumnClass", "_as_gen/structures.table.SourceTable.__init__", "_as_gen/structures.table.SourceTable.add_column", "_as_gen/structures.table.SourceTable.add_columns", "_as_gen/structures.table.SourceTable.add_index", "_as_gen/structures.table.SourceTable.add_row", "_as_gen/structures.table.SourceTable.append_to_fits", "_as_gen/structures.table.SourceTable.append_to_sql", "_as_gen/structures.table.SourceTable.argsort", "_as_gen/structures.table.SourceTable.as_array", "_as_gen/structures.table.SourceTable.colnames", "_as_gen/structures.table.SourceTable.convert_bytestring_to_unicode", "_as_gen/structures.table.SourceTable.convert_unicode_to_bytestring", "_as_gen/structures.table.SourceTable.copy", "_as_gen/structures.table.SourceTable.count_types", "_as_gen/structures.table.SourceTable.dtype", "_as_gen/structures.table.SourceTable.field", "_as_gen/structures.table.SourceTable.filled", "_as_gen/structures.table.SourceTable.from_pandas", "_as_gen/structures.table.SourceTable.generate_schema", "_as_gen/structures.table.SourceTable.get_coordinates", "_as_gen/structures.table.SourceTable.group_by", "_as_gen/structures.table.SourceTable.groups", "_as_gen/structures.table.SourceTable.has_masked_columns", "_as_gen/structures.table.SourceTable.has_masked_values", "_as_gen/structures.table.SourceTable.has_mixin_columns", "_as_gen/structures.table.SourceTable.iloc", "_as_gen/structures.table.SourceTable.index_column", "_as_gen/structures.table.SourceTable.index_mode", "_as_gen/structures.table.SourceTable.indices", "_as_gen/structures.table.SourceTable.info", "_as_gen/structures.table.SourceTable.insert_row", "_as_gen/structures.table.SourceTable.items", "_as_gen/structures.table.SourceTable.itercols", "_as_gen/structures.table.SourceTable.iterrows", "_as_gen/structures.table.SourceTable.keep_columns", "_as_gen/structures.table.SourceTable.keys", "_as_gen/structures.table.SourceTable.lat", "_as_gen/structures.table.SourceTable.loc", "_as_gen/structures.table.SourceTable.loc_indices", "_as_gen/structures.table.SourceTable.lon", "_as_gen/structures.table.SourceTable.mask", "_as_gen/structures.table.SourceTable.masked", "_as_gen/structures.table.SourceTable.meta", "_as_gen/structures.table.SourceTable.more", "_as_gen/structures.table.SourceTable.name", "_as_gen/structures.table.SourceTable.pformat", "_as_gen/structures.table.SourceTable.pformat_all", "_as_gen/structures.table.SourceTable.pprint", "_as_gen/structures.table.SourceTable.pprint_all", "_as_gen/structures.table.SourceTable.pprint_exclude_names", "_as_gen/structures.table.SourceTable.pprint_include_names", "_as_gen/structures.table.SourceTable.read", "_as_gen/structures.table.SourceTable.redshift", "_as_gen/structures.table.SourceTable.remove_column", "_as_gen/structures.table.SourceTable.remove_columns", "_as_gen/structures.table.SourceTable.remove_indices", "_as_gen/structures.table.SourceTable.remove_row", "_as_gen/structures.table.SourceTable.remove_rows", "_as_gen/structures.table.SourceTable.rename_column", "_as_gen/structures.table.SourceTable.rename_columns", "_as_gen/structures.table.SourceTable.replace_column", "_as_gen/structures.table.SourceTable.reverse", "_as_gen/structures.table.SourceTable.round", "_as_gen/structures.table.SourceTable.schema", "_as_gen/structures.table.SourceTable.show_in_browser", "_as_gen/structures.table.SourceTable.show_in_notebook", "_as_gen/structures.table.SourceTable.sort", "_as_gen/structures.table.SourceTable.to_pandas", "_as_gen/structures.table.SourceTable.type", "_as_gen/structures.table.SourceTable.type_native", "_as_gen/structures.table.SourceTable.update", "_as_gen/structures.table.SourceTable.values", "_as_gen/structures.table.SourceTable.values_equal", "_as_gen/structures.table.SourceTable.write", "_as_gen/utilities.core", "_as_gen/utilities.core.enforce_units", "_as_gen/utilities.core.getFromDict", "_as_gen/utilities.core.setInDict", "_as_gen/utilities.geo", "_as_gen/utilities.geo.convert_coordinates", "_as_gen/utilities.geo.convert_skycoord", "_as_gen/utilities.plot", "_as_gen/utilities.plot.plot_healpix", "_as_gen/utilities.plot.set_style", "api", "data_structures", "examples", "examples/Poisson_Maps", "getting_started", "index", "quickstart/configuration", "quickstart/install", "quickstart/overview", "user_guide", "user_guides/cross_matching", "user_guides/databases", "user_guides/logging", "user_guides/plots", "user_guides/psf", "user_guides/schema", "user_guides/source_data"], "filenames": ["_as_gen/cross_reference.rst", "_as_gen/cross_reference.CrossMatchDatabase.rst", "_as_gen/cross_reference.CrossMatchDatabase.__init__.rst", "_as_gen/cross_reference.CrossMatchDatabase.add_catalog.rst", "_as_gen/cross_reference.CrossMatchDatabase.build_meta_table.rst", "_as_gen/cross_reference.CrossMatchDatabase.check_meta.rst", "_as_gen/cross_reference.CrossMatchDatabase.correct_column_names.rst", "_as_gen/cross_reference.CrossMatchDatabase.correct_object_types.rst", "_as_gen/cross_reference.CrossMatchDatabase.drop_table.rst", "_as_gen/cross_reference.CrossMatchDatabase.from_file.rst", "_as_gen/cross_reference.CrossMatchDatabase.has_catalog.rst", "_as_gen/cross_reference.CrossMatchDatabase.match_tables.rst", "_as_gen/cross_reference.CrossMatchDatabase.meta.rst", "_as_gen/cross_reference.CrossMatchDatabase.meta_add.rst", "_as_gen/cross_reference.CrossMatchDatabase.meta_remove.rst", "_as_gen/cross_reference.CrossMatchDatabase.meta_reset.rst", "_as_gen/cross_reference.CrossMatchDatabase.query.rst", "_as_gen/cross_reference.CrossMatchDatabase.tables.rst", "_as_gen/cross_reference.cross_match.rst", "_as_gen/cross_reference.cross_match_table.rst", "_as_gen/schema.rst", "_as_gen/schema.ReductionSchema.rst", "_as_gen/schema.ReductionSchema.DBPATH.rst", "_as_gen/schema.ReductionSchema.INSTRUMENTAL.rst", "_as_gen/schema.ReductionSchema.INSTRUMENT_PARAMS.rst", "_as_gen/schema.ReductionSchema.IO_PARAMS.rst", "_as_gen/schema.ReductionSchema.OBJECT_PARAMS.rst", "_as_gen/schema.ReductionSchema.OTYPES.rst", "_as_gen/schema.ReductionSchema.POISSON.rst", "_as_gen/schema.ReductionSchema.POISSON_PARAMS.rst", "_as_gen/schema.ReductionSchema.PSF.rst", "_as_gen/schema.ReductionSchema.REFDBS.rst", "_as_gen/schema.ReductionSchema.RUN_PARAMS.rst", "_as_gen/schema.ReductionSchema.__init__.rst", "_as_gen/schema.ReductionSchema.clear.rst", "_as_gen/schema.ReductionSchema.copy.rst", "_as_gen/schema.ReductionSchema.from_file.rst", "_as_gen/schema.ReductionSchema.fromkeys.rst", "_as_gen/schema.ReductionSchema.get.rst", "_as_gen/schema.ReductionSchema.isvalid.rst", "_as_gen/schema.ReductionSchema.items.rst", "_as_gen/schema.ReductionSchema.keys.rst", "_as_gen/schema.ReductionSchema.pop.rst", "_as_gen/schema.ReductionSchema.popitem.rst", "_as_gen/schema.ReductionSchema.setdefault.rst", "_as_gen/schema.ReductionSchema.update.rst", "_as_gen/schema.ReductionSchema.values.rst", "_as_gen/schema.Schema.rst", "_as_gen/schema.Schema.__init__.rst", "_as_gen/schema.Schema.clear.rst", "_as_gen/schema.Schema.copy.rst", "_as_gen/schema.Schema.from_file.rst", "_as_gen/schema.Schema.fromkeys.rst", "_as_gen/schema.Schema.get.rst", "_as_gen/schema.Schema.isvalid.rst", "_as_gen/schema.Schema.items.rst", "_as_gen/schema.Schema.keys.rst", "_as_gen/schema.Schema.pop.rst", "_as_gen/schema.Schema.popitem.rst", "_as_gen/schema.Schema.setdefault.rst", "_as_gen/schema.Schema.update.rst", "_as_gen/schema.Schema.values.rst", "_as_gen/schema.SourceTableSchema.rst", "_as_gen/schema.SourceTableSchema.__init__.rst", "_as_gen/schema.SourceTableSchema.available_coordinate_frames.rst", "_as_gen/schema.SourceTableSchema.clear.rst", "_as_gen/schema.SourceTableSchema.column_map.rst", "_as_gen/schema.SourceTableSchema.construct.rst", "_as_gen/schema.SourceTableSchema.coordinate_columns.rst", "_as_gen/schema.SourceTableSchema.coordinate_frame.rst", "_as_gen/schema.SourceTableSchema.coordinate_system.rst", "_as_gen/schema.SourceTableSchema.copy.rst", "_as_gen/schema.SourceTableSchema.default_coord_system.rst", "_as_gen/schema.SourceTableSchema.from_file.rst", "_as_gen/schema.SourceTableSchema.fromkeys.rst", "_as_gen/schema.SourceTableSchema.get.rst", "_as_gen/schema.SourceTableSchema.inv_column_map.rst", "_as_gen/schema.SourceTableSchema.isvalid.rst", "_as_gen/schema.SourceTableSchema.items.rst", "_as_gen/schema.SourceTableSchema.keys.rst", "_as_gen/schema.SourceTableSchema.object_map.rst", "_as_gen/schema.SourceTableSchema.pop.rst", "_as_gen/schema.SourceTableSchema.popitem.rst", "_as_gen/schema.SourceTableSchema.setdefault.rst", "_as_gen/schema.SourceTableSchema.update.rst", "_as_gen/schema.SourceTableSchema.values.rst", "_as_gen/stats.utilities.rst", "_as_gen/stats.utilities.uniform_sample_spherical.rst", "_as_gen/structures.databases.rst", "_as_gen/structures.databases.DBRegistry.rst", "_as_gen/structures.databases.DBRegistry.__init__.rst", "_as_gen/structures.databases.DBRegistry.as_list.rst", "_as_gen/structures.databases.DBRegistry.clear.rst", "_as_gen/structures.databases.DBRegistry.copy.rst", "_as_gen/structures.databases.DBRegistry.fromkeys.rst", "_as_gen/structures.databases.DBRegistry.get.rst", "_as_gen/structures.databases.DBRegistry.items.rst", "_as_gen/structures.databases.DBRegistry.keys.rst", "_as_gen/structures.databases.DBRegistry.pop.rst", "_as_gen/structures.databases.DBRegistry.popitem.rst", "_as_gen/structures.databases.DBRegistry.setdefault.rst", "_as_gen/structures.databases.DBRegistry.update.rst", "_as_gen/structures.databases.DBRegistry.values.rst", "_as_gen/structures.databases.LocalDatabase.rst", "_as_gen/structures.databases.LocalDatabase.__init__.rst", "_as_gen/structures.databases.LocalDatabase.add_sources_to_poisson.rst", "_as_gen/structures.databases.LocalDatabase.class_table_schema.rst", "_as_gen/structures.databases.LocalDatabase.count.rst", "_as_gen/structures.databases.LocalDatabase.create_poisson_atlas.rst", "_as_gen/structures.databases.LocalDatabase.default_poisson_map.rst", "_as_gen/structures.databases.LocalDatabase.get_default_poisson_atlas.rst", "_as_gen/structures.databases.LocalDatabase.get_poisson_atlas.rst", "_as_gen/structures.databases.LocalDatabase.poisson_map.rst", "_as_gen/structures.databases.LocalDatabase.query_radius.rst", "_as_gen/structures.databases.LocalDatabase.random_sample_count.rst", "_as_gen/structures.databases.LocalDatabase.set_poisson_atlas.rst", "_as_gen/structures.databases.LocalDatabase.source_match.rst", "_as_gen/structures.databases.NED.rst", "_as_gen/structures.databases.NED.__init__.rst", "_as_gen/structures.databases.NED.add_sources_to_poisson.rst", "_as_gen/structures.databases.NED.class_table_schema.rst", "_as_gen/structures.databases.NED.count.rst", "_as_gen/structures.databases.NED.create_poisson_atlas.rst", "_as_gen/structures.databases.NED.default_poisson_map.rst", "_as_gen/structures.databases.NED.get_default_poisson_atlas.rst", "_as_gen/structures.databases.NED.get_poisson_atlas.rst", "_as_gen/structures.databases.NED.poisson_map.rst", "_as_gen/structures.databases.NED.query_radius.rst", "_as_gen/structures.databases.NED.random_sample_count.rst", "_as_gen/structures.databases.NED.set_poisson_atlas.rst", "_as_gen/structures.databases.NED.source_match.rst", "_as_gen/structures.databases.RemoteDatabase.rst", "_as_gen/structures.databases.RemoteDatabase.__init__.rst", "_as_gen/structures.databases.RemoteDatabase.add_sources_to_poisson.rst", "_as_gen/structures.databases.RemoteDatabase.class_table_schema.rst", "_as_gen/structures.databases.RemoteDatabase.count.rst", "_as_gen/structures.databases.RemoteDatabase.create_poisson_atlas.rst", "_as_gen/structures.databases.RemoteDatabase.default_poisson_map.rst", "_as_gen/structures.databases.RemoteDatabase.get_default_poisson_atlas.rst", "_as_gen/structures.databases.RemoteDatabase.get_poisson_atlas.rst", "_as_gen/structures.databases.RemoteDatabase.poisson_map.rst", "_as_gen/structures.databases.RemoteDatabase.query_radius.rst", "_as_gen/structures.databases.RemoteDatabase.random_sample_count.rst", "_as_gen/structures.databases.RemoteDatabase.set_poisson_atlas.rst", "_as_gen/structures.databases.RemoteDatabase.source_match.rst", "_as_gen/structures.databases.SIMBAD.rst", "_as_gen/structures.databases.SIMBAD.__init__.rst", "_as_gen/structures.databases.SIMBAD.add_sources_to_poisson.rst", "_as_gen/structures.databases.SIMBAD.class_table_schema.rst", "_as_gen/structures.databases.SIMBAD.count.rst", "_as_gen/structures.databases.SIMBAD.create_poisson_atlas.rst", "_as_gen/structures.databases.SIMBAD.default_poisson_map.rst", "_as_gen/structures.databases.SIMBAD.get_default_poisson_atlas.rst", "_as_gen/structures.databases.SIMBAD.get_poisson_atlas.rst", "_as_gen/structures.databases.SIMBAD.poisson_map.rst", "_as_gen/structures.databases.SIMBAD.query_radius.rst", "_as_gen/structures.databases.SIMBAD.random_sample_count.rst", "_as_gen/structures.databases.SIMBAD.set_poisson_atlas.rst", "_as_gen/structures.databases.SIMBAD.source_match.rst", "_as_gen/structures.databases.SourceDatabase.rst", "_as_gen/structures.databases.SourceDatabase.__init__.rst", "_as_gen/structures.databases.SourceDatabase.add_sources_to_poisson.rst", "_as_gen/structures.databases.SourceDatabase.class_table_schema.rst", "_as_gen/structures.databases.SourceDatabase.count.rst", "_as_gen/structures.databases.SourceDatabase.create_poisson_atlas.rst", "_as_gen/structures.databases.SourceDatabase.default_poisson_map.rst", "_as_gen/structures.databases.SourceDatabase.get_default_poisson_atlas.rst", "_as_gen/structures.databases.SourceDatabase.get_poisson_atlas.rst", "_as_gen/structures.databases.SourceDatabase.poisson_map.rst", "_as_gen/structures.databases.SourceDatabase.query_radius.rst", "_as_gen/structures.databases.SourceDatabase.random_sample_count.rst", "_as_gen/structures.databases.SourceDatabase.set_poisson_atlas.rst", "_as_gen/structures.databases.SourceDatabase.source_match.rst", "_as_gen/structures.databases.add_points_to_poisson_map.rst", "_as_gen/structures.databases.get_database.rst", "_as_gen/structures.databases.get_poisson_map.rst", "_as_gen/structures.databases.get_poisson_path.rst", "_as_gen/structures.map.rst", "_as_gen/structures.map.Map.rst", "_as_gen/structures.map.Map.__init__.rst", "_as_gen/structures.map.Map.coordinate_frame.rst", "_as_gen/structures.map.Map.data.rst", "_as_gen/structures.map.Map.get_healpix_id.rst", "_as_gen/structures.map.Map.pixel_positions.rst", "_as_gen/structures.map.Map.plot.rst", "_as_gen/structures.map.Map.transform_map_coordinates.rst", "_as_gen/structures.map.MapAtlas.rst", "_as_gen/structures.map.MapAtlas.__init__.rst", "_as_gen/structures.map.MapAtlas.coordinate_frame.rst", "_as_gen/structures.map.MapAtlas.generate.rst", "_as_gen/structures.map.MapAtlas.get_map.rst", "_as_gen/structures.map.MapAtlas.has_maps.rst", "_as_gen/structures.map.MapAtlas.hdus.rst", "_as_gen/structures.map.MapAtlas.map_names.rst", "_as_gen/structures.map.MapAtlas.pixel_positions.rst", "_as_gen/structures.map.MapAtlas.remove.rst", "_as_gen/structures.map.MapAtlas.reshape_healpix.rst", "_as_gen/structures.map.PoissonAtlas.rst", "_as_gen/structures.map.PoissonAtlas.__init__.rst", "_as_gen/structures.map.PoissonAtlas.append_to_fits.rst", "_as_gen/structures.map.PoissonAtlas.build_poisson_map.rst", "_as_gen/structures.map.PoissonAtlas.build_poisson_map_KNN.rst", "_as_gen/structures.map.PoissonAtlas.build_poisson_map_MAP.rst", "_as_gen/structures.map.PoissonAtlas.build_poisson_map_RNN.rst", "_as_gen/structures.map.PoissonAtlas.build_poisson_map_regressor.rst", "_as_gen/structures.map.PoissonAtlas.build_poisson_maps.rst", "_as_gen/structures.map.PoissonAtlas.coordinate_frame.rst", "_as_gen/structures.map.PoissonAtlas.generate.rst", "_as_gen/structures.map.PoissonAtlas.get_map.rst", "_as_gen/structures.map.PoissonAtlas.get_points.rst", "_as_gen/structures.map.PoissonAtlas.has_maps.rst", "_as_gen/structures.map.PoissonAtlas.hdus.rst", "_as_gen/structures.map.PoissonAtlas.map_names.rst", "_as_gen/structures.map.PoissonAtlas.pixel_positions.rst", "_as_gen/structures.map.PoissonAtlas.remove.rst", "_as_gen/structures.map.PoissonAtlas.reset.rst", "_as_gen/structures.map.PoissonAtlas.reshape_healpix.rst", "_as_gen/structures.map.PoissonAtlas.sample_from_database.rst", "_as_gen/structures.map.StatAtlas.rst", "_as_gen/structures.map.StatAtlas.__init__.rst", "_as_gen/structures.map.StatAtlas.append_to_fits.rst", "_as_gen/structures.map.StatAtlas.coordinate_frame.rst", "_as_gen/structures.map.StatAtlas.generate.rst", "_as_gen/structures.map.StatAtlas.get_map.rst", "_as_gen/structures.map.StatAtlas.get_points.rst", "_as_gen/structures.map.StatAtlas.has_maps.rst", "_as_gen/structures.map.StatAtlas.hdus.rst", "_as_gen/structures.map.StatAtlas.map_names.rst", "_as_gen/structures.map.StatAtlas.pixel_positions.rst", "_as_gen/structures.map.StatAtlas.remove.rst", "_as_gen/structures.map.StatAtlas.reset.rst", "_as_gen/structures.map.StatAtlas.reshape_healpix.rst", "_as_gen/structures.map.StatAtlas.sample_from_database.rst", "_as_gen/structures.table.rst", "_as_gen/structures.table.SourceTable.rst", "_as_gen/structures.table.SourceTable.ColumnClass.rst", "_as_gen/structures.table.SourceTable.__init__.rst", "_as_gen/structures.table.SourceTable.add_column.rst", "_as_gen/structures.table.SourceTable.add_columns.rst", "_as_gen/structures.table.SourceTable.add_index.rst", "_as_gen/structures.table.SourceTable.add_row.rst", "_as_gen/structures.table.SourceTable.append_to_fits.rst", "_as_gen/structures.table.SourceTable.append_to_sql.rst", "_as_gen/structures.table.SourceTable.argsort.rst", "_as_gen/structures.table.SourceTable.as_array.rst", "_as_gen/structures.table.SourceTable.colnames.rst", "_as_gen/structures.table.SourceTable.convert_bytestring_to_unicode.rst", "_as_gen/structures.table.SourceTable.convert_unicode_to_bytestring.rst", "_as_gen/structures.table.SourceTable.copy.rst", "_as_gen/structures.table.SourceTable.count_types.rst", "_as_gen/structures.table.SourceTable.dtype.rst", "_as_gen/structures.table.SourceTable.field.rst", "_as_gen/structures.table.SourceTable.filled.rst", "_as_gen/structures.table.SourceTable.from_pandas.rst", "_as_gen/structures.table.SourceTable.generate_schema.rst", "_as_gen/structures.table.SourceTable.get_coordinates.rst", "_as_gen/structures.table.SourceTable.group_by.rst", "_as_gen/structures.table.SourceTable.groups.rst", "_as_gen/structures.table.SourceTable.has_masked_columns.rst", "_as_gen/structures.table.SourceTable.has_masked_values.rst", "_as_gen/structures.table.SourceTable.has_mixin_columns.rst", "_as_gen/structures.table.SourceTable.iloc.rst", "_as_gen/structures.table.SourceTable.index_column.rst", "_as_gen/structures.table.SourceTable.index_mode.rst", "_as_gen/structures.table.SourceTable.indices.rst", "_as_gen/structures.table.SourceTable.info.rst", "_as_gen/structures.table.SourceTable.insert_row.rst", "_as_gen/structures.table.SourceTable.items.rst", "_as_gen/structures.table.SourceTable.itercols.rst", "_as_gen/structures.table.SourceTable.iterrows.rst", "_as_gen/structures.table.SourceTable.keep_columns.rst", "_as_gen/structures.table.SourceTable.keys.rst", "_as_gen/structures.table.SourceTable.lat.rst", "_as_gen/structures.table.SourceTable.loc.rst", "_as_gen/structures.table.SourceTable.loc_indices.rst", "_as_gen/structures.table.SourceTable.lon.rst", "_as_gen/structures.table.SourceTable.mask.rst", "_as_gen/structures.table.SourceTable.masked.rst", "_as_gen/structures.table.SourceTable.meta.rst", "_as_gen/structures.table.SourceTable.more.rst", "_as_gen/structures.table.SourceTable.name.rst", "_as_gen/structures.table.SourceTable.pformat.rst", "_as_gen/structures.table.SourceTable.pformat_all.rst", "_as_gen/structures.table.SourceTable.pprint.rst", "_as_gen/structures.table.SourceTable.pprint_all.rst", "_as_gen/structures.table.SourceTable.pprint_exclude_names.rst", "_as_gen/structures.table.SourceTable.pprint_include_names.rst", "_as_gen/structures.table.SourceTable.read.rst", "_as_gen/structures.table.SourceTable.redshift.rst", "_as_gen/structures.table.SourceTable.remove_column.rst", "_as_gen/structures.table.SourceTable.remove_columns.rst", "_as_gen/structures.table.SourceTable.remove_indices.rst", "_as_gen/structures.table.SourceTable.remove_row.rst", "_as_gen/structures.table.SourceTable.remove_rows.rst", "_as_gen/structures.table.SourceTable.rename_column.rst", "_as_gen/structures.table.SourceTable.rename_columns.rst", "_as_gen/structures.table.SourceTable.replace_column.rst", "_as_gen/structures.table.SourceTable.reverse.rst", "_as_gen/structures.table.SourceTable.round.rst", "_as_gen/structures.table.SourceTable.schema.rst", "_as_gen/structures.table.SourceTable.show_in_browser.rst", "_as_gen/structures.table.SourceTable.show_in_notebook.rst", "_as_gen/structures.table.SourceTable.sort.rst", "_as_gen/structures.table.SourceTable.to_pandas.rst", "_as_gen/structures.table.SourceTable.type.rst", "_as_gen/structures.table.SourceTable.type_native.rst", "_as_gen/structures.table.SourceTable.update.rst", "_as_gen/structures.table.SourceTable.values.rst", "_as_gen/structures.table.SourceTable.values_equal.rst", "_as_gen/structures.table.SourceTable.write.rst", "_as_gen/utilities.core.rst", "_as_gen/utilities.core.enforce_units.rst", "_as_gen/utilities.core.getFromDict.rst", "_as_gen/utilities.core.setInDict.rst", "_as_gen/utilities.geo.rst", "_as_gen/utilities.geo.convert_coordinates.rst", "_as_gen/utilities.geo.convert_skycoord.rst", "_as_gen/utilities.plot.rst", "_as_gen/utilities.plot.plot_healpix.rst", "_as_gen/utilities.plot.set_style.rst", "api.rst", "data_structures.rst", "examples.rst", "examples/Poisson_Maps.ipynb", "getting_started.rst", "index.rst", "quickstart/configuration.rst", "quickstart/install.rst", "quickstart/overview.rst", "user_guide.rst", "user_guides/cross_matching.rst", "user_guides/databases.rst", "user_guides/logging.rst", "user_guides/plots.rst", "user_guides/psf.rst", "user_guides/schema.rst", "user_guides/source_data.rst"], "titles": ["cross_reference", "cross_reference.CrossMatchDatabase", "cross_reference.CrossMatchDatabase.__init__", "cross_reference.CrossMatchDatabase.add_catalog", "cross_reference.CrossMatchDatabase.build_meta_table", "cross_reference.CrossMatchDatabase.check_meta", "cross_reference.CrossMatchDatabase.correct_column_names", "cross_reference.CrossMatchDatabase.correct_object_types", "cross_reference.CrossMatchDatabase.drop_table", "cross_reference.CrossMatchDatabase.from_file", "cross_reference.CrossMatchDatabase.has_catalog", "cross_reference.CrossMatchDatabase.match_tables", "cross_reference.CrossMatchDatabase.meta", "cross_reference.CrossMatchDatabase.meta_add", "cross_reference.CrossMatchDatabase.meta_remove", "cross_reference.CrossMatchDatabase.meta_reset", "cross_reference.CrossMatchDatabase.query", "cross_reference.CrossMatchDatabase.tables", "cross_reference.cross_match", "cross_reference.cross_match_table", "schema", "schema.ReductionSchema", "schema.ReductionSchema.DBPATH", "schema.ReductionSchema.INSTRUMENTAL", "schema.ReductionSchema.INSTRUMENT_PARAMS", "schema.ReductionSchema.IO_PARAMS", "schema.ReductionSchema.OBJECT_PARAMS", "schema.ReductionSchema.OTYPES", "schema.ReductionSchema.POISSON", "schema.ReductionSchema.POISSON_PARAMS", "schema.ReductionSchema.PSF", "schema.ReductionSchema.REFDBS", "schema.ReductionSchema.RUN_PARAMS", "schema.ReductionSchema.__init__", "schema.ReductionSchema.clear", "schema.ReductionSchema.copy", "schema.ReductionSchema.from_file", "schema.ReductionSchema.fromkeys", "schema.ReductionSchema.get", "schema.ReductionSchema.isvalid", "schema.ReductionSchema.items", "schema.ReductionSchema.keys", "schema.ReductionSchema.pop", "schema.ReductionSchema.popitem", "schema.ReductionSchema.setdefault", "schema.ReductionSchema.update", "schema.ReductionSchema.values", "schema.Schema", "schema.Schema.__init__", "schema.Schema.clear", "schema.Schema.copy", "schema.Schema.from_file", "schema.Schema.fromkeys", "schema.Schema.get", "schema.Schema.isvalid", "schema.Schema.items", "schema.Schema.keys", "schema.Schema.pop", "schema.Schema.popitem", "schema.Schema.setdefault", "schema.Schema.update", "schema.Schema.values", "schema.SourceTableSchema", "schema.SourceTableSchema.__init__", "schema.SourceTableSchema.available_coordinate_frames", "schema.SourceTableSchema.clear", "schema.SourceTableSchema.column_map", "schema.SourceTableSchema.construct", "schema.SourceTableSchema.coordinate_columns", "schema.SourceTableSchema.coordinate_frame", "schema.SourceTableSchema.coordinate_system", "schema.SourceTableSchema.copy", "schema.SourceTableSchema.default_coord_system", "schema.SourceTableSchema.from_file", "schema.SourceTableSchema.fromkeys", "schema.SourceTableSchema.get", "schema.SourceTableSchema.inv_column_map", "schema.SourceTableSchema.isvalid", "schema.SourceTableSchema.items", "schema.SourceTableSchema.keys", "schema.SourceTableSchema.object_map", "schema.SourceTableSchema.pop", "schema.SourceTableSchema.popitem", "schema.SourceTableSchema.setdefault", "schema.SourceTableSchema.update", "schema.SourceTableSchema.values", "stats.utilities", "stats.utilities.uniform_sample_spherical", "structures.databases", "structures.databases.DBRegistry", "structures.databases.DBRegistry.__init__", "structures.databases.DBRegistry.as_list", "structures.databases.DBRegistry.clear", "structures.databases.DBRegistry.copy", "structures.databases.DBRegistry.fromkeys", "structures.databases.DBRegistry.get", "structures.databases.DBRegistry.items", "structures.databases.DBRegistry.keys", "structures.databases.DBRegistry.pop", "structures.databases.DBRegistry.popitem", "structures.databases.DBRegistry.setdefault", "structures.databases.DBRegistry.update", "structures.databases.DBRegistry.values", "structures.databases.LocalDatabase", "structures.databases.LocalDatabase.__init__", "structures.databases.LocalDatabase.add_sources_to_poisson", "structures.databases.LocalDatabase.class_table_schema", "structures.databases.LocalDatabase.count", "structures.databases.LocalDatabase.create_poisson_atlas", "structures.databases.LocalDatabase.default_poisson_map", "structures.databases.LocalDatabase.get_default_poisson_atlas", "structures.databases.LocalDatabase.get_poisson_atlas", "structures.databases.LocalDatabase.poisson_map", "structures.databases.LocalDatabase.query_radius", "structures.databases.LocalDatabase.random_sample_count", "structures.databases.LocalDatabase.set_poisson_atlas", "structures.databases.LocalDatabase.source_match", "structures.databases.NED", "structures.databases.NED.__init__", "structures.databases.NED.add_sources_to_poisson", "structures.databases.NED.class_table_schema", "structures.databases.NED.count", "structures.databases.NED.create_poisson_atlas", "structures.databases.NED.default_poisson_map", "structures.databases.NED.get_default_poisson_atlas", "structures.databases.NED.get_poisson_atlas", "structures.databases.NED.poisson_map", "structures.databases.NED.query_radius", "structures.databases.NED.random_sample_count", "structures.databases.NED.set_poisson_atlas", "structures.databases.NED.source_match", "structures.databases.RemoteDatabase", "structures.databases.RemoteDatabase.__init__", "structures.databases.RemoteDatabase.add_sources_to_poisson", "structures.databases.RemoteDatabase.class_table_schema", "structures.databases.RemoteDatabase.count", "structures.databases.RemoteDatabase.create_poisson_atlas", "structures.databases.RemoteDatabase.default_poisson_map", "structures.databases.RemoteDatabase.get_default_poisson_atlas", "structures.databases.RemoteDatabase.get_poisson_atlas", "structures.databases.RemoteDatabase.poisson_map", "structures.databases.RemoteDatabase.query_radius", "structures.databases.RemoteDatabase.random_sample_count", "structures.databases.RemoteDatabase.set_poisson_atlas", "structures.databases.RemoteDatabase.source_match", "structures.databases.SIMBAD", "structures.databases.SIMBAD.__init__", "structures.databases.SIMBAD.add_sources_to_poisson", "structures.databases.SIMBAD.class_table_schema", "structures.databases.SIMBAD.count", "structures.databases.SIMBAD.create_poisson_atlas", "structures.databases.SIMBAD.default_poisson_map", "structures.databases.SIMBAD.get_default_poisson_atlas", "structures.databases.SIMBAD.get_poisson_atlas", "structures.databases.SIMBAD.poisson_map", "structures.databases.SIMBAD.query_radius", "structures.databases.SIMBAD.random_sample_count", "structures.databases.SIMBAD.set_poisson_atlas", "structures.databases.SIMBAD.source_match", "structures.databases.SourceDatabase", "structures.databases.SourceDatabase.__init__", "structures.databases.SourceDatabase.add_sources_to_poisson", "structures.databases.SourceDatabase.class_table_schema", "structures.databases.SourceDatabase.count", "structures.databases.SourceDatabase.create_poisson_atlas", "structures.databases.SourceDatabase.default_poisson_map", "structures.databases.SourceDatabase.get_default_poisson_atlas", "structures.databases.SourceDatabase.get_poisson_atlas", "structures.databases.SourceDatabase.poisson_map", "structures.databases.SourceDatabase.query_radius", "structures.databases.SourceDatabase.random_sample_count", "structures.databases.SourceDatabase.set_poisson_atlas", "structures.databases.SourceDatabase.source_match", "structures.databases.add_points_to_poisson_map", "structures.databases.get_database", "structures.databases.get_poisson_map", "structures.databases.get_poisson_path", "structures.map", "structures.map.Map", "structures.map.Map.__init__", "structures.map.Map.coordinate_frame", "structures.map.Map.data", "structures.map.Map.get_healpix_id", "structures.map.Map.pixel_positions", "structures.map.Map.plot", "structures.map.Map.transform_map_coordinates", "structures.map.MapAtlas", "structures.map.MapAtlas.__init__", "structures.map.MapAtlas.coordinate_frame", "structures.map.MapAtlas.generate", "structures.map.MapAtlas.get_map", "structures.map.MapAtlas.has_maps", "structures.map.MapAtlas.hdus", "structures.map.MapAtlas.map_names", "structures.map.MapAtlas.pixel_positions", "structures.map.MapAtlas.remove", "structures.map.MapAtlas.reshape_healpix", "structures.map.PoissonAtlas", "structures.map.PoissonAtlas.__init__", "structures.map.PoissonAtlas.append_to_fits", "structures.map.PoissonAtlas.build_poisson_map", "structures.map.PoissonAtlas.build_poisson_map_KNN", "structures.map.PoissonAtlas.build_poisson_map_MAP", "structures.map.PoissonAtlas.build_poisson_map_RNN", "structures.map.PoissonAtlas.build_poisson_map_regressor", "structures.map.PoissonAtlas.build_poisson_maps", "structures.map.PoissonAtlas.coordinate_frame", "structures.map.PoissonAtlas.generate", "structures.map.PoissonAtlas.get_map", "structures.map.PoissonAtlas.get_points", "structures.map.PoissonAtlas.has_maps", "structures.map.PoissonAtlas.hdus", "structures.map.PoissonAtlas.map_names", "structures.map.PoissonAtlas.pixel_positions", "structures.map.PoissonAtlas.remove", "structures.map.PoissonAtlas.reset", "structures.map.PoissonAtlas.reshape_healpix", "structures.map.PoissonAtlas.sample_from_database", "structures.map.StatAtlas", "structures.map.StatAtlas.__init__", "structures.map.StatAtlas.append_to_fits", "structures.map.StatAtlas.coordinate_frame", "structures.map.StatAtlas.generate", "structures.map.StatAtlas.get_map", "structures.map.StatAtlas.get_points", "structures.map.StatAtlas.has_maps", "structures.map.StatAtlas.hdus", "structures.map.StatAtlas.map_names", "structures.map.StatAtlas.pixel_positions", "structures.map.StatAtlas.remove", "structures.map.StatAtlas.reset", "structures.map.StatAtlas.reshape_healpix", "structures.map.StatAtlas.sample_from_database", "structures.table", "structures.table.SourceTable", "structures.table.SourceTable.ColumnClass", "structures.table.SourceTable.__init__", "structures.table.SourceTable.add_column", "structures.table.SourceTable.add_columns", "structures.table.SourceTable.add_index", "structures.table.SourceTable.add_row", "structures.table.SourceTable.append_to_fits", "structures.table.SourceTable.append_to_sql", "structures.table.SourceTable.argsort", "structures.table.SourceTable.as_array", "structures.table.SourceTable.colnames", "structures.table.SourceTable.convert_bytestring_to_unicode", "structures.table.SourceTable.convert_unicode_to_bytestring", "structures.table.SourceTable.copy", "structures.table.SourceTable.count_types", "structures.table.SourceTable.dtype", "structures.table.SourceTable.field", "structures.table.SourceTable.filled", "structures.table.SourceTable.from_pandas", "structures.table.SourceTable.generate_schema", "structures.table.SourceTable.get_coordinates", "structures.table.SourceTable.group_by", "structures.table.SourceTable.groups", "structures.table.SourceTable.has_masked_columns", "structures.table.SourceTable.has_masked_values", "structures.table.SourceTable.has_mixin_columns", "structures.table.SourceTable.iloc", "structures.table.SourceTable.index_column", "structures.table.SourceTable.index_mode", "structures.table.SourceTable.indices", "structures.table.SourceTable.info", "structures.table.SourceTable.insert_row", "structures.table.SourceTable.items", "structures.table.SourceTable.itercols", "structures.table.SourceTable.iterrows", "structures.table.SourceTable.keep_columns", "structures.table.SourceTable.keys", "structures.table.SourceTable.lat", "structures.table.SourceTable.loc", "structures.table.SourceTable.loc_indices", "structures.table.SourceTable.lon", "structures.table.SourceTable.mask", "structures.table.SourceTable.masked", "structures.table.SourceTable.meta", "structures.table.SourceTable.more", "structures.table.SourceTable.name", "structures.table.SourceTable.pformat", "structures.table.SourceTable.pformat_all", "structures.table.SourceTable.pprint", "structures.table.SourceTable.pprint_all", "structures.table.SourceTable.pprint_exclude_names", "structures.table.SourceTable.pprint_include_names", "structures.table.SourceTable.read", "structures.table.SourceTable.redshift", "structures.table.SourceTable.remove_column", "structures.table.SourceTable.remove_columns", "structures.table.SourceTable.remove_indices", "structures.table.SourceTable.remove_row", "structures.table.SourceTable.remove_rows", "structures.table.SourceTable.rename_column", "structures.table.SourceTable.rename_columns", "structures.table.SourceTable.replace_column", "structures.table.SourceTable.reverse", "structures.table.SourceTable.round", "structures.table.SourceTable.schema", "structures.table.SourceTable.show_in_browser", "structures.table.SourceTable.show_in_notebook", "structures.table.SourceTable.sort", "structures.table.SourceTable.to_pandas", "structures.table.SourceTable.type", "structures.table.SourceTable.type_native", "structures.table.SourceTable.update", "structures.table.SourceTable.values", "structures.table.SourceTable.values_equal", "structures.table.SourceTable.write", "utilities.core", "utilities.core.enforce_units", "utilities.core.getFromDict", "utilities.core.setInDict", "utilities.geo", "utilities.geo.convert_coordinates", "utilities.geo.convert_skycoord", "utilities.plot", "utilities.plot.plot_healpix", "utilities.plot.set_style", "API", "Data Structures", "Examples", "Poisson Mapping", "pyXMIP Quickstart Guide", "Features", "Configuring <code class=\"docutils literal notranslate\"><span class=\"pre\">pyXMIP</span></code>", "Installing <code class=\"docutils literal notranslate\"><span class=\"pre\">pyXMIP</span></code>", "What Can I Do With <code class=\"docutils literal notranslate\"><span class=\"pre\">pyXMIP</span></code>?", "Reference", "Cross Referencing", "Databases", "Logging", "Creating Plots", "PSF Modeling", "pyXMIP Schema Classes", "Loading Source Data"], "terms": {"pyxmip": [0, 21, 62, 76, 109, 112, 123, 126, 137, 140, 151, 154, 165, 168, 190, 208, 223, 314, 317, 321, 323, 325, 329, 330, 331], "cross": [0, 1, 18, 19, 116, 130, 144, 158, 172, 321, 323, 325, 328, 329, 331], "referenc": [0, 325, 328, 329, 331], "toolkit": [0, 328], "modul": [0, 88, 177, 233, 314, 328], "note": [0, 21, 62, 87, 177, 186, 218, 237, 238, 273, 293, 300, 301, 314, 323], "The": [0, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 16, 18, 19, 21, 33, 36, 47, 48, 51, 62, 63, 64, 67, 68, 69, 70, 73, 76, 87, 90, 113, 114, 116, 127, 128, 130, 141, 142, 144, 155, 156, 158, 169, 170, 172, 177, 179, 180, 183, 186, 187, 188, 189, 190, 194, 196, 198, 200, 205, 206, 207, 208, 213, 216, 217, 218, 219, 221, 222, 223, 228, 231, 232, 237, 238, 240, 243, 248, 253, 256, 266, 269, 270, 281, 282, 283, 294, 296, 297, 301, 302, 303, 306, 314, 321, 324, 325, 330, 331], "i": [0, 1, 3, 6, 7, 10, 18, 19, 21, 36, 38, 39, 42, 43, 44, 45, 47, 51, 53, 54, 57, 58, 59, 60, 62, 70, 73, 75, 77, 81, 82, 83, 84, 95, 98, 99, 100, 101, 186, 189, 200, 205, 207, 218, 222, 237, 238, 239, 240, 244, 246, 248, 252, 253, 256, 263, 266, 268, 269, 279, 281, 282, 283, 284, 285, 286, 291, 296, 297, 298, 300, 301, 303, 306, 314, 321, 323, 325, 330, 331], "core": [0, 324, 328, 330, 331], "user": [0, 20, 186, 200, 321, 323, 324, 325, 330, 331], "tool": [0, 325, 328], "thi": [0, 6, 7, 16, 33, 45, 47, 48, 60, 62, 63, 64, 69, 84, 87, 90, 101, 116, 130, 144, 158, 172, 186, 189, 190, 196, 200, 205, 207, 208, 216, 217, 222, 223, 231, 232, 237, 238, 239, 240, 243, 244, 246, 252, 253, 256, 258, 259, 263, 268, 269, 279, 284, 285, 286, 289, 290, 294, 300, 301, 302, 303, 306, 314, 321, 323, 324, 325, 326, 327, 328, 330, 331], "allow": [0, 4, 6, 7, 18, 19, 62, 189, 200, 205, 207, 222, 246, 281, 282, 283, 284, 300, 323, 330, 331], "you": [0, 6, 7, 18, 19, 300, 301, 321, 323, 324, 325, 326, 327, 328, 330, 331], "refer": [0, 19, 21, 306, 325], "tabl": [0, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 18, 19, 62, 67, 70, 107, 113, 114, 116, 121, 127, 128, 130, 135, 141, 142, 144, 149, 155, 156, 158, 163, 169, 170, 172, 186, 199, 205, 209, 217, 218, 220, 224, 232, 321, 324, 328, 331], "run": [0, 3, 6, 7, 323, 330, 331], "queri": [0, 18, 19, 88, 107, 113, 114, 121, 127, 128, 131, 135, 141, 142, 149, 155, 156, 163, 169, 170, 217, 232, 323, 325, 328, 331], "reduc": 0, "result": [0, 18, 19, 62, 196, 205, 216, 231, 308, 323, 330], "function": [0, 47, 86, 87, 88, 177, 186, 243, 297, 310, 314, 317, 323, 328, 330, 331], "class": [0, 1, 18, 19, 20, 21, 33, 47, 48, 62, 63, 88, 89, 90, 103, 117, 131, 145, 159, 177, 178, 186, 197, 218, 233, 234, 239, 281, 282, 296, 300, 301, 321, 323, 329, 330, 331], "path": [1, 2, 3, 9, 18, 19, 36, 51, 73, 115, 116, 129, 130, 143, 144, 157, 158, 171, 172, 178, 179, 187, 189, 198, 207, 219, 222, 241, 330], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 18, 19, 21, 47, 48, 51, 54, 62, 64, 67, 87, 89, 90, 103, 113, 116, 117, 127, 130, 131, 141, 144, 145, 155, 158, 159, 161, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 182, 184, 185, 186, 187, 189, 190, 195, 196, 197, 200, 201, 202, 203, 204, 205, 218, 219, 220, 222, 224, 230, 232, 234, 241, 242, 249, 254, 255, 311, 312, 313, 315, 316, 318, 319, 323, 325, 328, 329, 330, 331], "wrapper": [1, 47, 186], "underli": [1, 2, 33, 48, 63, 90, 186, 196, 209, 216, 218, 224, 231, 240, 248, 321, 323], "sql": [1, 2, 8, 16], "databas": [1, 2, 3, 4, 6, 7, 8, 9, 16, 18, 19, 21, 62, 190, 207, 208, 217, 218, 222, 223, 232, 323, 324, 325, 328, 330], "file": [1, 3, 9, 18, 19, 21, 36, 51, 62, 73, 186, 187, 189, 198, 200, 207, 218, 219, 222, 247, 301, 323, 330], "where": [1, 281, 282, 300, 301, 314, 323, 330], "match": [1, 9, 11, 18, 19, 88, 116, 130, 144, 158, 172, 205, 237, 238, 240, 266, 306, 321, 323, 325, 328, 331], "data": [1, 3, 20, 64, 116, 130, 144, 158, 172, 177, 186, 196, 216, 217, 218, 231, 232, 234, 236, 237, 238, 240, 248, 273, 293, 296, 300, 306, 323, 329, 330, 331], "contain": [1, 62, 107, 121, 135, 149, 163, 186, 205, 218, 256, 308, 321, 323, 325, 330], "method": [1, 3, 6, 7, 21, 45, 47, 60, 62, 84, 89, 101, 103, 117, 131, 145, 159, 178, 186, 197, 200, 205, 218, 234, 238, 240, 269, 284, 301, 323, 325, 331], "attribut": [1, 21, 62, 103, 117, 131, 145, 159, 178, 186, 197, 218, 234, 240, 266, 285, 286, 294], "initi": [2, 33, 48, 63, 90, 179, 187, 198, 219, 240, 306], "instanc": [2, 19, 36, 51, 70, 73, 111, 114, 125, 128, 139, 142, 153, 156, 167, 170, 179, 186, 190, 208, 223, 253, 296, 303, 306, 321, 323, 331], "paramet": [2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 16, 18, 19, 33, 36, 48, 51, 63, 67, 73, 87, 90, 107, 113, 114, 116, 121, 127, 128, 130, 135, 141, 142, 144, 149, 155, 156, 158, 163, 169, 170, 172, 179, 186, 187, 189, 190, 196, 198, 200, 205, 207, 208, 216, 217, 218, 219, 222, 223, 231, 232, 237, 238, 239, 240, 243, 244, 248, 252, 253, 256, 262, 263, 266, 269, 270, 279, 281, 282, 283, 284, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 301, 302, 303, 306, 308, 323, 328, 330], "str": [2, 3, 5, 8, 9, 13, 14, 16, 18, 19, 21, 36, 51, 62, 70, 73, 116, 130, 144, 158, 172, 179, 187, 189, 190, 198, 200, 205, 207, 208, 219, 222, 223, 237, 238, 239, 243, 252, 256, 262, 263, 270, 281, 282, 283, 284, 289, 290, 291, 294, 296, 300, 301, 302, 303, 330], "load": [2, 9, 10, 36, 51, 73, 179, 189, 190, 207, 208, 222, 223, 301, 323, 329, 330], "catalog_path": 3, "schema": [3, 329], "none": [3, 6, 7, 8, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 44, 45, 49, 51, 52, 53, 59, 60, 65, 66, 72, 73, 74, 75, 80, 83, 84, 92, 94, 95, 100, 101, 105, 106, 109, 112, 114, 116, 119, 128, 130, 133, 134, 137, 140, 142, 144, 147, 156, 158, 161, 162, 165, 168, 170, 172, 182, 196, 204, 205, 207, 216, 217, 222, 231, 232, 234, 236, 237, 238, 239, 240, 243, 244, 252, 253, 266, 278, 279, 281, 282, 283, 284, 300, 301, 302, 303, 318, 323, 326], "overwrit": [3, 4, 6, 7, 18, 19, 189, 200, 205, 207, 222, 330], "fals": [3, 4, 6, 7, 18, 19, 39, 54, 77, 185, 189, 196, 200, 207, 216, 222, 231, 234, 236, 237, 238, 239, 240, 243, 244, 253, 279, 281, 282, 283, 284, 296, 300, 301, 302, 303, 308, 323, 326, 330], "kwarg": [3, 18, 19, 108, 114, 122, 128, 136, 142, 150, 156, 164, 170, 173, 184, 200, 201, 202, 203, 204, 205, 215, 217, 230, 232, 234, 236, 318, 323], "add": [3, 13, 217, 232, 237, 238, 240, 266, 323, 324, 330], "catalog": [3, 10, 62, 321, 323, 325, 328, 330], "sourcetableschema": [3, 321], "option": [3, 6, 7, 18, 19, 36, 51, 73, 114, 116, 128, 130, 142, 144, 156, 158, 170, 172, 196, 200, 205, 216, 231, 243, 244, 300, 301, 302, 321, 323, 330], "associ": [3, 64, 186, 264], "If": [3, 4, 6, 7, 18, 19, 21, 36, 42, 45, 51, 57, 60, 70, 73, 81, 84, 98, 101, 114, 116, 128, 130, 142, 144, 156, 158, 170, 172, 189, 196, 200, 205, 207, 216, 222, 231, 237, 238, 239, 248, 252, 253, 281, 282, 283, 291, 298, 300, 301, 302, 303, 306, 323, 330], "provid": [3, 40, 41, 46, 55, 56, 61, 78, 79, 85, 96, 97, 102, 177, 269, 281, 282, 283, 284, 321, 323, 324, 325, 328, 330], "system": [3, 62, 68, 69, 70, 180, 186, 188, 206, 218, 221, 300, 314, 321, 323, 326, 330], "attempt": 3, "construct": [3, 205, 330], "one": [3, 237, 239, 240, 243, 263, 279, 281, 282, 283, 284, 302, 306, 308, 321, 323, 327, 330], "bool": [3, 4, 5, 6, 7, 18, 19, 21, 114, 116, 128, 130, 142, 144, 156, 158, 170, 172, 189, 196, 200, 205, 207, 216, 222, 231, 237, 238, 239, 243, 244, 248, 253, 279, 281, 282, 283, 284, 296, 300, 302, 303, 306, 308, 330], "true": [3, 4, 6, 7, 10, 18, 19, 21, 39, 54, 77, 105, 114, 116, 119, 128, 130, 133, 142, 144, 147, 156, 158, 161, 170, 172, 186, 196, 200, 204, 205, 216, 231, 234, 236, 237, 238, 244, 248, 258, 259, 260, 279, 281, 282, 283, 284, 296, 300, 301, 302, 303, 306, 308, 323, 326, 330], "process": [3, 4, 5, 6, 7, 13, 14, 18, 19, 21, 205, 323, 328], "regardless": [3, 248], "whether": [3, 239, 306, 330], "an": [3, 46, 61, 85, 102, 107, 121, 135, 149, 163, 177, 178, 189, 190, 207, 208, 222, 223, 237, 240, 263, 266, 281, 282, 300, 301, 303, 323, 325, 328, 330, 331], "exist": [3, 18, 19, 200, 205, 217, 232, 237, 238, 240, 295, 296, 300, 301, 302, 323, 330], "addit": [3, 18, 19, 47, 114, 116, 128, 130, 142, 144, 156, 158, 170, 172, 186, 200, 205, 217, 218, 232, 253, 263, 303, 323, 324, 328, 330], "argument": [3, 18, 19, 200, 205, 217, 232, 239, 240, 266, 297, 303, 306, 323], "pass": [3, 18, 19, 189, 205, 207, 217, 222, 232, 300, 323], "through": [3, 217, 232, 323], "return": [3, 5, 6, 7, 8, 9, 10, 38, 39, 42, 43, 44, 53, 54, 57, 58, 59, 64, 67, 70, 75, 76, 77, 81, 82, 83, 87, 95, 98, 99, 100, 107, 113, 114, 116, 121, 127, 128, 130, 135, 141, 142, 144, 149, 155, 156, 158, 163, 169, 170, 172, 189, 190, 192, 193, 196, 200, 207, 208, 209, 211, 212, 216, 217, 222, 223, 224, 226, 227, 231, 232, 243, 244, 248, 251, 252, 253, 256, 261, 262, 263, 264, 269, 273, 274, 281, 282, 302, 303, 308, 331], "type": [3, 5, 6, 7, 8, 9, 18, 19, 21, 47, 62, 64, 67, 76, 107, 113, 114, 116, 120, 121, 127, 128, 130, 135, 141, 142, 144, 148, 149, 155, 156, 158, 163, 169, 170, 172, 189, 190, 192, 193, 196, 200, 205, 207, 208, 209, 211, 212, 216, 217, 222, 223, 224, 226, 227, 231, 232, 233, 239, 240, 243, 244, 252, 253, 256, 262, 266, 269, 281, 282, 298, 303, 321, 323, 325, 328, 330], "gener": [4, 33, 48, 62, 63, 90, 103, 131, 159, 186, 200, 205, 253, 321, 323, 328], "post": [4, 6, 7], "meta": [4, 5, 13, 14, 15, 217, 232, 234, 236, 248, 285, 286, 296, 306], "insid": 4, "check": [5, 258, 259, 323, 325, 328], "record": [5, 13, 14], "registri": [6, 7, 90], "correct": [6, 7, 70, 323, 330], "name": [6, 8, 18, 19, 62, 70, 120, 148, 178, 179, 190, 193, 200, 205, 208, 212, 218, 223, 227, 234, 236, 237, 238, 239, 240, 243, 244, 253, 256, 262, 266, 269, 270, 279, 281, 282, 283, 284, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 306, 308, 321, 323, 326, 330], "column": [6, 62, 67, 68, 70, 76, 237, 238, 239, 240, 243, 244, 246, 247, 251, 252, 253, 256, 258, 259, 260, 262, 263, 264, 266, 268, 269, 270, 273, 279, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 306, 308, 321, 323, 330], "standard": [6, 7, 62, 186, 218, 269, 302, 321, 330], "convent": [6, 62, 186, 314, 321, 323, 330], "part": [6, 7, 323], "procedur": [6, 7, 21, 205, 323, 324, 330], "It": [6, 7, 62, 321, 323], "unlik": [6, 7, 301], "would": [6, 7, 243, 323], "ever": [6, 7], "need": [6, 7, 186, 269, 300, 301, 321, 323, 325, 327, 330, 331], "manual": [6, 7, 300], "proce": [6, 7, 323], "caution": [6, 7], "list": [6, 7, 11, 17, 18, 19, 21, 64, 70, 107, 121, 135, 149, 163, 192, 193, 205, 211, 212, 226, 227, 237, 238, 239, 240, 243, 244, 256, 266, 269, 281, 282, 283, 284, 295, 300, 301, 302, 308, 324], "which": [6, 7, 9, 62, 64, 67, 113, 116, 127, 130, 131, 141, 144, 155, 158, 169, 172, 186, 189, 200, 207, 218, 222, 237, 238, 243, 256, 259, 263, 300, 303, 321, 323, 330, 331], "should": [6, 7, 62, 240, 266, 306, 321, 323, 330], "perform": [6, 7, 237, 238, 306, 328, 330], "structur": [6, 7, 67, 323, 324, 331], "dbregistri": [6, 7], "A": [6, 7, 87, 107, 121, 135, 149, 163, 200, 253, 281, 282, 283, 284, 295, 300, 301, 303, 324, 330], "all": [6, 7, 18, 19, 34, 36, 49, 51, 65, 73, 92, 113, 127, 141, 155, 169, 192, 205, 211, 226, 240, 244, 252, 266, 269, 270, 281, 282, 283, 284, 291, 296, 298, 314, 323, 324, 325, 328, 330], "ar": [6, 7, 18, 19, 36, 43, 47, 51, 58, 62, 73, 82, 99, 186, 189, 196, 205, 207, 216, 222, 231, 237, 238, 239, 244, 259, 260, 263, 269, 281, 282, 283, 284, 293, 297, 306, 314, 321, 323, 324, 330], "found": [6, 7, 42, 57, 81, 98, 300, 330], "By": [6, 7, 18, 19, 205, 244], "default": [6, 7, 18, 19, 36, 38, 42, 44, 51, 53, 57, 59, 62, 73, 75, 81, 83, 95, 98, 100, 190, 200, 205, 208, 223, 237, 238, 239, 243, 244, 248, 253, 269, 279, 281, 282, 283, 284, 296, 300, 301, 302, 303, 321, 323, 326, 330], "built": [6, 7, 323, 324], "even": [6, 7, 300, 301, 328], "ha": [6, 7, 45, 60, 84, 87, 101, 186, 218, 244, 258, 259, 260, 279, 281, 282, 283, 284, 303, 323, 326, 330], "alreadi": [6, 7, 10, 237, 300, 301, 323, 324, 330], "been": [6, 7], "In": [6, 7, 45, 60, 84, 101, 186, 218, 240, 253, 263, 303, 306, 314, 321, 323, 326, 328, 330], "most": [6, 7, 47, 291, 321, 323, 325, 330], "case": [6, 7, 45, 60, 84, 101, 197, 258, 303, 306, 310, 323, 325], "unadvis": [6, 7], "becaus": [6, 7, 323], "like": [6, 7, 40, 41, 55, 56, 78, 79, 96, 97, 177, 303, 306, 308, 323, 328, 330], "fail": [6, 7, 196, 216, 231], "object": [7, 18, 19, 21, 40, 41, 46, 55, 56, 61, 62, 70, 78, 79, 85, 96, 97, 102, 107, 114, 120, 121, 128, 131, 135, 142, 149, 156, 163, 170, 177, 186, 189, 200, 205, 207, 218, 222, 237, 238, 240, 244, 256, 261, 264, 269, 273, 274, 281, 282, 287, 296, 300, 301, 303, 308, 309, 321, 323, 328, 330, 331], "table_nam": 8, "drop": 8, "from": [8, 9, 14, 34, 36, 37, 45, 49, 51, 52, 60, 62, 65, 67, 73, 74, 76, 84, 87, 92, 94, 101, 179, 186, 187, 189, 190, 198, 200, 207, 208, 217, 218, 219, 222, 223, 232, 238, 240, 253, 281, 282, 283, 285, 286, 289, 290, 292, 293, 300, 301, 303, 306, 314, 321, 323, 325, 328, 330, 331], "delet": [8, 196, 216, 231], "classmethod": [9, 36, 51, 67, 73, 105, 107, 108, 110, 111, 113, 114, 115, 116, 119, 121, 122, 124, 125, 127, 128, 129, 130, 133, 135, 136, 138, 139, 141, 142, 143, 144, 147, 149, 150, 152, 153, 155, 156, 157, 158, 161, 163, 164, 166, 167, 169, 170, 171, 172, 189, 207, 222, 253], "properti": [10, 11, 12, 17, 68, 69, 70, 76, 180, 181, 183, 188, 191, 192, 193, 194, 206, 210, 211, 212, 213, 221, 225, 226, 227, 228, 235, 245, 250, 257, 258, 259, 260, 261, 264, 272, 273, 274, 275, 276, 277, 280, 288, 294, 299, 304, 305, 321, 323], "avail": [11, 17, 64, 70, 192, 193, 205, 211, 212, 226, 227, 237, 306, 321, 323, 330], "remov": [14, 34, 42, 43, 49, 57, 58, 65, 81, 82, 92, 98, 99, 270, 289, 290, 291, 292, 293], "reset": [15, 323], "sqlite": 16, "flavor": 16, "input_path": [18, 330], "output_path": [18, 19, 330], "arg": [18, 19, 108, 122, 136, 150, 164, 184, 200, 201, 202, 203, 205, 217, 232], "known": [18, 19, 323, 325, 328, 331], "against": [18, 19, 116, 130, 144, 158, 172, 323, 325, 328, 330, 331], "set": [18, 19, 21, 37, 40, 41, 52, 55, 56, 62, 70, 74, 78, 79, 94, 96, 97, 107, 111, 120, 121, 125, 135, 139, 148, 149, 153, 163, 167, 243, 256, 281, 282, 283, 294, 300, 321, 323, 324, 326, 330], "output": [18, 19, 256, 279, 281, 282, 283, 284, 285, 286, 323], "your": [18, 19, 62, 321, 323, 324, 326, 330, 331], "choic": [18, 19], "input": [18, 237, 238, 252, 256, 296], "must": [18, 21, 70, 205, 239, 306, 321, 324, 330], "readabl": 18, "format": [18, 36, 39, 51, 54, 62, 73, 77, 186, 218, 281, 282, 283, 284, 300, 301, 303, 323, 326], "astropi": [18, 19, 64, 70, 113, 116, 127, 130, 141, 144, 155, 158, 169, 172, 180, 186, 188, 189, 206, 207, 209, 217, 221, 222, 224, 232, 237, 238, 239, 252, 253, 256, 269, 281, 282, 283, 284, 287, 296, 300, 301, 303, 306, 309, 323, 330, 331], "db": [18, 19, 330], "write": [18, 19, 116, 130, 144, 158, 172, 323], "includ": [18, 19, 237, 238, 244, 253, 279, 281, 282, 283, 284, 321, 324, 325, 328, 330], "thei": [18, 19, 196, 216, 231, 238, 261, 321, 323], "assum": [18, 19, 189, 207, 222], "otherwis": [18, 19, 39, 42, 54, 57, 77, 81, 98, 237, 238, 248, 252], "pre": [18, 19, 200, 205, 217, 232, 330], "backend": [20, 317, 323], "manag": [20, 177, 263, 314, 330], "variou": [20, 321, 323], "face": 20, "map": [21, 33, 47, 48, 62, 63, 76, 89, 90, 240, 253, 266, 321, 324, 328, 330, 331], "special": [21, 62, 76, 186, 197, 218, 233, 301, 321, 323, 330], "subclass": [21, 218, 253, 260, 321], "pars": 21, "reduct": [21, 323, 328], "code": [21, 62, 301, 325], "manifest": 21, "given": [21, 42, 57, 64, 81, 98, 113, 127, 141, 155, 169, 189, 207, 222, 237, 238, 266, 273, 274, 291, 298, 300, 301, 321, 323, 325, 328, 330, 331], "refdb": 21, "poisson": [21, 123, 126, 151, 154, 190, 197, 200, 204, 205, 208, 223, 324, 330], "enabl": [21, 326, 330], "poisson_param": [21, 330], "present": [21, 45, 60, 84, 101, 323, 330], "instrument": [21, 328, 330], "instrument_param": [21, 330], "otyp": [21, 148, 330], "object_param": [21, 330], "dbpath": [21, 330], "dict": [33, 43, 45, 47, 48, 58, 60, 62, 63, 76, 82, 84, 90, 99, 101, 114, 116, 128, 130, 142, 144, 156, 158, 170, 172, 205, 240, 253, 266, 298, 300], "dictionari": [33, 37, 38, 44, 48, 52, 53, 59, 63, 74, 75, 83, 90, 94, 95, 100, 116, 130, 144, 158, 172, 240, 266, 306], "item": [34, 49, 65, 92, 251, 281, 282, 283, 301], "d": [34, 35, 40, 41, 42, 45, 46, 49, 50, 55, 56, 57, 60, 61, 65, 71, 78, 79, 81, 84, 85, 87, 92, 93, 96, 97, 98, 101, 102, 148, 237, 238, 323], "shallow": [35, 50, 71, 93], "being": [36, 51, 73, 205, 323, 330], "read": [36, 51, 73, 187, 198, 219, 323, 324, 328], "determin": [36, 51, 67, 73, 186, 218, 281, 282, 283, 321, 323, 330], "base": [36, 51, 73, 263, 321, 323, 324, 330], "extens": [36, 51, 73, 323], "current": [36, 51, 68, 69, 73, 111, 125, 139, 153, 167, 294, 301, 330], "yaml": [36, 51, 73, 330], "toml": [36, 51, 73], "json": [36, 51, 73], "support": [36, 51, 73, 253, 279, 303], "valu": [37, 38, 42, 43, 44, 52, 53, 57, 58, 59, 62, 70, 74, 75, 81, 82, 83, 94, 95, 98, 99, 100, 189, 207, 222, 239, 240, 248, 252, 256, 258, 259, 263, 266, 268, 269, 274, 279, 281, 282, 283, 284, 285, 286, 298, 300, 308, 311, 313, 323, 330], "creat": [37, 52, 74, 94, 186, 189, 207, 218, 222, 237, 238, 240, 253, 262, 269, 270, 289, 290, 292, 293, 294, 295, 297, 298, 302, 303, 323, 325, 330, 331], "new": [37, 52, 74, 94, 196, 216, 231, 237, 238, 239, 240, 244, 252, 256, 266, 269, 291, 294, 295, 296, 300, 301, 302, 306, 323, 324, 325], "kei": [37, 38, 42, 43, 44, 45, 52, 53, 57, 58, 59, 60, 62, 74, 75, 76, 81, 82, 83, 84, 94, 95, 98, 99, 100, 101, 217, 232, 240, 243, 256, 266, 274, 279, 296, 302, 303, 321, 323, 324, 331], "iter": [37, 45, 52, 60, 74, 84, 94, 101, 240, 266, 268, 269, 270, 290], "els": [38, 44, 53, 59, 75, 83, 95, 100], "valid": [39, 54, 77, 300, 301, 323, 330], "view": [40, 41, 46, 55, 56, 61, 78, 79, 85, 96, 97, 102, 300], "": [40, 41, 46, 55, 56, 61, 67, 78, 79, 85, 96, 97, 102, 148, 180, 186, 188, 190, 206, 208, 218, 221, 223, 243, 246, 247, 253, 256, 302, 303, 323, 326, 330, 331], "k": [42, 45, 57, 60, 81, 84, 87, 98, 101, 330], "v": [42, 45, 57, 60, 81, 84, 98, 101, 120, 148, 238, 323], "specifi": [42, 57, 70, 81, 98, 113, 127, 141, 155, 169, 179, 186, 187, 190, 198, 205, 208, 217, 218, 219, 223, 232, 237, 238, 240, 243, 253, 256, 266, 270, 290, 298, 303, 314, 321, 323, 330, 331], "correspond": [42, 57, 69, 70, 81, 98, 190, 208, 223, 238, 240, 256, 266, 274, 303, 321, 323, 330], "rais": [42, 43, 57, 58, 81, 82, 98, 99, 253, 303], "keyerror": [42, 43, 57, 58, 81, 82, 98, 99], "pair": [43, 58, 82, 99], "2": [43, 58, 82, 99, 186, 237, 238, 240, 253, 262, 268, 269, 270, 289, 290, 292, 293, 294, 295, 296, 303, 306, 308, 314, 323, 330], "tupl": [43, 58, 82, 99, 240, 266, 269, 281, 282, 283, 284, 285, 286, 295], "lifo": [43, 58, 82, 99], "last": [43, 58, 82, 99, 186, 218, 323], "first": [43, 58, 82, 99, 302, 323, 324, 330], "out": [43, 58, 82, 99, 148, 256, 323, 325], "order": [43, 58, 82, 99, 240, 243, 244, 261, 266, 297, 302], "empti": [43, 58, 82, 99, 189, 205, 207, 222], "insert": [44, 59, 83, 100, 237, 238, 239], "e": [45, 60, 84, 101, 240, 266, 269, 300], "f": [45, 60, 84, 101, 279, 323, 330], "doe": [45, 60, 84, 101, 258, 300, 301, 302, 303], "lack": [45, 60, 84, 101], "either": [45, 60, 70, 84, 101, 239, 263, 323, 330], "follow": [45, 60, 62, 84, 101, 321, 330], "archetyp": 47, "effect": [47, 256, 323, 330, 331], "few": [47, 186, 218, 303, 323], "util": [47, 323, 325, 330, 331], "onli": [47, 62, 87, 269, 270, 273, 279, 281, 282, 283, 284, 290, 296, 303, 321, 323, 327, 330], "sub": [47, 205, 328], "repres": [62, 68, 177, 186, 246, 321, 330], "sourcet": [62, 67, 113, 116, 127, 130, 141, 144, 155, 158, 169, 172], "inform": [62, 321, 323, 324, 330], "role": 62, "particular": [62, 200, 205, 240, 330], "dataset": [62, 330], "addition": [62, 323], "control": [62, 285, 286, 303, 323, 330], "nativ": [62, 76, 186, 218, 244, 323], "coordin": [62, 64, 68, 69, 70, 87, 107, 113, 121, 127, 135, 141, 149, 155, 163, 169, 180, 186, 188, 206, 218, 221, 303, 314, 321, 323, 331], "simbad": [62, 190, 208, 223, 323, 330], "adopt": 62, "column_map": [62, 120, 148, 321], "between": [62, 238, 314, 323, 330], "appear": [62, 261, 330], "backbon": 62, "approach": [62, 237, 323], "us": [62, 70, 116, 130, 144, 158, 172, 186, 205, 237, 238, 239, 240, 243, 246, 247, 248, 252, 258, 261, 266, 268, 269, 273, 274, 281, 282, 283, 285, 286, 289, 290, 292, 300, 301, 302, 303, 306, 310, 317, 321, 323, 325, 327, 328, 330], "default_coord_system": [62, 120, 148, 321], "specif": [62, 69, 70, 200, 293, 323, 330], "string": [62, 246, 247, 253, 256, 281, 282, 283, 284, 300, 301], "represent": [62, 103, 131, 159, 178, 281, 282, 283, 284, 303], "object_map": [62, 120, 148], "z": [62, 120, 262, 269, 270, 289, 290, 292, 293, 314, 321], "redshift": [62, 120, 321], "denot": [62, 314], "each": [62, 107, 114, 116, 121, 128, 130, 135, 142, 144, 149, 156, 158, 163, 170, 172, 177, 205, 217, 232, 237, 238, 246, 252, 259, 269, 323, 330, 331], "ra": [62, 120, 148, 303, 321, 323, 331], "dec": [62, 120, 148, 303, 321, 323, 331], "l": [62, 148, 321], "galact": [62, 321, 323], "longitud": [62, 314, 321], "b": [62, 148, 237, 238, 240, 262, 269, 270, 279, 289, 290, 292, 293, 294, 295, 296, 298, 306, 308, 321], "latitud": [62, 314, 321], "soucetableschema": 62, "have": [62, 253, 258, 301, 303, 321, 323, 331], "tell": [62, 321, 323], "what": [62, 321, 323, 330], "differ": [62, 186, 237, 238, 256, 298, 314, 321, 323, 328], "actual": [62, 321, 323, 330], "how": [62, 323, 324, 330, 331], "convert": [62, 186, 237, 238, 246, 247, 253, 303, 306, 323, 330], "uniform": [62, 87], "native_object_typ": 62, "simbad_object_typ": 62, "miscellan": 62, "icr": [62, 120, 148, 321, 323], "genericfram": [64, 70, 180, 188, 206, 221], "can": [64, 131, 186, 237, 238, 240, 256, 261, 266, 269, 273, 274, 281, 282, 283, 284, 289, 294, 300, 306, 321, 323, 324, 325, 326, 327, 330, 331], "frame": [64, 70, 182, 185, 186, 321], "best": [67, 323, 328, 330], "guess": 67, "deduc": 67, "mean": [67, 300, 301, 323], "final": [67, 323], "anoth": [70, 300, 301, 306, 308], "mai": [70, 205, 247, 258, 259, 300, 301, 321, 323, 330], "consist": 70, "colmap": 70, "invers": 76, "now": [76, 323], "select": [76, 330], "statist": [86, 323, 325, 328], "n_point": 87, "sampl": [87, 107, 114, 121, 128, 135, 142, 149, 156, 163, 170, 217, 218, 232, 323, 330], "spheric": [87, 186, 314, 323], "surfac": [87, 186, 218, 323], "int": [87, 114, 128, 142, 156, 170, 217, 232, 237, 238, 243, 262, 279, 281, 282, 283, 284, 292, 293, 298, 300, 301], "number": [87, 107, 114, 121, 128, 135, 142, 149, 156, 163, 170, 186, 189, 207, 217, 218, 222, 232, 279, 281, 282, 283, 284, 298, 300, 301, 323, 328], "draw": 87, "phi": [87, 186, 314, 315, 323, 330], "azimuth": [87, 314], "posit": [87, 107, 113, 114, 121, 127, 128, 135, 141, 142, 149, 155, 156, 163, 169, 170, 177, 182, 183, 194, 213, 228, 237, 238, 262, 266, 314, 323, 328, 331], "rad": [87, 120, 148, 189, 207, 222, 323], "theta": [87, 186, 314, 315, 323, 330], "elev": [87, 314], "angl": [87, 314], "reli": 87, "transform": 87, "produc": [87, 325], "random": [87, 114, 128, 142, 156, 170, 217, 218, 232, 301, 323, 330], "segment": 87, "omega": [87, 314, 323], "area": [87, 113, 114, 127, 128, 141, 142, 155, 156, 169, 170, 323], "sin": 87, "thu": [87, 323, 328, 330], "probabl": [87, 323, 325, 330], "find": [87, 323, 324, 325, 330], "point": [87, 105, 114, 116, 119, 128, 130, 133, 142, 144, 147, 156, 158, 161, 170, 172, 217, 232, 323, 330], "region": 87, "size": [87, 107, 121, 135, 149, 163, 205, 284, 323, 326], "p": [87, 279, 323, 330], "sim": 87, "u": [87, 238, 246, 247, 303, 323], "alpha": [87, 323], "psi": 87, "To": [87, 237, 268, 269, 289, 292, 323, 325, 326, 327, 330], "accomplish": [87, 328, 330], "we": [87, 253, 303, 323, 324, 326, 328, 330, 331], "requir": [87, 240, 259, 300, 323, 330], "1": [87, 116, 130, 144, 158, 172, 237, 238, 240, 253, 262, 268, 269, 270, 282, 284, 289, 290, 292, 293, 294, 295, 296, 298, 303, 306, 308, 314, 321, 323, 330, 331], "distribut": [87, 323, 325], "independ": 87, "simpli": [87, 237, 243, 323, 330], "let": [87, 190, 208, 223, 323, 326], "co": [87, 314, 323], "n": [87, 148, 173, 253, 279, 306, 323, 330], "x": [88, 120, 148, 237, 238, 253, 262, 269, 270, 289, 290, 292, 293, 314, 323, 325, 330], "except": [88, 186, 218, 281, 282, 283, 284, 303, 323], "local": [103, 300, 301, 323], "radii": [105, 107, 114, 116, 119, 121, 128, 130, 133, 135, 142, 144, 147, 149, 156, 158, 161, 163, 170, 172, 173], "thread": [105, 114, 116, 119, 128, 130, 133, 142, 144, 147, 156, 158, 161, 170, 172, 323], "thread_kw": [105, 114, 116, 119, 128, 130, 133, 142, 144, 147, 156, 158, 161, 170, 172, 323], "skycoord": [107, 113, 121, 127, 135, 141, 149, 155, 163, 169, 183, 194, 213, 228, 303, 316, 323, 331], "sky": [107, 114, 121, 128, 135, 142, 149, 156, 163, 170, 177, 186, 218, 323, 325, 330], "unit": [107, 113, 114, 116, 121, 127, 128, 130, 135, 141, 142, 144, 149, 155, 156, 158, 163, 169, 170, 172, 189, 196, 207, 216, 217, 222, 231, 232, 234, 236, 253, 279, 281, 282, 283, 284, 303, 323, 331], "quantiti": [107, 113, 114, 116, 121, 127, 128, 130, 135, 141, 142, 144, 149, 155, 156, 158, 163, 169, 170, 172, 189, 196, 207, 216, 217, 222, 231, 232, 303], "arrai": [107, 121, 135, 149, 163, 186, 240, 243, 244, 246, 247, 248, 253, 256, 293, 323, 325], "same": [107, 121, 135, 149, 163, 200, 205, 240, 248, 256, 266, 279, 281, 282, 283, 284, 289, 290, 292, 296, 298, 301, 308, 323, 330], "home": [109, 112, 123, 126, 137, 140, 151, 154, 165, 168, 323], "runner": [109, 112, 123, 126, 137, 140, 151, 154, 165, 168], "work": [109, 112, 123, 126, 137, 140, 151, 154, 165, 168, 273, 290, 323, 324, 330, 331], "bin": [109, 112, 123, 126, 137, 140, 151, 154, 165, 168, 323], "psn_map": [109, 112, 123, 126, 137, 140, 151, 154, 165, 168, 323], "get": [111, 125, 139, 153, 167, 237, 238, 262, 285, 286, 300, 301, 323, 324], "poissonmap": [111, 125, 139, 153, 167], "radiu": [113, 127, 141, 155, 169, 196, 216, 217, 231, 232, 323, 330, 331], "remot": [113, 127, 131, 141, 155, 169, 323], "pull": [113, 127, 141, 155, 169, 323], "within": [113, 127, 141, 155, 169, 323, 324, 330, 331], "angular": [113, 127, 141, 155, 169, 217, 232, 323, 330], "about": [113, 127, 141, 155, 169, 323, 330], "count": [114, 128, 142, 156, 170, 205, 209, 217, 224, 232], "randomli": [114, 128, 142, 156, 170, 217, 232, 323, 330], "search": [114, 116, 128, 130, 142, 144, 156, 158, 170, 172, 217, 232, 300, 323, 330, 331], "dictat": [114, 128, 142, 156, 170, 323, 330], "behavior": [114, 128, 142, 156, 170, 186, 218, 296, 330], "source_t": [116, 130, 144, 158, 172], "search_radii": [116, 130, 144, 158, 172], "arcmin": [116, 130, 144, 158, 172, 323, 331], "multithread": [116, 130, 144, 158, 172], "keyword": [116, 130, 144, 158, 172, 200, 205], "instanti": [117, 145], "ipac": [117, 323, 325], "caltech": 117, "ass": [120, 323], "As": [120, 148, 323, 330], "cl": [120, 148, 323], "blue": [120, 323], "c": [120, 148, 237, 238, 240, 262, 269, 270, 289, 290, 292, 293, 294, 295, 298, 306, 308, 323, 330], "emobj": [120, 323], "flar": [120, 323], "pe": [120, 148], "hii": [120, 148, 323], "mcld": [120, 323], "moc": [120, 148], "neb": [120, 323], "gne": [120, 148], "nova": [120, 323], "No": [120, 148, 323], "pn": [120, 148, 323], "psr": [120, 148, 323], "red": [120, 323], "rfn": [120, 323], "pne": 120, "sn": [120, 148, 323], "snr": [120, 148, 323], "wd": [120, 148, 323], "wr": [120, 148, 323], "abl": [120, 323], "ism": [120, 148], "eml": 120, "emlin": 120, "flare": [120, 323], "g": [120, 148, 190, 208, 223, 240, 266, 269, 300], "gclstr": 120, "clg": [120, 148], "ggroup": 120, "grg": [120, 148], "gpair": 120, "pag": [120, 148], "gtrpl": 120, "cgg": [120, 148], "g_len": 120, "gl": [120, 148], "gamma": 120, "gam": [120, 148], "ir": [120, 148, 323, 330], "other": [120, 270, 281, 282, 283, 284, 300, 306, 308, 314, 321, 323, 328, 330], "pofg": 120, "qgroup": 120, "agn": [120, 148], "qso": [120, 148], "q_len": 120, "leq": [120, 148], "radio": 120, "rne": [120, 148], "uv": [120, 148, 323], "viss": 120, "opt": [120, 148], "xrai": [120, 323], "exg": 120, "coordinate_unit": [120, 148], "deg": [120, 148, 303, 323, 331], "fit": [123, 126, 151, 154, 186, 187, 189, 198, 207, 218, 219, 222, 323, 330], "host": 131, "main_id": 148, "ab": 148, "ag": 148, "ae": 148, "bd": 148, "bh": 148, "bl": 148, "bll": 148, "BY": 148, "Be": 148, "bic": 148, "bla": 148, "bz": 148, "cgb": 148, "cv": [148, 323], "ce": 148, "cld": 148, "dne": 148, "eb": 148, "el": 148, "em": 148, "emg": 148, "emo": 148, "er": 148, "ev": 148, "fir": 148, "gwe": 148, "gic": 148, "gig": 148, "gip": 148, "glc": 148, "gr": 148, "h2g": 148, "hb": 148, "hh": 148, "hi": 148, "h": [148, 279], "hv": 148, "hvc": 148, "hx": 148, "hxb": 148, "ig": 148, "li": 148, "lin": 148, "lm": 148, "lp": 148, "lsb": 148, "lx": 148, "lxb": 148, "le": [148, 186], "leg": 148, "lei": 148, "lev": 148, "mgr": 148, "mir": 148, "m": [148, 303, 323], "ma": [148, 244], "mi": 148, "nir": 148, "oh": 148, "opc": 148, "Or": 148, "pcg": 148, "pm": [148, 314], "pl": 148, "poc": 148, "pog": 148, "pu": 148, "q": [148, 279, 303], "rb": 148, "rc": 148, "rg": 148, "rr": 148, "r": [148, 279, 314, 330], "rv": 148, "ro": 148, "sb": 148, "sbg": 148, "sc": [148, 303], "scg": 148, "sfr": 148, "sr": [148, 323], "sx": 148, "st": 148, "sy": 148, "sy1": 148, "sy2": 148, "syg": 148, "tt": 148, "ulx": 148, "ux": 148, "wv": 148, "xb": 148, "y": [148, 237, 238, 262, 269, 270, 289, 290, 292, 293, 323, 330], "o": 148, "a2": 148, "bc": 148, "bcg": 148, "blu": 148, "bub": 148, "cc": 148, "cm": [148, 323], "cor": 148, "err": 148, "flt": 148, "gb": 148, "gd": 148, "gle": 148, "glb": 148, "grv": 148, "mr": 148, "mm": 148, "mul": 148, "pa": 148, "reg": 148, "sg": 148, "sh": 148, "smm": 148, "var": 148, "vid": 148, "database_nam": [173, 174, 175, 176], "interfac": [177, 279, 314, 330], "mapatla": [177, 179, 198, 218, 219], "collect": [177, 330], "act": 177, "callabl": [178, 323], "healpix": [178, 183, 186, 189, 194, 196, 207, 213, 216, 218, 222, 228, 231, 314, 315, 323], "atla": [178, 179, 180, 188, 190, 196, 200, 205, 206, 208, 209, 216, 217, 221, 223, 224, 231, 232, 323], "hdu": [179, 186, 193, 212, 218, 227], "locat": [179, 323], "pixel": [183, 186, 194, 213, 218, 228, 323], "inplac": [185, 200, 323], "filepath": [186, 187, 197, 198, 218, 219], "design": 186, "store": [186, 285, 286, 323, 330], "On": [186, 218, 323, 324, 331], "detail": [186, 218, 323, 325, 330], "regard": [186, 218], "header": [186, 218, 279, 281, 282, 283, 284, 300, 330], "primari": [186, 218, 239, 291, 302, 303], "geometri": [186, 218], "npix": [186, 218, 323], "grid": [186, 189, 196, 207, 216, 218, 222, 231, 323], "nside": [186, 218, 323], "equival": [186, 218, 246], "csy": [186, 218, 323], "cdate": [186, 218], "date": [186, 218, 253], "wa": [186, 218, 240, 323, 330], "edat": [186, 218], "edit": [186, 218, 323], "re": [186, 218, 300, 301, 323], "resolut": [186, 189, 196, 207, 215, 216, 218, 222, 230, 231, 323], "than": [186, 269, 321, 323], "0": [186, 237, 238, 253, 262, 269, 270, 281, 282, 283, 284, 289, 290, 292, 293, 296, 298, 303, 306, 314, 323, 330], "pi": [186, 314, 323, 330], "measur": [186, 314], "north": [186, 314], "pole": [186, 314], "never": 186, "interact": [186, 279, 326, 331], "when": [186, 196, 216, 231, 247, 263, 269, 300, 301, 323], "packag": [186, 310, 321, 323, 324, 325, 328, 330], "automat": [186, 330], "lon": 186, "lat": 186, "time": [186, 253, 289, 292, 301, 303, 323], "These": [186, 314, 321, 330], "so": [186, 246, 263, 284, 285, 286, 300, 321, 323, 325], "call": [186, 237, 238, 243, 301, 323], "base_coordin": 186, "yet": [186, 323], "ti": 186, "ani": [186, 205, 237, 238, 244, 258, 260, 300, 323, 324, 328, 330, 331], "physic": [186, 321, 328, 330], "context": [186, 263, 323], "entri": [186, 240, 252, 323], "those": [186, 321, 323, 330], "interpret": 186, "aforement": 186, "veri": [186, 237, 323], "imag": [186, 323, 326], "1xnpix": 186, "some": [186, 300, 323, 328], "identifi": [186, 323, 328, 330], "ismap": 186, "skyatla": [189, 207, 222, 323], "save": [189, 207, 222], "obtain": [190, 208, 223, 323, 330], "exampl": [190, 208, 223, 237, 238, 240, 253, 262, 268, 269, 270, 289, 290, 292, 293, 294, 295, 296, 297, 298, 302, 303, 306, 308, 323, 324, 325, 330], "try": [190, 208, 223], "galaxi": [190, 208, 223, 330], "import": [190, 208, 223, 253, 303, 321, 323, 324, 330, 331], "poisson_atla": [190, 208, 223], "get_default_poisson_atla": [190, 208, 223, 323], "forc": [196, 216, 231], "reshap": [196, 216, 231], "instead": [196, 216, 231, 284, 323, 330], "encount": [196, 216, 231, 323], "statatla": 197, "hudl": [199, 220, 241], "object_typ": [200, 201, 202, 203, 204, 205], "knn": [200, 323], "build": [200, 204, 323], "calcul": [200, 323, 330], "written": [200, 323], "directli": [200, 294, 323, 330], "regressor": [204, 323], "retrain": 204, "cross_valid": 204, "training_kw": [204, 323], "param_kw": [204, 323], "cv_kw": 204, "param": [204, 323], "build_arg": 205, "build_kwarg": 205, "subset": [205, 269], "length": [205, 237, 238, 240, 253, 256, 266, 306, 308, 323], "singl": [205, 239, 273, 290, 303], "individu": [205, 252], "append": [205, 237, 238, 323], "element": [205, 303, 308], "also": [205, 237, 238, 240, 266, 289, 290, 294, 323, 327, 330], "arbitrari": 205, "similar": [205, 268, 323], "along": 205, "left": [205, 281, 282, 283, 284, 323, 326, 330], "unspecifi": 205, "fetch": [209, 224, 323], "npoint": [217, 232], "search_radiu": [217, 232, 331], "around": [217, 232, 314, 323, 326, 331], "word": [217, 232, 323], "wrap": [218, 323], "dbname": 218, "custom": [233, 323], "mask": [234, 236, 240, 244, 252, 258, 259, 266, 303], "dtype": [234, 236, 240, 246, 247, 253, 266, 279, 281, 282, 283, 284], "copi": [234, 236, 237, 238, 240, 244, 252, 256, 263, 296, 300, 306], "row": [234, 236, 240, 256, 261, 266, 269, 273, 274, 279, 281, 282, 283, 284, 292, 293, 297, 300, 301, 323], "copy_indic": [234, 236], "descript": [234, 236, 321, 330], "col": [237, 238, 263, 268, 296], "index": [237, 238, 239, 253, 261, 262, 263, 266, 273, 274, 291, 292, 300, 301, 302, 303], "rename_dupl": [237, 238], "default_nam": 237, "suppli": [237, 238, 239, 252, 281, 282, 283], "befor": [237, 238, 266, 323], "end": [237, 238, 240, 279], "accept": [237, 238, 330], "mixin": [237, 238, 258, 260, 296, 303], "scalar": [237, 238, 308], "broadcast": [237, 238], "sever": [237, 289, 290, 292], "onc": [237, 238, 323, 330], "There": [237, 321, 323, 326, 330], "littl": [237, 238], "two": [237, 238, 323, 330], "uniquifi": [237, 238], "make": [237, 238, 239, 263, 296, 301, 323], "both": [237, 273, 284], "info": [237, 294, 323], "number_of_column": 237, "third": 237, "t": [237, 238, 240, 262, 268, 269, 270, 289, 290, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 306, 323, 330], "col_c": [237, 238], "print": [237, 238, 240, 253, 262, 268, 269, 270, 279, 283, 284, 285, 286, 289, 290, 292, 293, 294, 295, 297, 298, 301, 302, 303, 323], "second": [237, 238], "b_1": [237, 238], "unnam": [237, 238], "explicit": [237, 238], "overridden": [237, 238], "col2": 237, "origin": [238, 296, 306, 330], "perspect": 238, "loop": 238, "over": [238, 268, 269, 323], "duplic": [238, 300], "ones": 238, "hstack": [238, 296, 306], "updat": [238, 296], "replace_column": [238, 306], "them": [238, 298, 323, 330, 331], "col_d": 238, "col_b": 238, "3": [238, 240, 253, 262, 269, 270, 289, 290, 292, 293, 294, 295, 296, 302, 303, 314, 323, 326], "4": [238, 240, 246, 253, 294, 295, 298, 308, 323], "col0": [238, 268, 269], "colnam": [239, 291], "engin": [239, 242], "uniqu": [239, 256, 281, 282, 300, 301, 328], "among": 239, "more": [239, 243, 281, 282, 283, 284, 302, 321, 323, 328, 330], "indic": [239, 243, 263, 273, 274, 291, 300, 330], "sortedarrai": 239, "bst": 239, "scengin": 239, "val": [240, 266], "sequenc": [240, 266, 296], "miss": [240, 266, 303], "fill": [240, 266, 323], "np": [240, 244, 253, 266, 303, 323], "zero": [240, 266], "own": [240, 323, 330], "cannot": [240, 281, 282, 283, 330], "give": [240, 266, 290], "desir": [240, 247, 266], "three": [240, 262, 269, 270, 289, 290, 292, 293, 294, 295, 297, 298], "5": [240, 269, 294, 295, 298, 303, 308, 323, 326], "7": [240, 303, 306, 308, 323], "8": [240, 246, 247, 303, 308, 323, 326], "ad": [240, 291, 300, 301, 306, 323, 324, 330], "6": [240, 294, 295, 303, 323], "9": [240, 323, 326], "kind": [243, 246, 247, 302], "revers": [243, 302], "sort": [243, 256, 300, 301], "accord": [243, 256, 302], "numpi": [243, 244, 253, 256, 296, 302, 323], "quicksort": [243, 302], "mergesort": [243, 302], "heapsort": [243, 302], "stabl": [243, 302], "algorithm": [243, 302, 330], "index_arrai": 243, "ndarrai": [243, 244, 296], "keep_byteord": 244, "form": [244, 323], "maskedarrai": 244, "appropri": 244, "byte": [244, 246], "howev": [244, 323, 330], "preserv": [244, 263], "non": [244, 298, 323], "table_arrai": 244, "unmask": 244, "bytestr": [246, 247], "unicod": [246, 247], "utf": [246, 247], "encod": [246, 247, 303], "intern": 246, "chang": [246, 321, 323, 324], "charact": [246, 279, 281, 282, 283, 284], "uc": 246, "ineffici": 246, "memori": [246, 300], "script": [246, 330], "manipul": 246, "natur": [246, 330], "syntax": [246, 306], "export": [247, 300], "copy_data": 248, "alwai": [248, 323, 330], "deepcopi": 248, "recarrai": 251, "compat": 251, "fill_valu": 252, "self": [252, 281, 282, 300, 301], "defin": [252, 260, 279, 281, 282, 283, 284, 314, 330], "entir": [252, 282, 284, 323, 330], "filled_t": 252, "datafram": [253, 303], "panda": [253, 303], "numer": [253, 298], "convers": [253, 314], "delta": [253, 323], "timedelta": [253, 303], "respect": [253, 281, 282, 283, 284], "importerror": [253, 303], "instal": [253, 303, 323, 326], "here": [253, 303, 323, 328, 330], "qtabl": [253, 303], "pd": [253, 303], "seri": 253, "1998": [253, 303], "01": [253, 303], "2002": [253, 303], "datetime64": [253, 303], "dt": [253, 303], "300": [253, 323], "timedelta64": [253, 303], "df": [253, 303], "option_context": [253, 303], "displai": [253, 300, 301, 303], "max_column": [253, 303], "20": [253, 293, 303, 323], "dai": [253, 303], "00": [253, 303, 323], "05": [253, 323], "float64": [253, 306], "01t00": 253, "000": 253, "group": 256, "split": 256, "tablegroup": 256, "wai": 256, "homogen": 256, "maskedcolumn": [258, 303], "has_masked_valu": 258, "rel": [259, 323, 330], "slow": 259, "larg": [259, 314, 323, 330], "tableiloc": 261, "retriev": [261, 273, 274, 301, 323], "mode": [263, 303], "freez": 263, "copy_on_getitem": 263, "discard_on_copi": 263, "whenev": 263, "modifi": 263, "exit": 263, "refresh": [263, 279], "themselv": 263, "intend": 263, "scenario": [263, 323], "mani": [263, 303, 325], "modif": 263, "take": [263, 323, 326, 330], "slice": [263, 293], "well": [263, 323, 330], "i0": 263, "i1": 263, "tableindic": 264, "col1": 268, "syntact": 268, "prefer": 268, "especi": 269, "substanti": 269, "faster": 269, "tbl": 269, "sinc": [269, 300], "access": [269, 301, 321, 323], "slower": 269, "wise": [269, 308, 330], "keep": 270, "tableloc": 273, "rang": 273, "iloc": 273, "tablelocindic": 274, "max_lin": [279, 281, 282, 283, 284, 300], "max_width": [279, 281, 282, 283, 284], "show_nam": [279, 281, 282, 283, 284], "show_unit": [279, 281, 282, 283, 284], "show_dtyp": [279, 281, 282, 283, 284], "brows": 279, "page": [279, 301, 324, 331], "space": [279, 323], "forward": 279, "back": [279, 323], "next": [279, 330], "previou": 279, "go": [279, 314, 323, 326, 330], "begin": [279, 323, 324], "quit": [279, 323], "help": [279, 330], "maximum": [279, 281, 282, 283, 284, 300], "line": [279, 281, 282, 283, 284, 327, 330], "width": [279, 281, 282, 283, 284], "show": [279, 281, 282, 283, 284, 300, 301, 308, 323, 326], "html": [281, 282, 300, 301], "tableid": [281, 282, 300, 301], "align": [281, 282, 283, 284], "tableclass": [281, 282], "height": [281, 282, 283], "screen": [281, 282, 283, 284], "termin": [281, 282, 283, 284], "taken": [281, 282, 283], "configur": [281, 282, 283, 301, 324, 329], "conf": [281, 282, 283], "neg": [281, 282, 283, 300], "limit": [281, 282, 283, 300, 301], "appli": [281, 282, 283, 321], "id": [281, 282, 300, 301], "tag": [281, 282, 300, 301], "integ": [281, 282, 300, 301, 303], "right": [281, 282, 283, 284, 323, 326, 330], "center": [281, 282, 283, 284], "pad": [281, 282, 283, 284], "multipl": [281, 282, 283, 284, 295, 301], "css": [281, 282, 300, 301], "pprint": [284, 323], "restrict": [284, 330], "maintain": [285, 286], "visibl": [285, 286, 326], "descriptor": [285, 286], "inherit": [285, 286, 330], "metaattribut": [285, 286], "__attributes__": [285, 286], "pprint_include_nam": 285, "pprint_exclude_nam": 286, "connect": [287, 309, 321], "tableread": 287, "done": [289, 294, 328, 330], "del": 289, "involv": 291, "recent": 291, "remain": [291, 298], "row_specifi": 293, "warn": [293, 303], "oper": [293, 302], "extend": 293, "outsid": 293, "10": [293, 323], "new_nam": [294, 295], "renam": [294, 295], "aa": [294, 295], "bb": 295, "replac": [296, 306], "deep": [296, 325], "For": [296, 303, 323, 330], "add_column": [296, 306], "float": [296, 303], "version": [296, 300, 301, 303], "itself": [296, 300, 301], "float_a": 296, "astyp": 296, "place": [297, 298, 306], "max": [297, 302], "jo": [297, 302], "john": [297, 302], "miller": [297, 302], "jackson": [297, 302], "12": [297, 298, 302, 323, 326], "15": [297, 302, 323], "18": [297, 302, 323], "firstnam": [297, 302], "tel": [297, 302], "decim": [298, 323], "ignor": [298, 300, 301], "25": [298, 323], "55": [298, 323], "123": 298, "85": [298, 323], "26": [298, 323], "certain": 298, "5000": 300, "jsviewer": [300, 301], "browser": [300, 301], "jskwarg": 300, "use_local_fil": 300, "table_class": [300, 301], "compact": 300, "show_row_index": [300, 301], "idx": [300, 301], "render": [300, 301], "web": 300, "low": 300, "avoid": [300, 301, 330], "issu": [300, 303], "prepend": 300, "javascript": [300, 301], "datat": [300, 301], "legal": 300, "firefox": 300, "chrome": 300, "safari": 300, "mac": 300, "open": [300, 323], "applic": 300, "googl": 300, "app": 300, "init": 300, "librari": 300, "serv": 300, "style": [300, 301, 306, 323, 326], "possibl": [300, 323, 330], "http": [300, 327], "www": [300, 327], "net": 300, "declar": [300, 301], "default_css": 300, "evalu": [300, 301], "display_length": 301, "50": [301, 323], "ipython": 301, "notebook": [301, 323], "xxx": 301, "conflict": 301, "default_notebook_table_class": 301, "bootstrap": 301, "see": [301, 303, 323, 325, 330], "default_css_nb": 301, "show_in_brows": 301, "onlin": 301, "repositori": [301, 327], "due": [301, 330], "modern": 301, "henc": 301, "while": 301, "offlin": 301, "don": [301, 323], "cach": 301, "jqueri": 301, "featur": [301, 330], "argsort": 302, "rule": 302, "use_nullable_int": 303, "vanilla": 303, "analog": 303, "below": [303, 323], "nullabl": 303, "24": 303, "nan": 303, "valueerror": 303, "multi": 303, "dimension": 303, "tm": 303, "jyear": 303, "200": 303, "03": 303, "merg": 306, "metadata": 306, "someth": 306, "possibli": 306, "altern": 306, "t1": [306, 308], "foo": 306, "bar": 306, "t2": [306, 308], "11": [306, 323], "str3": 306, "comparison": 308, "boolean": 308, "compar": 308, "tablewrit": 309, "ubiquit": 310, "pyx": [310, 323], "preferred_unit": 311, "datadict": [312, 313], "maplist": [312, 313], "focus": 314, "astronom": [314, 323, 325, 328, 331], "mathemat": 314, "axi": 314, "counter": 314, "clockwis": 314, "xy": [314, 330], "plane": [314, 323], "margin": 314, "eastward": 314, "obei": 314, "typic": [314, 323], "increas": 314, "east": 314, "360": 314, "degre": 314, "from_system": 315, "to_system": [315, 316], "latlon": [315, 323], "healpix_map": 318, "fig": 318, "ax": [318, 323], "project": [318, 323], "abstract": 321, "attach": [321, 323], "etc": [321, 323, 330], "varieti": [321, 323, 324, 325, 328], "throughout": 321, "awar": 321, "raw": [321, 323], "interest": [321, 325], "practic": 321, "job": 321, "task": [321, 328, 330], "do": [321, 323, 325, 330], "NOT": 321, "everi": [321, 325, 331], "least": 321, "complet": [321, 323, 325, 330], "fly": 321, "coordinate_system": 321, "poissonpointreduct": 323, "dure": [323, 330], "idea": [323, 324], "behind": [323, 324], "chanc": [323, 330], "could": [323, 330], "occur": [323, 330], "critic": [323, 325], "correctli": 323, "spuriou": [323, 330], "difficult": 323, "walk": 323, "ins": 323, "rnn": 323, "describ": [323, 330, 331], "likelihood": 323, "event": 323, "frequenc": [323, 330], "period": 323, "frac": 323, "exp": [323, 330], "question": 323, "becom": 323, "textbf": 323, "separ": 323, "lambda": [323, 330], "Then": 323, "happen": 323, "p_": [323, 330], "mathrm": [323, 330], "ge": 323, "underbrac": 323, "approx": 323, "_": 323, "ll": [323, 326, 328, 331], "figur": 323, "easi": [323, 325], "conduct": [323, 331], "great": [323, 324], "deal": 323, "sophist": [323, 330], "gone": 323, "its": 323, "simpl": [323, 330], "step": [323, 330], "interpol": 323, "euclidean": 323, "undertak": [323, 330], "just": [323, 330], "solut": 323, "scheme": 323, "break": 323, "up": 323, "tile": 323, "equal": 323, "cover": 323, "our": [323, 325, 326, 330], "thing": 323, "worth": [323, 325], "know": 323, "n_": 323, "side": 323, "mathbb": 323, "omega_": 323, "pix": 323, "theta_": 323, "097": 323, "poissonatla": 323, "bintabl": 323, "eventu": 323, "imagearrai": 323, "finish": 323, "disk": 323, "extract": 323, "tutori": 323, "ned": [323, 325, 330, 331], "matplotlib": 323, "pyplot": 323, "plt": 323, "mpl": 323, "rich": [323, 326], "pretti": 323, "skip": 323, "ned_atla": 323, "simbad_atla": 323, "get_poisson_atla": 323, "len": 323, "get_point": 323, "1400": 323, "2800": 323, "stage": [323, 328, 330], "sometim": 323, "advantag": 323, "scratch": 323, "start": [323, 324, 326], "look": [323, 325, 326], "clablsblu": 323, "emlsemobjexg": 323, "ggammasgclstrggroupgpairgtrplg_lenshiiirsmcldnebnovaotherpnpofgpsrqgroupqsoq_lensradiosr": 323, "rfnsnsnruvesuvsv": 323, "visswd": 323, "radecradtimepix_id": 323, "int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64int64float64float64float64str24int64": 323, "9000000000011000000040000000000000000200000000000000000000000000127": 323, "0635455638227919": 323, "6998591250098661": 323, "0sat": 323, "apr": 323, "13": 323, "16": 323, "42": 323, "20244604": 323, "0000000000000000000420000000000000000000000000000000000000000000150": 323, "91677719378922": 323, "990603079869511": 323, "202412712": 323, "000000000001000000018000000000000000030000000000000000000000000029": 323, "480381978969227": 323, "6492461894018351": 323, "20247287": 323, "0000000000000000000310000000000000000000000000000000000000000000277": 323, "3138480720660420": 323, "257870573467071": 323, "20244524": 323, "200000000005000000070000000000100000000000000000000000000000000153": 323, "7638610450799220": 323, "478604217191991": 323, "20244478": 323, "bunch": 323, "recogn": 323, "pix_id": 323, "want": [323, 330], "improv": [323, 330], "That": 323, "easili": 323, "achiev": [323, 327], "speed": 323, "sample_from_databas": 323, "max_work": 323, "chunk_siz": 323, "500": 323, "30": 323, "2024": 323, "04": 323, "23": 323, "986": 323, "ediggin": 323, "debug": [323, 326], "990": 323, "link": [323, 328], "lt": 323, "39": 323, "gt": 323, "992": 323, "001": 323, "100": 323, "19": 323, "42it": 323, "592": 323, "593": 323, "595": 323, "596": 323, "597": 323, "59it": 323, "58": 323, "029": 323, "1700": 323, "3300": 323, "geo": 323, "convert_skycoord": 323, "plot": [323, 326], "set_styl": 323, "color": 323, "symlognorm": 323, "enforc": [323, 330], "guid": [323, 325, 326], "point_data": 323, "figsiz": 323, "add_subplot": 323, "111": 323, "mollweid": 323, "set_facecolor": 323, "norm": 323, "vmin": 323, "vmax": 323, "amax": 323, "linthresh": 323, "cmap": [323, 326], "gnuplot": 323, "scatter": 323, "colorbar": 323, "scalarmapp": 323, "label": 323, "log": [323, 326, 329], "sigma": [323, 330], "set_xlabel": 323, "set_ylabel": 323, "far": 323, "good": 323, "ve": [323, 330], "seen": 323, "explor": 323, "long": 323, "sake": 323, "briefli": [323, 328], "mention": 323, "compon": 323, "parent": [323, 330], "maphdu": 323, "unfamiliar": 323, "heirarch": 323, "accur": 323, "discuss": 323, "basic": [323, 324, 326], "n_side": 323, "map_nam": 323, "13872": 323, "34": 323, "truli": 323, "aquaint": 323, "meet": [323, 331], "constitu": 323, "turn": 323, "simpler": 323, "irs_map": 323, "get_map": 323, "59": 323, "026": 323, "ed": 323, "meth": 323, "sat": 323, "22": [323, 331], "41": 323, "consid": [323, 330], "At": 323, "phi_0": 323, "theta_0": 323, "comput": 323, "round": 323, "rate": [323, 328], "prob": 323, "expect": 323, "5707963267948966": 323, "944": 323, "815837430702794e": 323, "95": 323, "231": 323, "22788344826247": 323, "visual": 323, "53": 323, "build_poisson_map": 323, "training_fract": 323, "75": 323, "weight": [323, 330], "distanc": [323, 330], "32": 323, "17": 323, "783": 323, "822": 323, "stat": 323, "map_regress": 323, "rnneighbormapregressor": 323, "0x7f8b1a04f590": 323, "311": 323, "312": 323, "316": 323, "train": 323, "radiusneighborsregressor": 323, "metric": 323, "haversin": 323, "1275": 323, "54": 323, "healpi": 323, "hp": 323, "mollview": 323, "flip": 323, "471": 323, "transform_map_coordin": 323, "89069807": 323, "92286377": 323, "94347106": 323, "23001574": 323, "25089458": 323, "21872889": 323, "09244016": 323, "0738412": 323, "1024804": 323, "02078292": 323, "04915249": 323, "06775146": 323, "suffici": 323, "drawn": 323, "upon": 323, "scene": 323, "mess": [323, 326], "understand": [323, 324], "fine": [323, 330], "grain": 323, "further": [323, 328, 330], "develop": [323, 325, 326, 330], "section": [323, 324, 330], "nitti": 323, "gritti": 323, "abov": 323, "problem": 323, "summar": [323, 324, 328], "sens": [323, 328, 330], "sigma_": 323, "star": [323, 330], "clear": 323, "stellar": 323, "peak": 323, "blank": 323, "spot": 323, "sphere": 323, "smooth": 323, "implement": [323, 330], "bayesian": 323, "techniqu": 323, "cell": 323, "under": [323, 330], "hood": [323, 330], "complex": [323, 330], "depend": [323, 330], "model": [323, 325, 329, 330], "mathbf": 323, "vector": 323, "baysian": 323, "confid": [323, 325, 328, 330], "constraint": [323, 328], "lead": 323, "solver": 323, "longer": 323, "address": 323, "Not": 323, "prior": [323, 330], "spatial": 323, "variabl": 323, "pro": 323, "con": 323, "quick": 323, "fiddl": 323, "necessari": [323, 331], "robust": [323, 330], "interv": [323, 330], "linear": 323, "solv": 323, "usag": 323, "without": 323, "27": 323, "09": 323, "580": 323, "662": 323, "bayesianpoissonmapregressor": 323, "0x7f8b48476cd0": 323, "analyt": 323, "38": 323, "titl": 323, "realli": 323, "common": [323, 325, 328, 330], "graticul": 323, "28": 323, "037": 323, "075": 323, "0x7f8b1a57c850": 323, "076": 323, "doesn": [323, 330], "enough": 323, "might": [323, 325], "fulli": 323, "machin": 323, "learn": [323, 324], "highli": 323, "suggest": 323, "api": [323, 325], "document": 323, "term": 323, "validat": 323, "portion": 323, "held": 323, "relev": 323, "hyper": 323, "n_neighbor": 323, "via": [323, 330], "fraction": 323, "versu": 323, "test": 323, "score_threshold": 323, "cv_threshold": 323, "score": 323, "immedi": 323, "749": 323, "813": 323, "knneighbormapregressor": 323, "0x7f8b1bb9ee90": 323, "926": 323, "927": 323, "939": 323, "kneighborsregressor": 323, "850": 323, "why": 323, "optim": 323, "investig": 323, "came": 323, "namespac": 323, "58179432": 323, "43984073": 323, "71969866": 323, "70693879": 323, "06894115": 323, "79061815": 323, "ahead": 323, "47": 323, "notext": 323, "neightbor": 323, "minor": [323, 326], "twist": 323, "constant": 323, "circular": 323, "48": 323, "31": 323, "666": 323, "915": 323, "0x7f8b1ac7b950": 323, "489": 323, "490": 323, "491": 323, "497": 323, "overview": [324, 325, 329], "stop": [324, 330], "introduct": 324, "concern": 324, "yourself": 324, "readi": 324, "roll": 324, "instruct": 324, "environ": 324, "devic": 324, "purpos": [324, 328], "python": [325, 330], "identif": [325, 328, 330], "softwar": [325, 328], "quantifi": [325, 328], "autom": 325, "survei": 325, "mission": 325, "wide": 325, "methodologi": 325, "mock": 325, "come": [325, 330], "soon": 325, "quickstart": 325, "brief": 325, "topic": 325, "relat": [325, 330], "dive": 325, "contribut": 325, "comprehens": [325, 328, 330], "hint": 325, "lot": [326, 330], "mini": 326, "config": 326, "main": 326, "levelnam": 326, "asctim": 326, "messag": 326, "level": 326, "stream": 326, "stderr": 326, "output_directori": 326, "add_on": 326, "text": 326, "usetex": 326, "xtick": 326, "major": 326, "ytick": 326, "top": 326, "bottom": 326, "labeltop": 326, "labelbottom": 326, "labelleft": 326, "labelright": 326, "direct": 326, "font": 326, "normal": 326, "inferno": 326, "clone": 327, "git": 327, "github": 327, "com": 327, "eliza": 327, "diggin": 327, "cd": 327, "pip": 327, "product": 328, "novel": 328, "telescop": [328, 330], "unknown": 328, "framework": [328, 330], "rapidli": 328, "uniformli": 328, "cone": 328, "candid": [328, 330], "account": 328, "poissonian": 328, "dust": 328, "compos": 328, "unidentifi": 328, "studi": 328, "predominantli": 328, "mix": 328, "knowledg": 328, "continu": 328, "grow": 328, "character": 328, "spectra": 328, "cluster": 328, "poisson_map": 329, "psf": [329, 330], "goal": 330, "plausibl": 330, "after": 330, "super": 330, "command": 330, "csv": 330, "txt": 330, "experi": 330, "difficulti": 330, "assur": 330, "filetyp": 330, "cli": 330, "xmatch": 330, "flag": 330, "db1": 330, "db2": 330, "dbn": 330, "default_database_registri": 330, "cross_refer": 330, "cross_match": 330, "full": 330, "naiv": 330, "subject": 330, "chosen": 330, "pai": 330, "attent": 330, "decis": 330, "fidel": 330, "furthermor": 330, "legitim": 330, "significantli": 330, "cost": 330, "minim": 330, "subprocess": 330, "exactli": 330, "perfect": 330, "assign": 330, "tune": 330, "potenti": 330, "total": 330, "across": 330, "c_i": 330, "sum_": 330, "alpha_i": 330, "th": 330, "reflect": 330, "success": 330, "head": 330, "ongo": 330, "underwai": 330, "qualiti": 330, "reason": 330, "down": 330, "fall": 330, "covari": 330, "gaussian": 330, "c_": 330, "sqrt": 330, "delta_": 330, "intent": 330, "constrain": 330, "permit": 330, "definit": 330, "feasabl": 330, "hierarch": 330, "classif": 330, "subtyp": 330, "abund": 330, "particularli": 330, "preval": 330, "background": 330, "partial": 330, "protocol": 330, "benefit": 330, "poorli": 330, "classifi": 330, "2mass": 330, "sdss": 330, "observ": 330, "too": 330, "dismiss": 330, "still": 330, "spurious": 330, "familiar": 330, "essenc": 330, "densiti": 330, "estim": 330, "circl": 330, "phi_i": 330, "theta_i": 330, "proxi": 330, "cornerston": 330, "runtim": 330, "layout": 330, "ecosystem": 330, "io_param": 330, "io": 330, "disabl": 330, "catpath": 330, "sourcedatabas": 331, "corner": 331, "stone": 331, "scientif": 331, "remotedatabas": 331, "localdatabas": 331, "simplifi": 331, "astroqueri": 331, "url": 331, "query_radiu": 331, "83": 331, "63": 331, "0144": 331, "output_t": 331}, "objects": {"": [[0, 0, 0, "-", "cross_reference"], [20, 0, 0, "-", "schema"]], "cross_reference": [[1, 1, 1, "", "CrossMatchDatabase"], [18, 4, 1, "", "cross_match"], [19, 4, 1, "", "cross_match_table"]], "cross_reference.CrossMatchDatabase": [[2, 2, 1, "", "__init__"], [3, 2, 1, "", "add_catalog"], [4, 2, 1, "", "build_meta_table"], [5, 2, 1, "", "check_meta"], [6, 2, 1, "", "correct_column_names"], [7, 2, 1, "", "correct_object_types"], [8, 2, 1, "", "drop_table"], [9, 2, 1, "", "from_file"], [10, 3, 1, "", "has_catalog"], [11, 3, 1, "", "match_tables"], [12, 3, 1, "", "meta"], [13, 2, 1, "", "meta_add"], [14, 2, 1, "", "meta_remove"], [15, 2, 1, "", "meta_reset"], [16, 2, 1, "", "query"], [17, 3, 1, "", "tables"]], "schema": [[21, 1, 1, "", "ReductionSchema"], [47, 1, 1, "", "Schema"], [62, 1, 1, "", "SourceTableSchema"]], "schema.ReductionSchema": [[22, 5, 1, "", "DBPATH"], [23, 5, 1, "", "INSTRUMENTAL"], [24, 5, 1, "", "INSTRUMENT_PARAMS"], [25, 5, 1, "", "IO_PARAMS"], [26, 5, 1, "", "OBJECT_PARAMS"], [27, 5, 1, "", "OTYPES"], [28, 5, 1, "", "POISSON"], [29, 5, 1, "", "POISSON_PARAMS"], [30, 5, 1, "", "PSF"], [31, 5, 1, "", "REFDBS"], [32, 5, 1, "", "RUN_PARAMS"], [33, 2, 1, "", "__init__"], [34, 2, 1, "", "clear"], [35, 2, 1, "", "copy"], [36, 2, 1, "", "from_file"], [37, 2, 1, "", "fromkeys"], [38, 2, 1, "", "get"], [39, 2, 1, "", "isvalid"], [40, 2, 1, "", "items"], [41, 2, 1, "", "keys"], [42, 2, 1, "", "pop"], [43, 2, 1, "", "popitem"], [44, 2, 1, "", "setdefault"], [45, 2, 1, "", "update"], [46, 2, 1, "", "values"]], "schema.Schema": [[48, 2, 1, "", "__init__"], [49, 2, 1, "", "clear"], [50, 2, 1, "", "copy"], [51, 2, 1, "", "from_file"], [52, 2, 1, "", "fromkeys"], [53, 2, 1, "", "get"], [54, 2, 1, "", "isvalid"], [55, 2, 1, "", "items"], [56, 2, 1, "", "keys"], [57, 2, 1, "", "pop"], [58, 2, 1, "", "popitem"], [59, 2, 1, "", "setdefault"], [60, 2, 1, "", "update"], [61, 2, 1, "", "values"]], "schema.SourceTableSchema": [[62, 5, 1, "", "B"], [62, 5, 1, "", "DEC"], [62, 5, 1, "", "L"], [62, 5, 1, "", "NAME"], [62, 5, 1, "", "RA"], [62, 5, 1, "", "TYPE"], [62, 5, 1, "", "Z"], [63, 2, 1, "", "__init__"], [64, 2, 1, "", "available_coordinate_frames"], [65, 2, 1, "", "clear"], [66, 5, 1, "", "column_map"], [67, 2, 1, "", "construct"], [68, 3, 1, "", "coordinate_columns"], [69, 3, 1, "", "coordinate_frame"], [70, 3, 1, "", "coordinate_system"], [71, 2, 1, "", "copy"], [72, 5, 1, "", "default_coord_system"], [73, 2, 1, "", "from_file"], [74, 2, 1, "", "fromkeys"], [75, 2, 1, "", "get"], [76, 3, 1, "", "inv_column_map"], [77, 2, 1, "", "isvalid"], [78, 2, 1, "", "items"], [79, 2, 1, "", "keys"], [80, 5, 1, "", "object_map"], [81, 2, 1, "", "pop"], [82, 2, 1, "", "popitem"], [83, 2, 1, "", "setdefault"], [84, 2, 1, "", "update"], [85, 2, 1, "", "values"]], "stats": [[86, 0, 0, "-", "utilities"]], "stats.utilities": [[87, 4, 1, "", "uniform_sample_spherical"]], "structures": [[88, 0, 0, "-", "databases"], [177, 0, 0, "-", "map"], [233, 0, 0, "-", "table"]], "structures.databases": [[89, 1, 1, "", "DBRegistry"], [103, 1, 1, "", "LocalDatabase"], [117, 1, 1, "", "NED"], [131, 1, 1, "", "RemoteDatabase"], [145, 1, 1, "", "SIMBAD"], [159, 1, 1, "", "SourceDatabase"], [173, 4, 1, "", "add_points_to_poisson_map"], [174, 4, 1, "", "get_database"], [175, 4, 1, "", "get_poisson_map"], [176, 4, 1, "", "get_poisson_path"]], "structures.databases.DBRegistry": [[90, 2, 1, "", "__init__"], [91, 2, 1, "", "as_list"], [92, 2, 1, "", "clear"], [93, 2, 1, "", "copy"], [94, 2, 1, "", "fromkeys"], [95, 2, 1, "", "get"], [96, 2, 1, "", "items"], [97, 2, 1, "", "keys"], [98, 2, 1, "", "pop"], [99, 2, 1, "", "popitem"], [100, 2, 1, "", "setdefault"], [101, 2, 1, "", "update"], [102, 2, 1, "", "values"]], "structures.databases.LocalDatabase": [[104, 2, 1, "", "__init__"], [105, 2, 1, "", "add_sources_to_poisson"], [106, 5, 1, "", "class_table_schema"], [107, 2, 1, "", "count"], [108, 2, 1, "", "create_poisson_atlas"], [109, 5, 1, "", "default_poisson_map"], [110, 2, 1, "", "get_default_poisson_atlas"], [111, 2, 1, "", "get_poisson_atlas"], [112, 5, 1, "", "poisson_map"], [113, 2, 1, "", "query_radius"], [114, 2, 1, "", "random_sample_count"], [115, 2, 1, "", "set_poisson_atlas"], [116, 2, 1, "", "source_match"]], "structures.databases.NED": [[118, 2, 1, "", "__init__"], [119, 2, 1, "", "add_sources_to_poisson"], [120, 5, 1, "", "class_table_schema"], [121, 2, 1, "", "count"], [122, 2, 1, "", "create_poisson_atlas"], [123, 5, 1, "", "default_poisson_map"], [124, 2, 1, "", "get_default_poisson_atlas"], [125, 2, 1, "", "get_poisson_atlas"], [126, 5, 1, "", "poisson_map"], [127, 2, 1, "", "query_radius"], [128, 2, 1, "", "random_sample_count"], [129, 2, 1, "", "set_poisson_atlas"], [130, 2, 1, "", "source_match"]], "structures.databases.RemoteDatabase": [[132, 2, 1, "", "__init__"], [133, 2, 1, "", "add_sources_to_poisson"], [134, 5, 1, "", "class_table_schema"], [135, 2, 1, "", "count"], [136, 2, 1, "", "create_poisson_atlas"], [137, 5, 1, "", "default_poisson_map"], [138, 2, 1, "", "get_default_poisson_atlas"], [139, 2, 1, "", "get_poisson_atlas"], [140, 5, 1, "", "poisson_map"], [141, 2, 1, "", "query_radius"], [142, 2, 1, "", "random_sample_count"], [143, 2, 1, "", "set_poisson_atlas"], [144, 2, 1, "", "source_match"]], "structures.databases.SIMBAD": [[146, 2, 1, "", "__init__"], [147, 2, 1, "", "add_sources_to_poisson"], [148, 5, 1, "", "class_table_schema"], [149, 2, 1, "", "count"], [150, 2, 1, "", "create_poisson_atlas"], [151, 5, 1, "", "default_poisson_map"], [152, 2, 1, "", "get_default_poisson_atlas"], [153, 2, 1, "", "get_poisson_atlas"], [154, 5, 1, "", "poisson_map"], [155, 2, 1, "", "query_radius"], [156, 2, 1, "", "random_sample_count"], [157, 2, 1, "", "set_poisson_atlas"], [158, 2, 1, "", "source_match"]], "structures.databases.SourceDatabase": [[160, 2, 1, "", "__init__"], [161, 2, 1, "", "add_sources_to_poisson"], [162, 5, 1, "", "class_table_schema"], [163, 2, 1, "", "count"], [164, 2, 1, "", "create_poisson_atlas"], [165, 5, 1, "", "default_poisson_map"], [166, 2, 1, "", "get_default_poisson_atlas"], [167, 2, 1, "", "get_poisson_atlas"], [168, 5, 1, "", "poisson_map"], [169, 2, 1, "", "query_radius"], [170, 2, 1, "", "random_sample_count"], [171, 2, 1, "", "set_poisson_atlas"], [172, 2, 1, "", "source_match"]], "structures.map": [[178, 1, 1, "", "Map"], [186, 1, 1, "", "MapAtlas"], [197, 1, 1, "", "PoissonAtlas"], [218, 1, 1, "", "StatAtlas"]], "structures.map.Map": [[179, 2, 1, "", "__init__"], [180, 3, 1, "", "coordinate_frame"], [181, 3, 1, "", "data"], [182, 2, 1, "", "get_healpix_id"], [183, 3, 1, "", "pixel_positions"], [184, 2, 1, "", "plot"], [185, 2, 1, "", "transform_map_coordinates"]], "structures.map.MapAtlas": [[187, 2, 1, "", "__init__"], [188, 3, 1, "", "coordinate_frame"], [189, 2, 1, "", "generate"], [190, 2, 1, "", "get_map"], [191, 3, 1, "", "has_maps"], [192, 3, 1, "", "hdus"], [193, 3, 1, "", "map_names"], [194, 3, 1, "", "pixel_positions"], [195, 2, 1, "", "remove"], [196, 2, 1, "", "reshape_healpix"]], "structures.map.PoissonAtlas": [[198, 2, 1, "", "__init__"], [199, 2, 1, "", "append_to_fits"], [200, 2, 1, "", "build_poisson_map"], [201, 2, 1, "", "build_poisson_map_KNN"], [202, 2, 1, "", "build_poisson_map_MAP"], [203, 2, 1, "", "build_poisson_map_RNN"], [204, 2, 1, "", "build_poisson_map_regressor"], [205, 2, 1, "", "build_poisson_maps"], [206, 3, 1, "", "coordinate_frame"], [207, 2, 1, "", "generate"], [208, 2, 1, "", "get_map"], [209, 2, 1, "", "get_points"], [210, 3, 1, "", "has_maps"], [211, 3, 1, "", "hdus"], [212, 3, 1, "", "map_names"], [213, 3, 1, "", "pixel_positions"], [214, 2, 1, "", "remove"], [215, 2, 1, "", "reset"], [216, 2, 1, "", "reshape_healpix"], [217, 2, 1, "", "sample_from_database"]], "structures.map.StatAtlas": [[219, 2, 1, "", "__init__"], [220, 2, 1, "", "append_to_fits"], [221, 3, 1, "", "coordinate_frame"], [222, 2, 1, "", "generate"], [223, 2, 1, "", "get_map"], [224, 2, 1, "", "get_points"], [225, 3, 1, "", "has_maps"], [226, 3, 1, "", "hdus"], [227, 3, 1, "", "map_names"], [228, 3, 1, "", "pixel_positions"], [229, 2, 1, "", "remove"], [230, 2, 1, "", "reset"], [231, 2, 1, "", "reshape_healpix"], [232, 2, 1, "", "sample_from_database"]], "structures.table": [[234, 1, 1, "", "SourceTable"]], "structures.table.SourceTable": [[235, 3, 1, "", "ColumnClass"], [236, 2, 1, "", "__init__"], [237, 2, 1, "", "add_column"], [238, 2, 1, "", "add_columns"], [239, 2, 1, "", "add_index"], [240, 2, 1, "", "add_row"], [241, 2, 1, "", "append_to_fits"], [242, 2, 1, "", "append_to_sql"], [243, 2, 1, "", "argsort"], [244, 2, 1, "", "as_array"], [245, 3, 1, "", "colnames"], [246, 2, 1, "", "convert_bytestring_to_unicode"], [247, 2, 1, "", "convert_unicode_to_bytestring"], [248, 2, 1, "", "copy"], [249, 2, 1, "", "count_types"], [250, 3, 1, "", "dtype"], [251, 2, 1, "", "field"], [252, 2, 1, "", "filled"], [253, 2, 1, "", "from_pandas"], [254, 2, 1, "", "generate_schema"], [255, 2, 1, "", "get_coordinates"], [256, 2, 1, "", "group_by"], [257, 3, 1, "", "groups"], [258, 3, 1, "", "has_masked_columns"], [259, 3, 1, "", "has_masked_values"], [260, 3, 1, "", "has_mixin_columns"], [261, 3, 1, "", "iloc"], [262, 2, 1, "", "index_column"], [263, 2, 1, "", "index_mode"], [264, 3, 1, "", "indices"], [265, 5, 1, "", "info"], [266, 2, 1, "", "insert_row"], [267, 2, 1, "", "items"], [268, 2, 1, "", "itercols"], [269, 2, 1, "", "iterrows"], [270, 2, 1, "", "keep_columns"], [271, 2, 1, "", "keys"], [272, 3, 1, "", "lat"], [273, 3, 1, "", "loc"], [274, 3, 1, "", "loc_indices"], [275, 3, 1, "", "lon"], [276, 3, 1, "", "mask"], [277, 3, 1, "", "masked"], [278, 5, 1, "", "meta"], [279, 2, 1, "", "more"], [280, 3, 1, "", "name"], [281, 2, 1, "", "pformat"], [282, 2, 1, "", "pformat_all"], [283, 2, 1, "", "pprint"], [284, 2, 1, "", "pprint_all"], [285, 5, 1, "", "pprint_exclude_names"], [286, 5, 1, "", "pprint_include_names"], [287, 5, 1, "", "read"], [288, 3, 1, "", "redshift"], [289, 2, 1, "", "remove_column"], [290, 2, 1, "", "remove_columns"], [291, 2, 1, "", "remove_indices"], [292, 2, 1, "", "remove_row"], [293, 2, 1, "", "remove_rows"], [294, 2, 1, "", "rename_column"], [295, 2, 1, "", "rename_columns"], [296, 2, 1, "", "replace_column"], [297, 2, 1, "", "reverse"], [298, 2, 1, "", "round"], [299, 3, 1, "", "schema"], [300, 2, 1, "", "show_in_browser"], [301, 2, 1, "", "show_in_notebook"], [302, 2, 1, "", "sort"], [303, 2, 1, "", "to_pandas"], [304, 3, 1, "", "type"], [305, 3, 1, "", "type_native"], [306, 2, 1, "", "update"], [307, 2, 1, "", "values"], [308, 2, 1, "", "values_equal"], [309, 5, 1, "", "write"]], "utilities": [[310, 0, 0, "-", "core"], [314, 0, 0, "-", "geo"], [317, 0, 0, "-", "plot"]], "utilities.core": [[311, 4, 1, "", "enforce_units"], [312, 4, 1, "", "getFromDict"], [313, 4, 1, "", "setInDict"]], "utilities.geo": [[315, 4, 1, "", "convert_coordinates"], [316, 4, 1, "", "convert_skycoord"]], "utilities.plot": [[318, 4, 1, "", "plot_healpix"], [319, 4, 1, "", "set_style"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"cross_refer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "crossmatchdatabas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "__init__": [2, 33, 48, 63, 90, 104, 118, 132, 146, 160, 179, 187, 198, 219, 236], "add_catalog": 3, "build_meta_t": 4, "check_meta": 5, "correct_column_nam": 6, "correct_object_typ": 7, "drop_tabl": 8, "from_fil": [9, 36, 51, 73], "has_catalog": 10, "match_tabl": 11, "meta": [12, 278], "meta_add": 13, "meta_remov": 14, "meta_reset": 15, "queri": 16, "tabl": [17, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 323, 330], "cross_match": 18, "cross_match_t": 19, "schema": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 299, 321, 330, 335], "reductionschema": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "run_param": [21, 32, 330], "io_param": [21, 25], "dbpath": 22, "instrument": 23, "instrument_param": 24, "object_param": 26, "otyp": 27, "poisson": [28, 323], "poisson_param": 29, "psf": [30, 334], "refdb": 31, "clear": [34, 49, 65, 92], "copi": [35, 50, 71, 93, 248], "fromkei": [37, 52, 74, 94], "get": [38, 53, 75, 95, 329], "isvalid": [39, 54, 77], "item": [40, 55, 78, 96, 267], "kei": [41, 56, 79, 97, 271], "pop": [42, 57, 81, 98], "popitem": [43, 58, 82, 99], "setdefault": [44, 59, 83, 100], "updat": [45, 60, 84, 101, 306], "valu": [46, 61, 85, 102, 307], "sourcetableschema": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "available_coordinate_fram": 64, "column_map": 66, "construct": [67, 323], "coordinate_column": 68, "coordinate_fram": [69, 180, 188, 206, 221], "coordinate_system": 70, "default_coord_system": 72, "inv_column_map": 76, "object_map": 80, "stat": [86, 87], "util": [86, 87, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319], "uniform_sample_spher": 87, "structur": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 320, 321], "databas": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 321, 331], "dbregistri": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "as_list": 91, "localdatabas": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "add_sources_to_poisson": [105, 119, 133, 147, 161], "class_table_schema": [106, 120, 134, 148, 162], "count": [107, 121, 135, 149, 163, 323], "create_poisson_atla": [108, 122, 136, 150, 164], "default_poisson_map": [109, 123, 137, 151, 165], "get_default_poisson_atla": [110, 124, 138, 152, 166], "get_poisson_atla": [111, 125, 139, 153, 167], "poisson_map": [112, 126, 140, 154, 168], "query_radiu": [113, 127, 141, 155, 169], "random_sample_count": [114, 128, 142, 156, 170], "set_poisson_atla": [115, 129, 143, 157, 171], "source_match": [116, 130, 144, 158, 172], "ned": [117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "remotedatabas": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "simbad": [145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "sourcedatabas": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "add_points_to_poisson_map": 173, "get_databas": 174, "get_poisson_map": 175, "get_poisson_path": 176, "map": [177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 323], "data": [181, 321, 336], "get_healpix_id": 182, "pixel_posit": [183, 194, 213, 228], "plot": [184, 317, 318, 319, 329, 333], "transform_map_coordin": 185, "mapatla": [186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "gener": [189, 207, 222, 330], "get_map": [190, 208, 223], "has_map": [191, 210, 225], "hdu": [192, 211, 226, 323], "map_nam": [193, 212, 227], "remov": [195, 214, 229], "reshape_healpix": [196, 216, 231], "poissonatla": [197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217], "append_to_fit": [199, 220, 241], "build_poisson_map": [200, 205], "build_poisson_map_knn": 201, "build_poisson_map_map": 202, "build_poisson_map_rnn": 203, "build_poisson_map_regressor": 204, "get_point": [209, 224], "reset": [215, 230], "sample_from_databas": [217, 232], "statatla": [218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232], "sourcet": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "columnclass": 235, "add_column": [237, 238], "add_index": 239, "add_row": 240, "append_to_sql": 242, "argsort": 243, "as_arrai": 244, "colnam": 245, "convert_bytestring_to_unicod": 246, "convert_unicode_to_bytestr": 247, "count_typ": 249, "dtype": 250, "field": 251, "fill": 252, "from_panda": 253, "generate_schema": 254, "get_coordin": 255, "group_bi": 256, "group": 257, "has_masked_column": 258, "has_masked_valu": 259, "has_mixin_column": 260, "iloc": 261, "index_column": 262, "index_mod": 263, "indic": 264, "info": 265, "insert_row": 266, "itercol": 268, "iterrow": 269, "keep_column": 270, "lat": 272, "loc": 273, "loc_indic": 274, "lon": 275, "mask": [276, 277], "more": 279, "name": 280, "pformat": 281, "pformat_al": 282, "pprint": 283, "pprint_al": 284, "pprint_exclude_nam": 285, "pprint_include_nam": 286, "read": 287, "redshift": 288, "remove_column": [289, 290], "remove_indic": 291, "remove_row": [292, 293], "rename_column": [294, 295], "replace_column": 296, "revers": 297, "round": 298, "show_in_brows": 300, "show_in_notebook": 301, "sort": 302, "to_panda": 303, "type": 304, "type_n": 305, "values_equ": 308, "write": 309, "core": [310, 311, 312, 313], "enforce_unit": 311, "getfromdict": 312, "setindict": 313, "geo": [314, 315, 316], "convert_coordin": 315, "convert_skycoord": 316, "plot_healpix": 318, "set_styl": 319, "api": 320, "statist": [320, 329], "other": 320, "sky": 321, "collect": 321, "format": [321, 330], "exampl": 322, "content": 323, "introduct": 323, "repres": 323, "atlas": 323, "The": 323, "densiti": 323, "estim": 323, "maximum": 323, "A": 323, "posteriori": 323, "regress": 323, "k": 323, "nearest": 323, "neighbor": 323, "r": 323, "pyxmip": [324, 326, 327, 328, 335], "quickstart": 324, "guid": 324, "instal": [324, 327, 329], "setup": 324, "critic": 324, "compon": 324, "featur": 325, "resourc": 325, "page": 325, "configur": 326, "from": 327, "pypi": 327, "sourc": [327, 336], "what": 328, "can": 328, "i": 328, "do": 328, "With": 328, "how": 328, "doe": 328, "work": 328, "refer": 329, "start": 329, "basic": [329, 331], "usag": 329, "creat": [329, 333], "backend": 329, "cross": 330, "referenc": 330, "match": 330, "explor": 330, "output": 330, "reduct": 330, "mathemat": 330, "overview": 330, "sub": 330, "process": 330, "titl": 330, "inform": 331, "log": 332, "model": 334, "class": 335, "load": 336}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"cross_reference": [[0, "module-cross_reference"]], "cross_reference.CrossMatchDatabase": [[1, "cross-reference-crossmatchdatabase"]], "cross_reference.CrossMatchDatabase.__init__": [[2, "cross-reference-crossmatchdatabase-init"]], "cross_reference.CrossMatchDatabase.add_catalog": [[3, "cross-reference-crossmatchdatabase-add-catalog"]], "cross_reference.CrossMatchDatabase.build_meta_table": [[4, "cross-reference-crossmatchdatabase-build-meta-table"]], "cross_reference.CrossMatchDatabase.check_meta": [[5, "cross-reference-crossmatchdatabase-check-meta"]], "cross_reference.CrossMatchDatabase.correct_column_names": [[6, "cross-reference-crossmatchdatabase-correct-column-names"]], "cross_reference.CrossMatchDatabase.correct_object_types": [[7, "cross-reference-crossmatchdatabase-correct-object-types"]], "cross_reference.CrossMatchDatabase.drop_table": [[8, "cross-reference-crossmatchdatabase-drop-table"]], "cross_reference.CrossMatchDatabase.from_file": [[9, "cross-reference-crossmatchdatabase-from-file"]], "cross_reference.CrossMatchDatabase.has_catalog": [[10, "cross-reference-crossmatchdatabase-has-catalog"]], "cross_reference.CrossMatchDatabase.match_tables": [[11, "cross-reference-crossmatchdatabase-match-tables"]], "cross_reference.CrossMatchDatabase.meta": [[12, "cross-reference-crossmatchdatabase-meta"]], "cross_reference.CrossMatchDatabase.meta_add": [[13, "cross-reference-crossmatchdatabase-meta-add"]], "cross_reference.CrossMatchDatabase.meta_remove": [[14, "cross-reference-crossmatchdatabase-meta-remove"]], "cross_reference.CrossMatchDatabase.meta_reset": [[15, "cross-reference-crossmatchdatabase-meta-reset"]], "cross_reference.CrossMatchDatabase.query": [[16, "cross-reference-crossmatchdatabase-query"]], "cross_reference.CrossMatchDatabase.tables": [[17, "cross-reference-crossmatchdatabase-tables"]], "cross_reference.cross_match": [[18, "cross-reference-cross-match"]], "cross_reference.cross_match_table": [[19, "cross-reference-cross-match-table"]], "schema": [[20, "module-schema"]], "schema.ReductionSchema": [[21, "schema-reductionschema"]], "RUN_PARAMS": [[21, "run-params"]], "IO_PARAMS": [[21, "io-params"]], "schema.ReductionSchema.DBPATH": [[22, "schema-reductionschema-dbpath"]], "schema.ReductionSchema.INSTRUMENTAL": [[23, "schema-reductionschema-instrumental"]], "schema.ReductionSchema.INSTRUMENT_PARAMS": [[24, "schema-reductionschema-instrument-params"]], "schema.ReductionSchema.IO_PARAMS": [[25, "schema-reductionschema-io-params"]], "schema.ReductionSchema.OBJECT_PARAMS": [[26, "schema-reductionschema-object-params"]], "schema.ReductionSchema.OTYPES": [[27, "schema-reductionschema-otypes"]], "schema.ReductionSchema.POISSON": [[28, "schema-reductionschema-poisson"]], "schema.ReductionSchema.POISSON_PARAMS": [[29, "schema-reductionschema-poisson-params"]], "schema.ReductionSchema.PSF": [[30, "schema-reductionschema-psf"]], "schema.ReductionSchema.REFDBS": [[31, "schema-reductionschema-refdbs"]], "schema.ReductionSchema.RUN_PARAMS": [[32, "schema-reductionschema-run-params"]], "schema.ReductionSchema.__init__": [[33, "schema-reductionschema-init"]], "schema.ReductionSchema.clear": [[34, "schema-reductionschema-clear"]], "schema.ReductionSchema.copy": [[35, "schema-reductionschema-copy"]], "schema.ReductionSchema.from_file": [[36, "schema-reductionschema-from-file"]], "schema.ReductionSchema.fromkeys": [[37, "schema-reductionschema-fromkeys"]], "schema.ReductionSchema.get": [[38, "schema-reductionschema-get"]], "schema.ReductionSchema.isvalid": [[39, "schema-reductionschema-isvalid"]], "schema.ReductionSchema.items": [[40, "schema-reductionschema-items"]], "schema.ReductionSchema.keys": [[41, "schema-reductionschema-keys"]], "schema.ReductionSchema.pop": [[42, "schema-reductionschema-pop"]], "schema.ReductionSchema.popitem": [[43, "schema-reductionschema-popitem"]], "schema.ReductionSchema.setdefault": [[44, "schema-reductionschema-setdefault"]], "schema.ReductionSchema.update": [[45, "schema-reductionschema-update"]], "schema.ReductionSchema.values": [[46, "schema-reductionschema-values"]], "schema.Schema": [[47, "schema-schema"]], "schema.Schema.__init__": [[48, "schema-schema-init"]], "schema.Schema.clear": [[49, "schema-schema-clear"]], "schema.Schema.copy": [[50, "schema-schema-copy"]], "schema.Schema.from_file": [[51, "schema-schema-from-file"]], "schema.Schema.fromkeys": [[52, "schema-schema-fromkeys"]], "schema.Schema.get": [[53, "schema-schema-get"]], "schema.Schema.isvalid": [[54, "schema-schema-isvalid"]], "schema.Schema.items": [[55, "schema-schema-items"]], "schema.Schema.keys": [[56, "schema-schema-keys"]], "schema.Schema.pop": [[57, "schema-schema-pop"]], "schema.Schema.popitem": [[58, "schema-schema-popitem"]], "schema.Schema.setdefault": [[59, "schema-schema-setdefault"]], "schema.Schema.update": [[60, "schema-schema-update"]], "schema.Schema.values": [[61, "schema-schema-values"]], "schema.SourceTableSchema": [[62, "schema-sourcetableschema"]], "schema.SourceTableSchema.__init__": [[63, "schema-sourcetableschema-init"]], "schema.SourceTableSchema.available_coordinate_frames": [[64, "schema-sourcetableschema-available-coordinate-frames"]], "schema.SourceTableSchema.clear": [[65, "schema-sourcetableschema-clear"]], "schema.SourceTableSchema.column_map": [[66, "schema-sourcetableschema-column-map"]], "schema.SourceTableSchema.construct": [[67, "schema-sourcetableschema-construct"]], "schema.SourceTableSchema.coordinate_columns": [[68, "schema-sourcetableschema-coordinate-columns"]], "schema.SourceTableSchema.coordinate_frame": [[69, "schema-sourcetableschema-coordinate-frame"]], "schema.SourceTableSchema.coordinate_system": [[70, "schema-sourcetableschema-coordinate-system"]], "schema.SourceTableSchema.copy": [[71, "schema-sourcetableschema-copy"]], "schema.SourceTableSchema.default_coord_system": [[72, "schema-sourcetableschema-default-coord-system"]], "schema.SourceTableSchema.from_file": [[73, "schema-sourcetableschema-from-file"]], "schema.SourceTableSchema.fromkeys": [[74, "schema-sourcetableschema-fromkeys"]], "schema.SourceTableSchema.get": [[75, "schema-sourcetableschema-get"]], "schema.SourceTableSchema.inv_column_map": [[76, "schema-sourcetableschema-inv-column-map"]], "schema.SourceTableSchema.isvalid": [[77, "schema-sourcetableschema-isvalid"]], "schema.SourceTableSchema.items": [[78, "schema-sourcetableschema-items"]], "schema.SourceTableSchema.keys": [[79, "schema-sourcetableschema-keys"]], "schema.SourceTableSchema.object_map": [[80, "schema-sourcetableschema-object-map"]], "schema.SourceTableSchema.pop": [[81, "schema-sourcetableschema-pop"]], "schema.SourceTableSchema.popitem": [[82, "schema-sourcetableschema-popitem"]], "schema.SourceTableSchema.setdefault": [[83, "schema-sourcetableschema-setdefault"]], "schema.SourceTableSchema.update": [[84, "schema-sourcetableschema-update"]], "schema.SourceTableSchema.values": [[85, "schema-sourcetableschema-values"]], "stats.utilities": [[86, "module-stats.utilities"]], "stats.utilities.uniform_sample_spherical": [[87, "stats-utilities-uniform-sample-spherical"]], "structures.databases": [[88, "module-structures.databases"]], "structures.databases.DBRegistry": [[89, "structures-databases-dbregistry"]], "structures.databases.DBRegistry.__init__": [[90, "structures-databases-dbregistry-init"]], "structures.databases.DBRegistry.as_list": [[91, "structures-databases-dbregistry-as-list"]], "structures.databases.DBRegistry.clear": [[92, "structures-databases-dbregistry-clear"]], "structures.databases.DBRegistry.copy": [[93, "structures-databases-dbregistry-copy"]], "structures.databases.DBRegistry.fromkeys": [[94, "structures-databases-dbregistry-fromkeys"]], "structures.databases.DBRegistry.get": [[95, "structures-databases-dbregistry-get"]], "structures.databases.DBRegistry.items": [[96, "structures-databases-dbregistry-items"]], "structures.databases.DBRegistry.keys": [[97, "structures-databases-dbregistry-keys"]], "structures.databases.DBRegistry.pop": [[98, "structures-databases-dbregistry-pop"]], "structures.databases.DBRegistry.popitem": [[99, "structures-databases-dbregistry-popitem"]], "structures.databases.DBRegistry.setdefault": [[100, "structures-databases-dbregistry-setdefault"]], "structures.databases.DBRegistry.update": [[101, "structures-databases-dbregistry-update"]], "structures.databases.DBRegistry.values": [[102, "structures-databases-dbregistry-values"]], "structures.databases.LocalDatabase": [[103, "structures-databases-localdatabase"]], "structures.databases.LocalDatabase.__init__": [[104, "structures-databases-localdatabase-init"]], "structures.databases.LocalDatabase.add_sources_to_poisson": [[105, "structures-databases-localdatabase-add-sources-to-poisson"]], "structures.databases.LocalDatabase.class_table_schema": [[106, "structures-databases-localdatabase-class-table-schema"]], "structures.databases.LocalDatabase.count": [[107, "structures-databases-localdatabase-count"]], "structures.databases.LocalDatabase.create_poisson_atlas": [[108, "structures-databases-localdatabase-create-poisson-atlas"]], "structures.databases.LocalDatabase.default_poisson_map": [[109, "structures-databases-localdatabase-default-poisson-map"]], "structures.databases.LocalDatabase.get_default_poisson_atlas": [[110, "structures-databases-localdatabase-get-default-poisson-atlas"]], "structures.databases.LocalDatabase.get_poisson_atlas": [[111, "structures-databases-localdatabase-get-poisson-atlas"]], "structures.databases.LocalDatabase.poisson_map": [[112, "structures-databases-localdatabase-poisson-map"]], "structures.databases.LocalDatabase.query_radius": [[113, "structures-databases-localdatabase-query-radius"]], "structures.databases.LocalDatabase.random_sample_count": [[114, "structures-databases-localdatabase-random-sample-count"]], "structures.databases.LocalDatabase.set_poisson_atlas": [[115, "structures-databases-localdatabase-set-poisson-atlas"]], "structures.databases.LocalDatabase.source_match": [[116, "structures-databases-localdatabase-source-match"]], "structures.databases.NED": [[117, "structures-databases-ned"]], "structures.databases.NED.__init__": [[118, "structures-databases-ned-init"]], "structures.databases.NED.add_sources_to_poisson": [[119, "structures-databases-ned-add-sources-to-poisson"]], "structures.databases.NED.class_table_schema": [[120, "structures-databases-ned-class-table-schema"]], "structures.databases.NED.count": [[121, "structures-databases-ned-count"]], "structures.databases.NED.create_poisson_atlas": [[122, "structures-databases-ned-create-poisson-atlas"]], "structures.databases.NED.default_poisson_map": [[123, "structures-databases-ned-default-poisson-map"]], "structures.databases.NED.get_default_poisson_atlas": [[124, "structures-databases-ned-get-default-poisson-atlas"]], "structures.databases.NED.get_poisson_atlas": [[125, "structures-databases-ned-get-poisson-atlas"]], "structures.databases.NED.poisson_map": [[126, "structures-databases-ned-poisson-map"]], "structures.databases.NED.query_radius": [[127, "structures-databases-ned-query-radius"]], "structures.databases.NED.random_sample_count": [[128, "structures-databases-ned-random-sample-count"]], "structures.databases.NED.set_poisson_atlas": [[129, "structures-databases-ned-set-poisson-atlas"]], "structures.databases.NED.source_match": [[130, "structures-databases-ned-source-match"]], "structures.databases.RemoteDatabase": [[131, "structures-databases-remotedatabase"]], "structures.databases.RemoteDatabase.__init__": [[132, "structures-databases-remotedatabase-init"]], "structures.databases.RemoteDatabase.add_sources_to_poisson": [[133, "structures-databases-remotedatabase-add-sources-to-poisson"]], "structures.databases.RemoteDatabase.class_table_schema": [[134, "structures-databases-remotedatabase-class-table-schema"]], "structures.databases.RemoteDatabase.count": [[135, "structures-databases-remotedatabase-count"]], "structures.databases.RemoteDatabase.create_poisson_atlas": [[136, "structures-databases-remotedatabase-create-poisson-atlas"]], "structures.databases.RemoteDatabase.default_poisson_map": [[137, "structures-databases-remotedatabase-default-poisson-map"]], "structures.databases.RemoteDatabase.get_default_poisson_atlas": [[138, "structures-databases-remotedatabase-get-default-poisson-atlas"]], "structures.databases.RemoteDatabase.get_poisson_atlas": [[139, "structures-databases-remotedatabase-get-poisson-atlas"]], "structures.databases.RemoteDatabase.poisson_map": [[140, "structures-databases-remotedatabase-poisson-map"]], "structures.databases.RemoteDatabase.query_radius": [[141, "structures-databases-remotedatabase-query-radius"]], "structures.databases.RemoteDatabase.random_sample_count": [[142, "structures-databases-remotedatabase-random-sample-count"]], "structures.databases.RemoteDatabase.set_poisson_atlas": [[143, "structures-databases-remotedatabase-set-poisson-atlas"]], "structures.databases.RemoteDatabase.source_match": [[144, "structures-databases-remotedatabase-source-match"]], "structures.databases.SIMBAD": [[145, "structures-databases-simbad"]], "structures.databases.SIMBAD.__init__": [[146, "structures-databases-simbad-init"]], "structures.databases.SIMBAD.add_sources_to_poisson": [[147, "structures-databases-simbad-add-sources-to-poisson"]], "structures.databases.SIMBAD.class_table_schema": [[148, "structures-databases-simbad-class-table-schema"]], "structures.databases.SIMBAD.count": [[149, "structures-databases-simbad-count"]], "structures.databases.SIMBAD.create_poisson_atlas": [[150, "structures-databases-simbad-create-poisson-atlas"]], "structures.databases.SIMBAD.default_poisson_map": [[151, "structures-databases-simbad-default-poisson-map"]], "structures.databases.SIMBAD.get_default_poisson_atlas": [[152, "structures-databases-simbad-get-default-poisson-atlas"]], "structures.databases.SIMBAD.get_poisson_atlas": [[153, "structures-databases-simbad-get-poisson-atlas"]], "structures.databases.SIMBAD.poisson_map": [[154, "structures-databases-simbad-poisson-map"]], "structures.databases.SIMBAD.query_radius": [[155, "structures-databases-simbad-query-radius"]], "structures.databases.SIMBAD.random_sample_count": [[156, "structures-databases-simbad-random-sample-count"]], "structures.databases.SIMBAD.set_poisson_atlas": [[157, "structures-databases-simbad-set-poisson-atlas"]], "structures.databases.SIMBAD.source_match": [[158, "structures-databases-simbad-source-match"]], "structures.databases.SourceDatabase": [[159, "structures-databases-sourcedatabase"]], "structures.databases.SourceDatabase.__init__": [[160, "structures-databases-sourcedatabase-init"]], "structures.databases.SourceDatabase.add_sources_to_poisson": [[161, "structures-databases-sourcedatabase-add-sources-to-poisson"]], "structures.databases.SourceDatabase.class_table_schema": [[162, "structures-databases-sourcedatabase-class-table-schema"]], "structures.databases.SourceDatabase.count": [[163, "structures-databases-sourcedatabase-count"]], "structures.databases.SourceDatabase.create_poisson_atlas": [[164, "structures-databases-sourcedatabase-create-poisson-atlas"]], "structures.databases.SourceDatabase.default_poisson_map": [[165, "structures-databases-sourcedatabase-default-poisson-map"]], "structures.databases.SourceDatabase.get_default_poisson_atlas": [[166, "structures-databases-sourcedatabase-get-default-poisson-atlas"]], "structures.databases.SourceDatabase.get_poisson_atlas": [[167, "structures-databases-sourcedatabase-get-poisson-atlas"]], "structures.databases.SourceDatabase.poisson_map": [[168, "structures-databases-sourcedatabase-poisson-map"]], "structures.databases.SourceDatabase.query_radius": [[169, "structures-databases-sourcedatabase-query-radius"]], "structures.databases.SourceDatabase.random_sample_count": [[170, "structures-databases-sourcedatabase-random-sample-count"]], "structures.databases.SourceDatabase.set_poisson_atlas": [[171, "structures-databases-sourcedatabase-set-poisson-atlas"]], "structures.databases.SourceDatabase.source_match": [[172, "structures-databases-sourcedatabase-source-match"]], "structures.databases.add_points_to_poisson_map": [[173, "structures-databases-add-points-to-poisson-map"]], "structures.databases.get_database": [[174, "structures-databases-get-database"]], "structures.databases.get_poisson_map": [[175, "structures-databases-get-poisson-map"]], "structures.databases.get_poisson_path": [[176, "structures-databases-get-poisson-path"]], "structures.map": [[177, "module-structures.map"]], "structures.map.Map": [[178, "structures-map-map"]], "structures.map.Map.__init__": [[179, "structures-map-map-init"]], "structures.map.Map.coordinate_frame": [[180, "structures-map-map-coordinate-frame"]], "structures.map.Map.data": [[181, "structures-map-map-data"]], "structures.map.Map.get_healpix_id": [[182, "structures-map-map-get-healpix-id"]], "structures.map.Map.pixel_positions": [[183, "structures-map-map-pixel-positions"]], "structures.map.Map.plot": [[184, "structures-map-map-plot"]], "structures.map.Map.transform_map_coordinates": [[185, "structures-map-map-transform-map-coordinates"]], "structures.map.MapAtlas": [[186, "structures-map-mapatlas"]], "structures.map.MapAtlas.__init__": [[187, "structures-map-mapatlas-init"]], "structures.map.MapAtlas.coordinate_frame": [[188, "structures-map-mapatlas-coordinate-frame"]], "structures.map.MapAtlas.generate": [[189, "structures-map-mapatlas-generate"]], "structures.map.MapAtlas.get_map": [[190, "structures-map-mapatlas-get-map"]], "structures.map.MapAtlas.has_maps": [[191, "structures-map-mapatlas-has-maps"]], "structures.map.MapAtlas.hdus": [[192, "structures-map-mapatlas-hdus"]], "structures.map.MapAtlas.map_names": [[193, "structures-map-mapatlas-map-names"]], "structures.map.MapAtlas.pixel_positions": [[194, "structures-map-mapatlas-pixel-positions"]], "structures.map.MapAtlas.remove": [[195, "structures-map-mapatlas-remove"]], "structures.map.MapAtlas.reshape_healpix": [[196, "structures-map-mapatlas-reshape-healpix"]], "structures.map.PoissonAtlas": [[197, "structures-map-poissonatlas"]], "structures.map.PoissonAtlas.__init__": [[198, "structures-map-poissonatlas-init"]], "structures.map.PoissonAtlas.append_to_fits": [[199, "structures-map-poissonatlas-append-to-fits"]], "structures.map.PoissonAtlas.build_poisson_map": [[200, "structures-map-poissonatlas-build-poisson-map"]], "structures.map.PoissonAtlas.build_poisson_map_KNN": [[201, "structures-map-poissonatlas-build-poisson-map-knn"]], "structures.map.PoissonAtlas.build_poisson_map_MAP": [[202, "structures-map-poissonatlas-build-poisson-map-map"]], "structures.map.PoissonAtlas.build_poisson_map_RNN": [[203, "structures-map-poissonatlas-build-poisson-map-rnn"]], "structures.map.PoissonAtlas.build_poisson_map_regressor": [[204, "structures-map-poissonatlas-build-poisson-map-regressor"]], "structures.map.PoissonAtlas.build_poisson_maps": [[205, "structures-map-poissonatlas-build-poisson-maps"]], "structures.map.PoissonAtlas.coordinate_frame": [[206, "structures-map-poissonatlas-coordinate-frame"]], "structures.map.PoissonAtlas.generate": [[207, "structures-map-poissonatlas-generate"]], "structures.map.PoissonAtlas.get_map": [[208, "structures-map-poissonatlas-get-map"]], "structures.map.PoissonAtlas.get_points": [[209, "structures-map-poissonatlas-get-points"]], "structures.map.PoissonAtlas.has_maps": [[210, "structures-map-poissonatlas-has-maps"]], "structures.map.PoissonAtlas.hdus": [[211, "structures-map-poissonatlas-hdus"]], "structures.map.PoissonAtlas.map_names": [[212, "structures-map-poissonatlas-map-names"]], "structures.map.PoissonAtlas.pixel_positions": [[213, "structures-map-poissonatlas-pixel-positions"]], "structures.map.PoissonAtlas.remove": [[214, "structures-map-poissonatlas-remove"]], "structures.map.PoissonAtlas.reset": [[215, "structures-map-poissonatlas-reset"]], "structures.map.PoissonAtlas.reshape_healpix": [[216, "structures-map-poissonatlas-reshape-healpix"]], "structures.map.PoissonAtlas.sample_from_database": [[217, "structures-map-poissonatlas-sample-from-database"]], "structures.map.StatAtlas": [[218, "structures-map-statatlas"]], "structures.map.StatAtlas.__init__": [[219, "structures-map-statatlas-init"]], "structures.map.StatAtlas.append_to_fits": [[220, "structures-map-statatlas-append-to-fits"]], "structures.map.StatAtlas.coordinate_frame": [[221, "structures-map-statatlas-coordinate-frame"]], "structures.map.StatAtlas.generate": [[222, "structures-map-statatlas-generate"]], "structures.map.StatAtlas.get_map": [[223, "structures-map-statatlas-get-map"]], "structures.map.StatAtlas.get_points": [[224, "structures-map-statatlas-get-points"]], "structures.map.StatAtlas.has_maps": [[225, "structures-map-statatlas-has-maps"]], "structures.map.StatAtlas.hdus": [[226, "structures-map-statatlas-hdus"]], "structures.map.StatAtlas.map_names": [[227, "structures-map-statatlas-map-names"]], "structures.map.StatAtlas.pixel_positions": [[228, "structures-map-statatlas-pixel-positions"]], "structures.map.StatAtlas.remove": [[229, "structures-map-statatlas-remove"]], "structures.map.StatAtlas.reset": [[230, "structures-map-statatlas-reset"]], "structures.map.StatAtlas.reshape_healpix": [[231, "structures-map-statatlas-reshape-healpix"]], "structures.map.StatAtlas.sample_from_database": [[232, "structures-map-statatlas-sample-from-database"]], "structures.table": [[233, "module-structures.table"]], "structures.table.SourceTable": [[234, "structures-table-sourcetable"]], "structures.table.SourceTable.ColumnClass": [[235, "structures-table-sourcetable-columnclass"]], "structures.table.SourceTable.__init__": [[236, "structures-table-sourcetable-init"]], "structures.table.SourceTable.add_column": [[237, "structures-table-sourcetable-add-column"]], "structures.table.SourceTable.add_columns": [[238, "structures-table-sourcetable-add-columns"]], "structures.table.SourceTable.add_index": [[239, "structures-table-sourcetable-add-index"]], "structures.table.SourceTable.add_row": [[240, "structures-table-sourcetable-add-row"]], "structures.table.SourceTable.append_to_fits": [[241, "structures-table-sourcetable-append-to-fits"]], "structures.table.SourceTable.append_to_sql": [[242, "structures-table-sourcetable-append-to-sql"]], "structures.table.SourceTable.argsort": [[243, "structures-table-sourcetable-argsort"]], "structures.table.SourceTable.as_array": [[244, "structures-table-sourcetable-as-array"]], "structures.table.SourceTable.colnames": [[245, "structures-table-sourcetable-colnames"]], "structures.table.SourceTable.convert_bytestring_to_unicode": [[246, "structures-table-sourcetable-convert-bytestring-to-unicode"]], "structures.table.SourceTable.convert_unicode_to_bytestring": [[247, "structures-table-sourcetable-convert-unicode-to-bytestring"]], "structures.table.SourceTable.copy": [[248, "structures-table-sourcetable-copy"]], "structures.table.SourceTable.count_types": [[249, "structures-table-sourcetable-count-types"]], "structures.table.SourceTable.dtype": [[250, "structures-table-sourcetable-dtype"]], "structures.table.SourceTable.field": [[251, "structures-table-sourcetable-field"]], "structures.table.SourceTable.filled": [[252, "structures-table-sourcetable-filled"]], "structures.table.SourceTable.from_pandas": [[253, "structures-table-sourcetable-from-pandas"]], "structures.table.SourceTable.generate_schema": [[254, "structures-table-sourcetable-generate-schema"]], "structures.table.SourceTable.get_coordinates": [[255, "structures-table-sourcetable-get-coordinates"]], "structures.table.SourceTable.group_by": [[256, "structures-table-sourcetable-group-by"]], "structures.table.SourceTable.groups": [[257, "structures-table-sourcetable-groups"]], "structures.table.SourceTable.has_masked_columns": [[258, "structures-table-sourcetable-has-masked-columns"]], "structures.table.SourceTable.has_masked_values": [[259, "structures-table-sourcetable-has-masked-values"]], "structures.table.SourceTable.has_mixin_columns": [[260, "structures-table-sourcetable-has-mixin-columns"]], "structures.table.SourceTable.iloc": [[261, "structures-table-sourcetable-iloc"]], "structures.table.SourceTable.index_column": [[262, "structures-table-sourcetable-index-column"]], "structures.table.SourceTable.index_mode": [[263, "structures-table-sourcetable-index-mode"]], "structures.table.SourceTable.indices": [[264, "structures-table-sourcetable-indices"]], "structures.table.SourceTable.info": [[265, "structures-table-sourcetable-info"]], "structures.table.SourceTable.insert_row": [[266, "structures-table-sourcetable-insert-row"]], "structures.table.SourceTable.items": [[267, "structures-table-sourcetable-items"]], "structures.table.SourceTable.itercols": [[268, "structures-table-sourcetable-itercols"]], "structures.table.SourceTable.iterrows": [[269, "structures-table-sourcetable-iterrows"]], "structures.table.SourceTable.keep_columns": [[270, "structures-table-sourcetable-keep-columns"]], "structures.table.SourceTable.keys": [[271, "structures-table-sourcetable-keys"]], "structures.table.SourceTable.lat": [[272, "structures-table-sourcetable-lat"]], "structures.table.SourceTable.loc": [[273, "structures-table-sourcetable-loc"]], "structures.table.SourceTable.loc_indices": [[274, "structures-table-sourcetable-loc-indices"]], "structures.table.SourceTable.lon": [[275, "structures-table-sourcetable-lon"]], "structures.table.SourceTable.mask": [[276, "structures-table-sourcetable-mask"]], "structures.table.SourceTable.masked": [[277, "structures-table-sourcetable-masked"]], "structures.table.SourceTable.meta": [[278, "structures-table-sourcetable-meta"]], "structures.table.SourceTable.more": [[279, "structures-table-sourcetable-more"]], "structures.table.SourceTable.name": [[280, "structures-table-sourcetable-name"]], "structures.table.SourceTable.pformat": [[281, "structures-table-sourcetable-pformat"]], "structures.table.SourceTable.pformat_all": [[282, "structures-table-sourcetable-pformat-all"]], "structures.table.SourceTable.pprint": [[283, "structures-table-sourcetable-pprint"]], "structures.table.SourceTable.pprint_all": [[284, "structures-table-sourcetable-pprint-all"]], "structures.table.SourceTable.pprint_exclude_names": [[285, "structures-table-sourcetable-pprint-exclude-names"]], "structures.table.SourceTable.pprint_include_names": [[286, "structures-table-sourcetable-pprint-include-names"]], "structures.table.SourceTable.read": [[287, "structures-table-sourcetable-read"]], "structures.table.SourceTable.redshift": [[288, "structures-table-sourcetable-redshift"]], "structures.table.SourceTable.remove_column": [[289, "structures-table-sourcetable-remove-column"]], "structures.table.SourceTable.remove_columns": [[290, "structures-table-sourcetable-remove-columns"]], "structures.table.SourceTable.remove_indices": [[291, "structures-table-sourcetable-remove-indices"]], "structures.table.SourceTable.remove_row": [[292, "structures-table-sourcetable-remove-row"]], "structures.table.SourceTable.remove_rows": [[293, "structures-table-sourcetable-remove-rows"]], "structures.table.SourceTable.rename_column": [[294, "structures-table-sourcetable-rename-column"]], "structures.table.SourceTable.rename_columns": [[295, "structures-table-sourcetable-rename-columns"]], "structures.table.SourceTable.replace_column": [[296, "structures-table-sourcetable-replace-column"]], "structures.table.SourceTable.reverse": [[297, "structures-table-sourcetable-reverse"]], "structures.table.SourceTable.round": [[298, "structures-table-sourcetable-round"]], "structures.table.SourceTable.schema": [[299, "structures-table-sourcetable-schema"]], "structures.table.SourceTable.show_in_browser": [[300, "structures-table-sourcetable-show-in-browser"]], "structures.table.SourceTable.show_in_notebook": [[301, "structures-table-sourcetable-show-in-notebook"]], "structures.table.SourceTable.sort": [[302, "structures-table-sourcetable-sort"]], "structures.table.SourceTable.to_pandas": [[303, "structures-table-sourcetable-to-pandas"]], "structures.table.SourceTable.type": [[304, "structures-table-sourcetable-type"]], "structures.table.SourceTable.type_native": [[305, "structures-table-sourcetable-type-native"]], "structures.table.SourceTable.update": [[306, "structures-table-sourcetable-update"]], "structures.table.SourceTable.values": [[307, "structures-table-sourcetable-values"]], "structures.table.SourceTable.values_equal": [[308, "structures-table-sourcetable-values-equal"]], "structures.table.SourceTable.write": [[309, "structures-table-sourcetable-write"]], "utilities.core": [[310, "module-utilities.core"]], "utilities.core.enforce_units": [[311, "utilities-core-enforce-units"]], "utilities.core.getFromDict": [[312, "utilities-core-getfromdict"]], "utilities.core.setInDict": [[313, "utilities-core-setindict"]], "utilities.geo": [[314, "module-utilities.geo"]], "utilities.geo.convert_coordinates": [[315, "utilities-geo-convert-coordinates"]], "utilities.geo.convert_skycoord": [[316, "utilities-geo-convert-skycoord"]], "utilities.plot": [[317, "module-utilities.plot"]], "utilities.plot.plot_healpix": [[318, "utilities-plot-plot-healpix"]], "utilities.plot.set_style": [[319, "utilities-plot-set-style"]], "API": [[320, "api"]], "Statistics": [[320, "statistics"], [329, "statistics"]], "Structures": [[320, "structures"]], "Other": [[320, "other"]], "Data Structures": [[321, "data-structures"]], "DATABASES": [[321, "databases"]], "SCHEMAS": [[321, "schemas"]], "Sky Collection Schema": [[321, "sky-collection-schema"]], "Formatting": [[321, "formatting"]], "Examples": [[322, "examples"]], "Poisson Mapping": [[323, "Poisson-Mapping"]], "Contents": [[323, "Contents"]], "Introduction": [[323, "Introduction"]], "Representing Poisson Maps": [[323, "Representing-Poisson-Maps"]], "Poisson Atlases": [[323, "Poisson-Atlases"]], "The Counts Table": [[323, "The-Counts-Table"]], "Map HDUs": [[323, "Map-HDUs"]], "Poisson Maps": [[323, "Poisson-Maps"]], "Constructing Poisson Maps": [[323, "Constructing-Poisson-Maps"]], "Density Estimation": [[323, "Density-Estimation"]], "Maximum A Posteriori Regression": [[323, "Maximum-A-Posteriori-Regression"]], "K-Nearest Neighbor Regression": [[323, "K-Nearest-Neighbor-Regression"]], "R-Nearest Neighbor Regression": [[323, "R-Nearest-Neighbor-Regression"]], "pyXMIP Quickstart Guide": [[324, "pyxmip-quickstart-guide"]], "Installation + Setup": [[324, "installation-setup"]], "Critical Components": [[324, "critical-components"]], "Features": [[325, "features"]], "Resources": [[325, "resources"]], "Pages": [[325, "pages"]], "Configuring pyXMIP": [[326, "configuring-pyxmip"]], "Installing pyXMIP": [[327, "installing-pyxmip"]], "Installing From PyPy": [[327, "installing-from-pypy"]], "Installing From Source": [[327, "installing-from-source"]], "What Can I Do With pyXMIP?": [[328, "what-can-i-do-with-pyxmip"]], "How Does it Work?": [[328, "how-does-it-work"]], "Reference": [[329, "reference"]], "Getting Started": [[329, "getting-started"]], "Installation": [[329, "installation"]], "Basic Usage": [[329, "basic-usage"]], "Creating Plots": [[329, "creating-plots"], [333, "creating-plots"]], "Backend": [[329, "backend"]], "Cross Referencing": [[330, "cross-referencing"]], "Cross Matching": [[330, "cross-matching"]], "Exploring Cross Referencing Outputs": [[330, "exploring-cross-referencing-outputs"]], "Match Reduction": [[330, "match-reduction"]], "Mathematical Overview": [[330, "mathematical-overview"]], "Sub-Process Overview": [[330, "sub-process-overview"]], "Reduction Schema": [[330, "reduction-schema"]], "General Formatting": [[330, "general-formatting"]], "RUN_PARAM table": [[330, "id2"]], "Table Title": [[330, "id3"]], "Databases": [[331, "databases"]], "Basic Information": [[331, "basic-information"]], "Logging": [[332, "logging"]], "PSF Modeling": [[334, "psf-modeling"]], "pyXMIP Schema Classes": [[335, "pyxmip-schema-classes"]], "Loading Source Data": [[336, "loading-source-data"]]}, "indexentries": {"cross_reference": [[0, "module-cross_reference"]], "module": [[0, "module-cross_reference"], [20, "module-schema"], [86, "module-stats.utilities"], [88, "module-structures.databases"], [177, "module-structures.map"], [233, "module-structures.table"], [310, "module-utilities.core"], [314, "module-utilities.geo"], [317, "module-utilities.plot"]], "crossmatchdatabase (class in cross_reference)": [[1, "cross_reference.CrossMatchDatabase"]], "__init__() (cross_reference.crossmatchdatabase method)": [[2, "cross_reference.CrossMatchDatabase.__init__"]], "add_catalog() (cross_reference.crossmatchdatabase method)": [[3, "cross_reference.CrossMatchDatabase.add_catalog"]], "build_meta_table() (cross_reference.crossmatchdatabase method)": [[4, "cross_reference.CrossMatchDatabase.build_meta_table"]], "check_meta() (cross_reference.crossmatchdatabase method)": [[5, "cross_reference.CrossMatchDatabase.check_meta"]], "correct_column_names() (cross_reference.crossmatchdatabase method)": [[6, "cross_reference.CrossMatchDatabase.correct_column_names"]], "correct_object_types() (cross_reference.crossmatchdatabase method)": [[7, "cross_reference.CrossMatchDatabase.correct_object_types"]], "drop_table() (cross_reference.crossmatchdatabase method)": [[8, "cross_reference.CrossMatchDatabase.drop_table"]], "from_file() (cross_reference.crossmatchdatabase class method)": [[9, "cross_reference.CrossMatchDatabase.from_file"]], "has_catalog (cross_reference.crossmatchdatabase property)": [[10, "cross_reference.CrossMatchDatabase.has_catalog"]], "match_tables (cross_reference.crossmatchdatabase property)": [[11, "cross_reference.CrossMatchDatabase.match_tables"]], "meta (cross_reference.crossmatchdatabase property)": [[12, "cross_reference.CrossMatchDatabase.meta"]], "meta_add() (cross_reference.crossmatchdatabase method)": [[13, "cross_reference.CrossMatchDatabase.meta_add"]], "meta_remove() (cross_reference.crossmatchdatabase method)": [[14, "cross_reference.CrossMatchDatabase.meta_remove"]], "meta_reset() (cross_reference.crossmatchdatabase method)": [[15, "cross_reference.CrossMatchDatabase.meta_reset"]], "query() (cross_reference.crossmatchdatabase method)": [[16, "cross_reference.CrossMatchDatabase.query"]], "tables (cross_reference.crossmatchdatabase property)": [[17, "cross_reference.CrossMatchDatabase.tables"]], "cross_match() (in module cross_reference)": [[18, "cross_reference.cross_match"]], "cross_match_table() (in module cross_reference)": [[19, "cross_reference.cross_match_table"]], "schema": [[20, "module-schema"]], "reductionschema (class in schema)": [[21, "schema.ReductionSchema"]], "dbpath (schema.reductionschema attribute)": [[22, "schema.ReductionSchema.DBPATH"]], "instrumental (schema.reductionschema attribute)": [[23, "schema.ReductionSchema.INSTRUMENTAL"]], "instrument_params (schema.reductionschema attribute)": [[24, "schema.ReductionSchema.INSTRUMENT_PARAMS"]], "io_params (schema.reductionschema attribute)": [[25, "schema.ReductionSchema.IO_PARAMS"]], "object_params (schema.reductionschema attribute)": [[26, "schema.ReductionSchema.OBJECT_PARAMS"]], "otypes (schema.reductionschema attribute)": [[27, "schema.ReductionSchema.OTYPES"]], "poisson (schema.reductionschema attribute)": [[28, "schema.ReductionSchema.POISSON"]], "poisson_params (schema.reductionschema attribute)": [[29, "schema.ReductionSchema.POISSON_PARAMS"]], "psf (schema.reductionschema attribute)": [[30, "schema.ReductionSchema.PSF"]], "refdbs (schema.reductionschema attribute)": [[31, "schema.ReductionSchema.REFDBS"]], "run_params (schema.reductionschema attribute)": [[32, "schema.ReductionSchema.RUN_PARAMS"]], "__init__() (schema.reductionschema method)": [[33, "schema.ReductionSchema.__init__"]], "clear() (schema.reductionschema method)": [[34, "schema.ReductionSchema.clear"]], "copy() (schema.reductionschema method)": [[35, "schema.ReductionSchema.copy"]], "from_file() (schema.reductionschema class method)": [[36, "schema.ReductionSchema.from_file"]], "fromkeys() (schema.reductionschema method)": [[37, "schema.ReductionSchema.fromkeys"]], "get() (schema.reductionschema method)": [[38, "schema.ReductionSchema.get"]], "isvalid() (schema.reductionschema method)": [[39, "schema.ReductionSchema.isvalid"]], "items() (schema.reductionschema method)": [[40, "schema.ReductionSchema.items"]], "keys() (schema.reductionschema method)": [[41, "schema.ReductionSchema.keys"]], "pop() (schema.reductionschema method)": [[42, "schema.ReductionSchema.pop"]], "popitem() (schema.reductionschema method)": [[43, "schema.ReductionSchema.popitem"]], "setdefault() (schema.reductionschema method)": [[44, "schema.ReductionSchema.setdefault"]], "update() (schema.reductionschema method)": [[45, "schema.ReductionSchema.update"]], "values() (schema.reductionschema method)": [[46, "schema.ReductionSchema.values"]], "schema (class in schema)": [[47, "schema.Schema"]], "__init__() (schema.schema method)": [[48, "schema.Schema.__init__"]], "clear() (schema.schema method)": [[49, "schema.Schema.clear"]], "copy() (schema.schema method)": [[50, "schema.Schema.copy"]], "from_file() (schema.schema class method)": [[51, "schema.Schema.from_file"]], "fromkeys() (schema.schema method)": [[52, "schema.Schema.fromkeys"]], "get() (schema.schema method)": [[53, "schema.Schema.get"]], "isvalid() (schema.schema method)": [[54, "schema.Schema.isvalid"]], "items() (schema.schema method)": [[55, "schema.Schema.items"]], "keys() (schema.schema method)": [[56, "schema.Schema.keys"]], "pop() (schema.schema method)": [[57, "schema.Schema.pop"]], "popitem() (schema.schema method)": [[58, "schema.Schema.popitem"]], "setdefault() (schema.schema method)": [[59, "schema.Schema.setdefault"]], "update() (schema.schema method)": [[60, "schema.Schema.update"]], "values() (schema.schema method)": [[61, "schema.Schema.values"]], "b (schema.sourcetableschema attribute)": [[62, "schema.SourceTableSchema.B"]], "dec (schema.sourcetableschema attribute)": [[62, "schema.SourceTableSchema.DEC"]], "l (schema.sourcetableschema attribute)": [[62, "schema.SourceTableSchema.L"]], "name (schema.sourcetableschema attribute)": [[62, "schema.SourceTableSchema.NAME"]], "ra (schema.sourcetableschema attribute)": [[62, "schema.SourceTableSchema.RA"]], "sourcetableschema (class in schema)": [[62, "schema.SourceTableSchema"]], "type (schema.sourcetableschema attribute)": [[62, "schema.SourceTableSchema.TYPE"]], "z (schema.sourcetableschema attribute)": [[62, "schema.SourceTableSchema.Z"]], "column_map (schema.sourcetableschema attribute)": [[62, "schema.SourceTableSchema.column_map"], [66, "schema.SourceTableSchema.column_map"]], "default_coord_system (schema.sourcetableschema attribute)": [[62, "schema.SourceTableSchema.default_coord_system"], [72, "schema.SourceTableSchema.default_coord_system"]], "object_map (schema.sourcetableschema attribute)": [[62, "schema.SourceTableSchema.object_map"], [80, "schema.SourceTableSchema.object_map"]], "__init__() (schema.sourcetableschema method)": [[63, "schema.SourceTableSchema.__init__"]], "available_coordinate_frames() (schema.sourcetableschema method)": [[64, "schema.SourceTableSchema.available_coordinate_frames"]], "clear() (schema.sourcetableschema method)": [[65, "schema.SourceTableSchema.clear"]], "construct() (schema.sourcetableschema class method)": [[67, "schema.SourceTableSchema.construct"]], "coordinate_columns (schema.sourcetableschema property)": [[68, "schema.SourceTableSchema.coordinate_columns"]], "coordinate_frame (schema.sourcetableschema property)": [[69, "schema.SourceTableSchema.coordinate_frame"]], "coordinate_system (schema.sourcetableschema property)": [[70, "schema.SourceTableSchema.coordinate_system"]], "copy() (schema.sourcetableschema method)": [[71, "schema.SourceTableSchema.copy"]], "from_file() (schema.sourcetableschema class method)": [[73, "schema.SourceTableSchema.from_file"]], "fromkeys() (schema.sourcetableschema method)": [[74, "schema.SourceTableSchema.fromkeys"]], "get() (schema.sourcetableschema method)": [[75, "schema.SourceTableSchema.get"]], "inv_column_map (schema.sourcetableschema property)": [[76, "schema.SourceTableSchema.inv_column_map"]], "isvalid() (schema.sourcetableschema method)": [[77, "schema.SourceTableSchema.isvalid"]], "items() (schema.sourcetableschema method)": [[78, "schema.SourceTableSchema.items"]], "keys() (schema.sourcetableschema method)": [[79, "schema.SourceTableSchema.keys"]], "pop() (schema.sourcetableschema method)": [[81, "schema.SourceTableSchema.pop"]], "popitem() (schema.sourcetableschema method)": [[82, "schema.SourceTableSchema.popitem"]], "setdefault() (schema.sourcetableschema method)": [[83, "schema.SourceTableSchema.setdefault"]], "update() (schema.sourcetableschema method)": [[84, "schema.SourceTableSchema.update"]], "values() (schema.sourcetableschema method)": [[85, "schema.SourceTableSchema.values"]], "stats.utilities": [[86, "module-stats.utilities"]], "uniform_sample_spherical() (in module stats.utilities)": [[87, "stats.utilities.uniform_sample_spherical"]], "structures.databases": [[88, "module-structures.databases"]], "dbregistry (class in structures.databases)": [[89, "structures.databases.DBRegistry"]], "__init__() (structures.databases.dbregistry method)": [[90, "structures.databases.DBRegistry.__init__"]], "as_list() (structures.databases.dbregistry method)": [[91, "structures.databases.DBRegistry.as_list"]], "clear() (structures.databases.dbregistry method)": [[92, "structures.databases.DBRegistry.clear"]], "copy() (structures.databases.dbregistry method)": [[93, "structures.databases.DBRegistry.copy"]], "fromkeys() (structures.databases.dbregistry method)": [[94, "structures.databases.DBRegistry.fromkeys"]], "get() (structures.databases.dbregistry method)": [[95, "structures.databases.DBRegistry.get"]], "items() (structures.databases.dbregistry method)": [[96, "structures.databases.DBRegistry.items"]], "keys() (structures.databases.dbregistry method)": [[97, "structures.databases.DBRegistry.keys"]], "pop() (structures.databases.dbregistry method)": [[98, "structures.databases.DBRegistry.pop"]], "popitem() (structures.databases.dbregistry method)": [[99, "structures.databases.DBRegistry.popitem"]], "setdefault() (structures.databases.dbregistry method)": [[100, "structures.databases.DBRegistry.setdefault"]], "update() (structures.databases.dbregistry method)": [[101, "structures.databases.DBRegistry.update"]], "values() (structures.databases.dbregistry method)": [[102, "structures.databases.DBRegistry.values"]], "localdatabase (class in structures.databases)": [[103, "structures.databases.LocalDatabase"]], "__init__() (structures.databases.localdatabase method)": [[104, "structures.databases.LocalDatabase.__init__"]], "add_sources_to_poisson() (structures.databases.localdatabase class method)": [[105, "structures.databases.LocalDatabase.add_sources_to_poisson"]], "class_table_schema (structures.databases.localdatabase attribute)": [[106, "structures.databases.LocalDatabase.class_table_schema"]], "count() (structures.databases.localdatabase class method)": [[107, "structures.databases.LocalDatabase.count"]], "create_poisson_atlas() (structures.databases.localdatabase class method)": [[108, "structures.databases.LocalDatabase.create_poisson_atlas"]], "default_poisson_map (structures.databases.localdatabase attribute)": [[109, "structures.databases.LocalDatabase.default_poisson_map"]], "get_default_poisson_atlas() (structures.databases.localdatabase class method)": [[110, "structures.databases.LocalDatabase.get_default_poisson_atlas"]], "get_poisson_atlas() (structures.databases.localdatabase class method)": [[111, "structures.databases.LocalDatabase.get_poisson_atlas"]], "poisson_map (structures.databases.localdatabase attribute)": [[112, "structures.databases.LocalDatabase.poisson_map"]], "query_radius() (structures.databases.localdatabase class method)": [[113, "structures.databases.LocalDatabase.query_radius"]], "random_sample_count() (structures.databases.localdatabase class method)": [[114, "structures.databases.LocalDatabase.random_sample_count"]], "set_poisson_atlas() (structures.databases.localdatabase class method)": [[115, "structures.databases.LocalDatabase.set_poisson_atlas"]], "source_match() (structures.databases.localdatabase class method)": [[116, "structures.databases.LocalDatabase.source_match"]], "ned (class in structures.databases)": [[117, "structures.databases.NED"]], "__init__() (structures.databases.ned method)": [[118, "structures.databases.NED.__init__"]], "add_sources_to_poisson() (structures.databases.ned class method)": [[119, "structures.databases.NED.add_sources_to_poisson"]], "class_table_schema (structures.databases.ned attribute)": [[120, "structures.databases.NED.class_table_schema"]], "count() (structures.databases.ned class method)": [[121, "structures.databases.NED.count"]], "create_poisson_atlas() (structures.databases.ned class method)": [[122, "structures.databases.NED.create_poisson_atlas"]], "default_poisson_map (structures.databases.ned attribute)": [[123, "structures.databases.NED.default_poisson_map"]], "get_default_poisson_atlas() (structures.databases.ned class method)": [[124, "structures.databases.NED.get_default_poisson_atlas"]], "get_poisson_atlas() (structures.databases.ned class method)": [[125, "structures.databases.NED.get_poisson_atlas"]], "poisson_map (structures.databases.ned attribute)": [[126, "structures.databases.NED.poisson_map"]], "query_radius() (structures.databases.ned class method)": [[127, "structures.databases.NED.query_radius"]], "random_sample_count() (structures.databases.ned class method)": [[128, "structures.databases.NED.random_sample_count"]], "set_poisson_atlas() (structures.databases.ned class method)": [[129, "structures.databases.NED.set_poisson_atlas"]], "source_match() (structures.databases.ned class method)": [[130, "structures.databases.NED.source_match"]], "remotedatabase (class in structures.databases)": [[131, "structures.databases.RemoteDatabase"]], "__init__() (structures.databases.remotedatabase method)": [[132, "structures.databases.RemoteDatabase.__init__"]], "add_sources_to_poisson() (structures.databases.remotedatabase class method)": [[133, "structures.databases.RemoteDatabase.add_sources_to_poisson"]], "class_table_schema (structures.databases.remotedatabase attribute)": [[134, "structures.databases.RemoteDatabase.class_table_schema"]], "count() (structures.databases.remotedatabase class method)": [[135, "structures.databases.RemoteDatabase.count"]], "create_poisson_atlas() (structures.databases.remotedatabase class method)": [[136, "structures.databases.RemoteDatabase.create_poisson_atlas"]], "default_poisson_map (structures.databases.remotedatabase attribute)": [[137, "structures.databases.RemoteDatabase.default_poisson_map"]], "get_default_poisson_atlas() (structures.databases.remotedatabase class method)": [[138, "structures.databases.RemoteDatabase.get_default_poisson_atlas"]], "get_poisson_atlas() (structures.databases.remotedatabase class method)": [[139, "structures.databases.RemoteDatabase.get_poisson_atlas"]], "poisson_map (structures.databases.remotedatabase attribute)": [[140, "structures.databases.RemoteDatabase.poisson_map"]], "query_radius() (structures.databases.remotedatabase class method)": [[141, "structures.databases.RemoteDatabase.query_radius"]], "random_sample_count() (structures.databases.remotedatabase class method)": [[142, "structures.databases.RemoteDatabase.random_sample_count"]], "set_poisson_atlas() (structures.databases.remotedatabase class method)": [[143, "structures.databases.RemoteDatabase.set_poisson_atlas"]], "source_match() (structures.databases.remotedatabase class method)": [[144, "structures.databases.RemoteDatabase.source_match"]], "simbad (class in structures.databases)": [[145, "structures.databases.SIMBAD"]], "__init__() (structures.databases.simbad method)": [[146, "structures.databases.SIMBAD.__init__"]], "add_sources_to_poisson() (structures.databases.simbad class method)": [[147, "structures.databases.SIMBAD.add_sources_to_poisson"]], "class_table_schema (structures.databases.simbad attribute)": [[148, "structures.databases.SIMBAD.class_table_schema"]], "count() (structures.databases.simbad class method)": [[149, "structures.databases.SIMBAD.count"]], "create_poisson_atlas() (structures.databases.simbad class method)": [[150, "structures.databases.SIMBAD.create_poisson_atlas"]], "default_poisson_map (structures.databases.simbad attribute)": [[151, "structures.databases.SIMBAD.default_poisson_map"]], "get_default_poisson_atlas() (structures.databases.simbad class method)": [[152, "structures.databases.SIMBAD.get_default_poisson_atlas"]], "get_poisson_atlas() (structures.databases.simbad class method)": [[153, "structures.databases.SIMBAD.get_poisson_atlas"]], "poisson_map (structures.databases.simbad attribute)": [[154, "structures.databases.SIMBAD.poisson_map"]], "query_radius() (structures.databases.simbad class method)": [[155, "structures.databases.SIMBAD.query_radius"]], "random_sample_count() (structures.databases.simbad class method)": [[156, "structures.databases.SIMBAD.random_sample_count"]], "set_poisson_atlas() (structures.databases.simbad class method)": [[157, "structures.databases.SIMBAD.set_poisson_atlas"]], "source_match() (structures.databases.simbad class method)": [[158, "structures.databases.SIMBAD.source_match"]], "sourcedatabase (class in structures.databases)": [[159, "structures.databases.SourceDatabase"]], "__init__() (structures.databases.sourcedatabase method)": [[160, "structures.databases.SourceDatabase.__init__"]], "add_sources_to_poisson() (structures.databases.sourcedatabase class method)": [[161, "structures.databases.SourceDatabase.add_sources_to_poisson"]], "class_table_schema (structures.databases.sourcedatabase attribute)": [[162, "structures.databases.SourceDatabase.class_table_schema"]], "count() (structures.databases.sourcedatabase class method)": [[163, "structures.databases.SourceDatabase.count"]], "create_poisson_atlas() (structures.databases.sourcedatabase class method)": [[164, "structures.databases.SourceDatabase.create_poisson_atlas"]], "default_poisson_map (structures.databases.sourcedatabase attribute)": [[165, "structures.databases.SourceDatabase.default_poisson_map"]], "get_default_poisson_atlas() (structures.databases.sourcedatabase class method)": [[166, "structures.databases.SourceDatabase.get_default_poisson_atlas"]], "get_poisson_atlas() (structures.databases.sourcedatabase class method)": [[167, "structures.databases.SourceDatabase.get_poisson_atlas"]], "poisson_map (structures.databases.sourcedatabase attribute)": [[168, "structures.databases.SourceDatabase.poisson_map"]], "query_radius() (structures.databases.sourcedatabase class method)": [[169, "structures.databases.SourceDatabase.query_radius"]], "random_sample_count() (structures.databases.sourcedatabase class method)": [[170, "structures.databases.SourceDatabase.random_sample_count"]], "set_poisson_atlas() (structures.databases.sourcedatabase class method)": [[171, "structures.databases.SourceDatabase.set_poisson_atlas"]], "source_match() (structures.databases.sourcedatabase class method)": [[172, "structures.databases.SourceDatabase.source_match"]], "add_points_to_poisson_map() (in module structures.databases)": [[173, "structures.databases.add_points_to_poisson_map"]], "get_database() (in module structures.databases)": [[174, "structures.databases.get_database"]], "get_poisson_map() (in module structures.databases)": [[175, "structures.databases.get_poisson_map"]], "get_poisson_path() (in module structures.databases)": [[176, "structures.databases.get_poisson_path"]], "structures.map": [[177, "module-structures.map"]], "map (class in structures.map)": [[178, "structures.map.Map"]], "__init__() (structures.map.map method)": [[179, "structures.map.Map.__init__"]], "coordinate_frame (structures.map.map property)": [[180, "structures.map.Map.coordinate_frame"]], "data (structures.map.map property)": [[181, "structures.map.Map.data"]], "get_healpix_id() (structures.map.map method)": [[182, "structures.map.Map.get_healpix_id"]], "pixel_positions (structures.map.map property)": [[183, "structures.map.Map.pixel_positions"]], "plot() (structures.map.map method)": [[184, "structures.map.Map.plot"]], "transform_map_coordinates() (structures.map.map method)": [[185, "structures.map.Map.transform_map_coordinates"]], "mapatlas (class in structures.map)": [[186, "structures.map.MapAtlas"]], "__init__() (structures.map.mapatlas method)": [[187, "structures.map.MapAtlas.__init__"]], "coordinate_frame (structures.map.mapatlas property)": [[188, "structures.map.MapAtlas.coordinate_frame"]], "generate() (structures.map.mapatlas class method)": [[189, "structures.map.MapAtlas.generate"]], "get_map() (structures.map.mapatlas method)": [[190, "structures.map.MapAtlas.get_map"]], "has_maps (structures.map.mapatlas property)": [[191, "structures.map.MapAtlas.has_maps"]], "hdus (structures.map.mapatlas property)": [[192, "structures.map.MapAtlas.hdus"]], "map_names (structures.map.mapatlas property)": [[193, "structures.map.MapAtlas.map_names"]], "pixel_positions (structures.map.mapatlas property)": [[194, "structures.map.MapAtlas.pixel_positions"]], "remove() (structures.map.mapatlas method)": [[195, "structures.map.MapAtlas.remove"]], "reshape_healpix() (structures.map.mapatlas method)": [[196, "structures.map.MapAtlas.reshape_healpix"]], "poissonatlas (class in structures.map)": [[197, "structures.map.PoissonAtlas"]], "__init__() (structures.map.poissonatlas method)": [[198, "structures.map.PoissonAtlas.__init__"]], "append_to_fits() (structures.map.poissonatlas method)": [[199, "structures.map.PoissonAtlas.append_to_fits"]], "build_poisson_map() (structures.map.poissonatlas method)": [[200, "structures.map.PoissonAtlas.build_poisson_map"]], "build_poisson_map_knn() (structures.map.poissonatlas method)": [[201, "structures.map.PoissonAtlas.build_poisson_map_KNN"]], "build_poisson_map_map() (structures.map.poissonatlas method)": [[202, "structures.map.PoissonAtlas.build_poisson_map_MAP"]], "build_poisson_map_rnn() (structures.map.poissonatlas method)": [[203, "structures.map.PoissonAtlas.build_poisson_map_RNN"]], "build_poisson_map_regressor() (structures.map.poissonatlas method)": [[204, "structures.map.PoissonAtlas.build_poisson_map_regressor"]], "build_poisson_maps() (structures.map.poissonatlas method)": [[205, "structures.map.PoissonAtlas.build_poisson_maps"]], "coordinate_frame (structures.map.poissonatlas property)": [[206, "structures.map.PoissonAtlas.coordinate_frame"]], "generate() (structures.map.poissonatlas class method)": [[207, "structures.map.PoissonAtlas.generate"]], "get_map() (structures.map.poissonatlas method)": [[208, "structures.map.PoissonAtlas.get_map"]], "get_points() (structures.map.poissonatlas method)": [[209, "structures.map.PoissonAtlas.get_points"]], "has_maps (structures.map.poissonatlas property)": [[210, "structures.map.PoissonAtlas.has_maps"]], "hdus (structures.map.poissonatlas property)": [[211, "structures.map.PoissonAtlas.hdus"]], "map_names (structures.map.poissonatlas property)": [[212, "structures.map.PoissonAtlas.map_names"]], "pixel_positions (structures.map.poissonatlas property)": [[213, "structures.map.PoissonAtlas.pixel_positions"]], "remove() (structures.map.poissonatlas method)": [[214, "structures.map.PoissonAtlas.remove"]], "reset() (structures.map.poissonatlas method)": [[215, "structures.map.PoissonAtlas.reset"]], "reshape_healpix() (structures.map.poissonatlas method)": [[216, "structures.map.PoissonAtlas.reshape_healpix"]], "sample_from_database() (structures.map.poissonatlas method)": [[217, "structures.map.PoissonAtlas.sample_from_database"]], "statatlas (class in structures.map)": [[218, "structures.map.StatAtlas"]], "__init__() (structures.map.statatlas method)": [[219, "structures.map.StatAtlas.__init__"]], "append_to_fits() (structures.map.statatlas method)": [[220, "structures.map.StatAtlas.append_to_fits"]], "coordinate_frame (structures.map.statatlas property)": [[221, "structures.map.StatAtlas.coordinate_frame"]], "generate() (structures.map.statatlas class method)": [[222, "structures.map.StatAtlas.generate"]], "get_map() (structures.map.statatlas method)": [[223, "structures.map.StatAtlas.get_map"]], "get_points() (structures.map.statatlas method)": [[224, "structures.map.StatAtlas.get_points"]], "has_maps (structures.map.statatlas property)": [[225, "structures.map.StatAtlas.has_maps"]], "hdus (structures.map.statatlas property)": [[226, "structures.map.StatAtlas.hdus"]], "map_names (structures.map.statatlas property)": [[227, "structures.map.StatAtlas.map_names"]], "pixel_positions (structures.map.statatlas property)": [[228, "structures.map.StatAtlas.pixel_positions"]], "remove() (structures.map.statatlas method)": [[229, "structures.map.StatAtlas.remove"]], "reset() (structures.map.statatlas method)": [[230, "structures.map.StatAtlas.reset"]], "reshape_healpix() (structures.map.statatlas method)": [[231, "structures.map.StatAtlas.reshape_healpix"]], "sample_from_database() (structures.map.statatlas method)": [[232, "structures.map.StatAtlas.sample_from_database"]], "structures.table": [[233, "module-structures.table"]], "sourcetable (class in structures.table)": [[234, "structures.table.SourceTable"]], "columnclass (structures.table.sourcetable property)": [[235, "structures.table.SourceTable.ColumnClass"]], "__init__() (structures.table.sourcetable method)": [[236, "structures.table.SourceTable.__init__"]], "add_column() (structures.table.sourcetable method)": [[237, "structures.table.SourceTable.add_column"]], "add_columns() (structures.table.sourcetable method)": [[238, "structures.table.SourceTable.add_columns"]], "add_index() (structures.table.sourcetable method)": [[239, "structures.table.SourceTable.add_index"]], "add_row() (structures.table.sourcetable method)": [[240, "structures.table.SourceTable.add_row"]], "append_to_fits() (structures.table.sourcetable method)": [[241, "structures.table.SourceTable.append_to_fits"]], "append_to_sql() (structures.table.sourcetable method)": [[242, "structures.table.SourceTable.append_to_sql"]], "argsort() (structures.table.sourcetable method)": [[243, "structures.table.SourceTable.argsort"]], "as_array() (structures.table.sourcetable method)": [[244, "structures.table.SourceTable.as_array"]], "colnames (structures.table.sourcetable property)": [[245, "structures.table.SourceTable.colnames"]], "convert_bytestring_to_unicode() (structures.table.sourcetable method)": [[246, "structures.table.SourceTable.convert_bytestring_to_unicode"]], "convert_unicode_to_bytestring() (structures.table.sourcetable method)": [[247, "structures.table.SourceTable.convert_unicode_to_bytestring"]], "copy() (structures.table.sourcetable method)": [[248, "structures.table.SourceTable.copy"]], "count_types() (structures.table.sourcetable method)": [[249, "structures.table.SourceTable.count_types"]], "dtype (structures.table.sourcetable property)": [[250, "structures.table.SourceTable.dtype"]], "field() (structures.table.sourcetable method)": [[251, "structures.table.SourceTable.field"]], "filled() (structures.table.sourcetable method)": [[252, "structures.table.SourceTable.filled"]], "from_pandas() (structures.table.sourcetable class method)": [[253, "structures.table.SourceTable.from_pandas"]], "generate_schema() (structures.table.sourcetable method)": [[254, "structures.table.SourceTable.generate_schema"]], "get_coordinates() (structures.table.sourcetable method)": [[255, "structures.table.SourceTable.get_coordinates"]], "group_by() (structures.table.sourcetable method)": [[256, "structures.table.SourceTable.group_by"]], "groups (structures.table.sourcetable property)": [[257, "structures.table.SourceTable.groups"]], "has_masked_columns (structures.table.sourcetable property)": [[258, "structures.table.SourceTable.has_masked_columns"]], "has_masked_values (structures.table.sourcetable property)": [[259, "structures.table.SourceTable.has_masked_values"]], "has_mixin_columns (structures.table.sourcetable property)": [[260, "structures.table.SourceTable.has_mixin_columns"]], "iloc (structures.table.sourcetable property)": [[261, "structures.table.SourceTable.iloc"]], "index_column() (structures.table.sourcetable method)": [[262, "structures.table.SourceTable.index_column"]], "index_mode() (structures.table.sourcetable method)": [[263, "structures.table.SourceTable.index_mode"]], "indices (structures.table.sourcetable property)": [[264, "structures.table.SourceTable.indices"]], "info (structures.table.sourcetable attribute)": [[265, "structures.table.SourceTable.info"]], "insert_row() (structures.table.sourcetable method)": [[266, "structures.table.SourceTable.insert_row"]], "items() (structures.table.sourcetable method)": [[267, "structures.table.SourceTable.items"]], "itercols() (structures.table.sourcetable method)": [[268, "structures.table.SourceTable.itercols"]], "iterrows() (structures.table.sourcetable method)": [[269, "structures.table.SourceTable.iterrows"]], "keep_columns() (structures.table.sourcetable method)": [[270, "structures.table.SourceTable.keep_columns"]], "keys() (structures.table.sourcetable method)": [[271, "structures.table.SourceTable.keys"]], "lat (structures.table.sourcetable property)": [[272, "structures.table.SourceTable.lat"]], "loc (structures.table.sourcetable property)": [[273, "structures.table.SourceTable.loc"]], "loc_indices (structures.table.sourcetable property)": [[274, "structures.table.SourceTable.loc_indices"]], "lon (structures.table.sourcetable property)": [[275, "structures.table.SourceTable.lon"]], "mask (structures.table.sourcetable property)": [[276, "structures.table.SourceTable.mask"]], "masked (structures.table.sourcetable property)": [[277, "structures.table.SourceTable.masked"]], "meta (structures.table.sourcetable attribute)": [[278, "structures.table.SourceTable.meta"]], "more() (structures.table.sourcetable method)": [[279, "structures.table.SourceTable.more"]], "name (structures.table.sourcetable property)": [[280, "structures.table.SourceTable.name"]], "pformat() (structures.table.sourcetable method)": [[281, "structures.table.SourceTable.pformat"]], "pformat_all() (structures.table.sourcetable method)": [[282, "structures.table.SourceTable.pformat_all"]], "pprint() (structures.table.sourcetable method)": [[283, "structures.table.SourceTable.pprint"]], "pprint_all() (structures.table.sourcetable method)": [[284, "structures.table.SourceTable.pprint_all"]], "pprint_exclude_names (structures.table.sourcetable attribute)": [[285, "structures.table.SourceTable.pprint_exclude_names"]], "pprint_include_names (structures.table.sourcetable attribute)": [[286, "structures.table.SourceTable.pprint_include_names"]], "read (structures.table.sourcetable attribute)": [[287, "structures.table.SourceTable.read"]], "redshift (structures.table.sourcetable property)": [[288, "structures.table.SourceTable.redshift"]], "remove_column() (structures.table.sourcetable method)": [[289, "structures.table.SourceTable.remove_column"]], "remove_columns() (structures.table.sourcetable method)": [[290, "structures.table.SourceTable.remove_columns"]], "remove_indices() (structures.table.sourcetable method)": [[291, "structures.table.SourceTable.remove_indices"]], "remove_row() (structures.table.sourcetable method)": [[292, "structures.table.SourceTable.remove_row"]], "remove_rows() (structures.table.sourcetable method)": [[293, "structures.table.SourceTable.remove_rows"]], "rename_column() (structures.table.sourcetable method)": [[294, "structures.table.SourceTable.rename_column"]], "rename_columns() (structures.table.sourcetable method)": [[295, "structures.table.SourceTable.rename_columns"]], "replace_column() (structures.table.sourcetable method)": [[296, "structures.table.SourceTable.replace_column"]], "reverse() (structures.table.sourcetable method)": [[297, "structures.table.SourceTable.reverse"]], "round() (structures.table.sourcetable method)": [[298, "structures.table.SourceTable.round"]], "schema (structures.table.sourcetable property)": [[299, "structures.table.SourceTable.schema"]], "show_in_browser() (structures.table.sourcetable method)": [[300, "structures.table.SourceTable.show_in_browser"]], "show_in_notebook() (structures.table.sourcetable method)": [[301, "structures.table.SourceTable.show_in_notebook"]], "sort() (structures.table.sourcetable method)": [[302, "structures.table.SourceTable.sort"]], "to_pandas() (structures.table.sourcetable method)": [[303, "structures.table.SourceTable.to_pandas"]], "type (structures.table.sourcetable property)": [[304, "structures.table.SourceTable.type"]], "type_native (structures.table.sourcetable property)": [[305, "structures.table.SourceTable.type_native"]], "update() (structures.table.sourcetable method)": [[306, "structures.table.SourceTable.update"]], "values() (structures.table.sourcetable method)": [[307, "structures.table.SourceTable.values"]], "values_equal() (structures.table.sourcetable method)": [[308, "structures.table.SourceTable.values_equal"]], "write (structures.table.sourcetable attribute)": [[309, "structures.table.SourceTable.write"]], "utilities.core": [[310, "module-utilities.core"]], "enforce_units() (in module utilities.core)": [[311, "utilities.core.enforce_units"]], "getfromdict() (in module utilities.core)": [[312, "utilities.core.getFromDict"]], "setindict() (in module utilities.core)": [[313, "utilities.core.setInDict"]], "utilities.geo": [[314, "module-utilities.geo"]], "convert_coordinates() (in module utilities.geo)": [[315, "utilities.geo.convert_coordinates"]], "convert_skycoord() (in module utilities.geo)": [[316, "utilities.geo.convert_skycoord"]], "utilities.plot": [[317, "module-utilities.plot"]], "plot_healpix() (in module utilities.plot)": [[318, "utilities.plot.plot_healpix"]], "set_style() (in module utilities.plot)": [[319, "utilities.plot.set_style"]]}})
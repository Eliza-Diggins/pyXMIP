Search.setIndex({"docnames": ["_as_gen/stats.gaussian_process", "_as_gen/stats.gaussian_process.Haversine_RBF", "_as_gen/stats.gaussian_process.Haversine_RBF.__init__", "_as_gen/stats.gaussian_process.Haversine_RBF.anisotropic", "_as_gen/stats.gaussian_process.Haversine_RBF.bounds", "_as_gen/stats.gaussian_process.Haversine_RBF.clone_with_theta", "_as_gen/stats.gaussian_process.Haversine_RBF.diag", "_as_gen/stats.gaussian_process.Haversine_RBF.get_params", "_as_gen/stats.gaussian_process.Haversine_RBF.hyperparameter_length_scale", "_as_gen/stats.gaussian_process.Haversine_RBF.hyperparameters", "_as_gen/stats.gaussian_process.Haversine_RBF.is_stationary", "_as_gen/stats.gaussian_process.Haversine_RBF.n_dims", "_as_gen/stats.gaussian_process.Haversine_RBF.requires_vector_input", "_as_gen/stats.gaussian_process.Haversine_RBF.set_params", "_as_gen/stats.gaussian_process.Haversine_RBF.theta", "_as_gen/stats.map_regression", "_as_gen/stats.map_regression.BayesianPoissonMapRegressor", "_as_gen/stats.map_regression.BayesianPoissonMapRegressor.__init__", "_as_gen/stats.map_regression.BayesianPoissonMapRegressor.build_map_MAP", "_as_gen/stats.map_regression.KNNeighborMapRegressor", "_as_gen/stats.map_regression.KNNeighborMapRegressor.__init__", "_as_gen/stats.map_regression.KNNeighborMapRegressor.cross_validate", "_as_gen/stats.map_regression.KNNeighborMapRegressor.default_training_fraction", "_as_gen/stats.map_regression.KNNeighborMapRegressor.hyperparameters", "_as_gen/stats.map_regression.KNNeighborMapRegressor.regressor_parameters", "_as_gen/stats.map_regression.KNNeighborMapRegressor.train_model", "_as_gen/stats.map_regression.PoissonMapRegressor", "_as_gen/stats.map_regression.PoissonMapRegressor.__init__", "_as_gen/stats.map_regression.PoissonMapRegressor.cross_validate", "_as_gen/stats.map_regression.PoissonMapRegressor.default_training_fraction", "_as_gen/stats.map_regression.PoissonMapRegressor.hyperparameters", "_as_gen/stats.map_regression.PoissonMapRegressor.regressor_parameters", "_as_gen/stats.map_regression.PoissonMapRegressor.train_model", "_as_gen/stats.map_regression.RNNeighborMapRegressor", "_as_gen/stats.map_regression.RNNeighborMapRegressor.__init__", "_as_gen/stats.map_regression.RNNeighborMapRegressor.cross_validate", "_as_gen/stats.map_regression.RNNeighborMapRegressor.default_training_fraction", "_as_gen/stats.map_regression.RNNeighborMapRegressor.hyperparameters", "_as_gen/stats.map_regression.RNNeighborMapRegressor.regressor_parameters", "_as_gen/stats.map_regression.RNNeighborMapRegressor.train_model", "_as_gen/stats.map_regression.train_map_regressor", "_as_gen/stats.utilities", "_as_gen/stats.utilities.uniform_sample_spherical", "_as_gen/structures.map", "_as_gen/structures.map.Map", "_as_gen/structures.map.Map.__init__", "_as_gen/structures.map.Map.coordinate_frame", "_as_gen/structures.map.Map.data", "_as_gen/structures.map.Map.get_healpix_id", "_as_gen/structures.map.Map.pixel_positions", "_as_gen/structures.map.Map.plot", "_as_gen/structures.map.Map.transform_map_coordinates", "_as_gen/structures.map.MapAtlas", "_as_gen/structures.map.MapAtlas.__init__", "_as_gen/structures.map.MapAtlas.coordinate_frame", "_as_gen/structures.map.MapAtlas.generate", "_as_gen/structures.map.MapAtlas.get_map", "_as_gen/structures.map.MapAtlas.has_maps", "_as_gen/structures.map.MapAtlas.hdus", "_as_gen/structures.map.MapAtlas.map_names", "_as_gen/structures.map.MapAtlas.pixel_positions", "_as_gen/structures.map.MapAtlas.remove", "_as_gen/structures.map.MapAtlas.reshape_healpix", "_as_gen/structures.map.PoissonAtlas", "_as_gen/structures.map.PoissonAtlas.COUNTS", "_as_gen/structures.map.PoissonAtlas.__init__", "_as_gen/structures.map.PoissonAtlas.append_to_fits", "_as_gen/structures.map.PoissonAtlas.build_poisson_map", "_as_gen/structures.map.PoissonAtlas.build_poisson_map_KNN", "_as_gen/structures.map.PoissonAtlas.build_poisson_map_MAP", "_as_gen/structures.map.PoissonAtlas.build_poisson_map_RNN", "_as_gen/structures.map.PoissonAtlas.build_poisson_map_regressor", "_as_gen/structures.map.PoissonAtlas.build_poisson_maps", "_as_gen/structures.map.PoissonAtlas.coordinate_frame", "_as_gen/structures.map.PoissonAtlas.generate", "_as_gen/structures.map.PoissonAtlas.get_map", "_as_gen/structures.map.PoissonAtlas.get_points", "_as_gen/structures.map.PoissonAtlas.has_maps", "_as_gen/structures.map.PoissonAtlas.hdus", "_as_gen/structures.map.PoissonAtlas.map_names", "_as_gen/structures.map.PoissonAtlas.pixel_positions", "_as_gen/structures.map.PoissonAtlas.remove", "_as_gen/structures.map.PoissonAtlas.reset", "_as_gen/structures.map.PoissonAtlas.reshape_healpix", "_as_gen/structures.map.PoissonAtlas.sample_from_database", "_as_gen/structures.map.StatAtlas", "_as_gen/structures.map.StatAtlas.COUNTS", "_as_gen/structures.map.StatAtlas.__init__", "_as_gen/structures.map.StatAtlas.append_to_fits", "_as_gen/structures.map.StatAtlas.coordinate_frame", "_as_gen/structures.map.StatAtlas.generate", "_as_gen/structures.map.StatAtlas.get_map", "_as_gen/structures.map.StatAtlas.get_points", "_as_gen/structures.map.StatAtlas.has_maps", "_as_gen/structures.map.StatAtlas.hdus", "_as_gen/structures.map.StatAtlas.map_names", "_as_gen/structures.map.StatAtlas.pixel_positions", "_as_gen/structures.map.StatAtlas.remove", "_as_gen/structures.map.StatAtlas.reset", "_as_gen/structures.map.StatAtlas.reshape_healpix", "_as_gen/structures.map.StatAtlas.sample_from_database", "_as_gen/utilities.core", "_as_gen/utilities.core.AttrDict", "_as_gen/utilities.core.AttrDict.__init__", "_as_gen/utilities.core.AttrDict.clean", "_as_gen/utilities.core.AttrDict.clean_types", "_as_gen/utilities.core.AttrDict.clear", "_as_gen/utilities.core.AttrDict.copy", "_as_gen/utilities.core.AttrDict.from_nested_dict", "_as_gen/utilities.core.AttrDict.fromkeys", "_as_gen/utilities.core.AttrDict.get", "_as_gen/utilities.core.AttrDict.items", "_as_gen/utilities.core.AttrDict.keys", "_as_gen/utilities.core.AttrDict.pop", "_as_gen/utilities.core.AttrDict.popitem", "_as_gen/utilities.core.AttrDict.setdefault", "_as_gen/utilities.core.AttrDict.update", "_as_gen/utilities.core.AttrDict.values", "_as_gen/utilities.core.YAMLConfiguration", "_as_gen/utilities.core.YAMLConfiguration.__init__", "_as_gen/utilities.core.YAMLConfiguration.config", "_as_gen/utilities.core.YAMLConfiguration.load", "_as_gen/utilities.core.YAMLConfiguration.load_from_path", "_as_gen/utilities.core.YAMLConfiguration.reload", "_as_gen/utilities.core.YAMLConfiguration.set_on_disk", "_as_gen/utilities.core.YAMLConfiguration.set_param", "_as_gen/utilities.core.enforce_units", "_as_gen/utilities.core.find_descriptors", "_as_gen/utilities.core.getFromDict", "_as_gen/utilities.core.merge_dicts", "_as_gen/utilities.core.produce_dict_heading", "_as_gen/utilities.core.rgetattr", "_as_gen/utilities.core.rsetattr", "_as_gen/utilities.core.setInDict", "_as_gen/utilities.logging", "_as_gen/utilities.plot", "_as_gen/utilities.plot.get_hips_image", "_as_gen/utilities.plot.plot_healpix", "_as_gen/utilities.plot.plot_hips", "_as_gen/utilities.plot.set_style", "_as_gen/utilities.sql", "_as_gen/utilities.sql.chunk_sql_query_operation", "_as_gen/utilities.sql.chunk_sql_table_operation", "_as_gen/utilities.text", "_as_gen/utilities.text.get_package_version", "_as_gen/utilities.text.print_cli_header", "_as_gen/utilities.text.print_version", "_as_gen/utilities.types", "_as_gen/utilities.types.ColumnMap", "_as_gen/utilities.types.ColumnMap.DEC", "_as_gen/utilities.types.ColumnMap.DEC_ERR", "_as_gen/utilities.types.ColumnMap.GAL_B", "_as_gen/utilities.types.ColumnMap.GAL_B_ERR", "_as_gen/utilities.types.ColumnMap.GAL_L", "_as_gen/utilities.types.ColumnMap.GAL_L_ERR", "_as_gen/utilities.types.ColumnMap.NAME", "_as_gen/utilities.types.ColumnMap.RA", "_as_gen/utilities.types.ColumnMap.RA_ERR", "_as_gen/utilities.types.ColumnMap.SEP", "_as_gen/utilities.types.ColumnMap.TYPE", "_as_gen/utilities.types.ColumnMap.Z", "_as_gen/utilities.types.ColumnMap.__init__", "_as_gen/utilities.types.ColumnMap.construct", "_as_gen/utilities.types.ColumnMap.copy", "_as_gen/utilities.types.ColumnMap.dict", "_as_gen/utilities.types.ColumnMap.from_orm", "_as_gen/utilities.types.ColumnMap.json", "_as_gen/utilities.types.ColumnMap.model_computed_fields", "_as_gen/utilities.types.ColumnMap.model_config", "_as_gen/utilities.types.ColumnMap.model_construct", "_as_gen/utilities.types.ColumnMap.model_copy", "_as_gen/utilities.types.ColumnMap.model_dump", "_as_gen/utilities.types.ColumnMap.model_dump_json", "_as_gen/utilities.types.ColumnMap.model_extra", "_as_gen/utilities.types.ColumnMap.model_fields", "_as_gen/utilities.types.ColumnMap.model_fields_set", "_as_gen/utilities.types.ColumnMap.model_json_schema", "_as_gen/utilities.types.ColumnMap.model_parametrized_name", "_as_gen/utilities.types.ColumnMap.model_post_init", "_as_gen/utilities.types.ColumnMap.model_rebuild", "_as_gen/utilities.types.ColumnMap.model_validate", "_as_gen/utilities.types.ColumnMap.model_validate_json", "_as_gen/utilities.types.ColumnMap.model_validate_strings", "_as_gen/utilities.types.ColumnMap.parse_file", "_as_gen/utilities.types.ColumnMap.parse_obj", "_as_gen/utilities.types.ColumnMap.parse_raw", "_as_gen/utilities.types.ColumnMap.schema", "_as_gen/utilities.types.ColumnMap.schema_json", "_as_gen/utilities.types.ColumnMap.search_inverse", "_as_gen/utilities.types.ColumnMap.update_forward_refs", "_as_gen/utilities.types.ColumnMap.validate", "_as_gen/utilities.types.ColumnMap.validate_table_column_no_unit", "_as_gen/utilities.types.ColumnMap.validate_table_column_unit", "_as_gen/utilities.types.ColumnStdErrorSpecifier", "_as_gen/utilities.types.ColumnStdErrorSpecifier.__init__", "_as_gen/utilities.types.ColumnStdErrorSpecifier.base_column", "_as_gen/utilities.types.ColumnStdErrorSpecifier.construct", "_as_gen/utilities.types.ColumnStdErrorSpecifier.copy", "_as_gen/utilities.types.ColumnStdErrorSpecifier.dict", "_as_gen/utilities.types.ColumnStdErrorSpecifier.error_column", "_as_gen/utilities.types.ColumnStdErrorSpecifier.error_convert_to_std", "_as_gen/utilities.types.ColumnStdErrorSpecifier.error_value", "_as_gen/utilities.types.ColumnStdErrorSpecifier.from_orm", "_as_gen/utilities.types.ColumnStdErrorSpecifier.json", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_computed_fields", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_config", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_construct", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_copy", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_dump", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_dump_json", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_extra", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_fields", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_fields_set", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_json_schema", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_parametrized_name", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_post_init", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_rebuild", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_validate", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_validate_json", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_validate_strings", "_as_gen/utilities.types.ColumnStdErrorSpecifier.parse_file", "_as_gen/utilities.types.ColumnStdErrorSpecifier.parse_obj", "_as_gen/utilities.types.ColumnStdErrorSpecifier.parse_raw", "_as_gen/utilities.types.ColumnStdErrorSpecifier.schema", "_as_gen/utilities.types.ColumnStdErrorSpecifier.schema_json", "_as_gen/utilities.types.ColumnStdErrorSpecifier.update_forward_refs", "_as_gen/utilities.types.ColumnStdErrorSpecifier.validate", "_as_gen/utilities.types.ColumnStdErrorSpecifier.validate_on_table", "_as_gen/utilities.types.ColumnStdErrorSpecifier.validator", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.__init__", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.check_empty", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.construct", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.copy", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.dict", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.from_orm", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.json", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.lat_error", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.lon_error", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.mode", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_computed_fields", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_config", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_construct", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_copy", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_dump", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_dump_json", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_extra", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_fields", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_fields_set", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_json_schema", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_parametrized_name", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_post_init", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_rebuild", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate_json", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate_strings", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.parse_file", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.parse_obj", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.parse_raw", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.position_error", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.schema", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.schema_json", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.update_forward_refs", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.validate", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.validator", "_as_gen/utilities.types.Registry", "_as_gen/utilities.types.Registry.__init__", "_as_gen/utilities.types.Registry.add", "_as_gen/utilities.types.Registry.as_list", "_as_gen/utilities.types.Registry.clear", "_as_gen/utilities.types.Registry.copy", "_as_gen/utilities.types.Registry.fromkeys", "_as_gen/utilities.types.Registry.get", "_as_gen/utilities.types.Registry.items", "_as_gen/utilities.types.Registry.keys", "_as_gen/utilities.types.Registry.pop", "_as_gen/utilities.types.Registry.popitem", "_as_gen/utilities.types.Registry.setdefault", "_as_gen/utilities.types.Registry.update", "_as_gen/utilities.types.Registry.values", "_as_gen/utilities.types.SourceTableSchemaSettings", "_as_gen/utilities.types.SourceTableSchemaSettings.__init__", "_as_gen/utilities.types.SourceTableSchemaSettings.construct", "_as_gen/utilities.types.SourceTableSchemaSettings.copy", "_as_gen/utilities.types.SourceTableSchemaSettings.default_coord_system", "_as_gen/utilities.types.SourceTableSchemaSettings.dict", "_as_gen/utilities.types.SourceTableSchemaSettings.from_orm", "_as_gen/utilities.types.SourceTableSchemaSettings.json", "_as_gen/utilities.types.SourceTableSchemaSettings.model_computed_fields", "_as_gen/utilities.types.SourceTableSchemaSettings.model_config", "_as_gen/utilities.types.SourceTableSchemaSettings.model_construct", "_as_gen/utilities.types.SourceTableSchemaSettings.model_copy", "_as_gen/utilities.types.SourceTableSchemaSettings.model_dump", "_as_gen/utilities.types.SourceTableSchemaSettings.model_dump_json", "_as_gen/utilities.types.SourceTableSchemaSettings.model_extra", "_as_gen/utilities.types.SourceTableSchemaSettings.model_fields", "_as_gen/utilities.types.SourceTableSchemaSettings.model_fields_set", "_as_gen/utilities.types.SourceTableSchemaSettings.model_json_schema", "_as_gen/utilities.types.SourceTableSchemaSettings.model_parametrized_name", "_as_gen/utilities.types.SourceTableSchemaSettings.model_post_init", "_as_gen/utilities.types.SourceTableSchemaSettings.model_rebuild", "_as_gen/utilities.types.SourceTableSchemaSettings.model_validate", "_as_gen/utilities.types.SourceTableSchemaSettings.model_validate_json", "_as_gen/utilities.types.SourceTableSchemaSettings.model_validate_strings", "_as_gen/utilities.types.SourceTableSchemaSettings.object_type_separator", "_as_gen/utilities.types.SourceTableSchemaSettings.parse_file", "_as_gen/utilities.types.SourceTableSchemaSettings.parse_obj", "_as_gen/utilities.types.SourceTableSchemaSettings.parse_raw", "_as_gen/utilities.types.SourceTableSchemaSettings.schema", "_as_gen/utilities.types.SourceTableSchemaSettings.schema_json", "_as_gen/utilities.types.SourceTableSchemaSettings.update_forward_refs", "_as_gen/utilities.types.SourceTableSchemaSettings.validate", "_as_gen/utilities.types.TableColumn", "_as_gen/utilities.types.TableColumn.__init__", "_as_gen/utilities.types.TableColumn.construct", "_as_gen/utilities.types.TableColumn.copy", "_as_gen/utilities.types.TableColumn.dict", "_as_gen/utilities.types.TableColumn.from_orm", "_as_gen/utilities.types.TableColumn.json", "_as_gen/utilities.types.TableColumn.model_computed_fields", "_as_gen/utilities.types.TableColumn.model_config", "_as_gen/utilities.types.TableColumn.model_construct", "_as_gen/utilities.types.TableColumn.model_copy", "_as_gen/utilities.types.TableColumn.model_dump", "_as_gen/utilities.types.TableColumn.model_dump_json", "_as_gen/utilities.types.TableColumn.model_extra", "_as_gen/utilities.types.TableColumn.model_fields", "_as_gen/utilities.types.TableColumn.model_fields_set", "_as_gen/utilities.types.TableColumn.model_json_schema", "_as_gen/utilities.types.TableColumn.model_parametrized_name", "_as_gen/utilities.types.TableColumn.model_post_init", "_as_gen/utilities.types.TableColumn.model_rebuild", "_as_gen/utilities.types.TableColumn.model_validate", "_as_gen/utilities.types.TableColumn.model_validate_json", "_as_gen/utilities.types.TableColumn.model_validate_strings", "_as_gen/utilities.types.TableColumn.name", "_as_gen/utilities.types.TableColumn.parse_file", "_as_gen/utilities.types.TableColumn.parse_obj", "_as_gen/utilities.types.TableColumn.parse_raw", "_as_gen/utilities.types.TableColumn.schema", "_as_gen/utilities.types.TableColumn.schema_json", "_as_gen/utilities.types.TableColumn.unit", "_as_gen/utilities.types.TableColumn.update_forward_refs", "_as_gen/utilities.types.TableColumn.validate", "_as_gen/utilities.types.construct_template", "_as_gen/utilities.types.convert_np_type_to_sql", "api", "data_structures", "examples", "examples/Introduction", "examples/Poisson_Maps", "examples/databases", "getting_started", "index", "quickstart/configuration", "quickstart/install", "quickstart/overview", "user_guide", "user_guides/cross_matching", "user_guides/databases", "user_guides/logging", "user_guides/plots", "user_guides/psf", "user_guides/reduction_processes/astrometric_reduction", "user_guides/reduction_processes/custom_reductions", "user_guides/reduction_processes/object_type_reduction", "user_guides/reduction_processes/overview", "user_guides/reduction_processes/reduction_schema", "user_guides/schema", "user_guides/source_data"], "filenames": ["_as_gen/stats.gaussian_process.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.__init__.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.anisotropic.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.bounds.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.clone_with_theta.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.diag.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.get_params.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.hyperparameter_length_scale.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.hyperparameters.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.is_stationary.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.n_dims.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.requires_vector_input.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.set_params.rst", "_as_gen/stats.gaussian_process.Haversine_RBF.theta.rst", "_as_gen/stats.map_regression.rst", "_as_gen/stats.map_regression.BayesianPoissonMapRegressor.rst", "_as_gen/stats.map_regression.BayesianPoissonMapRegressor.__init__.rst", "_as_gen/stats.map_regression.BayesianPoissonMapRegressor.build_map_MAP.rst", "_as_gen/stats.map_regression.KNNeighborMapRegressor.rst", "_as_gen/stats.map_regression.KNNeighborMapRegressor.__init__.rst", "_as_gen/stats.map_regression.KNNeighborMapRegressor.cross_validate.rst", "_as_gen/stats.map_regression.KNNeighborMapRegressor.default_training_fraction.rst", "_as_gen/stats.map_regression.KNNeighborMapRegressor.hyperparameters.rst", "_as_gen/stats.map_regression.KNNeighborMapRegressor.regressor_parameters.rst", "_as_gen/stats.map_regression.KNNeighborMapRegressor.train_model.rst", "_as_gen/stats.map_regression.PoissonMapRegressor.rst", "_as_gen/stats.map_regression.PoissonMapRegressor.__init__.rst", "_as_gen/stats.map_regression.PoissonMapRegressor.cross_validate.rst", "_as_gen/stats.map_regression.PoissonMapRegressor.default_training_fraction.rst", "_as_gen/stats.map_regression.PoissonMapRegressor.hyperparameters.rst", "_as_gen/stats.map_regression.PoissonMapRegressor.regressor_parameters.rst", "_as_gen/stats.map_regression.PoissonMapRegressor.train_model.rst", "_as_gen/stats.map_regression.RNNeighborMapRegressor.rst", "_as_gen/stats.map_regression.RNNeighborMapRegressor.__init__.rst", "_as_gen/stats.map_regression.RNNeighborMapRegressor.cross_validate.rst", "_as_gen/stats.map_regression.RNNeighborMapRegressor.default_training_fraction.rst", "_as_gen/stats.map_regression.RNNeighborMapRegressor.hyperparameters.rst", "_as_gen/stats.map_regression.RNNeighborMapRegressor.regressor_parameters.rst", "_as_gen/stats.map_regression.RNNeighborMapRegressor.train_model.rst", "_as_gen/stats.map_regression.train_map_regressor.rst", "_as_gen/stats.utilities.rst", "_as_gen/stats.utilities.uniform_sample_spherical.rst", "_as_gen/structures.map.rst", "_as_gen/structures.map.Map.rst", "_as_gen/structures.map.Map.__init__.rst", "_as_gen/structures.map.Map.coordinate_frame.rst", "_as_gen/structures.map.Map.data.rst", "_as_gen/structures.map.Map.get_healpix_id.rst", "_as_gen/structures.map.Map.pixel_positions.rst", "_as_gen/structures.map.Map.plot.rst", "_as_gen/structures.map.Map.transform_map_coordinates.rst", "_as_gen/structures.map.MapAtlas.rst", "_as_gen/structures.map.MapAtlas.__init__.rst", "_as_gen/structures.map.MapAtlas.coordinate_frame.rst", "_as_gen/structures.map.MapAtlas.generate.rst", "_as_gen/structures.map.MapAtlas.get_map.rst", "_as_gen/structures.map.MapAtlas.has_maps.rst", "_as_gen/structures.map.MapAtlas.hdus.rst", "_as_gen/structures.map.MapAtlas.map_names.rst", "_as_gen/structures.map.MapAtlas.pixel_positions.rst", "_as_gen/structures.map.MapAtlas.remove.rst", "_as_gen/structures.map.MapAtlas.reshape_healpix.rst", "_as_gen/structures.map.PoissonAtlas.rst", "_as_gen/structures.map.PoissonAtlas.COUNTS.rst", "_as_gen/structures.map.PoissonAtlas.__init__.rst", "_as_gen/structures.map.PoissonAtlas.append_to_fits.rst", "_as_gen/structures.map.PoissonAtlas.build_poisson_map.rst", "_as_gen/structures.map.PoissonAtlas.build_poisson_map_KNN.rst", "_as_gen/structures.map.PoissonAtlas.build_poisson_map_MAP.rst", "_as_gen/structures.map.PoissonAtlas.build_poisson_map_RNN.rst", "_as_gen/structures.map.PoissonAtlas.build_poisson_map_regressor.rst", "_as_gen/structures.map.PoissonAtlas.build_poisson_maps.rst", "_as_gen/structures.map.PoissonAtlas.coordinate_frame.rst", "_as_gen/structures.map.PoissonAtlas.generate.rst", "_as_gen/structures.map.PoissonAtlas.get_map.rst", "_as_gen/structures.map.PoissonAtlas.get_points.rst", "_as_gen/structures.map.PoissonAtlas.has_maps.rst", "_as_gen/structures.map.PoissonAtlas.hdus.rst", "_as_gen/structures.map.PoissonAtlas.map_names.rst", "_as_gen/structures.map.PoissonAtlas.pixel_positions.rst", "_as_gen/structures.map.PoissonAtlas.remove.rst", "_as_gen/structures.map.PoissonAtlas.reset.rst", "_as_gen/structures.map.PoissonAtlas.reshape_healpix.rst", "_as_gen/structures.map.PoissonAtlas.sample_from_database.rst", "_as_gen/structures.map.StatAtlas.rst", "_as_gen/structures.map.StatAtlas.COUNTS.rst", "_as_gen/structures.map.StatAtlas.__init__.rst", "_as_gen/structures.map.StatAtlas.append_to_fits.rst", "_as_gen/structures.map.StatAtlas.coordinate_frame.rst", "_as_gen/structures.map.StatAtlas.generate.rst", "_as_gen/structures.map.StatAtlas.get_map.rst", "_as_gen/structures.map.StatAtlas.get_points.rst", "_as_gen/structures.map.StatAtlas.has_maps.rst", "_as_gen/structures.map.StatAtlas.hdus.rst", "_as_gen/structures.map.StatAtlas.map_names.rst", "_as_gen/structures.map.StatAtlas.pixel_positions.rst", "_as_gen/structures.map.StatAtlas.remove.rst", "_as_gen/structures.map.StatAtlas.reset.rst", "_as_gen/structures.map.StatAtlas.reshape_healpix.rst", "_as_gen/structures.map.StatAtlas.sample_from_database.rst", "_as_gen/utilities.core.rst", "_as_gen/utilities.core.AttrDict.rst", "_as_gen/utilities.core.AttrDict.__init__.rst", "_as_gen/utilities.core.AttrDict.clean.rst", "_as_gen/utilities.core.AttrDict.clean_types.rst", "_as_gen/utilities.core.AttrDict.clear.rst", "_as_gen/utilities.core.AttrDict.copy.rst", "_as_gen/utilities.core.AttrDict.from_nested_dict.rst", "_as_gen/utilities.core.AttrDict.fromkeys.rst", "_as_gen/utilities.core.AttrDict.get.rst", "_as_gen/utilities.core.AttrDict.items.rst", "_as_gen/utilities.core.AttrDict.keys.rst", "_as_gen/utilities.core.AttrDict.pop.rst", "_as_gen/utilities.core.AttrDict.popitem.rst", "_as_gen/utilities.core.AttrDict.setdefault.rst", "_as_gen/utilities.core.AttrDict.update.rst", "_as_gen/utilities.core.AttrDict.values.rst", "_as_gen/utilities.core.YAMLConfiguration.rst", "_as_gen/utilities.core.YAMLConfiguration.__init__.rst", "_as_gen/utilities.core.YAMLConfiguration.config.rst", "_as_gen/utilities.core.YAMLConfiguration.load.rst", "_as_gen/utilities.core.YAMLConfiguration.load_from_path.rst", "_as_gen/utilities.core.YAMLConfiguration.reload.rst", "_as_gen/utilities.core.YAMLConfiguration.set_on_disk.rst", "_as_gen/utilities.core.YAMLConfiguration.set_param.rst", "_as_gen/utilities.core.enforce_units.rst", "_as_gen/utilities.core.find_descriptors.rst", "_as_gen/utilities.core.getFromDict.rst", "_as_gen/utilities.core.merge_dicts.rst", "_as_gen/utilities.core.produce_dict_heading.rst", "_as_gen/utilities.core.rgetattr.rst", "_as_gen/utilities.core.rsetattr.rst", "_as_gen/utilities.core.setInDict.rst", "_as_gen/utilities.logging.rst", "_as_gen/utilities.plot.rst", "_as_gen/utilities.plot.get_hips_image.rst", "_as_gen/utilities.plot.plot_healpix.rst", "_as_gen/utilities.plot.plot_hips.rst", "_as_gen/utilities.plot.set_style.rst", "_as_gen/utilities.sql.rst", "_as_gen/utilities.sql.chunk_sql_query_operation.rst", "_as_gen/utilities.sql.chunk_sql_table_operation.rst", "_as_gen/utilities.text.rst", "_as_gen/utilities.text.get_package_version.rst", "_as_gen/utilities.text.print_cli_header.rst", "_as_gen/utilities.text.print_version.rst", "_as_gen/utilities.types.rst", "_as_gen/utilities.types.ColumnMap.rst", "_as_gen/utilities.types.ColumnMap.DEC.rst", "_as_gen/utilities.types.ColumnMap.DEC_ERR.rst", "_as_gen/utilities.types.ColumnMap.GAL_B.rst", "_as_gen/utilities.types.ColumnMap.GAL_B_ERR.rst", "_as_gen/utilities.types.ColumnMap.GAL_L.rst", "_as_gen/utilities.types.ColumnMap.GAL_L_ERR.rst", "_as_gen/utilities.types.ColumnMap.NAME.rst", "_as_gen/utilities.types.ColumnMap.RA.rst", "_as_gen/utilities.types.ColumnMap.RA_ERR.rst", "_as_gen/utilities.types.ColumnMap.SEP.rst", "_as_gen/utilities.types.ColumnMap.TYPE.rst", "_as_gen/utilities.types.ColumnMap.Z.rst", "_as_gen/utilities.types.ColumnMap.__init__.rst", "_as_gen/utilities.types.ColumnMap.construct.rst", "_as_gen/utilities.types.ColumnMap.copy.rst", "_as_gen/utilities.types.ColumnMap.dict.rst", "_as_gen/utilities.types.ColumnMap.from_orm.rst", "_as_gen/utilities.types.ColumnMap.json.rst", "_as_gen/utilities.types.ColumnMap.model_computed_fields.rst", "_as_gen/utilities.types.ColumnMap.model_config.rst", "_as_gen/utilities.types.ColumnMap.model_construct.rst", "_as_gen/utilities.types.ColumnMap.model_copy.rst", "_as_gen/utilities.types.ColumnMap.model_dump.rst", "_as_gen/utilities.types.ColumnMap.model_dump_json.rst", "_as_gen/utilities.types.ColumnMap.model_extra.rst", "_as_gen/utilities.types.ColumnMap.model_fields.rst", "_as_gen/utilities.types.ColumnMap.model_fields_set.rst", "_as_gen/utilities.types.ColumnMap.model_json_schema.rst", "_as_gen/utilities.types.ColumnMap.model_parametrized_name.rst", "_as_gen/utilities.types.ColumnMap.model_post_init.rst", "_as_gen/utilities.types.ColumnMap.model_rebuild.rst", "_as_gen/utilities.types.ColumnMap.model_validate.rst", "_as_gen/utilities.types.ColumnMap.model_validate_json.rst", "_as_gen/utilities.types.ColumnMap.model_validate_strings.rst", "_as_gen/utilities.types.ColumnMap.parse_file.rst", "_as_gen/utilities.types.ColumnMap.parse_obj.rst", "_as_gen/utilities.types.ColumnMap.parse_raw.rst", "_as_gen/utilities.types.ColumnMap.schema.rst", "_as_gen/utilities.types.ColumnMap.schema_json.rst", "_as_gen/utilities.types.ColumnMap.search_inverse.rst", "_as_gen/utilities.types.ColumnMap.update_forward_refs.rst", "_as_gen/utilities.types.ColumnMap.validate.rst", "_as_gen/utilities.types.ColumnMap.validate_table_column_no_unit.rst", "_as_gen/utilities.types.ColumnMap.validate_table_column_unit.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.__init__.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.base_column.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.construct.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.copy.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.dict.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.error_column.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.error_convert_to_std.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.error_value.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.from_orm.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.json.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_computed_fields.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_config.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_construct.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_copy.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_dump.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_dump_json.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_extra.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_fields.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_fields_set.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_json_schema.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_parametrized_name.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_post_init.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_rebuild.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_validate.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_validate_json.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.model_validate_strings.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.parse_file.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.parse_obj.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.parse_raw.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.schema.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.schema_json.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.update_forward_refs.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.validate.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.validate_on_table.rst", "_as_gen/utilities.types.ColumnStdErrorSpecifier.validator.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.__init__.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.check_empty.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.construct.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.copy.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.dict.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.from_orm.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.json.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.lat_error.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.lon_error.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.mode.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_computed_fields.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_config.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_construct.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_copy.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_dump.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_dump_json.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_extra.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_fields.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_fields_set.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_json_schema.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_parametrized_name.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_post_init.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_rebuild.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate_json.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate_strings.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.parse_file.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.parse_obj.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.parse_raw.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.position_error.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.schema.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.schema_json.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.update_forward_refs.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.validate.rst", "_as_gen/utilities.types.ICRSCoordinateStdErrorSpecifier.validator.rst", "_as_gen/utilities.types.Registry.rst", "_as_gen/utilities.types.Registry.__init__.rst", "_as_gen/utilities.types.Registry.add.rst", "_as_gen/utilities.types.Registry.as_list.rst", "_as_gen/utilities.types.Registry.clear.rst", "_as_gen/utilities.types.Registry.copy.rst", "_as_gen/utilities.types.Registry.fromkeys.rst", "_as_gen/utilities.types.Registry.get.rst", "_as_gen/utilities.types.Registry.items.rst", "_as_gen/utilities.types.Registry.keys.rst", "_as_gen/utilities.types.Registry.pop.rst", "_as_gen/utilities.types.Registry.popitem.rst", "_as_gen/utilities.types.Registry.setdefault.rst", "_as_gen/utilities.types.Registry.update.rst", "_as_gen/utilities.types.Registry.values.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.__init__.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.construct.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.copy.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.default_coord_system.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.dict.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.from_orm.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.json.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_computed_fields.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_config.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_construct.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_copy.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_dump.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_dump_json.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_extra.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_fields.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_fields_set.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_json_schema.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_parametrized_name.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_post_init.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_rebuild.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_validate.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_validate_json.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.model_validate_strings.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.object_type_separator.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.parse_file.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.parse_obj.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.parse_raw.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.schema.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.schema_json.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.update_forward_refs.rst", "_as_gen/utilities.types.SourceTableSchemaSettings.validate.rst", "_as_gen/utilities.types.TableColumn.rst", "_as_gen/utilities.types.TableColumn.__init__.rst", "_as_gen/utilities.types.TableColumn.construct.rst", "_as_gen/utilities.types.TableColumn.copy.rst", "_as_gen/utilities.types.TableColumn.dict.rst", "_as_gen/utilities.types.TableColumn.from_orm.rst", "_as_gen/utilities.types.TableColumn.json.rst", "_as_gen/utilities.types.TableColumn.model_computed_fields.rst", "_as_gen/utilities.types.TableColumn.model_config.rst", "_as_gen/utilities.types.TableColumn.model_construct.rst", "_as_gen/utilities.types.TableColumn.model_copy.rst", "_as_gen/utilities.types.TableColumn.model_dump.rst", "_as_gen/utilities.types.TableColumn.model_dump_json.rst", "_as_gen/utilities.types.TableColumn.model_extra.rst", "_as_gen/utilities.types.TableColumn.model_fields.rst", "_as_gen/utilities.types.TableColumn.model_fields_set.rst", "_as_gen/utilities.types.TableColumn.model_json_schema.rst", "_as_gen/utilities.types.TableColumn.model_parametrized_name.rst", "_as_gen/utilities.types.TableColumn.model_post_init.rst", "_as_gen/utilities.types.TableColumn.model_rebuild.rst", "_as_gen/utilities.types.TableColumn.model_validate.rst", "_as_gen/utilities.types.TableColumn.model_validate_json.rst", "_as_gen/utilities.types.TableColumn.model_validate_strings.rst", "_as_gen/utilities.types.TableColumn.name.rst", "_as_gen/utilities.types.TableColumn.parse_file.rst", "_as_gen/utilities.types.TableColumn.parse_obj.rst", "_as_gen/utilities.types.TableColumn.parse_raw.rst", "_as_gen/utilities.types.TableColumn.schema.rst", "_as_gen/utilities.types.TableColumn.schema_json.rst", "_as_gen/utilities.types.TableColumn.unit.rst", "_as_gen/utilities.types.TableColumn.update_forward_refs.rst", "_as_gen/utilities.types.TableColumn.validate.rst", "_as_gen/utilities.types.construct_template.rst", "_as_gen/utilities.types.convert_np_type_to_sql.rst", "api.rst", "data_structures.rst", "examples.rst", "examples/Introduction.ipynb", "examples/Poisson_Maps.ipynb", "examples/databases.ipynb", "getting_started.rst", "index.rst", "quickstart/configuration.rst", "quickstart/install.rst", "quickstart/overview.rst", "user_guide.rst", "user_guides/cross_matching.rst", "user_guides/databases.rst", "user_guides/logging.rst", "user_guides/plots.rst", "user_guides/psf.rst", "user_guides/reduction_processes/astrometric_reduction.rst", "user_guides/reduction_processes/custom_reductions.rst", "user_guides/reduction_processes/object_type_reduction.rst", "user_guides/reduction_processes/overview.rst", "user_guides/reduction_processes/reduction_schema.rst", "user_guides/schema.rst", "user_guides/source_data.rst"], "titles": ["stats.gaussian_process", "stats.gaussian_process.Haversine_RBF", "stats.gaussian_process.Haversine_RBF.__init__", "stats.gaussian_process.Haversine_RBF.anisotropic", "stats.gaussian_process.Haversine_RBF.bounds", "stats.gaussian_process.Haversine_RBF.clone_with_theta", "stats.gaussian_process.Haversine_RBF.diag", "stats.gaussian_process.Haversine_RBF.get_params", "stats.gaussian_process.Haversine_RBF.hyperparameter_length_scale", "stats.gaussian_process.Haversine_RBF.hyperparameters", "stats.gaussian_process.Haversine_RBF.is_stationary", "stats.gaussian_process.Haversine_RBF.n_dims", "stats.gaussian_process.Haversine_RBF.requires_vector_input", "stats.gaussian_process.Haversine_RBF.set_params", "stats.gaussian_process.Haversine_RBF.theta", "stats.map_regression", "stats.map_regression.BayesianPoissonMapRegressor", "stats.map_regression.BayesianPoissonMapRegressor.__init__", "stats.map_regression.BayesianPoissonMapRegressor.build_map_MAP", "stats.map_regression.KNNeighborMapRegressor", "stats.map_regression.KNNeighborMapRegressor.__init__", "stats.map_regression.KNNeighborMapRegressor.cross_validate", "stats.map_regression.KNNeighborMapRegressor.default_training_fraction", "stats.map_regression.KNNeighborMapRegressor.hyperparameters", "stats.map_regression.KNNeighborMapRegressor.regressor_parameters", "stats.map_regression.KNNeighborMapRegressor.train_model", "stats.map_regression.PoissonMapRegressor", "stats.map_regression.PoissonMapRegressor.__init__", "stats.map_regression.PoissonMapRegressor.cross_validate", "stats.map_regression.PoissonMapRegressor.default_training_fraction", "stats.map_regression.PoissonMapRegressor.hyperparameters", "stats.map_regression.PoissonMapRegressor.regressor_parameters", "stats.map_regression.PoissonMapRegressor.train_model", "stats.map_regression.RNNeighborMapRegressor", "stats.map_regression.RNNeighborMapRegressor.__init__", "stats.map_regression.RNNeighborMapRegressor.cross_validate", "stats.map_regression.RNNeighborMapRegressor.default_training_fraction", "stats.map_regression.RNNeighborMapRegressor.hyperparameters", "stats.map_regression.RNNeighborMapRegressor.regressor_parameters", "stats.map_regression.RNNeighborMapRegressor.train_model", "stats.map_regression.train_map_regressor", "stats.utilities", "stats.utilities.uniform_sample_spherical", "structures.map", "structures.map.Map", "structures.map.Map.__init__", "structures.map.Map.coordinate_frame", "structures.map.Map.data", "structures.map.Map.get_healpix_id", "structures.map.Map.pixel_positions", "structures.map.Map.plot", "structures.map.Map.transform_map_coordinates", "structures.map.MapAtlas", "structures.map.MapAtlas.__init__", "structures.map.MapAtlas.coordinate_frame", "structures.map.MapAtlas.generate", "structures.map.MapAtlas.get_map", "structures.map.MapAtlas.has_maps", "structures.map.MapAtlas.hdus", "structures.map.MapAtlas.map_names", "structures.map.MapAtlas.pixel_positions", "structures.map.MapAtlas.remove", "structures.map.MapAtlas.reshape_healpix", "structures.map.PoissonAtlas", "structures.map.PoissonAtlas.COUNTS", "structures.map.PoissonAtlas.__init__", "structures.map.PoissonAtlas.append_to_fits", "structures.map.PoissonAtlas.build_poisson_map", "structures.map.PoissonAtlas.build_poisson_map_KNN", "structures.map.PoissonAtlas.build_poisson_map_MAP", "structures.map.PoissonAtlas.build_poisson_map_RNN", "structures.map.PoissonAtlas.build_poisson_map_regressor", "structures.map.PoissonAtlas.build_poisson_maps", "structures.map.PoissonAtlas.coordinate_frame", "structures.map.PoissonAtlas.generate", "structures.map.PoissonAtlas.get_map", "structures.map.PoissonAtlas.get_points", "structures.map.PoissonAtlas.has_maps", "structures.map.PoissonAtlas.hdus", "structures.map.PoissonAtlas.map_names", "structures.map.PoissonAtlas.pixel_positions", "structures.map.PoissonAtlas.remove", "structures.map.PoissonAtlas.reset", "structures.map.PoissonAtlas.reshape_healpix", "structures.map.PoissonAtlas.sample_from_database", "structures.map.StatAtlas", "structures.map.StatAtlas.COUNTS", "structures.map.StatAtlas.__init__", "structures.map.StatAtlas.append_to_fits", "structures.map.StatAtlas.coordinate_frame", "structures.map.StatAtlas.generate", "structures.map.StatAtlas.get_map", "structures.map.StatAtlas.get_points", "structures.map.StatAtlas.has_maps", "structures.map.StatAtlas.hdus", "structures.map.StatAtlas.map_names", "structures.map.StatAtlas.pixel_positions", "structures.map.StatAtlas.remove", "structures.map.StatAtlas.reset", "structures.map.StatAtlas.reshape_healpix", "structures.map.StatAtlas.sample_from_database", "utilities.core", "utilities.core.AttrDict", "utilities.core.AttrDict.__init__", "utilities.core.AttrDict.clean", "utilities.core.AttrDict.clean_types", "utilities.core.AttrDict.clear", "utilities.core.AttrDict.copy", "utilities.core.AttrDict.from_nested_dict", "utilities.core.AttrDict.fromkeys", "utilities.core.AttrDict.get", "utilities.core.AttrDict.items", "utilities.core.AttrDict.keys", "utilities.core.AttrDict.pop", "utilities.core.AttrDict.popitem", "utilities.core.AttrDict.setdefault", "utilities.core.AttrDict.update", "utilities.core.AttrDict.values", "utilities.core.YAMLConfiguration", "utilities.core.YAMLConfiguration.__init__", "utilities.core.YAMLConfiguration.config", "utilities.core.YAMLConfiguration.load", "utilities.core.YAMLConfiguration.load_from_path", "utilities.core.YAMLConfiguration.reload", "utilities.core.YAMLConfiguration.set_on_disk", "utilities.core.YAMLConfiguration.set_param", "utilities.core.enforce_units", "utilities.core.find_descriptors", "utilities.core.getFromDict", "utilities.core.merge_dicts", "utilities.core.produce_dict_heading", "utilities.core.rgetattr", "utilities.core.rsetattr", "utilities.core.setInDict", "utilities.logging", "utilities.plot", "utilities.plot.get_hips_image", "utilities.plot.plot_healpix", "utilities.plot.plot_hips", "utilities.plot.set_style", "utilities.sql", "utilities.sql.chunk_sql_query_operation", "utilities.sql.chunk_sql_table_operation", "utilities.text", "utilities.text.get_package_version", "utilities.text.print_cli_header", "utilities.text.print_version", "utilities.types", "utilities.types.ColumnMap", "utilities.types.ColumnMap.DEC", "utilities.types.ColumnMap.DEC_ERR", "utilities.types.ColumnMap.GAL_B", "utilities.types.ColumnMap.GAL_B_ERR", "utilities.types.ColumnMap.GAL_L", "utilities.types.ColumnMap.GAL_L_ERR", "utilities.types.ColumnMap.NAME", "utilities.types.ColumnMap.RA", "utilities.types.ColumnMap.RA_ERR", "utilities.types.ColumnMap.SEP", "utilities.types.ColumnMap.TYPE", "utilities.types.ColumnMap.Z", "utilities.types.ColumnMap.__init__", "utilities.types.ColumnMap.construct", "utilities.types.ColumnMap.copy", "utilities.types.ColumnMap.dict", "utilities.types.ColumnMap.from_orm", "utilities.types.ColumnMap.json", "utilities.types.ColumnMap.model_computed_fields", "utilities.types.ColumnMap.model_config", "utilities.types.ColumnMap.model_construct", "utilities.types.ColumnMap.model_copy", "utilities.types.ColumnMap.model_dump", "utilities.types.ColumnMap.model_dump_json", "utilities.types.ColumnMap.model_extra", "utilities.types.ColumnMap.model_fields", "utilities.types.ColumnMap.model_fields_set", "utilities.types.ColumnMap.model_json_schema", "utilities.types.ColumnMap.model_parametrized_name", "utilities.types.ColumnMap.model_post_init", "utilities.types.ColumnMap.model_rebuild", "utilities.types.ColumnMap.model_validate", "utilities.types.ColumnMap.model_validate_json", "utilities.types.ColumnMap.model_validate_strings", "utilities.types.ColumnMap.parse_file", "utilities.types.ColumnMap.parse_obj", "utilities.types.ColumnMap.parse_raw", "utilities.types.ColumnMap.schema", "utilities.types.ColumnMap.schema_json", "utilities.types.ColumnMap.search_inverse", "utilities.types.ColumnMap.update_forward_refs", "utilities.types.ColumnMap.validate", "utilities.types.ColumnMap.validate_table_column_no_unit", "utilities.types.ColumnMap.validate_table_column_unit", "utilities.types.ColumnStdErrorSpecifier", "utilities.types.ColumnStdErrorSpecifier.__init__", "utilities.types.ColumnStdErrorSpecifier.base_column", "utilities.types.ColumnStdErrorSpecifier.construct", "utilities.types.ColumnStdErrorSpecifier.copy", "utilities.types.ColumnStdErrorSpecifier.dict", "utilities.types.ColumnStdErrorSpecifier.error_column", "utilities.types.ColumnStdErrorSpecifier.error_convert_to_std", "utilities.types.ColumnStdErrorSpecifier.error_value", "utilities.types.ColumnStdErrorSpecifier.from_orm", "utilities.types.ColumnStdErrorSpecifier.json", "utilities.types.ColumnStdErrorSpecifier.model_computed_fields", "utilities.types.ColumnStdErrorSpecifier.model_config", "utilities.types.ColumnStdErrorSpecifier.model_construct", "utilities.types.ColumnStdErrorSpecifier.model_copy", "utilities.types.ColumnStdErrorSpecifier.model_dump", "utilities.types.ColumnStdErrorSpecifier.model_dump_json", "utilities.types.ColumnStdErrorSpecifier.model_extra", "utilities.types.ColumnStdErrorSpecifier.model_fields", "utilities.types.ColumnStdErrorSpecifier.model_fields_set", "utilities.types.ColumnStdErrorSpecifier.model_json_schema", "utilities.types.ColumnStdErrorSpecifier.model_parametrized_name", "utilities.types.ColumnStdErrorSpecifier.model_post_init", "utilities.types.ColumnStdErrorSpecifier.model_rebuild", "utilities.types.ColumnStdErrorSpecifier.model_validate", "utilities.types.ColumnStdErrorSpecifier.model_validate_json", "utilities.types.ColumnStdErrorSpecifier.model_validate_strings", "utilities.types.ColumnStdErrorSpecifier.parse_file", "utilities.types.ColumnStdErrorSpecifier.parse_obj", "utilities.types.ColumnStdErrorSpecifier.parse_raw", "utilities.types.ColumnStdErrorSpecifier.schema", "utilities.types.ColumnStdErrorSpecifier.schema_json", "utilities.types.ColumnStdErrorSpecifier.update_forward_refs", "utilities.types.ColumnStdErrorSpecifier.validate", "utilities.types.ColumnStdErrorSpecifier.validate_on_table", "utilities.types.ColumnStdErrorSpecifier.validator", "utilities.types.ICRSCoordinateStdErrorSpecifier", "utilities.types.ICRSCoordinateStdErrorSpecifier.__init__", "utilities.types.ICRSCoordinateStdErrorSpecifier.check_empty", "utilities.types.ICRSCoordinateStdErrorSpecifier.construct", "utilities.types.ICRSCoordinateStdErrorSpecifier.copy", "utilities.types.ICRSCoordinateStdErrorSpecifier.dict", "utilities.types.ICRSCoordinateStdErrorSpecifier.from_orm", "utilities.types.ICRSCoordinateStdErrorSpecifier.json", "utilities.types.ICRSCoordinateStdErrorSpecifier.lat_error", "utilities.types.ICRSCoordinateStdErrorSpecifier.lon_error", "utilities.types.ICRSCoordinateStdErrorSpecifier.mode", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_computed_fields", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_config", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_construct", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_copy", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_dump", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_dump_json", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_extra", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_fields", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_fields_set", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_json_schema", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_parametrized_name", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_post_init", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_rebuild", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate_json", "utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate_strings", "utilities.types.ICRSCoordinateStdErrorSpecifier.parse_file", "utilities.types.ICRSCoordinateStdErrorSpecifier.parse_obj", "utilities.types.ICRSCoordinateStdErrorSpecifier.parse_raw", "utilities.types.ICRSCoordinateStdErrorSpecifier.position_error", "utilities.types.ICRSCoordinateStdErrorSpecifier.schema", "utilities.types.ICRSCoordinateStdErrorSpecifier.schema_json", "utilities.types.ICRSCoordinateStdErrorSpecifier.update_forward_refs", "utilities.types.ICRSCoordinateStdErrorSpecifier.validate", "utilities.types.ICRSCoordinateStdErrorSpecifier.validator", "utilities.types.Registry", "utilities.types.Registry.__init__", "utilities.types.Registry.add", "utilities.types.Registry.as_list", "utilities.types.Registry.clear", "utilities.types.Registry.copy", "utilities.types.Registry.fromkeys", "utilities.types.Registry.get", "utilities.types.Registry.items", "utilities.types.Registry.keys", "utilities.types.Registry.pop", "utilities.types.Registry.popitem", "utilities.types.Registry.setdefault", "utilities.types.Registry.update", "utilities.types.Registry.values", "utilities.types.SourceTableSchemaSettings", "utilities.types.SourceTableSchemaSettings.__init__", "utilities.types.SourceTableSchemaSettings.construct", "utilities.types.SourceTableSchemaSettings.copy", "utilities.types.SourceTableSchemaSettings.default_coord_system", "utilities.types.SourceTableSchemaSettings.dict", "utilities.types.SourceTableSchemaSettings.from_orm", "utilities.types.SourceTableSchemaSettings.json", "utilities.types.SourceTableSchemaSettings.model_computed_fields", "utilities.types.SourceTableSchemaSettings.model_config", "utilities.types.SourceTableSchemaSettings.model_construct", "utilities.types.SourceTableSchemaSettings.model_copy", "utilities.types.SourceTableSchemaSettings.model_dump", "utilities.types.SourceTableSchemaSettings.model_dump_json", "utilities.types.SourceTableSchemaSettings.model_extra", "utilities.types.SourceTableSchemaSettings.model_fields", "utilities.types.SourceTableSchemaSettings.model_fields_set", "utilities.types.SourceTableSchemaSettings.model_json_schema", "utilities.types.SourceTableSchemaSettings.model_parametrized_name", "utilities.types.SourceTableSchemaSettings.model_post_init", "utilities.types.SourceTableSchemaSettings.model_rebuild", "utilities.types.SourceTableSchemaSettings.model_validate", "utilities.types.SourceTableSchemaSettings.model_validate_json", "utilities.types.SourceTableSchemaSettings.model_validate_strings", "utilities.types.SourceTableSchemaSettings.object_type_separator", "utilities.types.SourceTableSchemaSettings.parse_file", "utilities.types.SourceTableSchemaSettings.parse_obj", "utilities.types.SourceTableSchemaSettings.parse_raw", "utilities.types.SourceTableSchemaSettings.schema", "utilities.types.SourceTableSchemaSettings.schema_json", "utilities.types.SourceTableSchemaSettings.update_forward_refs", "utilities.types.SourceTableSchemaSettings.validate", "utilities.types.TableColumn", "utilities.types.TableColumn.__init__", "utilities.types.TableColumn.construct", "utilities.types.TableColumn.copy", "utilities.types.TableColumn.dict", "utilities.types.TableColumn.from_orm", "utilities.types.TableColumn.json", "utilities.types.TableColumn.model_computed_fields", "utilities.types.TableColumn.model_config", "utilities.types.TableColumn.model_construct", "utilities.types.TableColumn.model_copy", "utilities.types.TableColumn.model_dump", "utilities.types.TableColumn.model_dump_json", "utilities.types.TableColumn.model_extra", "utilities.types.TableColumn.model_fields", "utilities.types.TableColumn.model_fields_set", "utilities.types.TableColumn.model_json_schema", "utilities.types.TableColumn.model_parametrized_name", "utilities.types.TableColumn.model_post_init", "utilities.types.TableColumn.model_rebuild", "utilities.types.TableColumn.model_validate", "utilities.types.TableColumn.model_validate_json", "utilities.types.TableColumn.model_validate_strings", "utilities.types.TableColumn.name", "utilities.types.TableColumn.parse_file", "utilities.types.TableColumn.parse_obj", "utilities.types.TableColumn.parse_raw", "utilities.types.TableColumn.schema", "utilities.types.TableColumn.schema_json", "utilities.types.TableColumn.unit", "utilities.types.TableColumn.update_forward_refs", "utilities.types.TableColumn.validate", "utilities.types.construct_template", "utilities.types.convert_np_type_to_sql", "API", "Data Structures", "Examples", "Cross Referencing Overview", "Poisson Mapping", "Using Databases in PyXMIP", "pyXMIP Quickstart Guide", "Features", "Configuring <code class=\"docutils literal notranslate\"><span class=\"pre\">pyXMIP</span></code>", "Installing <code class=\"docutils literal notranslate\"><span class=\"pre\">pyXMIP</span></code>", "Overview", "Reference", "Cross Referencing", "Databases", "Logging", "Creating Plots", "PSF Modeling", "Astrometric Reduction Process", "Writing New Reduction Processes", "Object Type Reduction", "&lt;no title&gt;", "Reduction Schema Writing", "pyXMIP Schema Classes", "Loading Source Data"], "terms": {"gaussian": [0, 1, 363], "process": [0, 1, 72, 134, 193, 349, 350, 356, 359, 365, 368], "regress": [0, 15, 20, 25, 26, 27, 32, 34, 39], "tool": [0, 15, 349, 353, 356, 359], "class": [0, 1, 15, 16, 19, 20, 26, 27, 33, 34, 43, 44, 52, 63, 85, 101, 102, 118, 127, 147, 148, 169, 176, 177, 193, 200, 206, 213, 214, 229, 242, 249, 250, 265, 266, 280, 290, 297, 298, 312, 321, 328, 329, 345, 347, 349, 350, 351, 357, 358, 359, 363, 364, 365, 369], "length_scal": [1, 2], "1": [1, 2, 16, 37, 42, 228, 295, 347, 349, 350, 351, 358, 359, 363, 368, 369], "0": [1, 2, 22, 29, 36, 37, 38, 40, 52, 349, 350, 351, 358, 359, 363, 369], "length_scale_bound": [1, 2], "1e": [1, 2, 349, 358], "05": [1, 2, 37, 358, 359], "100000": [1, 2], "sourc": [1, 2, 16, 17, 18, 19, 20, 26, 27, 28, 32, 33, 34, 40, 42, 44, 45, 48, 50, 51, 52, 53, 55, 56, 61, 62, 63, 67, 68, 69, 70, 71, 72, 85, 87, 88, 90, 92, 98, 100, 102, 103, 104, 105, 108, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 141, 142, 144, 145, 146, 148, 188, 191, 192, 193, 227, 228, 229, 231, 264, 265, 266, 267, 268, 280, 312, 344, 345, 349, 350, 351, 353, 356, 357, 358, 359, 363, 365, 368], "radial": 1, "basi": 1, "function": [1, 15, 41, 42, 43, 52, 101, 135, 140, 141, 142, 143, 147, 174, 193, 200, 211, 346, 349, 350, 351, 356, 358, 359, 363, 365, 368], "kernel": [1, 4, 6, 7, 10, 11, 12, 13, 14], "aka": 1, "squar": 1, "exponenti": 1, "haversin": [1, 24, 38], "distanc": [1, 24, 38, 350, 358, 359], "metric": [1, 24, 38, 349], "allow": [1, 55, 67, 72, 74, 90, 130, 161, 169, 173, 192, 194, 206, 210, 230, 242, 246, 281, 290, 294, 313, 321, 325, 349, 350, 351, 358, 359, 363, 368, 369], "us": [1, 25, 32, 39, 52, 72, 101, 128, 133, 134, 135, 139, 143, 147, 148, 163, 171, 172, 176, 178, 193, 197, 201, 208, 209, 213, 215, 233, 244, 245, 249, 251, 283, 284, 292, 293, 297, 299, 304, 315, 323, 324, 328, 330, 344, 346, 347, 349, 350, 353, 355, 356, 357, 358, 359, 363, 364, 368, 369], "spheric": [1, 42, 52, 349, 350], "data": [1, 21, 28, 35, 40, 43, 52, 62, 83, 84, 85, 99, 100, 108, 128, 130, 133, 147, 148, 161, 163, 169, 170, 180, 181, 182, 192, 193, 194, 195, 197, 206, 207, 217, 218, 219, 227, 229, 230, 233, 242, 243, 253, 254, 255, 280, 281, 283, 290, 291, 301, 302, 303, 304, 312, 313, 315, 321, 322, 332, 333, 334, 344, 345, 350, 351, 357, 359, 363, 364, 368], "The": [1, 4, 5, 6, 13, 14, 16, 20, 21, 25, 26, 27, 28, 32, 34, 35, 39, 42, 43, 45, 46, 49, 52, 53, 54, 55, 56, 60, 62, 65, 67, 72, 73, 74, 75, 80, 83, 84, 85, 87, 89, 90, 91, 96, 99, 100, 126, 128, 130, 131, 132, 133, 134, 136, 141, 142, 143, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 169, 171, 176, 179, 180, 181, 182, 191, 192, 193, 195, 199, 201, 206, 208, 213, 216, 217, 218, 219, 227, 229, 237, 238, 242, 244, 249, 252, 253, 254, 255, 259, 264, 266, 284, 290, 292, 297, 300, 301, 302, 303, 304, 312, 321, 323, 328, 331, 332, 333, 334, 335, 341, 344, 345, 347, 349, 351, 352, 353, 359, 363, 364, 365, 368, 369], "rbf": 1, "i": [1, 6, 10, 12, 14, 16, 52, 55, 67, 72, 74, 85, 90, 110, 113, 114, 115, 116, 134, 136, 142, 148, 161, 163, 169, 170, 171, 172, 173, 175, 178, 179, 181, 193, 194, 195, 197, 199, 200, 201, 206, 207, 208, 209, 210, 212, 215, 216, 218, 227, 229, 230, 233, 242, 243, 244, 245, 246, 248, 251, 252, 254, 264, 272, 275, 276, 277, 278, 281, 283, 284, 290, 291, 292, 293, 294, 296, 299, 300, 302, 304, 312, 313, 315, 321, 322, 323, 324, 325, 327, 330, 331, 333, 344, 347, 349, 350, 353, 359, 363, 365, 369], "stationari": [1, 10], "It": [1, 347, 349, 350, 358, 359, 363, 368, 369], "also": [1, 26, 72, 227, 349, 350, 355, 357, 358, 359, 363, 368, 369], "known": [1, 344, 349, 350, 353, 356, 358, 359, 363, 369], "parameter": 1, "length": [1, 12, 14, 72, 351, 369], "scale": [1, 14, 358], "paramet": [1, 5, 6, 7, 13, 20, 21, 25, 26, 27, 28, 32, 34, 35, 39, 40, 42, 45, 52, 53, 55, 56, 62, 65, 67, 72, 74, 75, 83, 84, 85, 87, 90, 91, 99, 100, 126, 128, 130, 131, 132, 133, 136, 141, 142, 163, 169, 170, 171, 172, 176, 177, 179, 180, 181, 182, 191, 192, 197, 200, 206, 207, 208, 209, 213, 214, 216, 217, 218, 219, 227, 233, 242, 243, 244, 245, 249, 250, 252, 253, 254, 255, 266, 283, 290, 291, 292, 293, 297, 298, 300, 301, 302, 303, 315, 321, 322, 323, 324, 328, 329, 331, 332, 333, 334, 344, 345, 349, 350, 351, 356, 358, 359, 365, 368], "l": [1, 347, 349, 358, 359, 365, 368, 369], "which": [1, 26, 52, 55, 67, 74, 85, 90, 130, 134, 142, 163, 171, 176, 179, 193, 195, 197, 199, 208, 213, 216, 233, 244, 249, 252, 283, 292, 297, 300, 315, 323, 328, 331, 344, 346, 347, 349, 350, 351, 358, 359, 363, 364, 365, 368, 369], "can": [1, 6, 52, 126, 177, 193, 214, 250, 298, 329, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 358, 359, 363, 364, 368, 369], "either": [1, 116, 193, 229, 264, 278, 349, 350, 358, 359, 363], "scalar": [1, 126], "isotrop": 1, "variant": 1, "vector": [1, 12, 350], "same": [1, 67, 72, 229, 349, 350, 351, 358, 359, 363, 368, 369], "number": [1, 11, 42, 52, 55, 74, 84, 85, 90, 100, 349, 350, 351, 356, 358, 363, 364, 368], "dimens": [1, 136], "input": [1, 136, 161, 171, 172, 194, 208, 209, 230, 244, 245, 281, 292, 293, 313, 323, 324, 359, 363, 368], "x": [1, 6, 200, 349, 350, 353, 358, 363], "anisotrop": 1, "given": [1, 5, 55, 74, 90, 113, 176, 177, 181, 182, 193, 213, 214, 218, 219, 249, 250, 254, 255, 275, 297, 298, 302, 303, 328, 329, 333, 334, 347, 349, 350, 351, 353, 356, 358, 359, 363, 364, 365, 368], "k": [1, 6, 42, 113, 116, 275, 278, 349, 363, 368], "x_i": 1, "x_j": 1, "exp": [1, 16, 350, 363], "left": [1, 6, 16, 72, 350, 354, 363], "frac": [1, 16, 349, 350, 363], "d": [1, 42, 106, 107, 111, 112, 113, 116, 117, 269, 270, 273, 274, 275, 278, 279, 350, 363], "2": [1, 4, 16, 52, 114, 170, 171, 172, 177, 179, 181, 207, 208, 209, 214, 216, 218, 243, 244, 245, 250, 252, 254, 276, 291, 292, 293, 298, 300, 302, 322, 323, 324, 329, 331, 333, 349, 350, 351, 358, 359, 363, 369], "2l": 1, "right": [1, 16, 349, 350, 354, 363, 364], "where": [1, 16, 177, 193, 214, 250, 298, 329, 349, 350, 351, 358, 359, 363, 364, 365, 368], "cdot": 1, "euclidean": [1, 350, 363], "For": [1, 349, 350, 351, 358, 359, 363, 368, 369], "advic": 1, "how": [1, 171, 172, 208, 209, 244, 245, 292, 293, 323, 324, 349, 350, 351, 352, 358, 359, 363, 365, 368, 369], "set": [1, 13, 26, 109, 111, 112, 130, 132, 133, 139, 162, 163, 164, 166, 169, 170, 171, 172, 173, 175, 196, 197, 198, 203, 206, 207, 208, 209, 210, 212, 232, 233, 234, 236, 242, 243, 244, 245, 246, 248, 271, 273, 274, 280, 282, 283, 285, 287, 290, 291, 292, 293, 294, 296, 314, 315, 316, 318, 321, 322, 323, 324, 325, 327, 347, 349, 350, 351, 352, 354, 358, 359, 363, 364, 368], "see": [1, 349, 350, 351, 353, 358, 359, 363, 368, 369], "e": [1, 116, 175, 193, 212, 229, 248, 278, 296, 327, 349, 368], "g": [1, 56, 75, 91, 358], "thi": [1, 6, 7, 13, 14, 20, 26, 27, 34, 42, 52, 55, 56, 62, 67, 72, 74, 75, 83, 84, 90, 91, 99, 100, 101, 116, 127, 134, 136, 142, 143, 147, 163, 170, 174, 175, 177, 178, 179, 192, 193, 195, 197, 200, 201, 207, 211, 212, 214, 215, 216, 227, 228, 229, 233, 243, 247, 248, 250, 251, 252, 264, 266, 278, 283, 284, 291, 295, 296, 298, 299, 300, 304, 315, 322, 326, 327, 329, 330, 331, 335, 341, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 363, 364, 365, 368, 369], "infinit": 1, "differenti": 1, "impli": [1, 229], "gp": 1, "covari": 1, "have": [1, 13, 169, 171, 172, 175, 193, 201, 206, 208, 209, 212, 229, 242, 244, 245, 248, 290, 292, 293, 296, 304, 321, 323, 324, 327, 347, 349, 350, 351, 357, 358, 359, 363, 364, 368, 369], "mean": [1, 349, 350, 359, 363, 368, 369], "deriv": 1, "all": [1, 9, 58, 72, 78, 94, 106, 127, 142, 147, 169, 206, 242, 269, 290, 304, 321, 349, 350, 351, 352, 356, 358, 359, 363, 364, 368, 369], "order": [1, 114, 276, 349, 358, 359, 368], "ar": [1, 7, 14, 26, 52, 55, 62, 72, 74, 83, 90, 99, 114, 134, 163, 169, 171, 172, 177, 197, 206, 208, 209, 214, 233, 242, 244, 245, 250, 276, 283, 290, 292, 293, 298, 304, 315, 321, 323, 324, 329, 346, 347, 348, 349, 350, 351, 352, 357, 358, 359, 363, 364, 365, 368, 369], "thu": [1, 16, 42, 193, 349, 350, 356, 358, 359, 363, 368], "veri": [1, 52, 101, 349, 350, 359, 363, 364, 368], "smooth": [1, 350], "chapter": 1, "4": [1, 349, 350, 351, 358, 363, 369], "section": [1, 350, 352, 358, 359, 363, 368], "further": [1, 350, 356, 363], "detail": [1, 52, 85, 349, 350, 351, 353, 357, 358, 359, 363, 368, 369], "read": [1, 53, 65, 87, 122, 349, 350, 351, 352, 356, 357, 358, 359, 364, 368], "more": [1, 6, 14, 134, 347, 349, 350, 351, 356, 357, 359, 363, 368, 369], "user": [1, 52, 67, 101, 147, 193, 344, 346, 347, 349, 350, 351, 352, 353, 357, 358, 359, 363, 364, 368, 369], "guid": [1, 346, 348, 349, 350, 351, 353, 354, 357, 358, 364, 368, 369], "new": [1, 62, 83, 99, 109, 161, 169, 170, 177, 194, 206, 207, 214, 230, 242, 243, 250, 271, 281, 290, 291, 298, 313, 321, 322, 329, 350, 351, 352, 353, 358, 359, 369], "version": [1, 126, 144, 344, 349, 358, 359, 368, 369], "18": [1, 358], "float": [1, 25, 26, 32, 39, 136, 358], "ndarrai": [1, 4, 5, 6, 14], "shape": [1, 4, 5, 6, 14], "n_featur": [1, 6], "default": [1, 7, 12, 56, 67, 72, 75, 91, 110, 113, 115, 136, 142, 169, 171, 172, 174, 175, 179, 192, 206, 208, 209, 211, 212, 216, 242, 244, 245, 247, 248, 252, 272, 275, 277, 284, 290, 292, 293, 295, 296, 300, 321, 323, 324, 326, 327, 331, 347, 349, 350, 351, 354, 358, 359, 363, 368, 369], "If": [1, 7, 16, 55, 62, 67, 72, 74, 83, 90, 99, 113, 116, 136, 142, 163, 169, 171, 172, 179, 180, 181, 197, 200, 201, 206, 208, 209, 216, 217, 218, 227, 233, 242, 244, 245, 252, 253, 254, 275, 278, 283, 290, 292, 293, 300, 301, 302, 315, 321, 323, 324, 331, 332, 333, 349, 350, 351, 358, 359, 363, 364], "an": [1, 43, 44, 55, 56, 74, 75, 90, 91, 117, 126, 128, 131, 132, 133, 136, 169, 193, 200, 206, 229, 242, 279, 290, 321, 349, 350, 351, 353, 356, 358, 359, 363, 364, 368, 369], "arrai": [1, 23, 37, 52, 126, 350, 353], "each": [1, 13, 16, 43, 72, 84, 100, 346, 349, 350, 351, 358, 359, 363, 365, 369], "defin": [1, 12, 171, 174, 208, 211, 244, 247, 292, 295, 323, 326, 358, 363], "respect": [1, 169, 206, 242, 290, 321], "featur": [1, 12, 358], "pair": [1, 114, 163, 197, 233, 276, 283, 315], "fix": [1, 11, 12, 14, 349], "5": [1, 22, 23, 29, 36, 40, 349, 350, 351, 354, 358, 369], "1e5": 1, "lower": [1, 349], "upper": 1, "bound": 1, "cannot": [1, 161, 194, 230, 281, 313, 351, 363, 368], "chang": [1, 170, 207, 243, 291, 322, 347, 350, 351, 352, 359, 368], "dure": [1, 141, 142, 173, 179, 210, 216, 246, 252, 294, 300, 325, 331, 350, 358, 359], "hyperparamet": [1, 4, 5, 11, 14, 26], "tune": [1, 358], "refer": [1, 176, 213, 249, 297, 328, 349, 351, 353, 358, 365, 368, 369], "david": 1, "duvenaud": 1, "2014": 1, "cookbook": [1, 348], "carl": 1, "edward": 1, "rasmussen": 1, "christoph": 1, "william": 1, "2006": 1, "machin": [1, 350], "learn": [1, 350, 352], "mit": 1, "press": 1, "exampl": [1, 56, 75, 91, 349, 350, 351, 352, 353, 358, 359, 363, 364, 368, 369], "from": [1, 21, 28, 35, 42, 45, 52, 53, 55, 56, 65, 67, 74, 75, 84, 85, 87, 90, 91, 100, 101, 106, 108, 109, 116, 122, 123, 128, 133, 136, 148, 161, 169, 171, 172, 174, 175, 180, 194, 206, 208, 209, 211, 212, 217, 229, 230, 242, 244, 245, 247, 248, 253, 269, 271, 278, 281, 290, 292, 293, 295, 296, 301, 313, 321, 323, 324, 326, 327, 332, 344, 347, 348, 349, 350, 351, 353, 356, 359, 364, 368], "sklearn": [1, 20, 26, 27, 34], "dataset": [1, 359], "import": [1, 56, 75, 91, 347, 349, 350, 351, 352, 358, 359, 363, 364, 368, 369], "load_iri": 1, "gaussianprocessclassifi": 1, "y": [1, 6, 350, 358, 363], "return_x_i": 1, "true": [1, 7, 12, 52, 62, 67, 71, 72, 83, 99, 142, 163, 168, 170, 171, 172, 174, 176, 179, 186, 187, 197, 207, 208, 209, 213, 216, 223, 224, 233, 243, 244, 245, 249, 252, 260, 261, 283, 289, 291, 292, 293, 297, 300, 308, 309, 315, 320, 322, 323, 324, 326, 328, 331, 339, 340, 349, 350, 354, 358, 363], "gpc": 1, "random_st": 1, "fit": [1, 52, 53, 55, 65, 74, 85, 87, 90, 349, 350, 351, 358, 359, 369], "score": [1, 349, 350], "9866666666666667": 1, "predict_proba": 1, "83548752": 1, "03228706": 1, "13222543": 1, "79064206": 1, "06525643": 1, "14410151": 1, "method": [1, 6, 13, 16, 19, 26, 33, 44, 52, 63, 67, 72, 85, 102, 116, 118, 148, 163, 172, 177, 178, 191, 192, 193, 197, 209, 214, 215, 229, 233, 245, 250, 251, 265, 278, 280, 283, 293, 298, 299, 312, 315, 324, 329, 330, 349, 350, 351, 353, 358, 359, 364, 368], "attribut": [1, 19, 26, 33, 44, 52, 63, 85, 102, 118, 131, 132, 148, 176, 180, 193, 213, 217, 229, 249, 253, 280, 297, 301, 312, 328, 332, 341, 349, 351, 358, 359, 363, 364, 368, 369], "properti": [3, 4, 8, 9, 11, 12, 14, 46, 47, 49, 54, 57, 58, 59, 60, 64, 73, 77, 78, 79, 80, 86, 89, 93, 94, 95, 96, 120, 173, 175, 210, 212, 239, 246, 248, 294, 296, 325, 327, 347, 350, 359, 368], "return": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 42, 55, 56, 58, 59, 62, 67, 74, 75, 76, 78, 79, 83, 84, 90, 91, 92, 94, 95, 99, 100, 110, 113, 114, 115, 126, 127, 128, 130, 136, 141, 142, 163, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 197, 200, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 233, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 272, 275, 276, 277, 283, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 304, 315, 321, 322, 323, 324, 325, 327, 328, 329, 331, 332, 333, 334, 344, 345, 349, 351, 358, 359, 363, 364, 368], "log": [4, 14, 16, 101, 171, 172, 208, 209, 244, 245, 292, 293, 323, 324, 346, 349, 350, 351, 354, 357, 358, 369], "transform": [4, 14, 42, 363], "theta": [4, 5, 42, 52, 350, 365], "": [4, 13, 14, 46, 52, 54, 56, 73, 75, 85, 89, 91, 111, 112, 117, 151, 152, 153, 154, 155, 160, 169, 171, 172, 193, 195, 206, 208, 209, 242, 244, 245, 273, 274, 279, 290, 292, 293, 321, 323, 324, 349, 350, 351, 354, 358, 359, 363, 368, 369], "type": [4, 6, 7, 13, 14, 20, 21, 25, 26, 27, 28, 32, 34, 35, 39, 55, 56, 58, 59, 62, 67, 72, 74, 75, 76, 78, 79, 83, 84, 90, 91, 92, 94, 95, 99, 100, 126, 128, 130, 136, 141, 142, 346, 347, 349, 350, 351, 353, 356, 357, 358, 363, 369], "n_dim": [4, 5, 14], "clone": [5, 355], "self": [5, 6, 13, 108, 161, 163, 194, 197, 227, 228, 230, 233, 281, 283, 313, 315, 349, 359, 364, 368], "diagon": 6, "result": [6, 62, 72, 83, 99, 141, 142, 169, 206, 242, 290, 321, 349, 350, 358, 363, 369], "ident": 6, "np": [6, 349, 350, 369], "howev": [6, 349, 350, 351, 358, 359, 363, 364, 368, 369], "evalu": [6, 349, 363], "effici": [6, 349], "sinc": [6, 349], "onli": [6, 26, 42, 161, 171, 194, 208, 230, 244, 264, 281, 292, 313, 323, 347, 349, 350, 351, 355, 358, 359, 363, 364, 368, 369], "n_samples_x": 6, "argument": [6, 67, 72, 84, 100, 141, 142, 161, 194, 200, 230, 281, 313, 349, 350, 358, 368], "k_diag": 6, "deep": [7, 163, 170, 197, 207, 233, 243, 283, 291, 315, 322, 353, 358], "get": [7, 131, 173, 210, 246, 294, 325, 348, 349, 350, 351, 352, 358, 359, 363, 368], "bool": [7, 55, 62, 67, 72, 74, 83, 90, 99, 142, 163, 164, 166, 170, 171, 172, 176, 179, 180, 181, 182, 183, 185, 186, 187, 197, 198, 203, 207, 208, 209, 213, 216, 217, 218, 219, 220, 222, 223, 224, 233, 234, 236, 243, 244, 245, 249, 252, 253, 254, 255, 256, 258, 260, 261, 283, 285, 287, 291, 292, 293, 297, 300, 301, 302, 303, 305, 307, 308, 309, 315, 316, 318, 322, 323, 324, 328, 331, 332, 333, 334, 336, 338, 339, 340], "estim": [7, 16], "contain": [7, 26, 52, 72, 85, 143, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 171, 182, 208, 219, 244, 255, 292, 303, 323, 334, 347, 349, 350, 351, 353, 358, 359, 363, 368], "subobject": 7, "param": [7, 13, 71, 177, 214, 250, 298, 329], "name": [7, 44, 45, 56, 59, 67, 72, 75, 79, 85, 91, 95, 124, 125, 148, 161, 167, 169, 174, 177, 194, 195, 204, 206, 211, 214, 230, 240, 242, 247, 250, 281, 288, 290, 295, 298, 312, 313, 319, 321, 326, 329, 347, 349, 350, 351, 354, 358, 359, 364, 368, 369], "map": [7, 16, 26, 40, 102, 103, 128, 129, 130, 133, 148, 163, 174, 197, 211, 233, 247, 265, 266, 283, 295, 315, 326, 347, 352, 356, 359, 368], "valu": [7, 14, 55, 74, 90, 109, 110, 113, 114, 115, 124, 125, 126, 128, 132, 133, 162, 163, 169, 170, 171, 172, 177, 190, 191, 192, 196, 197, 201, 206, 207, 208, 209, 214, 226, 232, 233, 242, 243, 244, 245, 250, 263, 267, 271, 272, 275, 276, 277, 282, 283, 290, 291, 292, 293, 298, 304, 311, 314, 315, 321, 322, 323, 324, 329, 343, 349, 350, 351, 358, 359, 363, 364, 368], "dict": [7, 21, 26, 28, 35, 72, 114, 116, 121, 122, 127, 128, 130, 133, 141, 142, 163, 166, 167, 170, 171, 172, 173, 174, 176, 179, 180, 181, 182, 186, 197, 203, 204, 207, 208, 209, 210, 211, 213, 216, 217, 218, 219, 223, 229, 233, 236, 240, 243, 244, 245, 246, 247, 249, 252, 253, 254, 255, 260, 266, 276, 278, 283, 287, 288, 291, 292, 293, 294, 295, 297, 300, 301, 302, 303, 308, 315, 318, 319, 322, 323, 324, 325, 326, 328, 331, 332, 333, 334, 339, 344, 349, 351, 358, 368], "list": [9, 58, 59, 72, 78, 79, 94, 95, 128, 130, 133, 192, 268, 349, 352, 358, 368], "specif": [9, 20, 25, 27, 32, 34, 39, 67, 237, 238, 259, 349, 350, 351, 358, 359, 368], "whether": [10, 12, 171, 172, 176, 179, 180, 181, 182, 208, 209, 213, 216, 217, 218, 219, 244, 245, 249, 252, 253, 254, 255, 292, 293, 297, 300, 301, 302, 303, 323, 324, 328, 331, 332, 333, 334], "non": [11, 14, 171, 172, 177, 208, 209, 214, 244, 245, 250, 292, 293, 298, 323, 324, 329, 350, 359, 363], "gener": [12, 16, 26, 52, 67, 72, 118, 130, 169, 171, 172, 176, 177, 206, 208, 209, 213, 214, 229, 242, 244, 245, 249, 250, 266, 290, 292, 293, 297, 298, 321, 323, 324, 328, 329, 347, 349, 350, 351, 356, 357, 358, 359, 363, 364, 368], "object": [12, 13, 21, 25, 28, 32, 35, 39, 43, 52, 55, 67, 72, 74, 85, 90, 111, 112, 117, 128, 131, 132, 133, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 167, 171, 180, 182, 195, 204, 208, 217, 219, 240, 244, 253, 255, 273, 274, 279, 288, 292, 301, 303, 304, 319, 323, 332, 334, 344, 347, 349, 350, 351, 356, 358, 359, 363, 368, 369], "backward": 12, "compat": 12, "work": [13, 349, 350, 352, 358, 359, 368], "simpl": [13, 350, 357, 358, 359, 364, 369], "well": [13, 349, 350, 358, 369], "nest": [13, 108, 128, 133], "latter": 13, "form": [13, 16, 161, 194, 200, 230, 281, 313, 350, 351, 359, 363, 368], "compon": [13, 350, 369], "__": 13, "so": [13, 52, 147, 347, 349, 350, 351, 353, 358, 359, 363, 364, 365, 368], "possibl": [13, 126, 349, 350, 358, 359, 363, 364, 369], "updat": [13, 163, 170, 197, 207, 233, 243, 283, 291, 315, 322, 358], "flatten": 14, "note": [14, 16, 42, 43, 52, 85, 101, 134, 143, 147, 169, 170, 193, 206, 207, 227, 228, 229, 242, 243, 264, 290, 291, 321, 322, 349, 350, 358, 359, 369], "typic": [14, 349, 350, 357, 359, 368, 369], "represent": [14, 44, 171, 172, 208, 209, 244, 245, 292, 293, 323, 324, 349, 358], "search": [14, 84, 100, 127, 128, 130, 131, 132, 133, 349, 350, 351, 358, 359, 363], "space": [14, 350], "amen": 14, "like": [14, 43, 111, 112, 229, 273, 274, 344, 349, 350, 351, 356, 358, 359, 363, 364, 368, 369], "natur": [14, 363, 368], "live": 14, "pyxmip": [15, 26, 56, 75, 91, 101, 134, 135, 139, 140, 143, 147, 148, 229, 304, 346, 347, 348, 349, 350, 353, 357, 358, 359, 363, 364, 365, 369], "prior": [16, 17, 350], "none": [16, 17, 21, 25, 28, 32, 35, 39, 48, 62, 71, 72, 74, 83, 84, 90, 99, 100, 106, 109, 110, 115, 116, 130, 137, 138, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 182, 183, 185, 189, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 219, 220, 222, 225, 229, 230, 232, 233, 234, 236, 237, 238, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 258, 259, 262, 269, 271, 272, 277, 278, 281, 282, 283, 285, 287, 290, 291, 292, 293, 294, 299, 300, 301, 302, 303, 305, 307, 310, 312, 313, 314, 315, 316, 318, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 334, 336, 338, 341, 342, 350, 354, 359, 363, 368], "model": [16, 17, 25, 32, 39, 161, 162, 163, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 194, 196, 197, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 230, 232, 233, 235, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 263, 281, 282, 283, 286, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 311, 313, 314, 315, 317, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 343, 344, 350, 353, 357, 358, 359, 368], "baysianpoissonmapregressor": 16, "provid": [16, 40, 43, 111, 112, 117, 147, 169, 193, 200, 206, 229, 242, 273, 274, 279, 290, 321, 347, 349, 350, 351, 352, 353, 356, 358, 359, 363, 364, 365, 368, 369], "varieti": [16, 347, 348, 349, 350, 352, 353, 356, 358, 359, 363, 368], "posterior": [16, 363], "sky": [16, 43, 52, 85, 349, 350, 359, 363, 369], "densiti": [16, 349, 359, 365], "take": [16, 200, 349, 350, 351, 354, 357, 358, 359, 363, 364, 365], "kwarg": [16, 18, 19, 20, 21, 25, 26, 27, 28, 32, 33, 34, 35, 39, 40, 50, 67, 68, 69, 70, 71, 72, 82, 84, 98, 100, 136, 137, 138, 350, 351, 359, 364], "distribut": [16, 42, 200, 350, 353], "p": [16, 42, 136, 138, 350, 353, 358, 359, 363], "beta": 16, "f": [16, 116, 278, 349, 350, 351, 358, 359, 363, 365, 368], "textbf": [16, 350, 363], "r": [16, 349, 363], "n": [16, 42, 349, 350, 363], "A": [16, 42, 67, 163, 167, 169, 171, 172, 173, 175, 197, 204, 206, 208, 209, 210, 212, 233, 240, 242, 244, 245, 246, 248, 283, 288, 290, 292, 293, 294, 296, 315, 319, 321, 323, 324, 325, 327, 348, 349, 352, 363, 365, 368], "prod_": [16, 363], "a_if": 16, "r_i": 16, "n_i": [16, 349], "sum_": [16, 349, 358, 363], "c": [16, 349, 350, 358, 369], "specifi": [16, 45, 52, 53, 56, 65, 72, 75, 84, 85, 87, 91, 100, 113, 163, 171, 192, 193, 195, 197, 199, 200, 208, 227, 228, 229, 233, 244, 264, 275, 283, 292, 304, 315, 323, 347, 349, 350, 358, 359, 363, 364, 368], "instead": [16, 62, 83, 99, 141, 142, 163, 197, 201, 229, 233, 283, 315, 350, 358, 359, 363], "lambda_k": 16, "_k": 16, "n_k": 16, "rate": [16, 349, 350, 356], "healpix": [16, 44, 49, 52, 55, 60, 62, 74, 80, 83, 85, 90, 96, 99, 350], "cell": [16, 350], "when": [16, 52, 62, 83, 99, 177, 179, 192, 214, 216, 229, 250, 252, 298, 300, 329, 331, 349, 350, 351, 358, 359, 363, 369], "problem": [16, 350, 358, 363], "discret": 16, "between": [16, 304, 350, 351, 359, 363, 368], "count_tabl": [18, 21, 25, 28, 32, 35, 39, 349], "object_typ": [18, 21, 25, 28, 32, 35, 39, 67, 68, 69, 70, 71, 72], "initi": [20, 27, 34, 45, 53, 65, 87, 178, 179, 215, 216, 229, 251, 252, 266, 299, 300, 330, 331, 351, 359, 364, 368], "poissonmapregressor": [20, 34], "instanc": [20, 26, 27, 34, 45, 52, 56, 75, 91, 169, 170, 175, 180, 191, 192, 206, 207, 212, 217, 229, 242, 243, 248, 253, 290, 291, 296, 301, 321, 322, 327, 332, 347, 349, 350, 351, 359, 363, 364, 368], "regressor_class": [20, 26, 27, 34], "regressor": [20, 21, 26, 27, 28, 34, 35, 40, 71, 350], "build": [20, 27, 34, 67, 71, 179, 216, 252, 300, 331, 350, 357, 359], "around": [20, 27, 34, 84, 100, 349, 350, 354, 358, 363], "training_kw": [21, 28, 35, 71, 350], "param_kw": [21, 28, 35, 71, 350], "cross": [21, 28, 35, 347, 350, 351, 353, 356, 357, 363, 368, 369], "valid": [21, 28, 35, 147, 161, 169, 170, 171, 172, 173, 176, 178, 180, 181, 182, 191, 192, 193, 194, 199, 201, 206, 207, 208, 209, 210, 213, 215, 217, 218, 219, 227, 230, 242, 243, 244, 245, 246, 249, 251, 253, 254, 255, 281, 290, 291, 292, 293, 294, 297, 299, 301, 302, 303, 313, 321, 322, 323, 324, 325, 328, 330, 332, 333, 334, 350, 358, 359, 364, 368], "against": [21, 28, 35, 181, 182, 218, 219, 227, 254, 255, 302, 303, 333, 334, 350, 351, 353, 356, 358, 359, 363], "avail": [21, 28, 35, 58, 59, 72, 78, 79, 94, 95, 200, 347, 349, 350, 358, 363, 368, 369], "count": [21, 25, 28, 32, 35, 39, 72, 76, 84, 92, 100, 349, 359], "astropi": [21, 25, 28, 32, 35, 39, 46, 52, 54, 55, 73, 74, 76, 84, 89, 90, 92, 100, 126, 136, 193, 201, 237, 238, 259, 349, 350, 351, 359, 368, 369], "tabl": [21, 25, 28, 32, 35, 39, 52, 66, 72, 76, 84, 85, 88, 92, 100, 142, 148, 193, 195, 201, 227, 229, 304, 312, 344, 347, 349, 351, 352, 356, 359, 363, 364, 368], "str": [21, 25, 28, 32, 35, 39, 45, 53, 55, 56, 65, 67, 72, 74, 75, 87, 90, 91, 118, 119, 124, 125, 126, 127, 131, 132, 136, 142, 144, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 193, 195, 196, 197, 198, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 232, 233, 234, 236, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 258, 260, 261, 267, 280, 282, 283, 284, 285, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 307, 308, 309, 312, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340], "pull": [21, 28, 35, 349, 350, 351, 359], "train": [21, 25, 26, 28, 32, 35, 39, 40, 350], "addit": [21, 25, 28, 32, 35, 39, 52, 67, 72, 84, 85, 100, 171, 172, 178, 180, 208, 209, 215, 217, 244, 245, 251, 253, 292, 293, 299, 301, 323, 324, 330, 332, 349, 350, 352, 356, 358, 359, 368, 369], "pass": [21, 28, 35, 55, 72, 74, 84, 90, 100, 141, 142, 169, 171, 172, 177, 180, 181, 182, 199, 201, 206, 208, 209, 214, 217, 218, 219, 242, 244, 245, 250, 253, 254, 255, 290, 292, 293, 298, 301, 302, 303, 321, 323, 324, 329, 332, 333, 334, 350, 351, 365], "n_neighbor": [23, 24, 350], "10": [23, 24, 349, 350, 358, 359], "30": [23, 350, 358], "60": 23, "120": 23, "300": [23, 350], "algorithm": [24, 38, 358], "auto": [24, 38], "weight": [24, 38, 349, 350, 358], "training_fract": [25, 32, 39, 40, 350], "fraction": [25, 26, 32, 39, 350], "wrapper": [26, 52, 351], "structur": [26, 147, 148, 193, 227, 229, 312, 349, 350, 351, 352, 357, 358, 359, 363, 368, 369], "regressor_paramet": 26, "complet": [26, 142, 179, 216, 252, 300, 331, 347, 349, 350, 353, 358, 359, 363], "includ": [26, 142, 163, 164, 166, 171, 172, 197, 198, 203, 208, 209, 233, 234, 236, 244, 245, 283, 285, 287, 292, 293, 315, 316, 318, 323, 324, 346, 347, 351, 352, 353, 356, 357, 358, 359, 363, 368], "permit": 26, "vari": [26, 351], "default_training_fract": 26, "standard": [26, 52, 85, 134, 148, 200, 345, 347, 349, 351, 358, 368], "subset": [26, 72, 358], "variat": 26, "permiss": 26, "radiu": [37, 38, 62, 83, 84, 99, 100, 349, 350, 351, 358, 359], "001": 37, "005": 37, "01": [37, 38, 358], "map_phi": 40, "map_theta": 40, "map_target_valu": 40, "posit": [40, 42, 43, 48, 49, 60, 80, 96, 130, 131, 132, 161, 194, 230, 281, 313, 349, 350, 356, 358, 359, 363], "statist": [41, 350, 353, 356, 358, 359, 363, 364, 368], "n_point": 42, "uniform": [42, 349, 359], "sampl": [42, 84, 85, 100, 349, 350, 358, 363], "surfac": [42, 52, 85, 350, 358], "int": [42, 84, 100, 136, 164, 166, 171, 172, 177, 179, 198, 203, 208, 209, 214, 216, 234, 236, 244, 245, 250, 252, 285, 287, 292, 293, 298, 300, 316, 318, 323, 324, 329, 331], "draw": 42, "phi": [42, 52, 350], "azimuth": 42, "rad": [42, 55, 74, 90, 349, 350, 369], "elev": 42, "angl": [42, 136], "reli": 42, "produc": [42, 134, 344, 353], "random": [42, 84, 85, 100, 350], "coordin": [42, 46, 52, 54, 73, 85, 89, 136, 149, 150, 156, 157, 229, 284, 347, 349, 350, 351, 358, 359, 368, 369], "segment": 42, "omega": [42, 350], "ha": [42, 52, 85, 101, 116, 134, 201, 278, 349, 350, 351, 354, 358, 359, 363, 364, 368], "area": [42, 350, 359, 363], "sin": 42, "probabl": [42, 349, 350, 353, 359, 363, 365], "find": [42, 349, 350, 351, 352, 353, 358, 359, 363, 368, 369], "point": [42, 84, 100, 350, 358, 359, 363, 364], "region": [42, 349, 359], "size": [42, 72, 350, 354, 358], "sim": [42, 363], "u": [42, 350, 351, 363, 369], "alpha": [42, 349, 350], "psi": 42, "To": [42, 147, 176, 213, 229, 249, 297, 328, 349, 350, 351, 353, 354, 355, 358, 359, 363, 365, 368, 369], "accomplish": [42, 356, 358, 363, 364], "we": [42, 349, 350, 351, 352, 354, 356, 358, 359, 363, 364, 365, 368, 369], "requir": [42, 147, 174, 178, 179, 199, 201, 211, 215, 216, 247, 251, 252, 295, 299, 300, 326, 330, 331, 349, 350, 351, 357, 358, 359, 363], "independ": [42, 363], "simpli": [42, 349, 350, 351, 358, 359, 363, 369], "let": [42, 56, 75, 91, 349, 350, 351, 354, 358, 359, 363, 368, 369], "co": [42, 350], "modul": [43, 101, 134, 140, 143, 147, 349, 351, 356, 368, 369], "repres": [43, 52, 118, 148, 175, 177, 212, 214, 229, 248, 250, 280, 296, 298, 312, 327, 329, 345, 347, 349, 351, 358, 359, 363, 364, 368, 369], "interfac": [43, 349, 359], "manag": [43, 349, 351, 358, 368], "mapatla": [43, 45, 65, 85, 87], "collect": [43, 124, 125, 142, 346, 358], "act": [43, 349, 358], "path": [44, 45, 53, 55, 65, 74, 87, 90, 118, 119, 122, 124, 130, 136, 183, 220, 256, 305, 336, 349, 358, 359], "callabl": [44, 141, 142, 166, 193, 200, 203, 211, 236, 287, 318, 350, 363], "atla": [44, 45, 46, 54, 56, 62, 67, 72, 73, 75, 76, 83, 84, 89, 91, 92, 99, 100, 350, 359], "hdu": [45, 52, 59, 79, 85, 95], "locat": [45, 349, 350, 358, 359, 368, 369], "load": [45, 55, 56, 74, 75, 90, 91, 141, 142, 350, 351, 357, 358, 359, 368], "genericfram": [46, 54, 73, 89], "system": [46, 52, 54, 73, 85, 89, 101, 229, 284, 346, 347, 349, 350, 354, 358, 359, 368, 369], "frame": [48, 51, 52, 347, 349, 351, 358, 359, 363, 368, 369], "skycoord": [49, 60, 80, 96, 136, 349, 350, 351, 359], "pixel": [49, 52, 60, 80, 85, 96, 350], "arg": [50, 67, 68, 69, 70, 72, 84, 100, 131], "inplac": [51, 67, 142, 350], "fals": [51, 55, 62, 67, 74, 83, 90, 99, 142, 163, 164, 166, 170, 171, 172, 174, 179, 183, 185, 197, 198, 203, 207, 208, 209, 211, 216, 220, 222, 233, 234, 236, 243, 244, 245, 247, 252, 256, 258, 283, 285, 287, 291, 292, 293, 295, 300, 305, 307, 315, 316, 318, 322, 323, 324, 326, 331, 336, 338, 350, 354, 358], "filepath": [52, 53, 63, 65, 85, 87, 358], "file": [52, 53, 55, 65, 67, 74, 85, 87, 90, 118, 123, 139, 349, 350, 351, 358, 363, 368], "design": [52, 349, 358, 359, 363, 369], "store": [52, 350, 351, 358, 359, 368], "associ": [52, 358, 359, 363, 368, 369], "On": [52, 85, 348, 350, 352, 358, 359], "except": [52, 85, 350, 359], "few": [52, 85, 350, 351, 358, 369], "special": [52, 63, 85, 347, 349, 350, 358, 359, 364, 368, 369], "regard": [52, 85, 363], "header": [52, 85, 368], "format": [52, 85, 139, 229, 304, 349, 350, 354, 358, 359, 368], "In": [52, 85, 116, 278, 304, 347, 349, 350, 351, 354, 356, 357, 358, 359, 363, 364, 365, 368, 369], "primari": [52, 85, 358], "determin": [52, 85, 144, 193, 347, 349, 350, 358, 363, 365, 368, 369], "behavior": [52, 85, 171, 172, 208, 209, 244, 245, 292, 293, 323, 324, 351, 359, 363, 365, 368], "underli": [52, 62, 76, 83, 85, 92, 99, 266, 347, 349, 350, 358, 359, 363, 364], "geometri": [52, 85], "npix": [52, 85, 350], "grid": [52, 55, 62, 74, 83, 85, 90, 99, 350], "nside": [52, 85, 350], "equival": [52, 85, 192, 358], "csy": [52, 85, 350], "nativ": [52, 85, 229, 284, 304, 350], "cdate": [52, 85], "date": [52, 85], "wa": [52, 85, 179, 216, 252, 300, 331, 350, 358, 359, 369], "creat": [52, 55, 74, 85, 90, 109, 142, 161, 169, 170, 193, 194, 206, 207, 230, 242, 243, 271, 281, 290, 291, 313, 321, 322, 349, 350, 351, 357, 358, 364, 368], "edat": [52, 85], "last": [52, 85, 114, 276, 350, 368], "edit": [52, 85, 350, 351, 359], "re": [52, 85, 349, 350, 351, 358, 359, 363, 364, 368, 369], "resolut": [52, 55, 62, 74, 82, 83, 85, 90, 98, 99, 138, 350, 358, 363], "differ": [52, 201, 304, 347, 349, 350, 351, 356, 357, 358, 363, 368, 369], "convent": [52, 347, 349, 350, 358, 359, 368], "than": [52, 347, 349, 350, 351, 359, 363], "le": 52, "pi": [52, 349, 350, 363, 369], "measur": 52, "north": 52, "pole": 52, "never": [52, 359], "interact": [52, 140, 147, 346, 351, 354, 359, 369], "packag": [52, 101, 143, 147, 347, 350, 352, 353, 356, 357, 358, 359], "automat": [52, 136, 179, 216, 252, 300, 331, 349, 358, 359, 369], "convert": [52, 136, 191, 192, 200, 345, 350, 351, 358, 359, 363, 368], "lon": [52, 229, 264, 349], "lat": [52, 229, 264, 349], "time": [52, 349, 350, 351, 358], "These": [52, 346, 347, 351, 357, 358, 359, 363, 368, 369], "call": [52, 169, 206, 242, 290, 321, 349, 350, 358, 359, 365, 368, 369], "base_coordin": 52, "yet": [52, 130, 350, 364], "ti": 52, "ani": [52, 72, 108, 124, 126, 127, 128, 131, 132, 133, 134, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 189, 190, 193, 194, 196, 197, 198, 202, 203, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 221, 223, 224, 225, 226, 230, 232, 233, 234, 235, 236, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 257, 260, 261, 262, 263, 267, 281, 282, 283, 285, 286, 287, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 334, 337, 339, 340, 342, 343, 349, 350, 352, 356, 357, 358, 363, 364, 368, 369], "physic": [52, 347, 356, 363], "context": [52, 171, 172, 180, 181, 182, 208, 209, 217, 218, 219, 244, 245, 253, 254, 255, 292, 293, 301, 302, 303, 323, 324, 332, 333, 334, 350, 358, 359], "entri": [52, 201, 349, 350, 358, 368], "those": [52, 139, 284, 347, 349, 350, 358, 363, 368, 369], "interpret": [52, 229], "aforement": 52, "imag": [52, 136, 350, 354, 358], "1xnpix": 52, "some": [52, 147, 178, 215, 251, 299, 330, 349, 350, 351, 356, 358, 359, 363, 364, 368, 369], "need": [52, 134, 163, 197, 229, 233, 283, 304, 315, 347, 349, 350, 351, 353, 355, 357, 358, 359, 363, 364, 368], "identifi": [52, 155, 284, 349, 350, 356, 358, 359, 363, 368, 369], "ismap": 52, "classmethod": [55, 74, 90, 105, 108, 122, 124, 162, 165, 169, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 196, 202, 206, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 232, 235, 242, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 282, 286, 290, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 314, 317, 321, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 343], "overwrit": [55, 67, 72, 74, 90, 349, 358], "empti": [55, 72, 74, 90, 114, 276], "skyatla": [55, 74, 90, 350], "save": [55, 74, 90], "unit": [55, 62, 74, 83, 84, 90, 99, 100, 126, 191, 192, 193, 201, 237, 238, 259, 312, 326, 349, 350, 351, 359, 368, 369], "quantiti": [55, 62, 74, 83, 84, 90, 99, 100, 126, 193, 201, 211, 229, 237, 238, 247, 259, 349, 359, 369], "assum": [55, 74, 90, 200, 363], "obtain": [56, 75, 91, 284, 350, 358, 363], "correspond": [56, 75, 91, 113, 136, 167, 193, 204, 240, 275, 288, 319, 335, 345, 347, 349, 350, 358, 359, 363, 368], "try": [56, 75, 91, 177, 179, 214, 216, 229, 250, 252, 298, 300, 329, 331, 351, 358, 359, 369], "galaxi": [56, 75, 91, 349], "poisson": [56, 63, 67, 71, 72, 75, 91, 351, 352], "simbad": [56, 75, 91, 349, 350, 351, 358, 359, 363, 368], "databas": [56, 74, 75, 84, 85, 90, 91, 100, 141, 142, 193, 304, 350, 352, 353, 356, 357, 363, 364, 368], "poisson_atla": [56, 75, 91, 359], "get_default_poisson_atla": [56, 75, 91, 350], "forc": [62, 83, 99, 179, 216, 252, 300, 331, 358], "reshap": [62, 83, 99], "delet": [62, 83, 99, 349, 358], "option": [62, 67, 72, 83, 99, 136, 142, 163, 171, 197, 199, 200, 201, 208, 233, 244, 283, 292, 315, 323, 347, 349, 350, 357, 358, 359, 363, 364, 368], "fail": [62, 83, 99, 136, 179, 191, 192, 216, 252, 300, 331, 358, 359, 363, 368, 369], "thei": [62, 83, 99, 169, 206, 242, 290, 321, 346, 347, 349, 350, 357, 358, 359, 363, 364, 368, 369], "encount": [62, 83, 99, 350, 357], "case": [63, 116, 278, 349, 350, 351, 353, 357, 358, 359, 363, 364, 368, 369], "statatla": 63, "hudl": [66, 88], "knn": [67, 350], "particular": [67, 72, 193, 349, 351, 358, 359, 363, 368], "calcul": [67, 350, 358, 363], "pre": [67, 72, 84, 100, 169, 206, 242, 290, 321, 349], "exist": [67, 72, 84, 100, 130, 349, 350, 351, 358, 365, 368], "written": [67, 349, 350, 358, 359, 364, 368], "directli": [67, 350, 351, 358, 359, 363, 364], "keyword": [67, 72, 161, 194, 230, 281, 313, 359, 368], "retrain": 71, "cross_valid": 71, "cv_kw": 71, "build_arg": 72, "build_kwarg": 72, "construct": [72, 108, 148, 312, 344, 349, 358, 359, 369], "must": [72, 192, 193, 227, 228, 229, 284, 347, 349, 351, 352, 358, 359, 363, 364, 368], "match": [72, 193, 347, 350, 351, 353, 356, 363, 365, 368, 369], "singl": [72, 304, 312, 349, 363], "procedur": [72, 147, 349, 350, 352, 365], "individu": [72, 349, 351, 359], "By": [72, 142, 192, 368], "being": [72, 191, 195, 349, 350, 358, 359, 363, 368], "append": 72, "element": 72, "arbitrari": [72, 136], "similar": [72, 350, 358, 359], "mai": [72, 171, 179, 193, 208, 216, 229, 244, 252, 292, 300, 304, 323, 331, 347, 349, 350, 351, 358, 359, 363, 364, 368], "along": [72, 351, 358, 365, 369], "unspecifi": 72, "sub": [72, 130, 346, 356], "fetch": [76, 92, 128, 136, 349, 350, 359], "npoint": [84, 100], "search_radiu": [84, 100, 349], "randomli": [84, 100, 350], "meta": [84, 100, 141, 142, 349], "add": [84, 100, 170, 207, 243, 291, 322, 349, 350, 352, 358, 359, 364], "queri": [84, 100, 141, 142, 349, 350, 353, 356, 358], "angular": [84, 100, 350, 359], "through": [84, 100, 349, 350, 351, 358, 359, 363, 368, 369], "kei": [84, 100, 109, 110, 113, 114, 115, 116, 128, 133, 171, 188, 208, 244, 267, 271, 272, 275, 276, 277, 278, 292, 323, 347, 350, 352, 358, 359, 368, 369], "word": [84, 100, 350, 365], "subclass": [85, 176, 213, 249, 297, 328, 347, 359, 363, 364], "wrap": [85, 350, 358], "dbname": 85, "mani": [101, 229, 304, 349, 351, 353, 357, 358, 359, 363, 364, 368, 369], "task": [101, 347, 349, 351, 356, 358, 364, 368, 369], "environ": [101, 352, 358, 368, 369], "asid": 101, "access": [101, 102, 347, 349, 350, 358, 359, 364, 368, 369], "littl": [101, 368], "practic": [101, 347, 358], "end": [101, 349, 364], "dictionari": [102, 108, 109, 110, 115, 122, 128, 130, 133, 163, 167, 168, 169, 171, 173, 197, 204, 205, 206, 208, 210, 233, 240, 241, 242, 244, 246, 266, 271, 272, 277, 283, 288, 289, 290, 292, 294, 315, 319, 320, 321, 323, 325, 358, 359, 364, 368], "_map": 105, "remov": [106, 113, 114, 269, 275, 276], "item": [106, 269, 349, 368], "shallow": [107, 270], "iter": [109, 116, 128, 130, 133, 271, 278, 358, 368], "els": [110, 115, 272, 277, 368], "view": [111, 112, 117, 136, 273, 274, 279], "v": [113, 116, 275, 278, 349, 363, 368], "found": [113, 275, 346, 349, 351, 358], "otherwis": [113, 179, 216, 252, 275, 300, 331, 359], "rais": [113, 114, 126, 136, 161, 171, 172, 177, 179, 180, 181, 191, 192, 194, 208, 209, 214, 216, 217, 218, 230, 244, 245, 250, 252, 253, 254, 275, 276, 281, 292, 293, 298, 300, 301, 302, 313, 323, 324, 329, 331, 332, 333, 359], "keyerror": [113, 114, 275, 276], "tupl": [114, 127, 136, 177, 192, 214, 250, 276, 298, 329], "lifo": [114, 276], "first": [114, 276, 349, 350, 351, 352, 358, 363, 365, 368, 369], "out": [114, 276, 349, 350, 353, 358], "insert": [115, 277], "present": [116, 278, 350, 357, 358, 359, 363, 368], "doe": [116, 169, 206, 242, 278, 290, 321, 365, 369], "lack": [116, 278], "follow": [116, 128, 133, 134, 229, 278, 347, 349, 351, 358, 359, 363, 364, 368], "yaml": [118, 368], "configur": [118, 122, 123, 134, 139, 168, 205, 241, 289, 320, 349, 351, 352, 357], "disk": [122, 123, 349, 350, 358, 368], "preferred_unit": 126, "prefer": 126, "error": [126, 136, 150, 152, 154, 157, 169, 171, 172, 179, 193, 195, 199, 200, 201, 206, 208, 209, 216, 227, 228, 229, 237, 238, 242, 244, 245, 252, 259, 264, 290, 292, 293, 300, 321, 323, 324, 331, 349], "isn": [126, 359, 363], "t": [126, 130, 171, 172, 193, 201, 208, 209, 244, 245, 292, 293, 323, 324, 349, 350, 351, 358, 359, 363, 364, 368, 369], "enforc": [126, 139, 180, 181, 182, 191, 192, 217, 218, 219, 253, 254, 255, 301, 302, 303, 332, 333, 334, 350], "numer": 126, "without": [126, 147, 199, 201, 350, 358, 359, 363], "output": [126, 128, 136, 142, 143, 171, 172, 208, 209, 244, 245, 292, 293, 323, 324, 344, 349, 350, 369], "cl": [127, 177, 214, 250, 298, 329], "descriptor_class": 127, "descriptor": [127, 359, 364], "attach": [127, 347, 349, 350, 359], "inherit": 127, "datadict": [128, 130, 133], "maplist": [128, 130, 133], "slice": [128, 130, 133], "templat": [129, 176, 213, 249, 297, 328, 344, 359], "partial": 129, "parent": [130, 179, 216, 252, 300, 331, 350], "doesn": [130, 193, 201, 350, 358, 359, 364, 369], "obj": [131, 132, 165, 180, 182, 184, 202, 217, 219, 221, 235, 253, 255, 257, 286, 301, 303, 306, 317, 332, 334, 337], "attr": [131, 132], "recurs": [131, 132], "string": [131, 132, 172, 175, 177, 181, 182, 209, 212, 214, 218, 219, 245, 248, 250, 254, 255, 293, 296, 298, 302, 303, 304, 324, 327, 329, 333, 334], "val": 132, "logger": 134, "mainlog": [134, 351], "main": [134, 147, 155, 354], "displai": [134, 349], "within": [134, 349, 350, 351, 352, 358, 359, 363, 364, 368, 369], "devlog": 134, "develop": [134, 349, 350, 353, 354, 368], "statement": [134, 349, 359, 363], "debug": [134, 349, 354, 358, 359, 369], "backend": [135, 143, 344, 350, 358, 359, 368], "center": [136, 138, 351, 359], "fov": [136, 138, 358], "dim": 136, "hips_path": [136, 138, 358], "cd": [136, 138, 355, 358], "dss2": [136, 138], "red": [136, 138, 349], "project": [136, 137, 138, 349, 350, 359, 363, 369], "ait": 136, "hip": 136, "server": 136, "field": [136, 161, 163, 167, 169, 171, 172, 173, 174, 175, 193, 194, 197, 204, 206, 208, 209, 210, 211, 212, 230, 233, 240, 242, 244, 245, 246, 247, 248, 281, 283, 288, 290, 292, 293, 294, 295, 296, 313, 315, 319, 321, 323, 324, 325, 326, 327, 349, 358], "regardless": [136, 349, 351, 358, 363], "convers": 136, "occur": [136, 350, 358], "desir": [136, 176, 213, 249, 297, 328, 359], "healpix_map": 137, "fig": [137, 138, 369], "ax": [137, 349, 350, 369], "1000": [138, 349, 358], "hips_kwarg": [138, 358], "choic": [139, 363], "matplotlib": [139, 349, 350, 358, 359, 369], "tqdm_kwarg": [141, 142], "decor": [141, 142], "perform": [141, 142, 169, 178, 206, 215, 227, 228, 242, 251, 264, 290, 299, 321, 330, 349, 351, 356, 358, 359, 363, 364, 368], "oper": [141, 142, 349, 351, 358, 359, 363, 369], "chunk": [141, 142, 363], "entir": [141, 142, 178, 215, 251, 299, 330, 349, 350, 359, 363], "memori": [141, 142, 351], "onc": [141, 142, 349, 350, 351, 358], "tqdm": [141, 142], "runtim": [141, 142, 193, 358], "column": [142, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 193, 195, 199, 200, 227, 228, 229, 284, 312, 335, 341, 347, 349, 350, 358, 359, 368, 369], "caus": 142, "_process": 142, "origin": [142, 349, 358, 363], "replac": [142, 174, 211, 247, 295, 326], "variou": [143, 229, 347, 349, 350, 351, 357, 358, 359, 365, 368], "elsewher": [143, 346, 349, 351], "current": [144, 368], "instal": [144, 350, 354, 357, 358], "print": [145, 349, 350, 351, 358, 359, 368, 369], "cli": [145, 358, 363], "titl": [145, 350], "core": [147, 179, 201, 216, 237, 238, 252, 259, 300, 331, 351, 352, 356, 357, 359, 363, 364, 365], "pydant": [147, 148, 163, 168, 170, 171, 172, 174, 176, 179, 180, 181, 182, 193, 197, 205, 207, 208, 209, 211, 213, 216, 217, 218, 219, 229, 233, 241, 243, 244, 245, 247, 249, 252, 253, 254, 255, 280, 283, 289, 291, 292, 293, 295, 297, 300, 301, 302, 303, 312, 315, 320, 322, 323, 324, 326, 328, 331, 332, 333, 334, 344, 368], "librari": [147, 346, 348, 357, 369], "do": [147, 178, 215, 251, 299, 330, 347, 349, 350, 351, 353, 358, 359, 363, 364, 365, 368, 369], "boilerpl": 147, "code": [147, 353, 357, 359, 363, 364], "lose": 147, "readabl": [147, 358], "ra": [148, 157, 174, 193, 229, 347, 349, 350, 351, 358, 359, 363, 368, 369], "tablecolumn": [148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 174, 191, 192, 193, 195, 199, 211, 229, 237, 238, 247, 259], "dec": [148, 150, 174, 229, 347, 349, 350, 351, 358, 359, 363, 368, 369], "ra_err": [148, 174, 349, 368], "dec_err": [148, 174, 349, 368], "gal_l": [148, 174, 368], "gal_b": [148, 174, 349, 368], "gal_l_err": [148, 174, 368], "gal_b_err": [148, 174, 368], "sep": [148, 174], "z": [148, 174, 347, 349, 358, 359, 368, 369], "schema": [148, 176, 179, 213, 216, 249, 252, 280, 284, 297, 300, 312, 328, 331, 344, 351, 357, 358, 363], "sourcetableschema": [148, 280, 312, 347, 349, 358, 359, 368, 369], "galact": [151, 152, 153, 154, 280, 284, 295, 347, 349, 350, 351, 359, 368], "latitud": [151, 152, 229, 237, 347], "longitud": [153, 154, 229, 238, 347, 349, 368], "catalog": [159, 347, 349, 350, 351, 353, 356, 358, 359, 363, 368], "redshift": [160, 347, 349, 358, 368, 369], "pars": [161, 181, 194, 218, 230, 254, 281, 302, 313, 333], "validationerror": [161, 180, 191, 192, 194, 217, 230, 253, 281, 301, 313, 332], "pydantic_cor": [161, 171, 172, 194, 208, 209, 230, 244, 245, 281, 292, 293, 313, 323, 324], "explicitli": [161, 171, 172, 175, 194, 208, 209, 212, 230, 244, 245, 248, 281, 292, 293, 296, 313, 323, 324, 327], "_fields_set": [162, 169, 196, 206, 232, 242, 282, 290, 314, 321], "abstractsetintstr": [163, 197, 233, 283, 315], "mappingintstrani": [163, 197, 233, 283, 315], "exclud": [163, 164, 166, 171, 172, 197, 198, 203, 208, 209, 233, 234, 236, 244, 245, 283, 285, 287, 292, 293, 315, 316, 318, 323, 324], "warn": [163, 171, 172, 197, 208, 209, 233, 244, 245, 283, 292, 293, 315, 323, 324, 358], "deprec": [163, 197, 233, 283, 315], "now": [163, 197, 233, 283, 315, 349, 350, 351, 358, 359, 363, 364, 368, 369], "model_copi": [163, 197, 233, 283, 315], "you": [163, 170, 178, 197, 201, 207, 215, 229, 233, 243, 251, 283, 291, 299, 315, 322, 330, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 363, 364, 368, 369], "py": [163, 197, 233, 283, 315, 359, 368], "model_dump": [163, 197, 233, 283, 315], "round_trip": [163, 171, 172, 197, 208, 209, 233, 244, 245, 283, 292, 293, 315, 323, 324], "model_valid": [163, 197, 233, 283, 315], "overrid": [163, 176, 178, 197, 213, 215, 233, 249, 251, 283, 297, 299, 315, 328, 330], "by_alia": [164, 166, 171, 172, 176, 186, 187, 198, 203, 208, 209, 213, 223, 224, 234, 236, 244, 245, 249, 260, 261, 285, 287, 292, 293, 297, 308, 309, 316, 318, 323, 324, 328, 339, 340], "exclude_unset": [164, 166, 171, 172, 198, 203, 208, 209, 234, 236, 244, 245, 285, 287, 292, 293, 316, 318, 323, 324], "exclude_default": [164, 166, 171, 172, 198, 203, 208, 209, 234, 236, 244, 245, 285, 287, 292, 293, 316, 318, 323, 324], "exclude_non": [164, 166, 171, 172, 198, 203, 208, 209, 234, 236, 244, 245, 285, 287, 292, 293, 316, 318, 323, 324], "encod": [166, 183, 185, 203, 220, 222, 236, 256, 258, 287, 305, 307, 318, 336, 338, 368], "pydanticundefin": [166, 203, 236, 287, 318], "models_as_dict": [166, 203, 236, 287, 318], "dumps_kwarg": [166, 187, 203, 224, 236, 261, 287, 309, 318, 340], "classvar": [167, 168, 174, 204, 205, 211, 240, 241, 247, 288, 289, 295, 319, 320, 326], "computedfieldinfo": [167, 204, 240, 288, 319], "comput": [167, 177, 204, 214, 240, 250, 288, 298, 319, 329, 350, 359, 363], "configdict": [168, 205, 241, 289, 320], "validate_assign": [168, 289, 320], "should": [168, 170, 171, 172, 193, 195, 201, 205, 207, 208, 209, 229, 241, 243, 244, 245, 289, 291, 292, 293, 304, 320, 322, 323, 324, 346, 347, 349, 350, 351, 357, 358, 359, 363, 364, 368, 369], "conform": [168, 205, 241, 289, 320], "config": [168, 173, 205, 210, 241, 246, 289, 294, 320, 325, 346, 354, 359], "__dict__": [169, 206, 242, 290, 321], "__pydantic_fields_set__": [169, 206, 242, 290, 321], "trust": [169, 170, 206, 207, 242, 243, 290, 291, 321, 322], "other": [169, 206, 242, 290, 321, 347, 348, 349, 350, 351, 356, 358, 359, 363, 365, 368, 369], "model_config": [169, 206, 242, 290, 321], "extra": [169, 173, 181, 182, 206, 210, 218, 219, 242, 246, 254, 255, 290, 294, 302, 303, 321, 325, 333, 334, 358], "That": [169, 206, 242, 290, 321, 349, 350, 358, 369], "ad": [169, 206, 242, 290, 321, 349, 350, 352, 358, 359, 364], "__pydantic_extra__": [169, 206, 242, 290, 321], "ignor": [169, 171, 172, 206, 208, 209, 242, 244, 245, 290, 292, 293, 321, 323, 324], "becaus": [169, 193, 206, 242, 290, 321, 349, 350, 358, 359, 363, 368], "forbid": [169, 206, 242, 290, 321], "accept": [169, 206, 242, 290, 321, 358, 363], "usag": [170, 171, 172, 181, 207, 208, 209, 218, 243, 244, 245, 254, 291, 292, 293, 302, 322, 323, 324, 333, 350, 358], "doc": [170, 171, 172, 181, 207, 208, 209, 218, 243, 244, 245, 254, 291, 292, 293, 302, 322, 323, 324, 333, 358], "http": [170, 171, 172, 181, 207, 208, 209, 218, 243, 244, 245, 254, 291, 292, 293, 302, 322, 323, 324, 333, 351, 355], "dev": [170, 171, 172, 181, 207, 208, 209, 218, 243, 244, 245, 254, 291, 292, 293, 302, 322, 323, 324, 333], "7": [170, 171, 172, 181, 207, 208, 209, 218, 243, 244, 245, 254, 291, 292, 293, 302, 322, 323, 324, 333, 349, 350, 351, 358, 369], "concept": [170, 171, 172, 181, 207, 208, 209, 218, 243, 244, 245, 254, 291, 292, 293, 302, 322, 323, 324, 333, 357, 365], "serial": [170, 171, 172, 176, 207, 208, 209, 213, 243, 244, 245, 249, 291, 292, 293, 297, 322, 323, 324, 328], "copi": [170, 207, 243, 291, 322, 349, 351], "befor": [170, 207, 243, 291, 322, 350, 368, 369], "make": [170, 207, 243, 291, 322, 349, 350, 351, 359, 363, 364, 368], "mode": [171, 176, 208, 213, 244, 249, 292, 297, 323, 328, 349], "liter": [171, 172, 176, 208, 209, 213, 244, 245, 249, 280, 284, 292, 293, 295, 297, 323, 324, 328], "json": [171, 172, 176, 181, 208, 209, 213, 218, 244, 245, 249, 254, 292, 293, 297, 302, 323, 324, 328, 333, 368], "python": [171, 208, 244, 292, 323, 358, 364, 368], "serialize_as_ani": [171, 172, 208, 209, 244, 245, 292, 293, 323, 324], "modelmodel_dump": [171, 208, 244, 292, 323], "to_python": [171, 208, 244, 292, 323], "run": [171, 208, 244, 292, 323, 349, 350, 358, 364], "serializ": [171, 208, 244, 292, 323], "alia": [171, 208, 244, 292, 323], "been": [171, 172, 175, 208, 209, 212, 244, 245, 248, 292, 293, 296, 323, 324, 327, 349, 351, 358, 363], "dump": [171, 172, 208, 209, 244, 245, 292, 293, 323, 324], "idempot": [171, 172, 208, 209, 244, 245, 292, 293, 323, 324], "handl": [171, 172, 208, 209, 244, 245, 292, 293, 323, 324], "them": [171, 172, 208, 209, 229, 244, 245, 292, 293, 323, 324, 349, 350, 351, 358, 359, 363, 364, 368], "pydanticserializationerror": [171, 172, 208, 209, 244, 245, 292, 293, 323, 324], "duck": [171, 172, 208, 209, 244, 245, 292, 293, 323, 324], "indent": [172, 209, 245, 293, 324], "modelmodel_dump_json": [172, 209, 245, 293, 324], "to_json": [172, 209, 245, 293, 324], "compact": [172, 209, 245, 293, 324], "alias": [172, 176, 209, 213, 245, 249, 293, 297, 324, 328], "fieldinfo": [174, 211, 247, 295, 326], "annot": [174, 179, 211, 216, 247, 252, 295, 300, 326, 331], "union": [174, 211, 247, 326], "aftervalid": 174, "nonetyp": [174, 211, 247, 326], "metadata": [174, 211, 247, 295, 326], "func": 174, "staticmethod": 174, "validate_table_column_no_unit": 174, "about": [174, 193, 211, 247, 295, 326, 349, 350, 357, 358, 359, 363, 365, 369], "__fields__": [174, 211, 247, 295, 326, 368], "v1": [174, 211, 247, 295, 326, 349, 351, 358, 359, 369], "were": [175, 212, 248, 296, 327, 349, 369], "fill": [175, 212, 248, 296, 327, 344, 350], "ref_templ": [176, 186, 187, 213, 223, 224, 249, 260, 261, 297, 308, 309, 328, 339, 340], "def": [176, 186, 187, 213, 223, 224, 249, 260, 261, 297, 308, 309, 328, 339, 340, 359, 364], "schema_gener": [176, 213, 249, 297, 328], "json_schema": [176, 213, 249, 297, 328], "generatejsonschema": [176, 213, 249, 297, 328], "logic": [176, 213, 249, 297, 328, 368], "your": [176, 193, 213, 249, 297, 328, 347, 348, 349, 350, 351, 352, 354, 358, 359, 363, 364, 368, 369], "modif": [176, 213, 249, 297, 328, 359, 369], "parametr": [177, 214, 250, 298, 329], "overridden": [177, 214, 250, 298, 329, 351, 359], "achiev": [177, 214, 250, 298, 329, 350, 355, 359], "custom": [177, 214, 250, 298, 329, 350, 351, 357, 358, 364], "scheme": [177, 214, 250, 298, 329, 350], "basemodel": [177, 214, 250, 298, 329, 344, 368], "variabl": [177, 181, 182, 214, 218, 219, 250, 254, 255, 298, 302, 303, 329, 333, 334, 350], "concret": [177, 214, 250, 298, 329], "would": [177, 214, 250, 298, 329, 350, 359, 363, 368, 369], "typeerror": [177, 214, 250, 298, 329], "_basemodel__context": [178, 215, 251, 299, 330], "after": [178, 215, 251, 299, 330, 358], "__init__": [178, 215, 251, 299, 330, 351, 359, 364], "model_construct": [178, 215, 251, 299, 330], "want": [178, 215, 251, 299, 330, 349, 350, 357, 358, 359, 368], "raise_error": [179, 216, 252, 300, 331], "_parent_namespace_depth": [179, 216, 252, 300, 331], "_types_namespac": [179, 216, 252, 300, 331], "rebuild": [179, 216, 252, 300, 331], "necessari": [179, 216, 252, 300, 331, 350, 351, 359, 363, 368, 369], "one": [179, 199, 201, 216, 227, 228, 252, 300, 331, 347, 349, 350, 355, 358, 363, 364, 365, 368], "forwardref": [179, 216, 252, 300, 331], "could": [179, 180, 216, 217, 252, 253, 300, 301, 331, 332, 349, 350, 358], "resolv": [179, 216, 252, 300, 331], "attempt": [179, 216, 252, 300, 331, 359, 368], "depth": [179, 216, 252, 300, 331, 357, 359, 365], "level": [179, 216, 252, 300, 331, 354, 359, 364], "namespac": [179, 216, 252, 300, 331], "alreadi": [179, 216, 252, 300, 331, 349, 350, 352, 358, 359, 364, 368], "_was_": [179, 216, 252, 300, 331], "success": [179, 216, 252, 300, 331, 358], "strict": [180, 181, 182, 217, 218, 219, 253, 254, 255, 301, 302, 303, 332, 333, 334], "from_attribut": [180, 217, 253, 301, 332], "strictli": [180, 181, 182, 217, 218, 219, 253, 254, 255, 301, 302, 303, 332, 333, 334], "extract": [180, 217, 253, 301, 332, 349, 350, 369], "json_data": [181, 218, 254, 302, 333], "byte": [181, 185, 218, 222, 254, 258, 302, 307, 333, 338], "bytearrai": [181, 218, 254, 302, 333], "valueerror": [181, 218, 254, 302, 333], "content_typ": [183, 185, 220, 222, 256, 258, 305, 307, 336, 338], "utf8": [183, 185, 220, 222, 256, 258, 305, 307, 336, 338], "proto": [183, 185, 220, 222, 256, 258, 305, 307, 336, 338], "deprecatedparseprotocol": [183, 185, 220, 222, 256, 258, 305, 307, 336, 338], "allow_pickl": [183, 185, 220, 222, 256, 258, 305, 307, 336, 338], "b": [185, 222, 258, 307, 338, 347, 349, 358, 359, 363, 369], "localn": [189, 225, 262, 310, 342], "static": [191, 192], "pydact": [191, 192], "norm": [191, 192, 350, 358], "consist": [191, 192], "fault": [191, 192], "expected_unit": [191, 192], "expect": [192, 350, 351, 358, 363], "check": [192, 227, 228, 264, 350, 353, 356, 358], "base_column": [193, 199, 201, 211, 227], "error_column": [193, 201, 211, 227, 228], "error_valu": [193, 199, 211, 227, 228], "error_convert_to_std": [193, 211], "lambda": [193, 211, 350, 365], "agnost": 193, "won": [193, 363], "know": [193, 349, 350, 363], "anyth": [193, 368], "describ": [193, 195, 350, 358, 359, 363, 368, 369], "until": [193, 363], "failur": 193, "accur": [193, 350, 368], "lead": [193, 349, 350, 363], "late": 193, "appear": [193, 349, 359, 368], "columnerrorspecifi": [193, 199, 201], "understood": [193, 359], "archetyp": 193, "reduct": [193, 350, 356, 359, 368], "precis": [193, 349, 358, 363], "ra_prec": [193, 358], "dynam": 193, "who": [195, 357], "At": [199, 201, 227, 228, 350, 364], "least": [199, 201, 227, 228, 347], "deviat": 200, "normal": [200, 349, 351, 354], "uncorrect": 200, "global": 201, "flat": 201, "profil": 201, "_quantitytypepydanticannot": [211, 247], "sourcet": [227, 349, 351, 358, 359, 368, 369], "3": [227, 349, 350, 351, 354, 358, 359, 363, 368, 369], "assert": 227, "actual": [227, 229, 284, 347, 349, 350, 358, 359, 363, 365, 368, 369], "lon_error": [229, 247], "lat_error": [229, 247], "position_error": [229, 247], "astrometr": [229, 349], "compos": [229, 349, 356], "subtyp": 229, "document": [229, 346, 349, 350, 351, 357, 358, 359, 363, 364, 368, 369], "sai": 229, "someth": [229, 351, 358, 363, 364], "anoth": [229, 349, 358, 359], "coordinateerrorspecifi": [229, 264, 363], "longitude_column": 229, "latitude_column": 229, "both": [229, 349, 351, 363, 364], "two": [229, 349, 350, 351, 358, 359, 363, 364, 369], "treat": [229, 349, 363], "circular": [259, 264, 350, 363], "bare": [265, 358], "bone": 265, "default_coord_system": [280, 295, 347, 368], "icr": [280, 284, 295, 347, 349, 358, 359, 368, 369], "object_type_separ": [280, 295], "select": [284, 349, 358, 359, 369], "whichev": 284, "suffici": [284, 350, 359], "minlen": 295, "min_length": 295, "maxlen": 295, "max_length": 295, "separ": [304, 349, 350, 358, 359, 363], "charact": 304, "multipl": [304, 349], "delimit": 304, "here": [304, 346, 349, 350, 351, 356, 357, 358, 359, 363, 364, 368, 369], "even": [304, 356], "entry_1": 304, "entry_2": 304, "columnmap": 312, "_unittypepydanticannot": 326, "datamodel": 344, "larg": [344, 346, 349, 350, 358, 368], "useless": [344, 364], "extern": [344, 349, 351, 358], "inform": [344, 347, 349, 350, 351, 352, 357, 363, 369], "dtype": 345, "typeengin": 345, "numpi": [345, 349, 350, 369], "its": [345, 349, 350, 358, 359, 363], "sqlalchemi": 345, "below": [346, 349, 350, 358, 359, 363, 368], "relev": [346, 349, 350, 351, 363, 364], "link": [346, 350, 351, 356, 359], "central": 346, "datatyp": [346, 368], "familiar": [346, 357, 364, 368, 369], "most": [346, 347, 348, 349, 350, 353, 358, 359, 363, 365, 368, 369], "often": [346, 349, 358], "conveni": [346, 358, 368], "util": [346, 350, 351, 353, 358, 359, 363, 368], "nonetheless": [346, 351, 359], "interest": [346, 347, 349, 353, 358, 363, 368], "plot": [346, 349, 350, 354, 357, 359, 369], "look": [346, 349, 350, 351, 353, 354, 358, 359, 363, 368], "abstract": [347, 351, 364], "base": [347, 349, 350, 352, 358, 359, 363, 364, 369], "etc": [347, 349, 350, 351, 358, 359, 368, 369], "There": [347, 349, 350, 351, 354, 358, 359, 363, 368], "throughout": 347, "awar": [347, 359], "connect": 347, "raw": [347, 350, 351, 368], "job": 347, "column_map": [347, 349, 351, 368], "NOT": [347, 358], "everi": [347, 349, 353, 357, 363, 368, 369], "descript": [347, 358, 359, 369], "appli": 347, "fly": 347, "coordinate_system": [347, 368], "tell": [347, 349, 350, 368, 369], "what": [347, 349, 350, 359, 363, 369], "welcom": 348, "page": [348, 352, 359, 369], "jupyt": 348, "notebook": [348, 350], "materi": 348, "coverag": 348, "overview": [348, 352, 353, 357], "quick": [348, 350], "dirti": 348, "feet": 348, "wet": 348, "intend": 349, "give": 349, "bird": 349, "ey": 349, "basic": [349, 350, 352, 354, 358, 363], "analys": [349, 359, 364, 368], "speak": 349, "step": [349, 350, 358, 368, 369], "mind": [349, 359, 365, 369], "explor": [349, 350, 351], "thing": [349, 350, 351, 358, 359, 363, 364, 368, 369], "almost": [349, 359], "identif": [349, 356, 358, 363, 369], "detect": [349, 358, 363, 365], "potenti": [349, 358, 359, 363, 365], "candid": [349, 356, 358, 363, 365], "3rd": 349, "go": [349, 350, 351, 354, 358, 359, 363, 364, 365, 369], "phase": 349, "part": [349, 350, 357, 358, 368, 369], "decid": 349, "best": [349, 350, 356, 358, 359], "scienc": 349, "outcom": [349, 363], "softwar": [349, 353, 356, 357, 358, 369], "done": [349, 356, 358], "up": [349, 350, 358, 359, 363, 364], "qualiti": [349, 363], "cutoff": 349, "aspect": [349, 357, 368, 369], "small": 349, "showcas": 349, "idea": [349, 350, 352, 363], "novel": [349, 356], "just": [349, 350, 351, 358, 359, 363, 368, 369], "fanci": 349, "less": 349, "panda": 349, "aid": 349, "ll": [349, 350, 351, 354, 356, 358, 359, 363, 368, 369], "erosita": [349, 351, 358, 359, 369], "rai": 349, "survei": [349, 351, 353, 363, 369], "erass1": [349, 358], "ahead": [349, 350, 351, 358], "start": [349, 350, 351, 352, 354, 358, 363], "download": 349, "hard": [349, 351, 359], "band": [349, 351, 359, 365], "erass1_hard": [349, 351, 358, 359, 369], "index": [349, 358], "tradit": 349, "come": [349, 353, 358, 363, 365], "lot": [349, 351, 354, 358, 363, 368, 369], "effect": [349, 350, 358, 363, 368, 369], "figur": [349, 350, 369], "translat": [349, 368], "understand": [349, 350, 352, 359, 363, 368], "catschema": 349, "our": [349, 350, 351, 353, 354, 357, 358, 359, 363, 364, 365], "recogniz": 349, "lii": [349, 358, 359, 369], "bii": [349, 358, 359, 369], "iaunam": [349, 358, 359, 369], "weren": 349, "final": [349, 350, 369], "sourcecatalog": 349, "len": [349, 350, 351, 359], "_low_gal_lat": 349, "ab": 349, "to_valu": [349, 369], "deg": [349, 350, 351, 359, 368], "plane": [349, 350], "bit": [349, 368], "insuffici": 349, "pick": 349, "naiv": [349, 358, 363], "manual": 349, "33": 349, "ra_uperr": 349, "arcsec": 349, "dec_uperr": 349, "pyplot": [349, 350, 358, 359, 369], "plt": [349, 350, 358, 359, 369], "hist": 349, "ec": 349, "fc": 349, "darkgreen": 349, "bin": [349, 359, 368], "geomspac": 349, "40": 349, "xscale": 349, "yscale": 349, "ylabel": 349, "xlabel": 349, "sup": 349, "sigma_": [349, 350, 363], "mathrm": [349, 350], "help": [349, 358, 359, 363, 369], "34": [349, 358], "figsiz": [349, 350, 369], "add_subplot": [349, 350, 369], "111": [349, 350, 358, 369], "aitoff": [349, 369], "latitut": 349, "ml_rate_0": [349, 369], "scatter": [349, 350, 369], "log10": [349, 369], "cmap": [349, 350, 354, 358, 359], "gnuplot_r": 349, "set_ylabel": [349, 350], "set_xlabel": [349, 350], "visual": [349, 350, 358], "35": 349, "get_coordin": 349, "transform_to": 349, "might": [349, 350, 351, 353, 358, 359, 363, 364, 365], "wonder": 349, "why": [349, 350], "local": [349, 350], "blob": 349, "observ": [349, 363, 365], "srg": 349, "overlap": 349, "exposur": 349, "increas": [349, 351], "ve": [349, 350, 351, 358, 359, 368], "suceed": 349, "next": [349, 358], "explicit": 349, "intent": [349, 365], "research": 349, "versatil": [349, 364], "meet": [349, 350, 358, 359], "while": [349, 358, 359, 364, 368], "still": [349, 359, 368], "fall": 349, "categori": 349, "pretti": [349, 350, 364], "fast": 349, "easili": [349, 350, 369], "scalabl": 349, "real": 349, "restrict": 349, "remot": [349, 350, 368], "onlin": [349, 351], "depend": [349, 350, 363, 368], "slower": 349, "repositori": [349, 355], "unifi": 349, "api": [349, 350, 353, 358, 359, 363, 368, 369], "experi": [349, 358, 359], "dbregistri": 349, "36": 349, "default_database_registri": [349, 358], "__class__": 349, "__name__": 349, "technic": 349, "ned": [349, 350, 351, 353, 358, 359, 368], "built": [349, 350, 351, 352, 358, 359, 368], "std": 349, "query_radiu": [349, 351, 359], "37": [349, 358], "ned_inst": [349, 359], "crab": 349, "nebula": 349, "83": 349, "633212": 349, "22": [349, 358], "014460": 349, "arcmin": [349, 350, 351, 358, 359], "fact": 349, "38": [349, 350, 358], "query_schema": [349, 351, 359], "super": [349, 351, 358, 359, 364], "don": [349, 350, 351, 359, 368], "everytim": [349, 358, 368], "own": [349, 350, 351, 358, 359, 363, 368], "notic": [349, 351], "wasn": 349, "mission": [349, 353, 365], "catch": 349, "issu": [349, 358, 359], "again": 349, "talk": 349, "headwai": 349, "sort": [349, 358, 368], "39": 349, "filter": [349, 358], "snr": 349, "supernova": 349, "remnant": 349, "filtered_result": 349, "introduc": [349, 358, 368, 369], "put": [349, 358, 359], "goal": [349, 358, 359], "plausibl": [349, 358], "quickli": 349, "narrow": 349, "cross_refer": [349, 358, 363, 364], "cross_match_t": [349, 358], "particularli": [349, 351, 358, 359], "purpos": [349, 351, 352, 356, 359, 368, 369], "100": [349, 358, 359], "cross_match": [349, 358], "db": [349, 358, 359, 363], "parallel_kwarg": [349, 359], "max_work": [349, 350], "6": [349, 350, 351, 358], "wow": 349, "happen": [349, 350], "compil": [349, 358], "combin": [349, 359], "sql": [349, 358], "bunch": [349, 350, 358, 368], "post": 349, "clean": [349, 358], "readi": [349, 352, 358], "crossmatchdatabas": [349, 363, 364], "side": [349, 350], "importantli": 349, "41": [349, 350], "cmd": [349, 358], "reflect": [349, 358], "42": [349, 350], "_match": [349, 358], "addition": [349, 350], "alwai": [349, 350, 358, 359, 364], "principl": 349, "itself": [349, 369], "intern": 349, "book": 349, "keep": [349, 359, 369], "analysi": [349, 358], "avoid": 349, "rerun": 349, "optim": [349, 350, 363, 368], "43": [349, 358], "propos": [349, 363], "catobj": [349, 358], "ned_std_match": [349, 358], "group": 349, "BY": 349, "show": [349, 350, 354, 358, 359, 363, 369], "histogram": 349, "44": 349, "20": [349, 350], "forestgreen": 349, "appar": [349, 363], "sever": [349, 358, 368], "hundr": 349, "closer": 349, "45": 349, "special_sourc": 349, "loc": 349, "amax": [349, 350], "catalog_entri": 349, "1erass": [349, 358, 369], "j071730": 349, "374539": 349, "ext_lik": 349, "match_typ": 349, "46": 349, "cluster": [349, 356, 358], "assort": 349, "question": [349, 350, 363, 365], "remain": 349, "stage": [349, 350, 356, 358], "realli": [349, 350, 359, 364], "shine": 349, "scientist": 349, "ever": 349, "highli": [349, 350, 359, 363, 369], "criteria": 349, "qualifi": 349, "good": [349, 350, 363], "reason": [349, 351, 363], "bandpass": 349, "rule": 349, "whatev": [349, 363], "constitut": 349, "reductionprocess": [349, 363, 364], "sens": [349, 350, 356, 358, 359, 363, 368], "spit": 349, "indic": [349, 358], "low": 349, "likelihood": [349, 350, 359, 363, 365], "common": [349, 350, 351, 353, 356, 358, 368], "write": [349, 350, 351, 358, 359, 363], "guidanc": 349, "sometim": [349, 350, 368], "tricki": 349, "complex": [349, 350, 351, 357, 358, 359, 369], "attent": [349, 358], "paid": 349, "correct": [349, 350, 358, 359, 363, 368], "easi": [349, 350, 351, 353, 359], "t_i": 349, "j": 349, "label": [349, 350], "psi_": 349, "ij": 349, "alpha_i": [349, 358], "overal": [349, 363], "xi_j": 349, "sum_i": [349, 363], "As": [349, 350, 351, 358, 359, 363, 364, 368], "duplic": 349, "max": 349, "min": 349, "averag": 349, "preced": 349, "over": [349, 350, 359, 363], "rest": 349, "minimum": [349, 357, 358], "astrometricreductionprocess": [349, 363], "catalog_err": [349, 363], "database_err": [349, 363], "resourc": [349, 359], "exhaust": 349, "explan": 349, "arp": 349, "cross_match_databas": [349, 364], "fill_unknown": 349, "proced": 349, "reduction_result": 349, "catra": [349, 358], "catdec": [349, 358], "catnmatch": 349, "astrometric_reduction_scor": 349, "24": [349, 358], "poissonpointreduct": 350, "behind": [350, 352, 365], "chanc": [350, 358], "critic": [350, 353, 358, 359, 364, 368, 369], "correctli": 350, "spuriou": [350, 358, 359], "difficult": [350, 358, 363], "walk": [350, 351], "ins": 350, "rnn": 350, "event": 350, "frequenc": 350, "period": 350, "delta": [350, 363], "becom": [350, 364, 368], "Then": [350, 363], "p_": 350, "ge": 350, "underbrac": [350, 363], "approx": 350, "_": [350, 363], "quit": [350, 351, 358, 359, 363, 364, 368, 369], "conduct": 350, "great": [350, 352, 358, 363], "deal": [350, 363], "sophist": 350, "gone": [350, 359], "rel": [350, 358], "interpol": 350, "undertak": [350, 358], "solut": 350, "break": [350, 359], "tile": 350, "equal": 350, "cover": [350, 351], "worth": [350, 351, 353, 357, 359, 363, 369], "dictat": 350, "n_": 350, "mathbb": [350, 363], "omega_": 350, "pix": 350, "theta_": 350, "097": 350, "sr": 350, "poissonatla": [350, 359], "extens": 350, "bintabl": 350, "eventu": 350, "imagearrai": 350, "astronom": [350, 353, 356, 359, 363, 369], "finish": 350, "tutori": 350, "mpl": 350, "rich": [350, 354], "pprint": 350, "skip": 350, "open": [350, 358], "ned_atla": 350, "simbad_atla": 350, "get_poisson_atla": 350, "get_point": 350, "advantag": [350, 357], "reset": 350, "scratch": 350, "recogn": [350, 365, 368], "ipac": [350, 353, 359], "row": [350, 358, 369], "pix_id": 350, "improv": [350, 358, 363], "thread_kw": 350, "thread": [350, 358], "speed": 350, "sample_from_databas": 350, "50": [350, 358], "chunk_siz": 350, "500": 350, "geo": 350, "convert_skycoord": 350, "set_styl": 350, "color": [350, 358], "symlognorm": [350, 358], "style": [350, 354], "point_data": 350, "latlon": 350, "12": [350, 351, 354, 358, 369], "mollweid": 350, "set_facecolor": 350, "vmin": 350, "vmax": 350, "linthresh": [350, 358], "cm": [350, 358], "gnuplot": [350, 358, 359], "85": 350, "colorbar": 350, "scalarmapp": 350, "sigma": [350, 363], "far": [350, 359, 363, 368], "seen": 350, "long": [350, 351], "sake": 350, "briefli": [350, 356], "mention": [350, 358], "maphdu": 350, "unfamiliar": 350, "heirarch": 350, "discuss": [350, 357, 358, 365], "8": [350, 351, 354, 358, 369], "n_side": 350, "map_nam": 350, "truli": 350, "aquaint": [350, 351], "constitu": 350, "turn": 350, "simpler": 350, "9": [350, 354, 358, 369], "irs_map": 350, "get_map": [350, 359], "ir": [350, 358, 359], "ed": 350, "meth": 350, "consid": [350, 363], "phi_0": 350, "theta_0": 350, "11": 350, "round": 350, "decim": 350, "prob": 350, "53": 350, "psn_map": [350, 359], "build_poisson_map": 350, "75": 350, "54": [350, 358, 359], "healpi": 350, "hp": 350, "mollview": 350, "flip": 350, "55": [350, 358], "transform_map_coordin": 350, "drawn": 350, "upon": 350, "scene": 350, "mess": [350, 354], "scenario": 350, "fine": [350, 358], "grain": 350, "control": [350, 358, 363], "nitti": 350, "gritti": 350, "abov": [350, 351, 358, 359, 363], "approach": [350, 363], "summar": [350, 352, 356, 359], "begin": [350, 352, 358, 359, 363, 368], "star": [350, 359, 368], "clear": 350, "stellar": 350, "peak": 350, "blank": [350, 358, 359], "spot": 350, "sphere": [350, 363], "implement": [350, 351, 358, 359, 364], "bayesian": [350, 363], "techniqu": 350, "under": [350, 351, 358, 368], "hood": [350, 351, 358, 368], "mathbf": [350, 363], "baysian": 350, "confid": [350, 353, 356, 358, 363], "constraint": [350, 356], "solver": 350, "longer": [350, 351], "abl": [350, 363, 368], "address": 350, "Not": [350, 359], "spatial": 350, "pro": 350, "con": 350, "No": [350, 358], "fiddl": 350, "robust": 350, "interv": [350, 358], "linear": 350, "solv": [350, 363], "27": [350, 358, 369], "graticul": 350, "enough": 350, "fulli": 350, "suggest": [350, 363], "term": [350, 363], "validat": 350, "portion": 350, "held": 350, "hyper": 350, "cv": 350, "via": [350, 358, 359], "versu": [350, 351], "test": [350, 358, 363], "score_threshold": 350, "cv_threshold": 350, "proce": [350, 358], "immedi": [350, 351, 368], "investig": 350, "came": 350, "retriev": 350, "back": 350, "47": 350, "notext": 350, "neightbor": 350, "minor": [350, 354], "twist": 350, "constant": 350, "48": 350, "rang": 351, "intuit": [351, 359], "successfulli": [351, 358, 368, 369], "choos": [351, 363], "demonstr": [351, 358], "erass": [351, 369], "unzip": 351, "pyxm": [351, 358], "verbos": 351, "localdatabas": [351, 359], "example_databas": [351, 359], "congrat": 351, "second": [351, 358, 363], "much": [351, 359, 363, 369], "degre": [351, 358], "query_data": 351, "transit": 351, "remotedatabas": [351, 359], "moder": 351, "atlas": 351, "topic": [351, 353, 357, 359, 368], "major": [351, 354], "send": 351, "receiv": 351, "larger": 351, "therefor": [351, 363], "infrastructur": 351, "unlik": [351, 359, 365], "scope": [351, 359], "brief": [351, 353], "query_config": [351, 359], "exact": [351, 368], "kept_column": 351, "wai": [351, 358, 359, 363], "respond": 351, "database_class": 351, "default_query_schema": [351, 359, 368], "suppli": 351, "instanti": [351, 359, 364], "ned_database_standard": 351, "default_ned_schema": 351, "ned_database_custom": 351, "ned_custom": 351, "compar": [351, 358, 363], "applic": 351, "advanc": 351, "backbon": 351, "descend": 351, "sourcedatabas": [351, 358, 359], "stop": [352, 358], "introduct": 352, "concern": [352, 363], "yourself": [352, 357, 369], "roll": 352, "instruct": 352, "devic": 352, "ython": 353, "m": [353, 363, 364], "atch": 353, "dentif": 353, "ackag": 353, "referenc": [353, 356, 357, 359, 369], "quantifi": [353, 356], "autom": 353, "wide": 353, "methodologi": [353, 357, 363], "soon": 353, "quickstart": 353, "relat": 353, "dive": [353, 368], "contribut": 353, "comprehens": [353, 356, 358, 359, 368, 369], "hint": [353, 358, 363], "mini": 354, "enabl": [354, 363], "levelnam": 354, "asctim": 354, "messag": [354, 358], "stream": 354, "stderr": 354, "output_directori": 354, "add_on": 354, "text": [354, 358, 363], "usetex": 354, "xtick": 354, "ytick": 354, "top": [354, 359, 368], "bottom": 354, "labeltop": 354, "labelbottom": 354, "visibl": 354, "labelleft": 354, "labelright": 354, "direct": 354, "font": 354, "inferno": 354, "git": 355, "www": 355, "github": 355, "com": 355, "eliza": 355, "diggin": 355, "pip": 355, "line": [355, 358, 359, 368], "product": [356, 363], "telescop": [356, 365], "unknown": 356, "framework": [356, 358, 363], "rapidli": 356, "uniformli": 356, "cone": 356, "uniqu": 356, "account": [356, 359, 363, 365], "instrument": [356, 358, 363], "poissonian": 356, "dust": 356, "toolkit": 356, "unidentifi": 356, "studi": 356, "predominantli": 356, "mix": 356, "knowledg": [356, 363, 368], "continu": [356, 363], "grow": 356, "character": 356, "spectra": 356, "suitabl": 357, "audienc": 357, "hello": [357, 364], "world": [357, 364], "recount": 357, "greater": 357, "themselv": [357, 359, 369], "across": [357, 358, 368], "poisson_map": [357, 359], "psf": [357, 363], "stretch": 357, "maximum": 357, "nut": 357, "bolt": 357, "complic": 358, "aris": 358, "sensibl": 358, "my": [358, 364], "abil": [358, 359], "command": 358, "csv": [358, 359], "txt": 358, "difficulti": 358, "assur": [358, 368], "filetyp": 358, "xmatch": 358, "h": [358, 363], "input_path": 358, "output_path": 358, "exit": 358, "flag": 358, "db1": 358, "db2": 358, "dbn": 358, "proper": 358, "script": 358, "registri": [358, 368], "altern": 358, "info": [358, 359], "2024": [358, 359, 369], "04": [358, 369], "28": 358, "13": [358, 359, 369], "265": 358, "322": 358, "ned_match": 358, "699": 358, "simbad_match": 358, "750": 358, "5466": [358, 369], "751": 358, "752": 358, "753": 358, "763": 358, "003": 358, "006": 358, "15": 358, "00": [358, 359], "157": 358, "57": 358, "linearli": 358, "5000": 358, "minut": 358, "000": 358, "equat": 358, "hour": 358, "full": [358, 364], "insid": 358, "database_nam": 358, "conjoin": 358, "source_match": [358, 359], "goe": 358, "cross_matching_databas": 358, "create_blank_cross_matching_t": 358, "search_databas": 358, "add_extra_info": 358, "cross_matching_t": 358, "obvious": [358, 363, 364], "rememb": [358, 363], "join": [358, 359], "manipul": 358, "declin": 358, "correct_query_output": [358, 359], "writabl": 358, "problemat": 358, "bad": 358, "catalog_t": [358, 363], "home": [358, 359], "ediggin": [358, 359], "pyrosita_test": [358, 359], "q": 358, "sqlite3": 358, "sqlite": 358, "31": [358, 359], "2020": 358, "19": 358, "enter": [358, 368], "IF": 358, "catalog_object": 358, "detuid": [358, 369], "skytil": 358, "integ": 358, "id_src": 358, "uid": 358, "bigint": 358, "flag_sp_lga": 358, "smallint": 358, "flag_sp_gc_con": 358, "flag_no_radec_err": 358, "flag_no_ext_err": 358, "flag_no_cts_err": 358, "flag_opt": [358, 369], "date_run": 358, "veloc": 358, "magnitud": 358, "photometri": 358, "diamet": 358, "simbad_std_match": 358, "dec_prec": 358, "coo_err_maja": 358, "coo_err_mina": 358, "coo_err_angl": 358, "coo_qual": 358, "coo_wavelength": 358, "coo_bibcod": 358, "ra_d_a": 358, "dec_d_d": 358, "script_number_id": 358, "place": 358, "power": [358, 368], "reduc": [358, 364], "fortun": 358, "plai": 358, "role": 358, "organ": 358, "analyz": 358, "made": 358, "slightli": [358, 369], "protocol": 358, "guess": [358, 363], "sound": [358, 363], "catalog_includ": 358, "sun": 358, "apr": 358, "23": 358, "object_correct": 358, "column_correct": 358, "action": 358, "taken": 358, "renam": [358, 359], "tag": 358, "add_catalog": 358, "correct_object_typ": 358, "correct_column_nam": 358, "correct_coordinate_column": 358, "correct_coordin": 358, "later": 358, "articl": 358, "capabl": 358, "match_tabl": [358, 363], "ned_match_t": 358, "catalog_ra": 358, "j013729": [358, 369], "195637": [358, 369], "371790": 358, "wisea": 358, "j013725": 358, "195648": 358, "j013726": 358, "195650": 358, "61": 358, "195716": 358, "73": 358, "195620": 358, "91": 358, "195636": 358, "183741": 358, "j062052": 358, "284050": 358, "95": 358, "217384": 358, "79": 358, "284119": 358, "183742": 358, "j062053": 358, "284146": 358, "183743": 358, "284054": 358, "183744": 358, "89": 358, "284012": 358, "183745": 358, "j062055": 358, "65": 358, "284021": 358, "183746": 358, "One": [358, 359, 363, 365, 368], "plot_match": 358, "bullet": 358, "jwst": 358, "smac": 358, "j0723": 358, "7327": 358, "j072316": 358, "732718": 358, "gle": 358, "clg": 358, "desi": 358, "hst": 358, "background": 358, "scatter_kwarg": 358, "w": 358, "marker": 358, "o": [358, 359], "f444w": 358, "composit": 358, "white": 358, "subject": [358, 365], "chosen": [358, 369], "pai": 358, "decis": 358, "fidel": 358, "furthermor": [358, 363], "legitim": 358, "significantli": [358, 363], "cost": [358, 363], "minim": [358, 359], "subprocess": 358, "perfect": [358, 363], "assign": 358, "total": [358, 359], "c_i": 358, "th": 358, "instrumental_reduct": 358, "corner": 359, "stone": 359, "scientif": [359, 369], "simplifi": [359, 363], "infer": [359, 363], "state": 359, "caltech": 359, "ned_std": 359, "coupl": [359, 364], "univers": [359, 363], "share": 359, "simplest": 359, "extragalact": 359, "gc": 359, "query_output": 359, "59": 359, "485": 359, "2mass": 359, "j17453717": 359, "2856090": 359, "tsk2008": 359, "0223": 359, "involv": [359, 365, 368], "21": [359, 369], "high": 359, "surpris": 359, "outsid": 359, "1790": 359, "add_sources_to_poisson": 359, "08": 359, "11it": 359, "14": 359, "07": 359, "043": 359, "pyx": 359, "1800": 359, "certain": 359, "extent": 359, "obviou": [359, 365], "searchabl": 359, "vizier": 359, "vastli": 359, "distinctli": 359, "despit": 359, "effort": 359, "led": 359, "gotcha": 359, "smaller": 359, "tb": 359, "17": 359, "721": 359, "722": 359, "723": 359, "trivial": [359, 363], "worri": 359, "parallel": 359, "complementari": 359, "tend": 359, "margin": 359, "due": 359, "popular": 359, "db_name": 359, "_std": 359, "pictur": [359, 363], "shown": 359, "psn": 359, "deduc": [359, 368, 369], "hand": [359, 363], "prescript": 359, "alter": [359, 363, 368], "activ": 359, "togeth": 359, "stress": 359, "rather": 359, "source_match_memori": 359, "_query_radiu": 359, "maintain": [359, 368], "signatur": [359, 363], "beyond": 359, "freedom": 359, "counterpart": 359, "encourag": 359, "off": 359, "_remotetempl": 359, "default_poisson_atlas_path": 359, "poisson_map_directori": 359, "class_nam": 359, "default_query_config": 359, "_databaseconfigset": 359, "default_source_schema_registri": [359, 368], "query_config_setting_1": 359, "query_config_setting_2": 359, "config_n": 359, "got": 359, "modifi": [359, 369], "astro": 359, "usual": [359, 363], "default_correct_query_output": 359, "your_custom_query_cod": 359, "request": 359, "connectionerror": 359, "databaseerror": 359, "timeout": 359, "builtin_schema": [359, 368], "directori": 359, "awai": 359, "face": 359, "inaccur": 363, "boil": 363, "down": 363, "premis": 363, "hypothes": 363, "h_0": 363, "null": 363, "hypothesi": 363, "h_1": 363, "h_i": 363, "grasp": 363, "pose": 363, "neither": 363, "observatori": 363, "ask": 363, "answer": 363, "budavari": 363, "et": 363, "al": 363, "busz08": 363, "m_": 363, "cat": 363, "int_": 363, "similarli": 363, "symmetr": 363, "displac": 363, "integr": 363, "becas": 363, "arriv": 363, "box": 363, "consider": 363, "cmdschema": 363, "customiz": 363, "poserr": 363, "unfortun": 363, "astrometry_mode_cat": 363, "astrometry_mode_db": 363, "axial": 363, "ellips": 363, "signific": 363, "influenc": 363, "unless": 363, "unbias": 363, "prepar": 363, "easier": 363, "ruin": 363, "flaw": 363, "pricei": 363, "catalog_row": 363, "exactli": 363, "prerog": 363, "explain": 363, "standpoint": 363, "_i": 363, "accuraci": 363, "mu": 363, "uninform": 363, "symmetri": 363, "refin": 363, "analyt": 363, "sqrt": 363, "mathcal": 363, "_1": 363, "_2": 363, "mathmat": 363, "expon": 363, "sigma_1": 363, "sigma_2": 363, "_2r": 363, "nu": 363, "prod_i": 363, "sigma_i": 363, "x_1": 363, "x_2": 363, "recal": 363, "yield": 363, "intric": 363, "plethora": 363, "piec": 363, "window": 363, "naiveti": 363, "headach": 363, "ideal": 363, "p_i": 363, "recalcul": 363, "stabil": 363, "threshold": 363, "budav\u00e1ri": 363, "szalai": 363, "2008": 363, "probabilist": 363, "astrophys": 363, "journal": 363, "679": 363, "301": 363, "demand": 364, "masteri": 364, "validate_param": 364, "__call__": 364, "perspect": [364, 368], "scaffold": 364, "process_nam": 364, "_parameter_dictionari": 364, "protect": 364, "myprocess": 364, "mystandardnam": 364, "ooop": 364, "reductionprocessparamet": 364, "benefit": 364, "realpython": 364, "parameter_1": 364, "parameter_2": 364, "red_proc": 364, "elimin": 365, "pattern": 365, "emiss": 365, "objecttypereduct": 365, "characterist": 365, "seemingli": 365, "continuum": 365, "wavelength": 365, "luminos": 365, "everyth": 368, "dataclass": 368, "reductionschema": 368, "feed": 368, "syntax": 368, "move": [368, 369], "tab": 368, "worthwhil": 368, "whenev": 368, "toml": 368, "my_type_column": 368, "my_redshift_column": 368, "my_object_id": 368, "my_ra": 368, "my_dec": 368, "definit": 368, "object_map": 368, "g_cluster": 368, "gclstr": 368, "schemaregistri": 368, "as_list": 368, "source_t": 368, "ned_schema": 368, "ones": 368, "regist": 368, "behav": 368, "regular": 368, "dict_kei": 368, "getattr": 368, "usefulli": 368, "too": 368, "builtin_fram": 368, "available_coordinate_fram": 368, "traceback": 368, "recent": 368, "ipython": 368, "16": 368, "073ab00b423": 368, "455": 368, "astro_coord": 368, "assertionerror": 368, "progress": 368, "had": 369, "therein": 369, "bytes23": 369, "bytes32": 369, "int16": 369, "j002937": 369, "310209": 369, "eb01_009120_020_ml00004_002_c010": 369, "j004207": 369, "283154": 369, "eb01_012120_020_ml00002_002_c010": 369, "j004922": 369, "293108": 369, "eb01_012120_020_ml00003_002_c010": 369, "j005448": 369, "311230": 369, "eb01_012120_020_ml00004_002_c010": 369, "j012910": 369, "214156": 369, "eb01_021111_020_ml00001_002_c010": 369, "j012338": 369, "231059": 369, "eb01_021114_020_ml00001_002_c010": 369, "eb01_024111_020_ml00005_003_c010": 369, "j015219": 369, "183235": 369, "eb01_027108_020_ml00003_002_c010": 369, "j015721": 369, "161420": 369, "eb01_029105_020_ml00003_002_c010": 369, "j061245": 369, "520045": 369, "em01_095141_020_ml01024_003_c010": 369, "j130424": 369, "132131": 369, "em01_197078_020_ml00270_003_c010": 369, "j130833": 369, "032916": 369, "em01_197087_020_ml00223_003_c010": 369, "j131142": 369, "303349": 369, "em01_197120_020_ml00303_002_c010": 369, "j060719": 369, "715042": 369, "em01_095162_020_ml01380_002_c010": 369, "j061241": 369, "705749": 369, "em01_095162_020_ml02377_002_c010": 369, "j062748": 369, "230934": 369, "em01_096114_020_ml00478_002_c010": 369, "j062429": 369, "351724": 369, "em01_096126_020_ml00282_002_c010": 369, "j131252": 369, "161006": 369, "em01_198105_020_ml00374_002_c010": 369, "j130904": 369, "260824": 369, "em01_198117_020_ml00487_002_c010": 369, "classic": 369, "broader": 369, "308": 369, "318": 369, "320": 369, "whoa": 369, "accord": 369, "did": 369, "viabl": 369, "j020037": 369, "164905": 369, "j062733": 369, "513408": 369, "recommend": 369}, "objects": {"stats": [[0, 0, 0, "-", "gaussian_process"], [15, 0, 0, "-", "map_regression"], [41, 0, 0, "-", "utilities"]], "stats.gaussian_process": [[1, 1, 1, "", "Haversine_RBF"]], "stats.gaussian_process.Haversine_RBF": [[2, 2, 1, "", "__init__"], [3, 3, 1, "", "anisotropic"], [4, 3, 1, "", "bounds"], [5, 2, 1, "", "clone_with_theta"], [6, 2, 1, "", "diag"], [7, 2, 1, "", "get_params"], [8, 3, 1, "", "hyperparameter_length_scale"], [9, 3, 1, "", "hyperparameters"], [10, 2, 1, "", "is_stationary"], [11, 3, 1, "", "n_dims"], [12, 3, 1, "", "requires_vector_input"], [13, 2, 1, "", "set_params"], [14, 3, 1, "", "theta"]], "stats.map_regression": [[16, 1, 1, "", "BayesianPoissonMapRegressor"], [19, 1, 1, "", "KNNeighborMapRegressor"], [26, 1, 1, "", "PoissonMapRegressor"], [33, 1, 1, "", "RNNeighborMapRegressor"], [40, 5, 1, "", "train_map_regressor"]], "stats.map_regression.BayesianPoissonMapRegressor": [[17, 2, 1, "", "__init__"], [18, 2, 1, "", "build_map_MAP"]], "stats.map_regression.KNNeighborMapRegressor": [[20, 2, 1, "", "__init__"], [21, 2, 1, "", "cross_validate"], [22, 4, 1, "", "default_training_fraction"], [23, 4, 1, "", "hyperparameters"], [24, 4, 1, "", "regressor_parameters"], [25, 2, 1, "", "train_model"]], "stats.map_regression.PoissonMapRegressor": [[27, 2, 1, "", "__init__"], [28, 2, 1, "", "cross_validate"], [29, 4, 1, "", "default_training_fraction"], [30, 4, 1, "", "hyperparameters"], [31, 4, 1, "", "regressor_parameters"], [32, 2, 1, "", "train_model"]], "stats.map_regression.RNNeighborMapRegressor": [[34, 2, 1, "", "__init__"], [35, 2, 1, "", "cross_validate"], [36, 4, 1, "", "default_training_fraction"], [37, 4, 1, "", "hyperparameters"], [38, 4, 1, "", "regressor_parameters"], [39, 2, 1, "", "train_model"]], "stats.utilities": [[42, 5, 1, "", "uniform_sample_spherical"]], "structures": [[43, 0, 0, "-", "map"]], "structures.map": [[44, 1, 1, "", "Map"], [52, 1, 1, "", "MapAtlas"], [63, 1, 1, "", "PoissonAtlas"], [85, 1, 1, "", "StatAtlas"]], "structures.map.Map": [[45, 2, 1, "", "__init__"], [46, 3, 1, "", "coordinate_frame"], [47, 3, 1, "", "data"], [48, 2, 1, "", "get_healpix_id"], [49, 3, 1, "", "pixel_positions"], [50, 2, 1, "", "plot"], [51, 2, 1, "", "transform_map_coordinates"]], "structures.map.MapAtlas": [[53, 2, 1, "", "__init__"], [54, 3, 1, "", "coordinate_frame"], [55, 2, 1, "", "generate"], [56, 2, 1, "", "get_map"], [57, 3, 1, "", "has_maps"], [58, 3, 1, "", "hdus"], [59, 3, 1, "", "map_names"], [60, 3, 1, "", "pixel_positions"], [61, 2, 1, "", "remove"], [62, 2, 1, "", "reshape_healpix"]], "structures.map.PoissonAtlas": [[64, 3, 1, "", "COUNTS"], [65, 2, 1, "", "__init__"], [66, 2, 1, "", "append_to_fits"], [67, 2, 1, "", "build_poisson_map"], [68, 2, 1, "", "build_poisson_map_KNN"], [69, 2, 1, "", "build_poisson_map_MAP"], [70, 2, 1, "", "build_poisson_map_RNN"], [71, 2, 1, "", "build_poisson_map_regressor"], [72, 2, 1, "", "build_poisson_maps"], [73, 3, 1, "", "coordinate_frame"], [74, 2, 1, "", "generate"], [75, 2, 1, "", "get_map"], [76, 2, 1, "", "get_points"], [77, 3, 1, "", "has_maps"], [78, 3, 1, "", "hdus"], [79, 3, 1, "", "map_names"], [80, 3, 1, "", "pixel_positions"], [81, 2, 1, "", "remove"], [82, 2, 1, "", "reset"], [83, 2, 1, "", "reshape_healpix"], [84, 2, 1, "", "sample_from_database"]], "structures.map.StatAtlas": [[86, 3, 1, "", "COUNTS"], [87, 2, 1, "", "__init__"], [88, 2, 1, "", "append_to_fits"], [89, 3, 1, "", "coordinate_frame"], [90, 2, 1, "", "generate"], [91, 2, 1, "", "get_map"], [92, 2, 1, "", "get_points"], [93, 3, 1, "", "has_maps"], [94, 3, 1, "", "hdus"], [95, 3, 1, "", "map_names"], [96, 3, 1, "", "pixel_positions"], [97, 2, 1, "", "remove"], [98, 2, 1, "", "reset"], [99, 2, 1, "", "reshape_healpix"], [100, 2, 1, "", "sample_from_database"]], "utilities": [[101, 0, 0, "-", "core"], [134, 0, 0, "-", "logging"], [135, 0, 0, "-", "plot"], [140, 0, 0, "-", "sql"], [143, 0, 0, "-", "text"], [147, 0, 0, "-", "types"]], "utilities.core": [[102, 1, 1, "", "AttrDict"], [118, 1, 1, "", "YAMLConfiguration"], [126, 5, 1, "", "enforce_units"], [127, 5, 1, "", "find_descriptors"], [128, 5, 1, "", "getFromDict"], [129, 5, 1, "", "merge_dicts"], [130, 5, 1, "", "produce_dict_heading"], [131, 5, 1, "", "rgetattr"], [132, 5, 1, "", "rsetattr"], [133, 5, 1, "", "setInDict"]], "utilities.core.AttrDict": [[103, 2, 1, "", "__init__"], [104, 2, 1, "", "clean"], [105, 2, 1, "", "clean_types"], [106, 2, 1, "", "clear"], [107, 2, 1, "", "copy"], [108, 2, 1, "", "from_nested_dict"], [109, 2, 1, "", "fromkeys"], [110, 2, 1, "", "get"], [111, 2, 1, "", "items"], [112, 2, 1, "", "keys"], [113, 2, 1, "", "pop"], [114, 2, 1, "", "popitem"], [115, 2, 1, "", "setdefault"], [116, 2, 1, "", "update"], [117, 2, 1, "", "values"]], "utilities.core.YAMLConfiguration": [[119, 2, 1, "", "__init__"], [120, 3, 1, "", "config"], [121, 2, 1, "", "load"], [122, 2, 1, "", "load_from_path"], [123, 2, 1, "", "reload"], [124, 2, 1, "", "set_on_disk"], [125, 2, 1, "", "set_param"]], "utilities.plot": [[136, 5, 1, "", "get_hips_image"], [137, 5, 1, "", "plot_healpix"], [138, 5, 1, "", "plot_hips"], [139, 5, 1, "", "set_style"]], "utilities.sql": [[141, 5, 1, "", "chunk_sql_query_operation"], [142, 5, 1, "", "chunk_sql_table_operation"]], "utilities.text": [[144, 5, 1, "", "get_package_version"], [145, 5, 1, "", "print_cli_header"], [146, 5, 1, "", "print_version"]], "utilities.types": [[148, 1, 1, "", "ColumnMap"], [193, 1, 1, "", "ColumnStdErrorSpecifier"], [229, 1, 1, "", "ICRSCoordinateStdErrorSpecifier"], [265, 1, 1, "", "Registry"], [280, 1, 1, "", "SourceTableSchemaSettings"], [312, 1, 1, "", "TableColumn"], [344, 5, 1, "", "construct_template"], [345, 5, 1, "", "convert_np_type_to_sql"]], "utilities.types.ColumnMap": [[149, 4, 1, "", "DEC"], [150, 4, 1, "", "DEC_ERR"], [151, 4, 1, "", "GAL_B"], [152, 4, 1, "", "GAL_B_ERR"], [153, 4, 1, "", "GAL_L"], [154, 4, 1, "", "GAL_L_ERR"], [155, 4, 1, "", "NAME"], [156, 4, 1, "", "RA"], [157, 4, 1, "", "RA_ERR"], [158, 4, 1, "", "SEP"], [159, 4, 1, "", "TYPE"], [160, 4, 1, "", "Z"], [161, 2, 1, "", "__init__"], [162, 2, 1, "", "construct"], [163, 2, 1, "", "copy"], [164, 2, 1, "", "dict"], [165, 2, 1, "", "from_orm"], [166, 2, 1, "", "json"], [167, 4, 1, "", "model_computed_fields"], [168, 4, 1, "", "model_config"], [169, 2, 1, "", "model_construct"], [170, 2, 1, "", "model_copy"], [171, 2, 1, "", "model_dump"], [172, 2, 1, "", "model_dump_json"], [173, 3, 1, "", "model_extra"], [174, 4, 1, "", "model_fields"], [175, 3, 1, "", "model_fields_set"], [176, 2, 1, "", "model_json_schema"], [177, 2, 1, "", "model_parametrized_name"], [178, 2, 1, "", "model_post_init"], [179, 2, 1, "", "model_rebuild"], [180, 2, 1, "", "model_validate"], [181, 2, 1, "", "model_validate_json"], [182, 2, 1, "", "model_validate_strings"], [183, 2, 1, "", "parse_file"], [184, 2, 1, "", "parse_obj"], [185, 2, 1, "", "parse_raw"], [186, 2, 1, "", "schema"], [187, 2, 1, "", "schema_json"], [188, 2, 1, "", "search_inverse"], [189, 2, 1, "", "update_forward_refs"], [190, 2, 1, "", "validate"], [191, 2, 1, "", "validate_table_column_no_unit"], [192, 2, 1, "", "validate_table_column_unit"]], "utilities.types.ColumnStdErrorSpecifier": [[194, 2, 1, "", "__init__"], [195, 4, 1, "", "base_column"], [196, 2, 1, "", "construct"], [197, 2, 1, "", "copy"], [198, 2, 1, "", "dict"], [199, 4, 1, "", "error_column"], [200, 4, 1, "", "error_convert_to_std"], [201, 4, 1, "", "error_value"], [202, 2, 1, "", "from_orm"], [203, 2, 1, "", "json"], [204, 4, 1, "", "model_computed_fields"], [205, 4, 1, "", "model_config"], [206, 2, 1, "", "model_construct"], [207, 2, 1, "", "model_copy"], [208, 2, 1, "", "model_dump"], [209, 2, 1, "", "model_dump_json"], [210, 3, 1, "", "model_extra"], [211, 4, 1, "", "model_fields"], [212, 3, 1, "", "model_fields_set"], [213, 2, 1, "", "model_json_schema"], [214, 2, 1, "", "model_parametrized_name"], [215, 2, 1, "", "model_post_init"], [216, 2, 1, "", "model_rebuild"], [217, 2, 1, "", "model_validate"], [218, 2, 1, "", "model_validate_json"], [219, 2, 1, "", "model_validate_strings"], [220, 2, 1, "", "parse_file"], [221, 2, 1, "", "parse_obj"], [222, 2, 1, "", "parse_raw"], [223, 2, 1, "", "schema"], [224, 2, 1, "", "schema_json"], [225, 2, 1, "", "update_forward_refs"], [226, 2, 1, "", "validate"], [227, 2, 1, "", "validate_on_table"], [228, 2, 1, "", "validator"]], "utilities.types.ICRSCoordinateStdErrorSpecifier": [[230, 2, 1, "", "__init__"], [231, 2, 1, "", "check_empty"], [232, 2, 1, "", "construct"], [233, 2, 1, "", "copy"], [234, 2, 1, "", "dict"], [235, 2, 1, "", "from_orm"], [236, 2, 1, "", "json"], [237, 4, 1, "", "lat_error"], [238, 4, 1, "", "lon_error"], [239, 3, 1, "", "mode"], [240, 4, 1, "", "model_computed_fields"], [241, 4, 1, "", "model_config"], [242, 2, 1, "", "model_construct"], [243, 2, 1, "", "model_copy"], [244, 2, 1, "", "model_dump"], [245, 2, 1, "", "model_dump_json"], [246, 3, 1, "", "model_extra"], [247, 4, 1, "", "model_fields"], [248, 3, 1, "", "model_fields_set"], [249, 2, 1, "", "model_json_schema"], [250, 2, 1, "", "model_parametrized_name"], [251, 2, 1, "", "model_post_init"], [252, 2, 1, "", "model_rebuild"], [253, 2, 1, "", "model_validate"], [254, 2, 1, "", "model_validate_json"], [255, 2, 1, "", "model_validate_strings"], [256, 2, 1, "", "parse_file"], [257, 2, 1, "", "parse_obj"], [258, 2, 1, "", "parse_raw"], [259, 4, 1, "", "position_error"], [260, 2, 1, "", "schema"], [261, 2, 1, "", "schema_json"], [262, 2, 1, "", "update_forward_refs"], [263, 2, 1, "", "validate"], [264, 2, 1, "", "validator"]], "utilities.types.Registry": [[266, 2, 1, "", "__init__"], [267, 2, 1, "", "add"], [268, 2, 1, "", "as_list"], [269, 2, 1, "", "clear"], [270, 2, 1, "", "copy"], [271, 2, 1, "", "fromkeys"], [272, 2, 1, "", "get"], [273, 2, 1, "", "items"], [274, 2, 1, "", "keys"], [275, 2, 1, "", "pop"], [276, 2, 1, "", "popitem"], [277, 2, 1, "", "setdefault"], [278, 2, 1, "", "update"], [279, 2, 1, "", "values"]], "utilities.types.SourceTableSchemaSettings": [[281, 2, 1, "", "__init__"], [282, 2, 1, "", "construct"], [283, 2, 1, "", "copy"], [284, 4, 1, "", "default_coord_system"], [285, 2, 1, "", "dict"], [286, 2, 1, "", "from_orm"], [287, 2, 1, "", "json"], [288, 4, 1, "", "model_computed_fields"], [289, 4, 1, "", "model_config"], [290, 2, 1, "", "model_construct"], [291, 2, 1, "", "model_copy"], [292, 2, 1, "", "model_dump"], [293, 2, 1, "", "model_dump_json"], [294, 3, 1, "", "model_extra"], [295, 4, 1, "", "model_fields"], [296, 3, 1, "", "model_fields_set"], [297, 2, 1, "", "model_json_schema"], [298, 2, 1, "", "model_parametrized_name"], [299, 2, 1, "", "model_post_init"], [300, 2, 1, "", "model_rebuild"], [301, 2, 1, "", "model_validate"], [302, 2, 1, "", "model_validate_json"], [303, 2, 1, "", "model_validate_strings"], [304, 4, 1, "", "object_type_separator"], [305, 2, 1, "", "parse_file"], [306, 2, 1, "", "parse_obj"], [307, 2, 1, "", "parse_raw"], [308, 2, 1, "", "schema"], [309, 2, 1, "", "schema_json"], [310, 2, 1, "", "update_forward_refs"], [311, 2, 1, "", "validate"]], "utilities.types.TableColumn": [[313, 2, 1, "", "__init__"], [314, 2, 1, "", "construct"], [315, 2, 1, "", "copy"], [316, 2, 1, "", "dict"], [317, 2, 1, "", "from_orm"], [318, 2, 1, "", "json"], [319, 4, 1, "", "model_computed_fields"], [320, 4, 1, "", "model_config"], [321, 2, 1, "", "model_construct"], [322, 2, 1, "", "model_copy"], [323, 2, 1, "", "model_dump"], [324, 2, 1, "", "model_dump_json"], [325, 3, 1, "", "model_extra"], [326, 4, 1, "", "model_fields"], [327, 3, 1, "", "model_fields_set"], [328, 2, 1, "", "model_json_schema"], [329, 2, 1, "", "model_parametrized_name"], [330, 2, 1, "", "model_post_init"], [331, 2, 1, "", "model_rebuild"], [332, 2, 1, "", "model_validate"], [333, 2, 1, "", "model_validate_json"], [334, 2, 1, "", "model_validate_strings"], [335, 4, 1, "", "name"], [336, 2, 1, "", "parse_file"], [337, 2, 1, "", "parse_obj"], [338, 2, 1, "", "parse_raw"], [339, 2, 1, "", "schema"], [340, 2, 1, "", "schema_json"], [341, 4, 1, "", "unit"], [342, 2, 1, "", "update_forward_refs"], [343, 2, 1, "", "validate"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"stat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "gaussian_process": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "haversine_rbf": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "__init__": [2, 17, 20, 27, 34, 45, 53, 65, 87, 103, 119, 161, 194, 230, 266, 281, 313], "anisotrop": 3, "bound": 4, "clone_with_theta": 5, "diag": 6, "get_param": 7, "hyperparameter_length_scal": 8, "hyperparamet": [9, 23, 30, 37], "is_stationari": 10, "n_dim": 11, "requires_vector_input": 12, "set_param": [13, 125], "theta": 14, "map_regress": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "bayesianpoissonmapregressor": [16, 17, 18], "build_map_map": 18, "knneighbormapregressor": [19, 20, 21, 22, 23, 24, 25], "cross_valid": [21, 28, 35], "default_training_fract": [22, 29, 36], "regressor_paramet": [24, 31, 38], "train_model": [25, 32, 39], "poissonmapregressor": [26, 27, 28, 29, 30, 31, 32], "rnneighbormapregressor": [33, 34, 35, 36, 37, 38, 39], "train_map_regressor": 40, "util": [41, 42, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "uniform_sample_spher": 42, "structur": [43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 347, 364], "map": [43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 350], "coordinate_fram": [46, 54, 73, 89], "data": [47, 347, 349, 358, 369], "get_healpix_id": 48, "pixel_posit": [49, 60, 80, 96], "plot": [50, 135, 136, 137, 138, 139, 358, 361], "transform_map_coordin": 51, "mapatla": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "gener": [55, 74, 90], "get_map": [56, 75, 91], "has_map": [57, 77, 93], "hdu": [58, 78, 94, 350], "map_nam": [59, 79, 95], "remov": [61, 81, 97], "reshape_healpix": [62, 83, 99], "poissonatla": [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "count": [64, 86, 350], "append_to_fit": [66, 88], "build_poisson_map": [67, 72], "build_poisson_map_knn": 68, "build_poisson_map_map": 69, "build_poisson_map_rnn": 70, "build_poisson_map_regressor": 71, "get_point": [76, 92], "reset": [82, 98], "sample_from_databas": [84, 100], "statatla": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "core": [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 346], "attrdict": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], "clean": 104, "clean_typ": 105, "clear": [106, 269], "copi": [107, 163, 197, 233, 270, 283, 315], "from_nested_dict": 108, "fromkei": [109, 271], "get": [110, 272, 357], "item": [111, 273], "kei": [112, 274, 363], "pop": [113, 275], "popitem": [114, 276], "setdefault": [115, 277], "updat": [116, 278], "valu": [117, 279], "yamlconfigur": [118, 119, 120, 121, 122, 123, 124, 125], "config": 120, "load": [121, 349, 369], "load_from_path": 122, "reload": 123, "set_on_disk": 124, "enforce_unit": 126, "find_descriptor": 127, "getfromdict": 128, "merge_dict": 129, "produce_dict_head": 130, "rgetattr": 131, "rsetattr": 132, "setindict": 133, "log": [134, 360], "get_hips_imag": 136, "plot_healpix": 137, "plot_hip": 138, "set_styl": 139, "sql": [140, 141, 142], "chunk_sql_query_oper": 141, "chunk_sql_table_oper": 142, "text": [143, 144, 145, 146], "get_package_vers": 144, "print_cli_head": 145, "print_vers": 146, "type": [147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 359, 365, 368], "columnmap": [148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192], "dec": 149, "dec_err": 150, "gal_b": 151, "gal_b_err": 152, "gal_l": 153, "gal_l_err": 154, "name": [155, 335], "ra": 156, "ra_err": 157, "sep": 158, "z": 160, "construct": [162, 196, 232, 282, 314, 350], "dict": [164, 198, 234, 285, 316], "from_orm": [165, 202, 235, 286, 317], "json": [166, 203, 236, 287, 318], "model_computed_field": [167, 204, 240, 288, 319], "model_config": [168, 205, 241, 289, 320], "model_construct": [169, 206, 242, 290, 321], "model_copi": [170, 207, 243, 291, 322], "model_dump": [171, 208, 244, 292, 323], "model_dump_json": [172, 209, 245, 293, 324], "model_extra": [173, 210, 246, 294, 325], "model_field": [174, 211, 247, 295, 326], "model_fields_set": [175, 212, 248, 296, 327], "model_json_schema": [176, 213, 249, 297, 328], "model_parametrized_nam": [177, 214, 250, 298, 329], "model_post_init": [178, 215, 251, 299, 330], "model_rebuild": [179, 216, 252, 300, 331], "model_valid": [180, 217, 253, 301, 332], "model_validate_json": [181, 218, 254, 302, 333], "model_validate_str": [182, 219, 255, 303, 334], "parse_fil": [183, 220, 256, 305, 336], "parse_obj": [184, 221, 257, 306, 337], "parse_raw": [185, 222, 258, 307, 338], "schema": [186, 223, 260, 308, 339, 347, 349, 359, 367, 368, 369], "schema_json": [187, 224, 261, 309, 340], "search_invers": 188, "update_forward_ref": [189, 225, 262, 310, 342], "valid": [190, 226, 228, 263, 264, 311, 343], "validate_table_column_no_unit": 191, "validate_table_column_unit": 192, "columnstderrorspecifi": [193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228], "base_column": 195, "error_column": 199, "error_convert_to_std": 200, "error_valu": 201, "validate_on_t": 227, "icrscoordinatestderrorspecifi": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264], "check_empti": 231, "lat_error": 237, "lon_error": 238, "mode": [239, 363], "position_error": 259, "registri": [265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279], "add": 267, "as_list": 268, "sourcetableschemaset": [280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311], "default_coord_system": 284, "object_type_separ": 304, "tablecolumn": [312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "unit": 341, "construct_templ": 344, "convert_np_type_to_sql": 345, "api": 346, "modul": 346, "statist": [346, 357], "other": 346, "databas": [347, 349, 351, 358, 359], "sky": 347, "collect": 347, "format": 347, "exampl": 348, "cross": [349, 358, 359], "referenc": [349, 358], "overview": [349, 356, 358, 363], "content": [349, 350, 351], "match": [349, 358, 359], "against": 349, "reduct": [349, 358, 363, 364, 365, 367], "astrometri": [349, 363], "poisson": [350, 359], "introduct": 350, "repres": 350, "atlas": [350, 359], "The": [350, 358], "tabl": [350, 358, 369], "densiti": 350, "estim": [350, 363], "maximum": 350, "A": [350, 358, 359], "posteriori": [350, 363], "regress": 350, "k": 350, "nearest": 350, "neighbor": 350, "r": 350, "us": 351, "pyxmip": [351, 352, 354, 355, 356, 368], "access": 351, "local": [351, 359], "basic": [351, 357, 364], "properti": 351, "remot": [351, 359], "beyond": 351, "simpl": 351, "queri": [351, 359], "what": [351, 356, 358, 364, 368], "i": [351, 356, 358, 364, 368], "quickstart": 352, "guid": 352, "instal": [352, 355], "setup": [352, 363], "critic": 352, "compon": 352, "featur": 353, "resourc": 353, "page": 353, "configur": [354, 359], "from": [355, 358, 363, 369], "pypi": 355, "sourc": [355, 369], "can": 356, "do": 356, "With": [356, 368, 369], "how": 356, "doe": 356, "work": [356, 369], "refer": [357, 363], "start": 357, "usag": [357, 363], "visual": 357, "result": 357, "advanc": 357, "expand": 357, "avail": 357, "datatyp": 357, "backend": 357, "exactli": 358, "explor": 358, "output": [358, 359], "crossmatchdatabas": 358, "make": 358, "crossmatchingdatabas": 358, "instanc": 358, "alter": 358, "meta": 358, "interact": [358, 368], "raw": 358, "pull": 358, "mathemat": [358, 363], "sub": 358, "process": [358, 363, 364], "further": 358, "inform": [358, 359], "At": 359, "glanc": 359, "definit": 359, "differ": 359, "know": 359, "creat": [359, 361], "custom": 359, "develop": 359, "standard": 359, "psf": 362, "model": [362, 363, 365], "astrometr": 363, "basi": 363, "assumpt": 363, "paramet": [363, 364], "uncertainti": 363, "select": 363, "prior": 363, "initi": 363, "run": 363, "normal": 363, "distribut": 363, "error": 363, "bay": 363, "factor": 363, "self": 363, "consist": 363, "By": 363, "iter": 363, "method": 363, "write": [364, 367, 368], "new": 364, "object": 365, "astronom": 365, "instrument": 365, "class": 368, "autom": 368, "catalog": 369, "disk": 369}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"stats.gaussian_process": [[0, "module-stats.gaussian_process"]], "stats.gaussian_process.Haversine_RBF": [[1, "stats-gaussian-process-haversine-rbf"]], "stats.gaussian_process.Haversine_RBF.__init__": [[2, "stats-gaussian-process-haversine-rbf-init"]], "stats.gaussian_process.Haversine_RBF.anisotropic": [[3, "stats-gaussian-process-haversine-rbf-anisotropic"]], "stats.gaussian_process.Haversine_RBF.bounds": [[4, "stats-gaussian-process-haversine-rbf-bounds"]], "stats.gaussian_process.Haversine_RBF.clone_with_theta": [[5, "stats-gaussian-process-haversine-rbf-clone-with-theta"]], "stats.gaussian_process.Haversine_RBF.diag": [[6, "stats-gaussian-process-haversine-rbf-diag"]], "stats.gaussian_process.Haversine_RBF.get_params": [[7, "stats-gaussian-process-haversine-rbf-get-params"]], "stats.gaussian_process.Haversine_RBF.hyperparameter_length_scale": [[8, "stats-gaussian-process-haversine-rbf-hyperparameter-length-scale"]], "stats.gaussian_process.Haversine_RBF.hyperparameters": [[9, "stats-gaussian-process-haversine-rbf-hyperparameters"]], "stats.gaussian_process.Haversine_RBF.is_stationary": [[10, "stats-gaussian-process-haversine-rbf-is-stationary"]], "stats.gaussian_process.Haversine_RBF.n_dims": [[11, "stats-gaussian-process-haversine-rbf-n-dims"]], "stats.gaussian_process.Haversine_RBF.requires_vector_input": [[12, "stats-gaussian-process-haversine-rbf-requires-vector-input"]], "stats.gaussian_process.Haversine_RBF.set_params": [[13, "stats-gaussian-process-haversine-rbf-set-params"]], "stats.gaussian_process.Haversine_RBF.theta": [[14, "stats-gaussian-process-haversine-rbf-theta"]], "stats.map_regression": [[15, "module-stats.map_regression"]], "stats.map_regression.BayesianPoissonMapRegressor": [[16, "stats-map-regression-bayesianpoissonmapregressor"]], "stats.map_regression.BayesianPoissonMapRegressor.__init__": [[17, "stats-map-regression-bayesianpoissonmapregressor-init"]], "stats.map_regression.BayesianPoissonMapRegressor.build_map_MAP": [[18, "stats-map-regression-bayesianpoissonmapregressor-build-map-map"]], "stats.map_regression.KNNeighborMapRegressor": [[19, "stats-map-regression-knneighbormapregressor"]], "stats.map_regression.KNNeighborMapRegressor.__init__": [[20, "stats-map-regression-knneighbormapregressor-init"]], "stats.map_regression.KNNeighborMapRegressor.cross_validate": [[21, "stats-map-regression-knneighbormapregressor-cross-validate"]], "stats.map_regression.KNNeighborMapRegressor.default_training_fraction": [[22, "stats-map-regression-knneighbormapregressor-default-training-fraction"]], "stats.map_regression.KNNeighborMapRegressor.hyperparameters": [[23, "stats-map-regression-knneighbormapregressor-hyperparameters"]], "stats.map_regression.KNNeighborMapRegressor.regressor_parameters": [[24, "stats-map-regression-knneighbormapregressor-regressor-parameters"]], "stats.map_regression.KNNeighborMapRegressor.train_model": [[25, "stats-map-regression-knneighbormapregressor-train-model"]], "stats.map_regression.PoissonMapRegressor": [[26, "stats-map-regression-poissonmapregressor"]], "stats.map_regression.PoissonMapRegressor.__init__": [[27, "stats-map-regression-poissonmapregressor-init"]], "stats.map_regression.PoissonMapRegressor.cross_validate": [[28, "stats-map-regression-poissonmapregressor-cross-validate"]], "stats.map_regression.PoissonMapRegressor.default_training_fraction": [[29, "stats-map-regression-poissonmapregressor-default-training-fraction"]], "stats.map_regression.PoissonMapRegressor.hyperparameters": [[30, "stats-map-regression-poissonmapregressor-hyperparameters"]], "stats.map_regression.PoissonMapRegressor.regressor_parameters": [[31, "stats-map-regression-poissonmapregressor-regressor-parameters"]], "stats.map_regression.PoissonMapRegressor.train_model": [[32, "stats-map-regression-poissonmapregressor-train-model"]], "stats.map_regression.RNNeighborMapRegressor": [[33, "stats-map-regression-rnneighbormapregressor"]], "stats.map_regression.RNNeighborMapRegressor.__init__": [[34, "stats-map-regression-rnneighbormapregressor-init"]], "stats.map_regression.RNNeighborMapRegressor.cross_validate": [[35, "stats-map-regression-rnneighbormapregressor-cross-validate"]], "stats.map_regression.RNNeighborMapRegressor.default_training_fraction": [[36, "stats-map-regression-rnneighbormapregressor-default-training-fraction"]], "stats.map_regression.RNNeighborMapRegressor.hyperparameters": [[37, "stats-map-regression-rnneighbormapregressor-hyperparameters"]], "stats.map_regression.RNNeighborMapRegressor.regressor_parameters": [[38, "stats-map-regression-rnneighbormapregressor-regressor-parameters"]], "stats.map_regression.RNNeighborMapRegressor.train_model": [[39, "stats-map-regression-rnneighbormapregressor-train-model"]], "stats.map_regression.train_map_regressor": [[40, "stats-map-regression-train-map-regressor"]], "stats.utilities": [[41, "module-stats.utilities"]], "stats.utilities.uniform_sample_spherical": [[42, "stats-utilities-uniform-sample-spherical"]], "structures.map": [[43, "module-structures.map"]], "structures.map.Map": [[44, "structures-map-map"]], "structures.map.Map.__init__": [[45, "structures-map-map-init"]], "structures.map.Map.coordinate_frame": [[46, "structures-map-map-coordinate-frame"]], "structures.map.Map.data": [[47, "structures-map-map-data"]], "structures.map.Map.get_healpix_id": [[48, "structures-map-map-get-healpix-id"]], "structures.map.Map.pixel_positions": [[49, "structures-map-map-pixel-positions"]], "structures.map.Map.plot": [[50, "structures-map-map-plot"]], "structures.map.Map.transform_map_coordinates": [[51, "structures-map-map-transform-map-coordinates"]], "structures.map.MapAtlas": [[52, "structures-map-mapatlas"]], "structures.map.MapAtlas.__init__": [[53, "structures-map-mapatlas-init"]], "structures.map.MapAtlas.coordinate_frame": [[54, "structures-map-mapatlas-coordinate-frame"]], "structures.map.MapAtlas.generate": [[55, "structures-map-mapatlas-generate"]], "structures.map.MapAtlas.get_map": [[56, "structures-map-mapatlas-get-map"]], "structures.map.MapAtlas.has_maps": [[57, "structures-map-mapatlas-has-maps"]], "structures.map.MapAtlas.hdus": [[58, "structures-map-mapatlas-hdus"]], "structures.map.MapAtlas.map_names": [[59, "structures-map-mapatlas-map-names"]], "structures.map.MapAtlas.pixel_positions": [[60, "structures-map-mapatlas-pixel-positions"]], "structures.map.MapAtlas.remove": [[61, "structures-map-mapatlas-remove"]], "structures.map.MapAtlas.reshape_healpix": [[62, "structures-map-mapatlas-reshape-healpix"]], "structures.map.PoissonAtlas": [[63, "structures-map-poissonatlas"]], "structures.map.PoissonAtlas.COUNTS": [[64, "structures-map-poissonatlas-counts"]], "structures.map.PoissonAtlas.__init__": [[65, "structures-map-poissonatlas-init"]], "structures.map.PoissonAtlas.append_to_fits": [[66, "structures-map-poissonatlas-append-to-fits"]], "structures.map.PoissonAtlas.build_poisson_map": [[67, "structures-map-poissonatlas-build-poisson-map"]], "structures.map.PoissonAtlas.build_poisson_map_KNN": [[68, "structures-map-poissonatlas-build-poisson-map-knn"]], "structures.map.PoissonAtlas.build_poisson_map_MAP": [[69, "structures-map-poissonatlas-build-poisson-map-map"]], "structures.map.PoissonAtlas.build_poisson_map_RNN": [[70, "structures-map-poissonatlas-build-poisson-map-rnn"]], "structures.map.PoissonAtlas.build_poisson_map_regressor": [[71, "structures-map-poissonatlas-build-poisson-map-regressor"]], "structures.map.PoissonAtlas.build_poisson_maps": [[72, "structures-map-poissonatlas-build-poisson-maps"]], "structures.map.PoissonAtlas.coordinate_frame": [[73, "structures-map-poissonatlas-coordinate-frame"]], "structures.map.PoissonAtlas.generate": [[74, "structures-map-poissonatlas-generate"]], "structures.map.PoissonAtlas.get_map": [[75, "structures-map-poissonatlas-get-map"]], "structures.map.PoissonAtlas.get_points": [[76, "structures-map-poissonatlas-get-points"]], "structures.map.PoissonAtlas.has_maps": [[77, "structures-map-poissonatlas-has-maps"]], "structures.map.PoissonAtlas.hdus": [[78, "structures-map-poissonatlas-hdus"]], "structures.map.PoissonAtlas.map_names": [[79, "structures-map-poissonatlas-map-names"]], "structures.map.PoissonAtlas.pixel_positions": [[80, "structures-map-poissonatlas-pixel-positions"]], "structures.map.PoissonAtlas.remove": [[81, "structures-map-poissonatlas-remove"]], "structures.map.PoissonAtlas.reset": [[82, "structures-map-poissonatlas-reset"]], "structures.map.PoissonAtlas.reshape_healpix": [[83, "structures-map-poissonatlas-reshape-healpix"]], "structures.map.PoissonAtlas.sample_from_database": [[84, "structures-map-poissonatlas-sample-from-database"]], "structures.map.StatAtlas": [[85, "structures-map-statatlas"]], "structures.map.StatAtlas.COUNTS": [[86, "structures-map-statatlas-counts"]], "structures.map.StatAtlas.__init__": [[87, "structures-map-statatlas-init"]], "structures.map.StatAtlas.append_to_fits": [[88, "structures-map-statatlas-append-to-fits"]], "structures.map.StatAtlas.coordinate_frame": [[89, "structures-map-statatlas-coordinate-frame"]], "structures.map.StatAtlas.generate": [[90, "structures-map-statatlas-generate"]], "structures.map.StatAtlas.get_map": [[91, "structures-map-statatlas-get-map"]], "structures.map.StatAtlas.get_points": [[92, "structures-map-statatlas-get-points"]], "structures.map.StatAtlas.has_maps": [[93, "structures-map-statatlas-has-maps"]], "structures.map.StatAtlas.hdus": [[94, "structures-map-statatlas-hdus"]], "structures.map.StatAtlas.map_names": [[95, "structures-map-statatlas-map-names"]], "structures.map.StatAtlas.pixel_positions": [[96, "structures-map-statatlas-pixel-positions"]], "structures.map.StatAtlas.remove": [[97, "structures-map-statatlas-remove"]], "structures.map.StatAtlas.reset": [[98, "structures-map-statatlas-reset"]], "structures.map.StatAtlas.reshape_healpix": [[99, "structures-map-statatlas-reshape-healpix"]], "structures.map.StatAtlas.sample_from_database": [[100, "structures-map-statatlas-sample-from-database"]], "utilities.core": [[101, "module-utilities.core"]], "utilities.core.AttrDict": [[102, "utilities-core-attrdict"]], "utilities.core.AttrDict.__init__": [[103, "utilities-core-attrdict-init"]], "utilities.core.AttrDict.clean": [[104, "utilities-core-attrdict-clean"]], "utilities.core.AttrDict.clean_types": [[105, "utilities-core-attrdict-clean-types"]], "utilities.core.AttrDict.clear": [[106, "utilities-core-attrdict-clear"]], "utilities.core.AttrDict.copy": [[107, "utilities-core-attrdict-copy"]], "utilities.core.AttrDict.from_nested_dict": [[108, "utilities-core-attrdict-from-nested-dict"]], "utilities.core.AttrDict.fromkeys": [[109, "utilities-core-attrdict-fromkeys"]], "utilities.core.AttrDict.get": [[110, "utilities-core-attrdict-get"]], "utilities.core.AttrDict.items": [[111, "utilities-core-attrdict-items"]], "utilities.core.AttrDict.keys": [[112, "utilities-core-attrdict-keys"]], "utilities.core.AttrDict.pop": [[113, "utilities-core-attrdict-pop"]], "utilities.core.AttrDict.popitem": [[114, "utilities-core-attrdict-popitem"]], "utilities.core.AttrDict.setdefault": [[115, "utilities-core-attrdict-setdefault"]], "utilities.core.AttrDict.update": [[116, "utilities-core-attrdict-update"]], "utilities.core.AttrDict.values": [[117, "utilities-core-attrdict-values"]], "utilities.core.YAMLConfiguration": [[118, "utilities-core-yamlconfiguration"]], "utilities.core.YAMLConfiguration.__init__": [[119, "utilities-core-yamlconfiguration-init"]], "utilities.core.YAMLConfiguration.config": [[120, "utilities-core-yamlconfiguration-config"]], "utilities.core.YAMLConfiguration.load": [[121, "utilities-core-yamlconfiguration-load"]], "utilities.core.YAMLConfiguration.load_from_path": [[122, "utilities-core-yamlconfiguration-load-from-path"]], "utilities.core.YAMLConfiguration.reload": [[123, "utilities-core-yamlconfiguration-reload"]], "utilities.core.YAMLConfiguration.set_on_disk": [[124, "utilities-core-yamlconfiguration-set-on-disk"]], "utilities.core.YAMLConfiguration.set_param": [[125, "utilities-core-yamlconfiguration-set-param"]], "utilities.core.enforce_units": [[126, "utilities-core-enforce-units"]], "utilities.core.find_descriptors": [[127, "utilities-core-find-descriptors"]], "utilities.core.getFromDict": [[128, "utilities-core-getfromdict"]], "utilities.core.merge_dicts": [[129, "utilities-core-merge-dicts"]], "utilities.core.produce_dict_heading": [[130, "utilities-core-produce-dict-heading"]], "utilities.core.rgetattr": [[131, "utilities-core-rgetattr"]], "utilities.core.rsetattr": [[132, "utilities-core-rsetattr"]], "utilities.core.setInDict": [[133, "utilities-core-setindict"]], "utilities.logging": [[134, "module-utilities.logging"]], "utilities.plot": [[135, "module-utilities.plot"]], "utilities.plot.get_hips_image": [[136, "utilities-plot-get-hips-image"]], "utilities.plot.plot_healpix": [[137, "utilities-plot-plot-healpix"]], "utilities.plot.plot_hips": [[138, "utilities-plot-plot-hips"]], "utilities.plot.set_style": [[139, "utilities-plot-set-style"]], "utilities.sql": [[140, "module-utilities.sql"]], "utilities.sql.chunk_sql_query_operation": [[141, "utilities-sql-chunk-sql-query-operation"]], "utilities.sql.chunk_sql_table_operation": [[142, "utilities-sql-chunk-sql-table-operation"]], "utilities.text": [[143, "module-utilities.text"]], "utilities.text.get_package_version": [[144, "utilities-text-get-package-version"]], "utilities.text.print_cli_header": [[145, "utilities-text-print-cli-header"]], "utilities.text.print_version": [[146, "utilities-text-print-version"]], "utilities.types": [[147, "module-utilities.types"]], "utilities.types.ColumnMap": [[148, "utilities-types-columnmap"]], "utilities.types.ColumnMap.DEC": [[149, "utilities-types-columnmap-dec"]], "utilities.types.ColumnMap.DEC_ERR": [[150, "utilities-types-columnmap-dec-err"]], "utilities.types.ColumnMap.GAL_B": [[151, "utilities-types-columnmap-gal-b"]], "utilities.types.ColumnMap.GAL_B_ERR": [[152, "utilities-types-columnmap-gal-b-err"]], "utilities.types.ColumnMap.GAL_L": [[153, "utilities-types-columnmap-gal-l"]], "utilities.types.ColumnMap.GAL_L_ERR": [[154, "utilities-types-columnmap-gal-l-err"]], "utilities.types.ColumnMap.NAME": [[155, "utilities-types-columnmap-name"]], "utilities.types.ColumnMap.RA": [[156, "utilities-types-columnmap-ra"]], "utilities.types.ColumnMap.RA_ERR": [[157, "utilities-types-columnmap-ra-err"]], "utilities.types.ColumnMap.SEP": [[158, "utilities-types-columnmap-sep"]], "utilities.types.ColumnMap.TYPE": [[159, "utilities-types-columnmap-type"]], "utilities.types.ColumnMap.Z": [[160, "utilities-types-columnmap-z"]], "utilities.types.ColumnMap.__init__": [[161, "utilities-types-columnmap-init"]], "utilities.types.ColumnMap.construct": [[162, "utilities-types-columnmap-construct"]], "utilities.types.ColumnMap.copy": [[163, "utilities-types-columnmap-copy"]], "utilities.types.ColumnMap.dict": [[164, "utilities-types-columnmap-dict"]], "utilities.types.ColumnMap.from_orm": [[165, "utilities-types-columnmap-from-orm"]], "utilities.types.ColumnMap.json": [[166, "utilities-types-columnmap-json"]], "utilities.types.ColumnMap.model_computed_fields": [[167, "utilities-types-columnmap-model-computed-fields"]], "utilities.types.ColumnMap.model_config": [[168, "utilities-types-columnmap-model-config"]], "utilities.types.ColumnMap.model_construct": [[169, "utilities-types-columnmap-model-construct"]], "utilities.types.ColumnMap.model_copy": [[170, "utilities-types-columnmap-model-copy"]], "utilities.types.ColumnMap.model_dump": [[171, "utilities-types-columnmap-model-dump"]], "utilities.types.ColumnMap.model_dump_json": [[172, "utilities-types-columnmap-model-dump-json"]], "utilities.types.ColumnMap.model_extra": [[173, "utilities-types-columnmap-model-extra"]], "utilities.types.ColumnMap.model_fields": [[174, "utilities-types-columnmap-model-fields"]], "utilities.types.ColumnMap.model_fields_set": [[175, "utilities-types-columnmap-model-fields-set"]], "utilities.types.ColumnMap.model_json_schema": [[176, "utilities-types-columnmap-model-json-schema"]], "utilities.types.ColumnMap.model_parametrized_name": [[177, "utilities-types-columnmap-model-parametrized-name"]], "utilities.types.ColumnMap.model_post_init": [[178, "utilities-types-columnmap-model-post-init"]], "utilities.types.ColumnMap.model_rebuild": [[179, "utilities-types-columnmap-model-rebuild"]], "utilities.types.ColumnMap.model_validate": [[180, "utilities-types-columnmap-model-validate"]], "utilities.types.ColumnMap.model_validate_json": [[181, "utilities-types-columnmap-model-validate-json"]], "utilities.types.ColumnMap.model_validate_strings": [[182, "utilities-types-columnmap-model-validate-strings"]], "utilities.types.ColumnMap.parse_file": [[183, "utilities-types-columnmap-parse-file"]], "utilities.types.ColumnMap.parse_obj": [[184, "utilities-types-columnmap-parse-obj"]], "utilities.types.ColumnMap.parse_raw": [[185, "utilities-types-columnmap-parse-raw"]], "utilities.types.ColumnMap.schema": [[186, "utilities-types-columnmap-schema"]], "utilities.types.ColumnMap.schema_json": [[187, "utilities-types-columnmap-schema-json"]], "utilities.types.ColumnMap.search_inverse": [[188, "utilities-types-columnmap-search-inverse"]], "utilities.types.ColumnMap.update_forward_refs": [[189, "utilities-types-columnmap-update-forward-refs"]], "utilities.types.ColumnMap.validate": [[190, "utilities-types-columnmap-validate"]], "utilities.types.ColumnMap.validate_table_column_no_unit": [[191, "utilities-types-columnmap-validate-table-column-no-unit"]], "utilities.types.ColumnMap.validate_table_column_unit": [[192, "utilities-types-columnmap-validate-table-column-unit"]], "utilities.types.ColumnStdErrorSpecifier": [[193, "utilities-types-columnstderrorspecifier"]], "utilities.types.ColumnStdErrorSpecifier.__init__": [[194, "utilities-types-columnstderrorspecifier-init"]], "utilities.types.ColumnStdErrorSpecifier.base_column": [[195, "utilities-types-columnstderrorspecifier-base-column"]], "utilities.types.ColumnStdErrorSpecifier.construct": [[196, "utilities-types-columnstderrorspecifier-construct"]], "utilities.types.ColumnStdErrorSpecifier.copy": [[197, "utilities-types-columnstderrorspecifier-copy"]], "utilities.types.ColumnStdErrorSpecifier.dict": [[198, "utilities-types-columnstderrorspecifier-dict"]], "utilities.types.ColumnStdErrorSpecifier.error_column": [[199, "utilities-types-columnstderrorspecifier-error-column"]], "utilities.types.ColumnStdErrorSpecifier.error_convert_to_std": [[200, "utilities-types-columnstderrorspecifier-error-convert-to-std"]], "utilities.types.ColumnStdErrorSpecifier.error_value": [[201, "utilities-types-columnstderrorspecifier-error-value"]], "utilities.types.ColumnStdErrorSpecifier.from_orm": [[202, "utilities-types-columnstderrorspecifier-from-orm"]], "utilities.types.ColumnStdErrorSpecifier.json": [[203, "utilities-types-columnstderrorspecifier-json"]], "utilities.types.ColumnStdErrorSpecifier.model_computed_fields": [[204, "utilities-types-columnstderrorspecifier-model-computed-fields"]], "utilities.types.ColumnStdErrorSpecifier.model_config": [[205, "utilities-types-columnstderrorspecifier-model-config"]], "utilities.types.ColumnStdErrorSpecifier.model_construct": [[206, "utilities-types-columnstderrorspecifier-model-construct"]], "utilities.types.ColumnStdErrorSpecifier.model_copy": [[207, "utilities-types-columnstderrorspecifier-model-copy"]], "utilities.types.ColumnStdErrorSpecifier.model_dump": [[208, "utilities-types-columnstderrorspecifier-model-dump"]], "utilities.types.ColumnStdErrorSpecifier.model_dump_json": [[209, "utilities-types-columnstderrorspecifier-model-dump-json"]], "utilities.types.ColumnStdErrorSpecifier.model_extra": [[210, "utilities-types-columnstderrorspecifier-model-extra"]], "utilities.types.ColumnStdErrorSpecifier.model_fields": [[211, "utilities-types-columnstderrorspecifier-model-fields"]], "utilities.types.ColumnStdErrorSpecifier.model_fields_set": [[212, "utilities-types-columnstderrorspecifier-model-fields-set"]], "utilities.types.ColumnStdErrorSpecifier.model_json_schema": [[213, "utilities-types-columnstderrorspecifier-model-json-schema"]], "utilities.types.ColumnStdErrorSpecifier.model_parametrized_name": [[214, "utilities-types-columnstderrorspecifier-model-parametrized-name"]], "utilities.types.ColumnStdErrorSpecifier.model_post_init": [[215, "utilities-types-columnstderrorspecifier-model-post-init"]], "utilities.types.ColumnStdErrorSpecifier.model_rebuild": [[216, "utilities-types-columnstderrorspecifier-model-rebuild"]], "utilities.types.ColumnStdErrorSpecifier.model_validate": [[217, "utilities-types-columnstderrorspecifier-model-validate"]], "utilities.types.ColumnStdErrorSpecifier.model_validate_json": [[218, "utilities-types-columnstderrorspecifier-model-validate-json"]], "utilities.types.ColumnStdErrorSpecifier.model_validate_strings": [[219, "utilities-types-columnstderrorspecifier-model-validate-strings"]], "utilities.types.ColumnStdErrorSpecifier.parse_file": [[220, "utilities-types-columnstderrorspecifier-parse-file"]], "utilities.types.ColumnStdErrorSpecifier.parse_obj": [[221, "utilities-types-columnstderrorspecifier-parse-obj"]], "utilities.types.ColumnStdErrorSpecifier.parse_raw": [[222, "utilities-types-columnstderrorspecifier-parse-raw"]], "utilities.types.ColumnStdErrorSpecifier.schema": [[223, "utilities-types-columnstderrorspecifier-schema"]], "utilities.types.ColumnStdErrorSpecifier.schema_json": [[224, "utilities-types-columnstderrorspecifier-schema-json"]], "utilities.types.ColumnStdErrorSpecifier.update_forward_refs": [[225, "utilities-types-columnstderrorspecifier-update-forward-refs"]], "utilities.types.ColumnStdErrorSpecifier.validate": [[226, "utilities-types-columnstderrorspecifier-validate"]], "utilities.types.ColumnStdErrorSpecifier.validate_on_table": [[227, "utilities-types-columnstderrorspecifier-validate-on-table"]], "utilities.types.ColumnStdErrorSpecifier.validator": [[228, "utilities-types-columnstderrorspecifier-validator"]], "utilities.types.ICRSCoordinateStdErrorSpecifier": [[229, "utilities-types-icrscoordinatestderrorspecifier"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.__init__": [[230, "utilities-types-icrscoordinatestderrorspecifier-init"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.check_empty": [[231, "utilities-types-icrscoordinatestderrorspecifier-check-empty"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.construct": [[232, "utilities-types-icrscoordinatestderrorspecifier-construct"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.copy": [[233, "utilities-types-icrscoordinatestderrorspecifier-copy"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.dict": [[234, "utilities-types-icrscoordinatestderrorspecifier-dict"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.from_orm": [[235, "utilities-types-icrscoordinatestderrorspecifier-from-orm"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.json": [[236, "utilities-types-icrscoordinatestderrorspecifier-json"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.lat_error": [[237, "utilities-types-icrscoordinatestderrorspecifier-lat-error"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.lon_error": [[238, "utilities-types-icrscoordinatestderrorspecifier-lon-error"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.mode": [[239, "utilities-types-icrscoordinatestderrorspecifier-mode"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_computed_fields": [[240, "utilities-types-icrscoordinatestderrorspecifier-model-computed-fields"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_config": [[241, "utilities-types-icrscoordinatestderrorspecifier-model-config"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_construct": [[242, "utilities-types-icrscoordinatestderrorspecifier-model-construct"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_copy": [[243, "utilities-types-icrscoordinatestderrorspecifier-model-copy"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_dump": [[244, "utilities-types-icrscoordinatestderrorspecifier-model-dump"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_dump_json": [[245, "utilities-types-icrscoordinatestderrorspecifier-model-dump-json"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_extra": [[246, "utilities-types-icrscoordinatestderrorspecifier-model-extra"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_fields": [[247, "utilities-types-icrscoordinatestderrorspecifier-model-fields"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_fields_set": [[248, "utilities-types-icrscoordinatestderrorspecifier-model-fields-set"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_json_schema": [[249, "utilities-types-icrscoordinatestderrorspecifier-model-json-schema"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_parametrized_name": [[250, "utilities-types-icrscoordinatestderrorspecifier-model-parametrized-name"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_post_init": [[251, "utilities-types-icrscoordinatestderrorspecifier-model-post-init"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_rebuild": [[252, "utilities-types-icrscoordinatestderrorspecifier-model-rebuild"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate": [[253, "utilities-types-icrscoordinatestderrorspecifier-model-validate"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate_json": [[254, "utilities-types-icrscoordinatestderrorspecifier-model-validate-json"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate_strings": [[255, "utilities-types-icrscoordinatestderrorspecifier-model-validate-strings"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.parse_file": [[256, "utilities-types-icrscoordinatestderrorspecifier-parse-file"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.parse_obj": [[257, "utilities-types-icrscoordinatestderrorspecifier-parse-obj"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.parse_raw": [[258, "utilities-types-icrscoordinatestderrorspecifier-parse-raw"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.position_error": [[259, "utilities-types-icrscoordinatestderrorspecifier-position-error"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.schema": [[260, "utilities-types-icrscoordinatestderrorspecifier-schema"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.schema_json": [[261, "utilities-types-icrscoordinatestderrorspecifier-schema-json"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.update_forward_refs": [[262, "utilities-types-icrscoordinatestderrorspecifier-update-forward-refs"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.validate": [[263, "utilities-types-icrscoordinatestderrorspecifier-validate"]], "utilities.types.ICRSCoordinateStdErrorSpecifier.validator": [[264, "utilities-types-icrscoordinatestderrorspecifier-validator"]], "utilities.types.Registry": [[265, "utilities-types-registry"]], "utilities.types.Registry.__init__": [[266, "utilities-types-registry-init"]], "utilities.types.Registry.add": [[267, "utilities-types-registry-add"]], "utilities.types.Registry.as_list": [[268, "utilities-types-registry-as-list"]], "utilities.types.Registry.clear": [[269, "utilities-types-registry-clear"]], "utilities.types.Registry.copy": [[270, "utilities-types-registry-copy"]], "utilities.types.Registry.fromkeys": [[271, "utilities-types-registry-fromkeys"]], "utilities.types.Registry.get": [[272, "utilities-types-registry-get"]], "utilities.types.Registry.items": [[273, "utilities-types-registry-items"]], "utilities.types.Registry.keys": [[274, "utilities-types-registry-keys"]], "utilities.types.Registry.pop": [[275, "utilities-types-registry-pop"]], "utilities.types.Registry.popitem": [[276, "utilities-types-registry-popitem"]], "utilities.types.Registry.setdefault": [[277, "utilities-types-registry-setdefault"]], "utilities.types.Registry.update": [[278, "utilities-types-registry-update"]], "utilities.types.Registry.values": [[279, "utilities-types-registry-values"]], "utilities.types.SourceTableSchemaSettings": [[280, "utilities-types-sourcetableschemasettings"]], "utilities.types.SourceTableSchemaSettings.__init__": [[281, "utilities-types-sourcetableschemasettings-init"]], "utilities.types.SourceTableSchemaSettings.construct": [[282, "utilities-types-sourcetableschemasettings-construct"]], "utilities.types.SourceTableSchemaSettings.copy": [[283, "utilities-types-sourcetableschemasettings-copy"]], "utilities.types.SourceTableSchemaSettings.default_coord_system": [[284, "utilities-types-sourcetableschemasettings-default-coord-system"]], "utilities.types.SourceTableSchemaSettings.dict": [[285, "utilities-types-sourcetableschemasettings-dict"]], "utilities.types.SourceTableSchemaSettings.from_orm": [[286, "utilities-types-sourcetableschemasettings-from-orm"]], "utilities.types.SourceTableSchemaSettings.json": [[287, "utilities-types-sourcetableschemasettings-json"]], "utilities.types.SourceTableSchemaSettings.model_computed_fields": [[288, "utilities-types-sourcetableschemasettings-model-computed-fields"]], "utilities.types.SourceTableSchemaSettings.model_config": [[289, "utilities-types-sourcetableschemasettings-model-config"]], "utilities.types.SourceTableSchemaSettings.model_construct": [[290, "utilities-types-sourcetableschemasettings-model-construct"]], "utilities.types.SourceTableSchemaSettings.model_copy": [[291, "utilities-types-sourcetableschemasettings-model-copy"]], "utilities.types.SourceTableSchemaSettings.model_dump": [[292, "utilities-types-sourcetableschemasettings-model-dump"]], "utilities.types.SourceTableSchemaSettings.model_dump_json": [[293, "utilities-types-sourcetableschemasettings-model-dump-json"]], "utilities.types.SourceTableSchemaSettings.model_extra": [[294, "utilities-types-sourcetableschemasettings-model-extra"]], "utilities.types.SourceTableSchemaSettings.model_fields": [[295, "utilities-types-sourcetableschemasettings-model-fields"]], "utilities.types.SourceTableSchemaSettings.model_fields_set": [[296, "utilities-types-sourcetableschemasettings-model-fields-set"]], "utilities.types.SourceTableSchemaSettings.model_json_schema": [[297, "utilities-types-sourcetableschemasettings-model-json-schema"]], "utilities.types.SourceTableSchemaSettings.model_parametrized_name": [[298, "utilities-types-sourcetableschemasettings-model-parametrized-name"]], "utilities.types.SourceTableSchemaSettings.model_post_init": [[299, "utilities-types-sourcetableschemasettings-model-post-init"]], "utilities.types.SourceTableSchemaSettings.model_rebuild": [[300, "utilities-types-sourcetableschemasettings-model-rebuild"]], "utilities.types.SourceTableSchemaSettings.model_validate": [[301, "utilities-types-sourcetableschemasettings-model-validate"]], "utilities.types.SourceTableSchemaSettings.model_validate_json": [[302, "utilities-types-sourcetableschemasettings-model-validate-json"]], "utilities.types.SourceTableSchemaSettings.model_validate_strings": [[303, "utilities-types-sourcetableschemasettings-model-validate-strings"]], "utilities.types.SourceTableSchemaSettings.object_type_separator": [[304, "utilities-types-sourcetableschemasettings-object-type-separator"]], "utilities.types.SourceTableSchemaSettings.parse_file": [[305, "utilities-types-sourcetableschemasettings-parse-file"]], "utilities.types.SourceTableSchemaSettings.parse_obj": [[306, "utilities-types-sourcetableschemasettings-parse-obj"]], "utilities.types.SourceTableSchemaSettings.parse_raw": [[307, "utilities-types-sourcetableschemasettings-parse-raw"]], "utilities.types.SourceTableSchemaSettings.schema": [[308, "utilities-types-sourcetableschemasettings-schema"]], "utilities.types.SourceTableSchemaSettings.schema_json": [[309, "utilities-types-sourcetableschemasettings-schema-json"]], "utilities.types.SourceTableSchemaSettings.update_forward_refs": [[310, "utilities-types-sourcetableschemasettings-update-forward-refs"]], "utilities.types.SourceTableSchemaSettings.validate": [[311, "utilities-types-sourcetableschemasettings-validate"]], "utilities.types.TableColumn": [[312, "utilities-types-tablecolumn"]], "utilities.types.TableColumn.__init__": [[313, "utilities-types-tablecolumn-init"]], "utilities.types.TableColumn.construct": [[314, "utilities-types-tablecolumn-construct"]], "utilities.types.TableColumn.copy": [[315, "utilities-types-tablecolumn-copy"]], "utilities.types.TableColumn.dict": [[316, "utilities-types-tablecolumn-dict"]], "utilities.types.TableColumn.from_orm": [[317, "utilities-types-tablecolumn-from-orm"]], "utilities.types.TableColumn.json": [[318, "utilities-types-tablecolumn-json"]], "utilities.types.TableColumn.model_computed_fields": [[319, "utilities-types-tablecolumn-model-computed-fields"]], "utilities.types.TableColumn.model_config": [[320, "utilities-types-tablecolumn-model-config"]], "utilities.types.TableColumn.model_construct": [[321, "utilities-types-tablecolumn-model-construct"]], "utilities.types.TableColumn.model_copy": [[322, "utilities-types-tablecolumn-model-copy"]], "utilities.types.TableColumn.model_dump": [[323, "utilities-types-tablecolumn-model-dump"]], "utilities.types.TableColumn.model_dump_json": [[324, "utilities-types-tablecolumn-model-dump-json"]], "utilities.types.TableColumn.model_extra": [[325, "utilities-types-tablecolumn-model-extra"]], "utilities.types.TableColumn.model_fields": [[326, "utilities-types-tablecolumn-model-fields"]], "utilities.types.TableColumn.model_fields_set": [[327, "utilities-types-tablecolumn-model-fields-set"]], "utilities.types.TableColumn.model_json_schema": [[328, "utilities-types-tablecolumn-model-json-schema"]], "utilities.types.TableColumn.model_parametrized_name": [[329, "utilities-types-tablecolumn-model-parametrized-name"]], "utilities.types.TableColumn.model_post_init": [[330, "utilities-types-tablecolumn-model-post-init"]], "utilities.types.TableColumn.model_rebuild": [[331, "utilities-types-tablecolumn-model-rebuild"]], "utilities.types.TableColumn.model_validate": [[332, "utilities-types-tablecolumn-model-validate"]], "utilities.types.TableColumn.model_validate_json": [[333, "utilities-types-tablecolumn-model-validate-json"]], "utilities.types.TableColumn.model_validate_strings": [[334, "utilities-types-tablecolumn-model-validate-strings"]], "utilities.types.TableColumn.name": [[335, "utilities-types-tablecolumn-name"]], "utilities.types.TableColumn.parse_file": [[336, "utilities-types-tablecolumn-parse-file"]], "utilities.types.TableColumn.parse_obj": [[337, "utilities-types-tablecolumn-parse-obj"]], "utilities.types.TableColumn.parse_raw": [[338, "utilities-types-tablecolumn-parse-raw"]], "utilities.types.TableColumn.schema": [[339, "utilities-types-tablecolumn-schema"]], "utilities.types.TableColumn.schema_json": [[340, "utilities-types-tablecolumn-schema-json"]], "utilities.types.TableColumn.unit": [[341, "utilities-types-tablecolumn-unit"]], "utilities.types.TableColumn.update_forward_refs": [[342, "utilities-types-tablecolumn-update-forward-refs"]], "utilities.types.TableColumn.validate": [[343, "utilities-types-tablecolumn-validate"]], "utilities.types.construct_template": [[344, "utilities-types-construct-template"]], "utilities.types.convert_np_type_to_sql": [[345, "utilities-types-convert-np-type-to-sql"]], "API": [[346, "api"]], "Core Modules": [[346, "core-modules"]], "Statistics": [[346, "statistics"], [357, "statistics"]], "Other": [[346, "other"]], "Data Structures": [[347, "data-structures"]], "DATABASES": [[347, "databases"]], "SCHEMAS": [[347, "schemas"]], "Sky Collection Schema": [[347, "sky-collection-schema"]], "Formatting": [[347, "formatting"]], "Examples": [[348, "examples"]], "Cross Referencing Overview": [[349, "Cross-Referencing-Overview"]], "Contents": [[349, "Contents"], [350, "Contents"], [351, "Contents"]], "Loading Data": [[349, "Loading-Data"]], "Schemas": [[349, "Schemas"]], "Cross Matching": [[349, "Cross-Matching"], [358, "cross-matching"], [359, "cross-matching"]], "Cross Matching Against Databases": [[349, "Cross-Matching-Against-Databases"]], "Cross Match Databases": [[349, "Cross-Match-Databases"]], "Reduction": [[349, "Reduction"]], "Astrometry Reduction": [[349, "Astrometry-Reduction"]], "Poisson Mapping": [[350, "Poisson-Mapping"]], "Introduction": [[350, "Introduction"]], "Representing Poisson Maps": [[350, "Representing-Poisson-Maps"]], "Poisson Atlases": [[350, "Poisson-Atlases"], [359, "poisson-atlases"]], "The Counts Table": [[350, "The-Counts-Table"]], "Map HDUs": [[350, "Map-HDUs"]], "Poisson Maps": [[350, "Poisson-Maps"]], "Constructing Poisson Maps": [[350, "Constructing-Poisson-Maps"]], "Density Estimation": [[350, "Density-Estimation"]], "Maximum A Posteriori Regression": [[350, "Maximum-A-Posteriori-Regression"]], "K-Nearest Neighbor Regression": [[350, "K-Nearest-Neighbor-Regression"]], "R-Nearest Neighbor Regression": [[350, "R-Nearest-Neighbor-Regression"]], "Using Databases in PyXMIP": [[351, "Using-Databases-in-PyXMIP"]], "Accessing Databases": [[351, "Accessing-Databases"]], "Local Databases": [[351, "Local-Databases"], [359, "local-databases"], [359, "id2"]], "Basic Properties of Local Databases": [[351, "Basic-Properties-of-Local-Databases"]], "Remote Databases": [[351, "Remote-Databases"], [359, "remote-databases"], [359, "id3"]], "Beyond Simple Queries": [[351, "Beyond-Simple-Queries"]], "What is a database?": [[351, "What-is-a-database?"]], "pyXMIP Quickstart Guide": [[352, "pyxmip-quickstart-guide"]], "Installation + Setup": [[352, "installation-setup"]], "Critical Components": [[352, "critical-components"]], "Features": [[353, "features"]], "Resources": [[353, "resources"]], "Pages": [[353, "pages"]], "Configuring pyXMIP": [[354, "configuring-pyxmip"]], "Installing pyXMIP": [[355, "installing-pyxmip"]], "Installing From PyPy": [[355, "installing-from-pypy"]], "Installing From Source": [[355, "installing-from-source"]], "Overview": [[356, "overview"], [363, "overview"]], "What Can I Do With pyXMIP?": [[356, "what-can-i-do-with-pyxmip"]], "How Does it Work?": [[356, "how-does-it-work"]], "Reference": [[357, "reference"]], "Getting Started": [[357, "getting-started"]], "Basic Usage": [[357, "basic-usage"]], "Visualizing Results": [[357, "visualizing-results"]], "Advanced Usage": [[357, "advanced-usage"]], "Expanding Available Datatypes": [[357, "expanding-available-datatypes"]], "Backend": [[357, "backend"]], "Cross Referencing": [[358, "cross-referencing"]], "What Exactly is Cross Matching?": [[358, "what-exactly-is-cross-matching"]], "Match Tables": [[358, "match-tables"]], "Exploring Cross Matching Outputs": [[358, "exploring-cross-matching-outputs"]], "Cross Match Database": [[358, "cross-match-database"]], "What is a CrossMatchDatabase?": [[358, "what-is-a-crossmatchdatabase"]], "Making CrossMatchingDatabase Instances": [[358, "making-crossmatchingdatabase-instances"]], "Database Alterations": [[358, "database-alterations"]], "The META table": [[358, "the-meta-table"]], "Interacting with Raw Data": [[358, "interacting-with-raw-data"]], "Pull Matches from Tables": [[358, "pull-matches-from-tables"]], "Plot A Match": [[358, "plot-a-match"]], "Match Reduction": [[358, "match-reduction"]], "Mathematical Overview": [[358, "mathematical-overview"]], "Sub-Process Overview": [[358, "sub-process-overview"]], "Further Information": [[358, "further-information"]], "Databases": [[359, "databases"]], "Databases At A Glance": [[359, "databases-at-a-glance"]], "Querying Databases": [[359, "querying-databases"]], "definition": [[359, null]], "Types of Databases": [[359, "types-of-databases"]], "Differences to Know": [[359, "differences-to-know"]], "Creating Custom Databases": [[359, "creating-custom-databases"]], "Developer Information": [[359, "developer-information"]], "Query Schema": [[359, "query-schema"]], "Query Configurations": [[359, "query-configurations"]], "Output Standardization": [[359, "output-standardization"]], "Logging": [[360, "logging"]], "Creating Plots": [[361, "creating-plots"]], "PSF Modeling": [[362, "psf-modeling"]], "Astrometric Reduction Process": [[363, "astrometric-reduction-process"]], "Mathematics Basis": [[363, "mathematics-basis"]], "Key Assumptions": [[363, null]], "Usage": [[363, "usage"], [363, "id2"]], "Setup and Parameters": [[363, "setup-and-parameters"], [363, "id3"]], "Modeling Astrometric Uncertainty": [[363, "modeling-astrometric-uncertainty"]], "Astrometry Modes": [[363, "astrometry-modes"]], "Selecting a Prior": [[363, "selecting-a-prior"]], "Initializing": [[363, "initializing"]], "Running the Reduction": [[363, "running-the-reduction"]], "Mathematics": [[363, "mathematics"]], "Astrometry": [[363, "astrometry"]], "Normally Distributed Error": [[363, "normally-distributed-error"]], "From Bayes Factor to Posteriori Estimates": [[363, "from-bayes-factor-to-posteriori-estimates"]], "Self-Consistent Priors By Iterative Methods": [[363, "self-consistent-priors-by-iterative-methods"]], "References": [[363, "references"]], "Writing New Reduction Processes": [[364, "writing-new-reduction-processes"]], "What is a Reduction Process?": [[364, "what-is-a-reduction-process"]], "Writing Reductions": [[364, "writing-reductions"]], "Basic Structure": [[364, "basic-structure"]], "Reduction Parameters": [[364, "reduction-parameters"]], "Object Type Reduction": [[365, "object-type-reduction"]], "Modeling Astronomical Objects": [[365, "modeling-astronomical-objects"]], "Modeling Instruments": [[365, "modeling-instruments"]], "Reduction Schema Writing": [[367, "reduction-schema-writing"]], "pyXMIP Schema Classes": [[368, "pyxmip-schema-classes"]], "What is a Schema": [[368, "what-is-a-schema"]], "Writing Schema": [[368, "writing-schema"]], "Schema Types": [[368, "schema-types"]], "Interaction With Schema": [[368, "interaction-with-schema"]], "Automated Schema": [[368, "automated-schema"]], "Loading Source Data": [[369, "loading-source-data"]], "Loading a Catalog from Disk": [[369, "loading-a-catalog-from-disk"]], "Working With Catalogs": [[369, "working-with-catalogs"]], "Table Schema": [[369, "table-schema"]]}, "indexentries": {"module": [[0, "module-stats.gaussian_process"], [15, "module-stats.map_regression"], [41, "module-stats.utilities"], [43, "module-structures.map"], [101, "module-utilities.core"], [134, "module-utilities.logging"], [135, "module-utilities.plot"], [140, "module-utilities.sql"], [143, "module-utilities.text"], [147, "module-utilities.types"]], "stats.gaussian_process": [[0, "module-stats.gaussian_process"]], "haversine_rbf (class in stats.gaussian_process)": [[1, "stats.gaussian_process.Haversine_RBF"]], "__init__() (stats.gaussian_process.haversine_rbf method)": [[2, "stats.gaussian_process.Haversine_RBF.__init__"]], "anisotropic (stats.gaussian_process.haversine_rbf property)": [[3, "stats.gaussian_process.Haversine_RBF.anisotropic"]], "bounds (stats.gaussian_process.haversine_rbf property)": [[4, "stats.gaussian_process.Haversine_RBF.bounds"]], "clone_with_theta() (stats.gaussian_process.haversine_rbf method)": [[5, "stats.gaussian_process.Haversine_RBF.clone_with_theta"]], "diag() (stats.gaussian_process.haversine_rbf method)": [[6, "stats.gaussian_process.Haversine_RBF.diag"]], "get_params() (stats.gaussian_process.haversine_rbf method)": [[7, "stats.gaussian_process.Haversine_RBF.get_params"]], "hyperparameter_length_scale (stats.gaussian_process.haversine_rbf property)": [[8, "stats.gaussian_process.Haversine_RBF.hyperparameter_length_scale"]], "hyperparameters (stats.gaussian_process.haversine_rbf property)": [[9, "stats.gaussian_process.Haversine_RBF.hyperparameters"]], "is_stationary() (stats.gaussian_process.haversine_rbf method)": [[10, "stats.gaussian_process.Haversine_RBF.is_stationary"]], "n_dims (stats.gaussian_process.haversine_rbf property)": [[11, "stats.gaussian_process.Haversine_RBF.n_dims"]], "requires_vector_input (stats.gaussian_process.haversine_rbf property)": [[12, "stats.gaussian_process.Haversine_RBF.requires_vector_input"]], "set_params() (stats.gaussian_process.haversine_rbf method)": [[13, "stats.gaussian_process.Haversine_RBF.set_params"]], "theta (stats.gaussian_process.haversine_rbf property)": [[14, "stats.gaussian_process.Haversine_RBF.theta"]], "stats.map_regression": [[15, "module-stats.map_regression"]], "bayesianpoissonmapregressor (class in stats.map_regression)": [[16, "stats.map_regression.BayesianPoissonMapRegressor"]], "__init__() (stats.map_regression.bayesianpoissonmapregressor method)": [[17, "stats.map_regression.BayesianPoissonMapRegressor.__init__"]], "build_map_map() (stats.map_regression.bayesianpoissonmapregressor method)": [[18, "stats.map_regression.BayesianPoissonMapRegressor.build_map_MAP"]], "knneighbormapregressor (class in stats.map_regression)": [[19, "stats.map_regression.KNNeighborMapRegressor"]], "__init__() (stats.map_regression.knneighbormapregressor method)": [[20, "stats.map_regression.KNNeighborMapRegressor.__init__"]], "cross_validate() (stats.map_regression.knneighbormapregressor method)": [[21, "stats.map_regression.KNNeighborMapRegressor.cross_validate"]], "default_training_fraction (stats.map_regression.knneighbormapregressor attribute)": [[22, "stats.map_regression.KNNeighborMapRegressor.default_training_fraction"]], "hyperparameters (stats.map_regression.knneighbormapregressor attribute)": [[23, "stats.map_regression.KNNeighborMapRegressor.hyperparameters"]], "regressor_parameters (stats.map_regression.knneighbormapregressor attribute)": [[24, "stats.map_regression.KNNeighborMapRegressor.regressor_parameters"]], "train_model() (stats.map_regression.knneighbormapregressor method)": [[25, "stats.map_regression.KNNeighborMapRegressor.train_model"]], "poissonmapregressor (class in stats.map_regression)": [[26, "stats.map_regression.PoissonMapRegressor"]], "default_training_fraction (stats.map_regression.poissonmapregressor attribute)": [[26, "stats.map_regression.PoissonMapRegressor.default_training_fraction"], [29, "stats.map_regression.PoissonMapRegressor.default_training_fraction"]], "hyperparameters (stats.map_regression.poissonmapregressor attribute)": [[26, "stats.map_regression.PoissonMapRegressor.hyperparameters"], [30, "stats.map_regression.PoissonMapRegressor.hyperparameters"]], "regressor_parameters (stats.map_regression.poissonmapregressor attribute)": [[26, "stats.map_regression.PoissonMapRegressor.regressor_parameters"], [31, "stats.map_regression.PoissonMapRegressor.regressor_parameters"]], "__init__() (stats.map_regression.poissonmapregressor method)": [[27, "stats.map_regression.PoissonMapRegressor.__init__"]], "cross_validate() (stats.map_regression.poissonmapregressor method)": [[28, "stats.map_regression.PoissonMapRegressor.cross_validate"]], "train_model() (stats.map_regression.poissonmapregressor method)": [[32, "stats.map_regression.PoissonMapRegressor.train_model"]], "rnneighbormapregressor (class in stats.map_regression)": [[33, "stats.map_regression.RNNeighborMapRegressor"]], "__init__() (stats.map_regression.rnneighbormapregressor method)": [[34, "stats.map_regression.RNNeighborMapRegressor.__init__"]], "cross_validate() (stats.map_regression.rnneighbormapregressor method)": [[35, "stats.map_regression.RNNeighborMapRegressor.cross_validate"]], "default_training_fraction (stats.map_regression.rnneighbormapregressor attribute)": [[36, "stats.map_regression.RNNeighborMapRegressor.default_training_fraction"]], "hyperparameters (stats.map_regression.rnneighbormapregressor attribute)": [[37, "stats.map_regression.RNNeighborMapRegressor.hyperparameters"]], "regressor_parameters (stats.map_regression.rnneighbormapregressor attribute)": [[38, "stats.map_regression.RNNeighborMapRegressor.regressor_parameters"]], "train_model() (stats.map_regression.rnneighbormapregressor method)": [[39, "stats.map_regression.RNNeighborMapRegressor.train_model"]], "train_map_regressor() (in module stats.map_regression)": [[40, "stats.map_regression.train_map_regressor"]], "stats.utilities": [[41, "module-stats.utilities"]], "uniform_sample_spherical() (in module stats.utilities)": [[42, "stats.utilities.uniform_sample_spherical"]], "structures.map": [[43, "module-structures.map"]], "map (class in structures.map)": [[44, "structures.map.Map"]], "__init__() (structures.map.map method)": [[45, "structures.map.Map.__init__"]], "coordinate_frame (structures.map.map property)": [[46, "structures.map.Map.coordinate_frame"]], "data (structures.map.map property)": [[47, "structures.map.Map.data"]], "get_healpix_id() (structures.map.map method)": [[48, "structures.map.Map.get_healpix_id"]], "pixel_positions (structures.map.map property)": [[49, "structures.map.Map.pixel_positions"]], "plot() (structures.map.map method)": [[50, "structures.map.Map.plot"]], "transform_map_coordinates() (structures.map.map method)": [[51, "structures.map.Map.transform_map_coordinates"]], "mapatlas (class in structures.map)": [[52, "structures.map.MapAtlas"]], "__init__() (structures.map.mapatlas method)": [[53, "structures.map.MapAtlas.__init__"]], "coordinate_frame (structures.map.mapatlas property)": [[54, "structures.map.MapAtlas.coordinate_frame"]], "generate() (structures.map.mapatlas class method)": [[55, "structures.map.MapAtlas.generate"]], "get_map() (structures.map.mapatlas method)": [[56, "structures.map.MapAtlas.get_map"]], "has_maps (structures.map.mapatlas property)": [[57, "structures.map.MapAtlas.has_maps"]], "hdus (structures.map.mapatlas property)": [[58, "structures.map.MapAtlas.hdus"]], "map_names (structures.map.mapatlas property)": [[59, "structures.map.MapAtlas.map_names"]], "pixel_positions (structures.map.mapatlas property)": [[60, "structures.map.MapAtlas.pixel_positions"]], "remove() (structures.map.mapatlas method)": [[61, "structures.map.MapAtlas.remove"]], "reshape_healpix() (structures.map.mapatlas method)": [[62, "structures.map.MapAtlas.reshape_healpix"]], "poissonatlas (class in structures.map)": [[63, "structures.map.PoissonAtlas"]], "counts (structures.map.poissonatlas property)": [[64, "structures.map.PoissonAtlas.COUNTS"]], "__init__() (structures.map.poissonatlas method)": [[65, "structures.map.PoissonAtlas.__init__"]], "append_to_fits() (structures.map.poissonatlas method)": [[66, "structures.map.PoissonAtlas.append_to_fits"]], "build_poisson_map() (structures.map.poissonatlas method)": [[67, "structures.map.PoissonAtlas.build_poisson_map"]], "build_poisson_map_knn() (structures.map.poissonatlas method)": [[68, "structures.map.PoissonAtlas.build_poisson_map_KNN"]], "build_poisson_map_map() (structures.map.poissonatlas method)": [[69, "structures.map.PoissonAtlas.build_poisson_map_MAP"]], "build_poisson_map_rnn() (structures.map.poissonatlas method)": [[70, "structures.map.PoissonAtlas.build_poisson_map_RNN"]], "build_poisson_map_regressor() (structures.map.poissonatlas method)": [[71, "structures.map.PoissonAtlas.build_poisson_map_regressor"]], "build_poisson_maps() (structures.map.poissonatlas method)": [[72, "structures.map.PoissonAtlas.build_poisson_maps"]], "coordinate_frame (structures.map.poissonatlas property)": [[73, "structures.map.PoissonAtlas.coordinate_frame"]], "generate() (structures.map.poissonatlas class method)": [[74, "structures.map.PoissonAtlas.generate"]], "get_map() (structures.map.poissonatlas method)": [[75, "structures.map.PoissonAtlas.get_map"]], "get_points() (structures.map.poissonatlas method)": [[76, "structures.map.PoissonAtlas.get_points"]], "has_maps (structures.map.poissonatlas property)": [[77, "structures.map.PoissonAtlas.has_maps"]], "hdus (structures.map.poissonatlas property)": [[78, "structures.map.PoissonAtlas.hdus"]], "map_names (structures.map.poissonatlas property)": [[79, "structures.map.PoissonAtlas.map_names"]], "pixel_positions (structures.map.poissonatlas property)": [[80, "structures.map.PoissonAtlas.pixel_positions"]], "remove() (structures.map.poissonatlas method)": [[81, "structures.map.PoissonAtlas.remove"]], "reset() (structures.map.poissonatlas method)": [[82, "structures.map.PoissonAtlas.reset"]], "reshape_healpix() (structures.map.poissonatlas method)": [[83, "structures.map.PoissonAtlas.reshape_healpix"]], "sample_from_database() (structures.map.poissonatlas method)": [[84, "structures.map.PoissonAtlas.sample_from_database"]], "statatlas (class in structures.map)": [[85, "structures.map.StatAtlas"]], "counts (structures.map.statatlas property)": [[86, "structures.map.StatAtlas.COUNTS"]], "__init__() (structures.map.statatlas method)": [[87, "structures.map.StatAtlas.__init__"]], "append_to_fits() (structures.map.statatlas method)": [[88, "structures.map.StatAtlas.append_to_fits"]], "coordinate_frame (structures.map.statatlas property)": [[89, "structures.map.StatAtlas.coordinate_frame"]], "generate() (structures.map.statatlas class method)": [[90, "structures.map.StatAtlas.generate"]], "get_map() (structures.map.statatlas method)": [[91, "structures.map.StatAtlas.get_map"]], "get_points() (structures.map.statatlas method)": [[92, "structures.map.StatAtlas.get_points"]], "has_maps (structures.map.statatlas property)": [[93, "structures.map.StatAtlas.has_maps"]], "hdus (structures.map.statatlas property)": [[94, "structures.map.StatAtlas.hdus"]], "map_names (structures.map.statatlas property)": [[95, "structures.map.StatAtlas.map_names"]], "pixel_positions (structures.map.statatlas property)": [[96, "structures.map.StatAtlas.pixel_positions"]], "remove() (structures.map.statatlas method)": [[97, "structures.map.StatAtlas.remove"]], "reset() (structures.map.statatlas method)": [[98, "structures.map.StatAtlas.reset"]], "reshape_healpix() (structures.map.statatlas method)": [[99, "structures.map.StatAtlas.reshape_healpix"]], "sample_from_database() (structures.map.statatlas method)": [[100, "structures.map.StatAtlas.sample_from_database"]], "utilities.core": [[101, "module-utilities.core"]], "attrdict (class in utilities.core)": [[102, "utilities.core.AttrDict"]], "__init__() (utilities.core.attrdict method)": [[103, "utilities.core.AttrDict.__init__"]], "clean() (utilities.core.attrdict method)": [[104, "utilities.core.AttrDict.clean"]], "clean_types() (utilities.core.attrdict class method)": [[105, "utilities.core.AttrDict.clean_types"]], "clear() (utilities.core.attrdict method)": [[106, "utilities.core.AttrDict.clear"]], "copy() (utilities.core.attrdict method)": [[107, "utilities.core.AttrDict.copy"]], "from_nested_dict() (utilities.core.attrdict class method)": [[108, "utilities.core.AttrDict.from_nested_dict"]], "fromkeys() (utilities.core.attrdict method)": [[109, "utilities.core.AttrDict.fromkeys"]], "get() (utilities.core.attrdict method)": [[110, "utilities.core.AttrDict.get"]], "items() (utilities.core.attrdict method)": [[111, "utilities.core.AttrDict.items"]], "keys() (utilities.core.attrdict method)": [[112, "utilities.core.AttrDict.keys"]], "pop() (utilities.core.attrdict method)": [[113, "utilities.core.AttrDict.pop"]], "popitem() (utilities.core.attrdict method)": [[114, "utilities.core.AttrDict.popitem"]], "setdefault() (utilities.core.attrdict method)": [[115, "utilities.core.AttrDict.setdefault"]], "update() (utilities.core.attrdict method)": [[116, "utilities.core.AttrDict.update"]], "values() (utilities.core.attrdict method)": [[117, "utilities.core.AttrDict.values"]], "yamlconfiguration (class in utilities.core)": [[118, "utilities.core.YAMLConfiguration"]], "__init__() (utilities.core.yamlconfiguration method)": [[119, "utilities.core.YAMLConfiguration.__init__"]], "config (utilities.core.yamlconfiguration property)": [[120, "utilities.core.YAMLConfiguration.config"]], "load() (utilities.core.yamlconfiguration method)": [[121, "utilities.core.YAMLConfiguration.load"]], "load_from_path() (utilities.core.yamlconfiguration class method)": [[122, "utilities.core.YAMLConfiguration.load_from_path"]], "reload() (utilities.core.yamlconfiguration method)": [[123, "utilities.core.YAMLConfiguration.reload"]], "set_on_disk() (utilities.core.yamlconfiguration class method)": [[124, "utilities.core.YAMLConfiguration.set_on_disk"]], "set_param() (utilities.core.yamlconfiguration method)": [[125, "utilities.core.YAMLConfiguration.set_param"]], "enforce_units() (in module utilities.core)": [[126, "utilities.core.enforce_units"]], "find_descriptors() (in module utilities.core)": [[127, "utilities.core.find_descriptors"]], "getfromdict() (in module utilities.core)": [[128, "utilities.core.getFromDict"]], "merge_dicts() (in module utilities.core)": [[129, "utilities.core.merge_dicts"]], "produce_dict_heading() (in module utilities.core)": [[130, "utilities.core.produce_dict_heading"]], "rgetattr() (in module utilities.core)": [[131, "utilities.core.rgetattr"]], "rsetattr() (in module utilities.core)": [[132, "utilities.core.rsetattr"]], "setindict() (in module utilities.core)": [[133, "utilities.core.setInDict"]], "utilities.logging": [[134, "module-utilities.logging"]], "utilities.plot": [[135, "module-utilities.plot"]], "get_hips_image() (in module utilities.plot)": [[136, "utilities.plot.get_hips_image"]], "plot_healpix() (in module utilities.plot)": [[137, "utilities.plot.plot_healpix"]], "plot_hips() (in module utilities.plot)": [[138, "utilities.plot.plot_hips"]], "set_style() (in module utilities.plot)": [[139, "utilities.plot.set_style"]], "utilities.sql": [[140, "module-utilities.sql"]], "chunk_sql_query_operation() (in module utilities.sql)": [[141, "utilities.sql.chunk_sql_query_operation"]], "chunk_sql_table_operation() (in module utilities.sql)": [[142, "utilities.sql.chunk_sql_table_operation"]], "utilities.text": [[143, "module-utilities.text"]], "get_package_version() (in module utilities.text)": [[144, "utilities.text.get_package_version"]], "print_cli_header() (in module utilities.text)": [[145, "utilities.text.print_cli_header"]], "print_version() (in module utilities.text)": [[146, "utilities.text.print_version"]], "utilities.types": [[147, "module-utilities.types"]], "columnmap (class in utilities.types)": [[148, "utilities.types.ColumnMap"]], "dec (utilities.types.columnmap attribute)": [[149, "utilities.types.ColumnMap.DEC"]], "dec_err (utilities.types.columnmap attribute)": [[150, "utilities.types.ColumnMap.DEC_ERR"]], "gal_b (utilities.types.columnmap attribute)": [[151, "utilities.types.ColumnMap.GAL_B"]], "gal_b_err (utilities.types.columnmap attribute)": [[152, "utilities.types.ColumnMap.GAL_B_ERR"]], "gal_l (utilities.types.columnmap attribute)": [[153, "utilities.types.ColumnMap.GAL_L"]], "gal_l_err (utilities.types.columnmap attribute)": [[154, "utilities.types.ColumnMap.GAL_L_ERR"]], "name (utilities.types.columnmap attribute)": [[155, "utilities.types.ColumnMap.NAME"]], "ra (utilities.types.columnmap attribute)": [[156, "utilities.types.ColumnMap.RA"]], "ra_err (utilities.types.columnmap attribute)": [[157, "utilities.types.ColumnMap.RA_ERR"]], "sep (utilities.types.columnmap attribute)": [[158, "utilities.types.ColumnMap.SEP"]], "type (utilities.types.columnmap attribute)": [[159, "utilities.types.ColumnMap.TYPE"]], "z (utilities.types.columnmap attribute)": [[160, "utilities.types.ColumnMap.Z"]], "__init__() (utilities.types.columnmap method)": [[161, "utilities.types.ColumnMap.__init__"]], "construct() (utilities.types.columnmap class method)": [[162, "utilities.types.ColumnMap.construct"]], "copy() (utilities.types.columnmap method)": [[163, "utilities.types.ColumnMap.copy"]], "dict() (utilities.types.columnmap method)": [[164, "utilities.types.ColumnMap.dict"]], "from_orm() (utilities.types.columnmap class method)": [[165, "utilities.types.ColumnMap.from_orm"]], "json() (utilities.types.columnmap method)": [[166, "utilities.types.ColumnMap.json"]], "model_computed_fields (utilities.types.columnmap attribute)": [[167, "utilities.types.ColumnMap.model_computed_fields"]], "model_config (utilities.types.columnmap attribute)": [[168, "utilities.types.ColumnMap.model_config"]], "model_construct() (utilities.types.columnmap class method)": [[169, "utilities.types.ColumnMap.model_construct"]], "model_copy() (utilities.types.columnmap method)": [[170, "utilities.types.ColumnMap.model_copy"]], "model_dump() (utilities.types.columnmap method)": [[171, "utilities.types.ColumnMap.model_dump"]], "model_dump_json() (utilities.types.columnmap method)": [[172, "utilities.types.ColumnMap.model_dump_json"]], "model_extra (utilities.types.columnmap property)": [[173, "utilities.types.ColumnMap.model_extra"]], "model_fields (utilities.types.columnmap attribute)": [[174, "utilities.types.ColumnMap.model_fields"]], "model_fields_set (utilities.types.columnmap property)": [[175, "utilities.types.ColumnMap.model_fields_set"]], "model_json_schema() (utilities.types.columnmap class method)": [[176, "utilities.types.ColumnMap.model_json_schema"]], "model_parametrized_name() (utilities.types.columnmap class method)": [[177, "utilities.types.ColumnMap.model_parametrized_name"]], "model_post_init() (utilities.types.columnmap method)": [[178, "utilities.types.ColumnMap.model_post_init"]], "model_rebuild() (utilities.types.columnmap class method)": [[179, "utilities.types.ColumnMap.model_rebuild"]], "model_validate() (utilities.types.columnmap class method)": [[180, "utilities.types.ColumnMap.model_validate"]], "model_validate_json() (utilities.types.columnmap class method)": [[181, "utilities.types.ColumnMap.model_validate_json"]], "model_validate_strings() (utilities.types.columnmap class method)": [[182, "utilities.types.ColumnMap.model_validate_strings"]], "parse_file() (utilities.types.columnmap class method)": [[183, "utilities.types.ColumnMap.parse_file"]], "parse_obj() (utilities.types.columnmap class method)": [[184, "utilities.types.ColumnMap.parse_obj"]], "parse_raw() (utilities.types.columnmap class method)": [[185, "utilities.types.ColumnMap.parse_raw"]], "schema() (utilities.types.columnmap class method)": [[186, "utilities.types.ColumnMap.schema"]], "schema_json() (utilities.types.columnmap class method)": [[187, "utilities.types.ColumnMap.schema_json"]], "search_inverse() (utilities.types.columnmap method)": [[188, "utilities.types.ColumnMap.search_inverse"]], "update_forward_refs() (utilities.types.columnmap class method)": [[189, "utilities.types.ColumnMap.update_forward_refs"]], "validate() (utilities.types.columnmap class method)": [[190, "utilities.types.ColumnMap.validate"]], "validate_table_column_no_unit() (utilities.types.columnmap static method)": [[191, "utilities.types.ColumnMap.validate_table_column_no_unit"]], "validate_table_column_unit() (utilities.types.columnmap static method)": [[192, "utilities.types.ColumnMap.validate_table_column_unit"]], "columnstderrorspecifier (class in utilities.types)": [[193, "utilities.types.ColumnStdErrorSpecifier"]], "__init__() (utilities.types.columnstderrorspecifier method)": [[194, "utilities.types.ColumnStdErrorSpecifier.__init__"]], "base_column (utilities.types.columnstderrorspecifier attribute)": [[195, "utilities.types.ColumnStdErrorSpecifier.base_column"]], "construct() (utilities.types.columnstderrorspecifier class method)": [[196, "utilities.types.ColumnStdErrorSpecifier.construct"]], "copy() (utilities.types.columnstderrorspecifier method)": [[197, "utilities.types.ColumnStdErrorSpecifier.copy"]], "dict() (utilities.types.columnstderrorspecifier method)": [[198, "utilities.types.ColumnStdErrorSpecifier.dict"]], "error_column (utilities.types.columnstderrorspecifier attribute)": [[199, "utilities.types.ColumnStdErrorSpecifier.error_column"]], "error_convert_to_std (utilities.types.columnstderrorspecifier attribute)": [[200, "utilities.types.ColumnStdErrorSpecifier.error_convert_to_std"]], "error_value (utilities.types.columnstderrorspecifier attribute)": [[201, "utilities.types.ColumnStdErrorSpecifier.error_value"]], "from_orm() (utilities.types.columnstderrorspecifier class method)": [[202, "utilities.types.ColumnStdErrorSpecifier.from_orm"]], "json() (utilities.types.columnstderrorspecifier method)": [[203, "utilities.types.ColumnStdErrorSpecifier.json"]], "model_computed_fields (utilities.types.columnstderrorspecifier attribute)": [[204, "utilities.types.ColumnStdErrorSpecifier.model_computed_fields"]], "model_config (utilities.types.columnstderrorspecifier attribute)": [[205, "utilities.types.ColumnStdErrorSpecifier.model_config"]], "model_construct() (utilities.types.columnstderrorspecifier class method)": [[206, "utilities.types.ColumnStdErrorSpecifier.model_construct"]], "model_copy() (utilities.types.columnstderrorspecifier method)": [[207, "utilities.types.ColumnStdErrorSpecifier.model_copy"]], "model_dump() (utilities.types.columnstderrorspecifier method)": [[208, "utilities.types.ColumnStdErrorSpecifier.model_dump"]], "model_dump_json() (utilities.types.columnstderrorspecifier method)": [[209, "utilities.types.ColumnStdErrorSpecifier.model_dump_json"]], "model_extra (utilities.types.columnstderrorspecifier property)": [[210, "utilities.types.ColumnStdErrorSpecifier.model_extra"]], "model_fields (utilities.types.columnstderrorspecifier attribute)": [[211, "utilities.types.ColumnStdErrorSpecifier.model_fields"]], "model_fields_set (utilities.types.columnstderrorspecifier property)": [[212, "utilities.types.ColumnStdErrorSpecifier.model_fields_set"]], "model_json_schema() (utilities.types.columnstderrorspecifier class method)": [[213, "utilities.types.ColumnStdErrorSpecifier.model_json_schema"]], "model_parametrized_name() (utilities.types.columnstderrorspecifier class method)": [[214, "utilities.types.ColumnStdErrorSpecifier.model_parametrized_name"]], "model_post_init() (utilities.types.columnstderrorspecifier method)": [[215, "utilities.types.ColumnStdErrorSpecifier.model_post_init"]], "model_rebuild() (utilities.types.columnstderrorspecifier class method)": [[216, "utilities.types.ColumnStdErrorSpecifier.model_rebuild"]], "model_validate() (utilities.types.columnstderrorspecifier class method)": [[217, "utilities.types.ColumnStdErrorSpecifier.model_validate"]], "model_validate_json() (utilities.types.columnstderrorspecifier class method)": [[218, "utilities.types.ColumnStdErrorSpecifier.model_validate_json"]], "model_validate_strings() (utilities.types.columnstderrorspecifier class method)": [[219, "utilities.types.ColumnStdErrorSpecifier.model_validate_strings"]], "parse_file() (utilities.types.columnstderrorspecifier class method)": [[220, "utilities.types.ColumnStdErrorSpecifier.parse_file"]], "parse_obj() (utilities.types.columnstderrorspecifier class method)": [[221, "utilities.types.ColumnStdErrorSpecifier.parse_obj"]], "parse_raw() (utilities.types.columnstderrorspecifier class method)": [[222, "utilities.types.ColumnStdErrorSpecifier.parse_raw"]], "schema() (utilities.types.columnstderrorspecifier class method)": [[223, "utilities.types.ColumnStdErrorSpecifier.schema"]], "schema_json() (utilities.types.columnstderrorspecifier class method)": [[224, "utilities.types.ColumnStdErrorSpecifier.schema_json"]], "update_forward_refs() (utilities.types.columnstderrorspecifier class method)": [[225, "utilities.types.ColumnStdErrorSpecifier.update_forward_refs"]], "validate() (utilities.types.columnstderrorspecifier class method)": [[226, "utilities.types.ColumnStdErrorSpecifier.validate"]], "validate_on_table() (utilities.types.columnstderrorspecifier method)": [[227, "utilities.types.ColumnStdErrorSpecifier.validate_on_table"]], "validator() (utilities.types.columnstderrorspecifier method)": [[228, "utilities.types.ColumnStdErrorSpecifier.validator"]], "icrscoordinatestderrorspecifier (class in utilities.types)": [[229, "utilities.types.ICRSCoordinateStdErrorSpecifier"]], "__init__() (utilities.types.icrscoordinatestderrorspecifier method)": [[230, "utilities.types.ICRSCoordinateStdErrorSpecifier.__init__"]], "check_empty() (utilities.types.icrscoordinatestderrorspecifier method)": [[231, "utilities.types.ICRSCoordinateStdErrorSpecifier.check_empty"]], "construct() (utilities.types.icrscoordinatestderrorspecifier class method)": [[232, "utilities.types.ICRSCoordinateStdErrorSpecifier.construct"]], "copy() (utilities.types.icrscoordinatestderrorspecifier method)": [[233, "utilities.types.ICRSCoordinateStdErrorSpecifier.copy"]], "dict() (utilities.types.icrscoordinatestderrorspecifier method)": [[234, "utilities.types.ICRSCoordinateStdErrorSpecifier.dict"]], "from_orm() (utilities.types.icrscoordinatestderrorspecifier class method)": [[235, "utilities.types.ICRSCoordinateStdErrorSpecifier.from_orm"]], "json() (utilities.types.icrscoordinatestderrorspecifier method)": [[236, "utilities.types.ICRSCoordinateStdErrorSpecifier.json"]], "lat_error (utilities.types.icrscoordinatestderrorspecifier attribute)": [[237, "utilities.types.ICRSCoordinateStdErrorSpecifier.lat_error"]], "lon_error (utilities.types.icrscoordinatestderrorspecifier attribute)": [[238, "utilities.types.ICRSCoordinateStdErrorSpecifier.lon_error"]], "mode (utilities.types.icrscoordinatestderrorspecifier property)": [[239, "utilities.types.ICRSCoordinateStdErrorSpecifier.mode"]], "model_computed_fields (utilities.types.icrscoordinatestderrorspecifier attribute)": [[240, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_computed_fields"]], "model_config (utilities.types.icrscoordinatestderrorspecifier attribute)": [[241, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_config"]], "model_construct() (utilities.types.icrscoordinatestderrorspecifier class method)": [[242, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_construct"]], "model_copy() (utilities.types.icrscoordinatestderrorspecifier method)": [[243, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_copy"]], "model_dump() (utilities.types.icrscoordinatestderrorspecifier method)": [[244, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_dump"]], "model_dump_json() (utilities.types.icrscoordinatestderrorspecifier method)": [[245, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_dump_json"]], "model_extra (utilities.types.icrscoordinatestderrorspecifier property)": [[246, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_extra"]], "model_fields (utilities.types.icrscoordinatestderrorspecifier attribute)": [[247, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_fields"]], "model_fields_set (utilities.types.icrscoordinatestderrorspecifier property)": [[248, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_fields_set"]], "model_json_schema() (utilities.types.icrscoordinatestderrorspecifier class method)": [[249, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_json_schema"]], "model_parametrized_name() (utilities.types.icrscoordinatestderrorspecifier class method)": [[250, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_parametrized_name"]], "model_post_init() (utilities.types.icrscoordinatestderrorspecifier method)": [[251, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_post_init"]], "model_rebuild() (utilities.types.icrscoordinatestderrorspecifier class method)": [[252, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_rebuild"]], "model_validate() (utilities.types.icrscoordinatestderrorspecifier class method)": [[253, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate"]], "model_validate_json() (utilities.types.icrscoordinatestderrorspecifier class method)": [[254, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate_json"]], "model_validate_strings() (utilities.types.icrscoordinatestderrorspecifier class method)": [[255, "utilities.types.ICRSCoordinateStdErrorSpecifier.model_validate_strings"]], "parse_file() (utilities.types.icrscoordinatestderrorspecifier class method)": [[256, "utilities.types.ICRSCoordinateStdErrorSpecifier.parse_file"]], "parse_obj() (utilities.types.icrscoordinatestderrorspecifier class method)": [[257, "utilities.types.ICRSCoordinateStdErrorSpecifier.parse_obj"]], "parse_raw() (utilities.types.icrscoordinatestderrorspecifier class method)": [[258, "utilities.types.ICRSCoordinateStdErrorSpecifier.parse_raw"]], "position_error (utilities.types.icrscoordinatestderrorspecifier attribute)": [[259, "utilities.types.ICRSCoordinateStdErrorSpecifier.position_error"]], "schema() (utilities.types.icrscoordinatestderrorspecifier class method)": [[260, "utilities.types.ICRSCoordinateStdErrorSpecifier.schema"]], "schema_json() (utilities.types.icrscoordinatestderrorspecifier class method)": [[261, "utilities.types.ICRSCoordinateStdErrorSpecifier.schema_json"]], "update_forward_refs() (utilities.types.icrscoordinatestderrorspecifier class method)": [[262, "utilities.types.ICRSCoordinateStdErrorSpecifier.update_forward_refs"]], "validate() (utilities.types.icrscoordinatestderrorspecifier class method)": [[263, "utilities.types.ICRSCoordinateStdErrorSpecifier.validate"]], "validator() (utilities.types.icrscoordinatestderrorspecifier method)": [[264, "utilities.types.ICRSCoordinateStdErrorSpecifier.validator"]], "registry (class in utilities.types)": [[265, "utilities.types.Registry"]], "__init__() (utilities.types.registry method)": [[266, "utilities.types.Registry.__init__"]], "add() (utilities.types.registry method)": [[267, "utilities.types.Registry.add"]], "as_list() (utilities.types.registry method)": [[268, "utilities.types.Registry.as_list"]], "clear() (utilities.types.registry method)": [[269, "utilities.types.Registry.clear"]], "copy() (utilities.types.registry method)": [[270, "utilities.types.Registry.copy"]], "fromkeys() (utilities.types.registry method)": [[271, "utilities.types.Registry.fromkeys"]], "get() (utilities.types.registry method)": [[272, "utilities.types.Registry.get"]], "items() (utilities.types.registry method)": [[273, "utilities.types.Registry.items"]], "keys() (utilities.types.registry method)": [[274, "utilities.types.Registry.keys"]], "pop() (utilities.types.registry method)": [[275, "utilities.types.Registry.pop"]], "popitem() (utilities.types.registry method)": [[276, "utilities.types.Registry.popitem"]], "setdefault() (utilities.types.registry method)": [[277, "utilities.types.Registry.setdefault"]], "update() (utilities.types.registry method)": [[278, "utilities.types.Registry.update"]], "values() (utilities.types.registry method)": [[279, "utilities.types.Registry.values"]], "sourcetableschemasettings (class in utilities.types)": [[280, "utilities.types.SourceTableSchemaSettings"]], "__init__() (utilities.types.sourcetableschemasettings method)": [[281, "utilities.types.SourceTableSchemaSettings.__init__"]], "construct() (utilities.types.sourcetableschemasettings class method)": [[282, "utilities.types.SourceTableSchemaSettings.construct"]], "copy() (utilities.types.sourcetableschemasettings method)": [[283, "utilities.types.SourceTableSchemaSettings.copy"]], "default_coord_system (utilities.types.sourcetableschemasettings attribute)": [[284, "utilities.types.SourceTableSchemaSettings.default_coord_system"]], "dict() (utilities.types.sourcetableschemasettings method)": [[285, "utilities.types.SourceTableSchemaSettings.dict"]], "from_orm() (utilities.types.sourcetableschemasettings class method)": [[286, "utilities.types.SourceTableSchemaSettings.from_orm"]], "json() (utilities.types.sourcetableschemasettings method)": [[287, "utilities.types.SourceTableSchemaSettings.json"]], "model_computed_fields (utilities.types.sourcetableschemasettings attribute)": [[288, "utilities.types.SourceTableSchemaSettings.model_computed_fields"]], "model_config (utilities.types.sourcetableschemasettings attribute)": [[289, "utilities.types.SourceTableSchemaSettings.model_config"]], "model_construct() (utilities.types.sourcetableschemasettings class method)": [[290, "utilities.types.SourceTableSchemaSettings.model_construct"]], "model_copy() (utilities.types.sourcetableschemasettings method)": [[291, "utilities.types.SourceTableSchemaSettings.model_copy"]], "model_dump() (utilities.types.sourcetableschemasettings method)": [[292, "utilities.types.SourceTableSchemaSettings.model_dump"]], "model_dump_json() (utilities.types.sourcetableschemasettings method)": [[293, "utilities.types.SourceTableSchemaSettings.model_dump_json"]], "model_extra (utilities.types.sourcetableschemasettings property)": [[294, "utilities.types.SourceTableSchemaSettings.model_extra"]], "model_fields (utilities.types.sourcetableschemasettings attribute)": [[295, "utilities.types.SourceTableSchemaSettings.model_fields"]], "model_fields_set (utilities.types.sourcetableschemasettings property)": [[296, "utilities.types.SourceTableSchemaSettings.model_fields_set"]], "model_json_schema() (utilities.types.sourcetableschemasettings class method)": [[297, "utilities.types.SourceTableSchemaSettings.model_json_schema"]], "model_parametrized_name() (utilities.types.sourcetableschemasettings class method)": [[298, "utilities.types.SourceTableSchemaSettings.model_parametrized_name"]], "model_post_init() (utilities.types.sourcetableschemasettings method)": [[299, "utilities.types.SourceTableSchemaSettings.model_post_init"]], "model_rebuild() (utilities.types.sourcetableschemasettings class method)": [[300, "utilities.types.SourceTableSchemaSettings.model_rebuild"]], "model_validate() (utilities.types.sourcetableschemasettings class method)": [[301, "utilities.types.SourceTableSchemaSettings.model_validate"]], "model_validate_json() (utilities.types.sourcetableschemasettings class method)": [[302, "utilities.types.SourceTableSchemaSettings.model_validate_json"]], "model_validate_strings() (utilities.types.sourcetableschemasettings class method)": [[303, "utilities.types.SourceTableSchemaSettings.model_validate_strings"]], "object_type_separator (utilities.types.sourcetableschemasettings attribute)": [[304, "utilities.types.SourceTableSchemaSettings.object_type_separator"]], "parse_file() (utilities.types.sourcetableschemasettings class method)": [[305, "utilities.types.SourceTableSchemaSettings.parse_file"]], "parse_obj() (utilities.types.sourcetableschemasettings class method)": [[306, "utilities.types.SourceTableSchemaSettings.parse_obj"]], "parse_raw() (utilities.types.sourcetableschemasettings class method)": [[307, "utilities.types.SourceTableSchemaSettings.parse_raw"]], "schema() (utilities.types.sourcetableschemasettings class method)": [[308, "utilities.types.SourceTableSchemaSettings.schema"]], "schema_json() (utilities.types.sourcetableschemasettings class method)": [[309, "utilities.types.SourceTableSchemaSettings.schema_json"]], "update_forward_refs() (utilities.types.sourcetableschemasettings class method)": [[310, "utilities.types.SourceTableSchemaSettings.update_forward_refs"]], "validate() (utilities.types.sourcetableschemasettings class method)": [[311, "utilities.types.SourceTableSchemaSettings.validate"]], "tablecolumn (class in utilities.types)": [[312, "utilities.types.TableColumn"]], "__init__() (utilities.types.tablecolumn method)": [[313, "utilities.types.TableColumn.__init__"]], "construct() (utilities.types.tablecolumn class method)": [[314, "utilities.types.TableColumn.construct"]], "copy() (utilities.types.tablecolumn method)": [[315, "utilities.types.TableColumn.copy"]], "dict() (utilities.types.tablecolumn method)": [[316, "utilities.types.TableColumn.dict"]], "from_orm() (utilities.types.tablecolumn class method)": [[317, "utilities.types.TableColumn.from_orm"]], "json() (utilities.types.tablecolumn method)": [[318, "utilities.types.TableColumn.json"]], "model_computed_fields (utilities.types.tablecolumn attribute)": [[319, "utilities.types.TableColumn.model_computed_fields"]], "model_config (utilities.types.tablecolumn attribute)": [[320, "utilities.types.TableColumn.model_config"]], "model_construct() (utilities.types.tablecolumn class method)": [[321, "utilities.types.TableColumn.model_construct"]], "model_copy() (utilities.types.tablecolumn method)": [[322, "utilities.types.TableColumn.model_copy"]], "model_dump() (utilities.types.tablecolumn method)": [[323, "utilities.types.TableColumn.model_dump"]], "model_dump_json() (utilities.types.tablecolumn method)": [[324, "utilities.types.TableColumn.model_dump_json"]], "model_extra (utilities.types.tablecolumn property)": [[325, "utilities.types.TableColumn.model_extra"]], "model_fields (utilities.types.tablecolumn attribute)": [[326, "utilities.types.TableColumn.model_fields"]], "model_fields_set (utilities.types.tablecolumn property)": [[327, "utilities.types.TableColumn.model_fields_set"]], "model_json_schema() (utilities.types.tablecolumn class method)": [[328, "utilities.types.TableColumn.model_json_schema"]], "model_parametrized_name() (utilities.types.tablecolumn class method)": [[329, "utilities.types.TableColumn.model_parametrized_name"]], "model_post_init() (utilities.types.tablecolumn method)": [[330, "utilities.types.TableColumn.model_post_init"]], "model_rebuild() (utilities.types.tablecolumn class method)": [[331, "utilities.types.TableColumn.model_rebuild"]], "model_validate() (utilities.types.tablecolumn class method)": [[332, "utilities.types.TableColumn.model_validate"]], "model_validate_json() (utilities.types.tablecolumn class method)": [[333, "utilities.types.TableColumn.model_validate_json"]], "model_validate_strings() (utilities.types.tablecolumn class method)": [[334, "utilities.types.TableColumn.model_validate_strings"]], "name (utilities.types.tablecolumn attribute)": [[335, "utilities.types.TableColumn.name"]], "parse_file() (utilities.types.tablecolumn class method)": [[336, "utilities.types.TableColumn.parse_file"]], "parse_obj() (utilities.types.tablecolumn class method)": [[337, "utilities.types.TableColumn.parse_obj"]], "parse_raw() (utilities.types.tablecolumn class method)": [[338, "utilities.types.TableColumn.parse_raw"]], "schema() (utilities.types.tablecolumn class method)": [[339, "utilities.types.TableColumn.schema"]], "schema_json() (utilities.types.tablecolumn class method)": [[340, "utilities.types.TableColumn.schema_json"]], "unit (utilities.types.tablecolumn attribute)": [[341, "utilities.types.TableColumn.unit"]], "update_forward_refs() (utilities.types.tablecolumn class method)": [[342, "utilities.types.TableColumn.update_forward_refs"]], "validate() (utilities.types.tablecolumn class method)": [[343, "utilities.types.TableColumn.validate"]], "construct_template() (in module utilities.types)": [[344, "utilities.types.construct_template"]], "convert_np_type_to_sql() (in module utilities.types)": [[345, "utilities.types.convert_np_type_to_sql"]]}})
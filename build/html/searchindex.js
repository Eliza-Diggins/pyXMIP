Search.setIndex({"docnames": ["_as_gen/schema", "_as_gen/schema.ReductionSchema", "_as_gen/schema.ReductionSchema.DBPATH", "_as_gen/schema.ReductionSchema.INSTRUMENTAL", "_as_gen/schema.ReductionSchema.INSTRUMENT_PARAMS", "_as_gen/schema.ReductionSchema.IO_PARAMS", "_as_gen/schema.ReductionSchema.OBJECT_PARAMS", "_as_gen/schema.ReductionSchema.OTYPES", "_as_gen/schema.ReductionSchema.POISSON", "_as_gen/schema.ReductionSchema.POISSON_PARAMS", "_as_gen/schema.ReductionSchema.PSF", "_as_gen/schema.ReductionSchema.REFDBS", "_as_gen/schema.ReductionSchema.RUN_PARAMS", "_as_gen/schema.ReductionSchema.__init__", "_as_gen/schema.ReductionSchema.clear", "_as_gen/schema.ReductionSchema.copy", "_as_gen/schema.ReductionSchema.from_file", "_as_gen/schema.ReductionSchema.fromkeys", "_as_gen/schema.ReductionSchema.get", "_as_gen/schema.ReductionSchema.isvalid", "_as_gen/schema.ReductionSchema.items", "_as_gen/schema.ReductionSchema.keys", "_as_gen/schema.ReductionSchema.pop", "_as_gen/schema.ReductionSchema.popitem", "_as_gen/schema.ReductionSchema.setdefault", "_as_gen/schema.ReductionSchema.update", "_as_gen/schema.ReductionSchema.values", "_as_gen/schema.Schema", "_as_gen/schema.Schema.__init__", "_as_gen/schema.Schema.clear", "_as_gen/schema.Schema.copy", "_as_gen/schema.Schema.from_file", "_as_gen/schema.Schema.fromkeys", "_as_gen/schema.Schema.get", "_as_gen/schema.Schema.isvalid", "_as_gen/schema.Schema.items", "_as_gen/schema.Schema.keys", "_as_gen/schema.Schema.pop", "_as_gen/schema.Schema.popitem", "_as_gen/schema.Schema.setdefault", "_as_gen/schema.Schema.update", "_as_gen/schema.Schema.values", "_as_gen/schema.SourceTableSchema", "_as_gen/schema.SourceTableSchema.__init__", "_as_gen/schema.SourceTableSchema.available_coordinate_frames", "_as_gen/schema.SourceTableSchema.clear", "_as_gen/schema.SourceTableSchema.column_map", "_as_gen/schema.SourceTableSchema.construct", "_as_gen/schema.SourceTableSchema.coordinate_columns", "_as_gen/schema.SourceTableSchema.coordinate_frame", "_as_gen/schema.SourceTableSchema.coordinate_system", "_as_gen/schema.SourceTableSchema.copy", "_as_gen/schema.SourceTableSchema.default_coord_system", "_as_gen/schema.SourceTableSchema.from_file", "_as_gen/schema.SourceTableSchema.fromkeys", "_as_gen/schema.SourceTableSchema.get", "_as_gen/schema.SourceTableSchema.inv_column_map", "_as_gen/schema.SourceTableSchema.isvalid", "_as_gen/schema.SourceTableSchema.items", "_as_gen/schema.SourceTableSchema.keys", "_as_gen/schema.SourceTableSchema.object_map", "_as_gen/schema.SourceTableSchema.pop", "_as_gen/schema.SourceTableSchema.popitem", "_as_gen/schema.SourceTableSchema.setdefault", "_as_gen/schema.SourceTableSchema.update", "_as_gen/schema.SourceTableSchema.values", "_as_gen/structures.databases", "_as_gen/structures.databases.DBRegistry", "_as_gen/structures.databases.DBRegistry.__init__", "_as_gen/structures.databases.DBRegistry.clear", "_as_gen/structures.databases.DBRegistry.copy", "_as_gen/structures.databases.DBRegistry.fromkeys", "_as_gen/structures.databases.DBRegistry.get", "_as_gen/structures.databases.DBRegistry.items", "_as_gen/structures.databases.DBRegistry.keys", "_as_gen/structures.databases.DBRegistry.pop", "_as_gen/structures.databases.DBRegistry.popitem", "_as_gen/structures.databases.DBRegistry.setdefault", "_as_gen/structures.databases.DBRegistry.update", "_as_gen/structures.databases.DBRegistry.values", "_as_gen/structures.databases.LocalDatabase", "_as_gen/structures.databases.LocalDatabase.__init__", "_as_gen/structures.databases.LocalDatabase.add_sources_to_poisson", "_as_gen/structures.databases.LocalDatabase.class_table_schema", "_as_gen/structures.databases.LocalDatabase.count", "_as_gen/structures.databases.LocalDatabase.create_poisson_map", "_as_gen/structures.databases.LocalDatabase.default_poisson_map", "_as_gen/structures.databases.LocalDatabase.get_default_poisson_map", "_as_gen/structures.databases.LocalDatabase.get_poisson_map", "_as_gen/structures.databases.LocalDatabase.poisson_map", "_as_gen/structures.databases.LocalDatabase.query_radius", "_as_gen/structures.databases.LocalDatabase.random_sample_count", "_as_gen/structures.databases.LocalDatabase.set_poisson_map", "_as_gen/structures.databases.LocalDatabase.source_match", "_as_gen/structures.databases.NED", "_as_gen/structures.databases.NED.__init__", "_as_gen/structures.databases.NED.add_sources_to_poisson", "_as_gen/structures.databases.NED.class_table_schema", "_as_gen/structures.databases.NED.count", "_as_gen/structures.databases.NED.create_poisson_map", "_as_gen/structures.databases.NED.default_poisson_map", "_as_gen/structures.databases.NED.get_default_poisson_map", "_as_gen/structures.databases.NED.get_poisson_map", "_as_gen/structures.databases.NED.poisson_map", "_as_gen/structures.databases.NED.query_radius", "_as_gen/structures.databases.NED.random_sample_count", "_as_gen/structures.databases.NED.set_poisson_map", "_as_gen/structures.databases.NED.source_match", "_as_gen/structures.databases.RemoteDatabase", "_as_gen/structures.databases.RemoteDatabase.__init__", "_as_gen/structures.databases.RemoteDatabase.add_sources_to_poisson", "_as_gen/structures.databases.RemoteDatabase.class_table_schema", "_as_gen/structures.databases.RemoteDatabase.count", "_as_gen/structures.databases.RemoteDatabase.create_poisson_map", "_as_gen/structures.databases.RemoteDatabase.default_poisson_map", "_as_gen/structures.databases.RemoteDatabase.get_default_poisson_map", "_as_gen/structures.databases.RemoteDatabase.get_poisson_map", "_as_gen/structures.databases.RemoteDatabase.poisson_map", "_as_gen/structures.databases.RemoteDatabase.query_radius", "_as_gen/structures.databases.RemoteDatabase.random_sample_count", "_as_gen/structures.databases.RemoteDatabase.set_poisson_map", "_as_gen/structures.databases.RemoteDatabase.source_match", "_as_gen/structures.databases.SIMBAD", "_as_gen/structures.databases.SIMBAD.__init__", "_as_gen/structures.databases.SIMBAD.add_sources_to_poisson", "_as_gen/structures.databases.SIMBAD.class_table_schema", "_as_gen/structures.databases.SIMBAD.count", "_as_gen/structures.databases.SIMBAD.create_poisson_map", "_as_gen/structures.databases.SIMBAD.default_poisson_map", "_as_gen/structures.databases.SIMBAD.get_default_poisson_map", "_as_gen/structures.databases.SIMBAD.get_poisson_map", "_as_gen/structures.databases.SIMBAD.poisson_map", "_as_gen/structures.databases.SIMBAD.query_radius", "_as_gen/structures.databases.SIMBAD.random_sample_count", "_as_gen/structures.databases.SIMBAD.set_poisson_map", "_as_gen/structures.databases.SIMBAD.source_match", "_as_gen/structures.databases.SourceDatabase", "_as_gen/structures.databases.SourceDatabase.__init__", "_as_gen/structures.databases.SourceDatabase.add_sources_to_poisson", "_as_gen/structures.databases.SourceDatabase.class_table_schema", "_as_gen/structures.databases.SourceDatabase.count", "_as_gen/structures.databases.SourceDatabase.create_poisson_map", "_as_gen/structures.databases.SourceDatabase.default_poisson_map", "_as_gen/structures.databases.SourceDatabase.get_default_poisson_map", "_as_gen/structures.databases.SourceDatabase.get_poisson_map", "_as_gen/structures.databases.SourceDatabase.poisson_map", "_as_gen/structures.databases.SourceDatabase.query_radius", "_as_gen/structures.databases.SourceDatabase.random_sample_count", "_as_gen/structures.databases.SourceDatabase.set_poisson_map", "_as_gen/structures.databases.SourceDatabase.source_match", "_as_gen/structures.map", "_as_gen/structures.map.Map", "_as_gen/structures.map.Map.__init__", "_as_gen/structures.map.Map.coordinate_frame", "_as_gen/structures.map.MapAtlas", "_as_gen/structures.map.MapAtlas.__init__", "_as_gen/structures.map.MapAtlas.coordinate_frame", "_as_gen/structures.map.MapAtlas.generate", "_as_gen/structures.map.MapAtlas.get_map", "_as_gen/structures.map.MapAtlas.has_maps", "_as_gen/structures.map.MapAtlas.hdus", "_as_gen/structures.map.MapAtlas.map_names", "_as_gen/structures.map.MapAtlas.pixel_positions", "_as_gen/structures.map.MapAtlas.remove", "_as_gen/structures.map.MapAtlas.reshape_healpix", "_as_gen/structures.map.StatAtlas", "_as_gen/structures.map.StatAtlas.__init__", "_as_gen/structures.map.StatAtlas.append_to_fits", "_as_gen/structures.map.StatAtlas.build_poisson_map", "_as_gen/structures.map.StatAtlas.build_poisson_map_MAP", "_as_gen/structures.map.StatAtlas.build_poisson_map_NNR", "_as_gen/structures.map.StatAtlas.build_poisson_map_gp", "_as_gen/structures.map.StatAtlas.build_poisson_maps", "_as_gen/structures.map.StatAtlas.coordinate_frame", "_as_gen/structures.map.StatAtlas.generate", "_as_gen/structures.map.StatAtlas.get_map", "_as_gen/structures.map.StatAtlas.get_points", "_as_gen/structures.map.StatAtlas.has_maps", "_as_gen/structures.map.StatAtlas.hdus", "_as_gen/structures.map.StatAtlas.map_names", "_as_gen/structures.map.StatAtlas.pixel_positions", "_as_gen/structures.map.StatAtlas.remove", "_as_gen/structures.map.StatAtlas.reset", "_as_gen/structures.map.StatAtlas.reshape_healpix", "_as_gen/structures.map.StatAtlas.sample_from_database", "_as_gen/structures.table", "_as_gen/structures.table.SourceTable", "_as_gen/structures.table.SourceTable.ColumnClass", "_as_gen/structures.table.SourceTable.__init__", "_as_gen/structures.table.SourceTable.add_column", "_as_gen/structures.table.SourceTable.add_columns", "_as_gen/structures.table.SourceTable.add_index", "_as_gen/structures.table.SourceTable.add_row", "_as_gen/structures.table.SourceTable.append_to_fits", "_as_gen/structures.table.SourceTable.append_to_sql", "_as_gen/structures.table.SourceTable.argsort", "_as_gen/structures.table.SourceTable.as_array", "_as_gen/structures.table.SourceTable.colnames", "_as_gen/structures.table.SourceTable.convert_bytestring_to_unicode", "_as_gen/structures.table.SourceTable.convert_unicode_to_bytestring", "_as_gen/structures.table.SourceTable.copy", "_as_gen/structures.table.SourceTable.count_types", "_as_gen/structures.table.SourceTable.dtype", "_as_gen/structures.table.SourceTable.field", "_as_gen/structures.table.SourceTable.filled", "_as_gen/structures.table.SourceTable.from_pandas", "_as_gen/structures.table.SourceTable.generate_schema", "_as_gen/structures.table.SourceTable.get_coordinates", "_as_gen/structures.table.SourceTable.group_by", "_as_gen/structures.table.SourceTable.groups", "_as_gen/structures.table.SourceTable.has_masked_columns", "_as_gen/structures.table.SourceTable.has_masked_values", "_as_gen/structures.table.SourceTable.has_mixin_columns", "_as_gen/structures.table.SourceTable.iloc", "_as_gen/structures.table.SourceTable.index_column", "_as_gen/structures.table.SourceTable.index_mode", "_as_gen/structures.table.SourceTable.indices", "_as_gen/structures.table.SourceTable.info", "_as_gen/structures.table.SourceTable.insert_row", "_as_gen/structures.table.SourceTable.items", "_as_gen/structures.table.SourceTable.itercols", "_as_gen/structures.table.SourceTable.iterrows", "_as_gen/structures.table.SourceTable.keep_columns", "_as_gen/structures.table.SourceTable.keys", "_as_gen/structures.table.SourceTable.lat", "_as_gen/structures.table.SourceTable.loc", "_as_gen/structures.table.SourceTable.loc_indices", "_as_gen/structures.table.SourceTable.lon", "_as_gen/structures.table.SourceTable.mask", "_as_gen/structures.table.SourceTable.masked", "_as_gen/structures.table.SourceTable.meta", "_as_gen/structures.table.SourceTable.more", "_as_gen/structures.table.SourceTable.name", "_as_gen/structures.table.SourceTable.pformat", "_as_gen/structures.table.SourceTable.pformat_all", "_as_gen/structures.table.SourceTable.pprint", "_as_gen/structures.table.SourceTable.pprint_all", "_as_gen/structures.table.SourceTable.pprint_exclude_names", "_as_gen/structures.table.SourceTable.pprint_include_names", "_as_gen/structures.table.SourceTable.read", "_as_gen/structures.table.SourceTable.redshift", "_as_gen/structures.table.SourceTable.remove_column", "_as_gen/structures.table.SourceTable.remove_columns", "_as_gen/structures.table.SourceTable.remove_indices", "_as_gen/structures.table.SourceTable.remove_row", "_as_gen/structures.table.SourceTable.remove_rows", "_as_gen/structures.table.SourceTable.rename_column", "_as_gen/structures.table.SourceTable.rename_columns", "_as_gen/structures.table.SourceTable.replace_column", "_as_gen/structures.table.SourceTable.reverse", "_as_gen/structures.table.SourceTable.round", "_as_gen/structures.table.SourceTable.schema", "_as_gen/structures.table.SourceTable.show_in_browser", "_as_gen/structures.table.SourceTable.show_in_notebook", "_as_gen/structures.table.SourceTable.sort", "_as_gen/structures.table.SourceTable.to_pandas", "_as_gen/structures.table.SourceTable.type", "_as_gen/structures.table.SourceTable.type_native", "_as_gen/structures.table.SourceTable.update", "_as_gen/structures.table.SourceTable.values", "_as_gen/structures.table.SourceTable.values_equal", "_as_gen/structures.table.SourceTable.write", "_as_gen/utilities.core", "_as_gen/utilities.core.enforce_units", "_as_gen/utilities.core.getFromDict", "_as_gen/utilities.core.setInDict", "_as_gen/utilities.mp_utils", "_as_gen/utilities.mp_utils.split", "_as_gen/utilities.text", "_as_gen/utilities.text.Spinner", "_as_gen/utilities.text.Spinner.__init__", "_as_gen/utilities.text.Spinner.busy", "_as_gen/utilities.text.Spinner.delay", "_as_gen/utilities.text.Spinner.formatter", "_as_gen/utilities.text.Spinner.process", "_as_gen/utilities.text.Spinner.spinner_task", "_as_gen/utilities.text.Spinner.spinning_cursor", "_as_gen/utilities.text.Spinner.stream", "api", "data_structures", "examples", "getting_started", "index", "quickstart/install", "user_guide", "user_guides/cross_matching", "user_guides/databases"], "filenames": ["_as_gen/schema.rst", "_as_gen/schema.ReductionSchema.rst", "_as_gen/schema.ReductionSchema.DBPATH.rst", "_as_gen/schema.ReductionSchema.INSTRUMENTAL.rst", "_as_gen/schema.ReductionSchema.INSTRUMENT_PARAMS.rst", "_as_gen/schema.ReductionSchema.IO_PARAMS.rst", "_as_gen/schema.ReductionSchema.OBJECT_PARAMS.rst", "_as_gen/schema.ReductionSchema.OTYPES.rst", "_as_gen/schema.ReductionSchema.POISSON.rst", "_as_gen/schema.ReductionSchema.POISSON_PARAMS.rst", "_as_gen/schema.ReductionSchema.PSF.rst", "_as_gen/schema.ReductionSchema.REFDBS.rst", "_as_gen/schema.ReductionSchema.RUN_PARAMS.rst", "_as_gen/schema.ReductionSchema.__init__.rst", "_as_gen/schema.ReductionSchema.clear.rst", "_as_gen/schema.ReductionSchema.copy.rst", "_as_gen/schema.ReductionSchema.from_file.rst", "_as_gen/schema.ReductionSchema.fromkeys.rst", "_as_gen/schema.ReductionSchema.get.rst", "_as_gen/schema.ReductionSchema.isvalid.rst", "_as_gen/schema.ReductionSchema.items.rst", "_as_gen/schema.ReductionSchema.keys.rst", "_as_gen/schema.ReductionSchema.pop.rst", "_as_gen/schema.ReductionSchema.popitem.rst", "_as_gen/schema.ReductionSchema.setdefault.rst", "_as_gen/schema.ReductionSchema.update.rst", "_as_gen/schema.ReductionSchema.values.rst", "_as_gen/schema.Schema.rst", "_as_gen/schema.Schema.__init__.rst", "_as_gen/schema.Schema.clear.rst", "_as_gen/schema.Schema.copy.rst", "_as_gen/schema.Schema.from_file.rst", "_as_gen/schema.Schema.fromkeys.rst", "_as_gen/schema.Schema.get.rst", "_as_gen/schema.Schema.isvalid.rst", "_as_gen/schema.Schema.items.rst", "_as_gen/schema.Schema.keys.rst", "_as_gen/schema.Schema.pop.rst", "_as_gen/schema.Schema.popitem.rst", "_as_gen/schema.Schema.setdefault.rst", "_as_gen/schema.Schema.update.rst", "_as_gen/schema.Schema.values.rst", "_as_gen/schema.SourceTableSchema.rst", "_as_gen/schema.SourceTableSchema.__init__.rst", "_as_gen/schema.SourceTableSchema.available_coordinate_frames.rst", "_as_gen/schema.SourceTableSchema.clear.rst", "_as_gen/schema.SourceTableSchema.column_map.rst", "_as_gen/schema.SourceTableSchema.construct.rst", "_as_gen/schema.SourceTableSchema.coordinate_columns.rst", "_as_gen/schema.SourceTableSchema.coordinate_frame.rst", "_as_gen/schema.SourceTableSchema.coordinate_system.rst", "_as_gen/schema.SourceTableSchema.copy.rst", "_as_gen/schema.SourceTableSchema.default_coord_system.rst", "_as_gen/schema.SourceTableSchema.from_file.rst", "_as_gen/schema.SourceTableSchema.fromkeys.rst", "_as_gen/schema.SourceTableSchema.get.rst", "_as_gen/schema.SourceTableSchema.inv_column_map.rst", "_as_gen/schema.SourceTableSchema.isvalid.rst", "_as_gen/schema.SourceTableSchema.items.rst", "_as_gen/schema.SourceTableSchema.keys.rst", "_as_gen/schema.SourceTableSchema.object_map.rst", "_as_gen/schema.SourceTableSchema.pop.rst", "_as_gen/schema.SourceTableSchema.popitem.rst", "_as_gen/schema.SourceTableSchema.setdefault.rst", "_as_gen/schema.SourceTableSchema.update.rst", "_as_gen/schema.SourceTableSchema.values.rst", "_as_gen/structures.databases.rst", "_as_gen/structures.databases.DBRegistry.rst", "_as_gen/structures.databases.DBRegistry.__init__.rst", "_as_gen/structures.databases.DBRegistry.clear.rst", "_as_gen/structures.databases.DBRegistry.copy.rst", "_as_gen/structures.databases.DBRegistry.fromkeys.rst", "_as_gen/structures.databases.DBRegistry.get.rst", "_as_gen/structures.databases.DBRegistry.items.rst", "_as_gen/structures.databases.DBRegistry.keys.rst", "_as_gen/structures.databases.DBRegistry.pop.rst", "_as_gen/structures.databases.DBRegistry.popitem.rst", "_as_gen/structures.databases.DBRegistry.setdefault.rst", "_as_gen/structures.databases.DBRegistry.update.rst", "_as_gen/structures.databases.DBRegistry.values.rst", "_as_gen/structures.databases.LocalDatabase.rst", "_as_gen/structures.databases.LocalDatabase.__init__.rst", "_as_gen/structures.databases.LocalDatabase.add_sources_to_poisson.rst", "_as_gen/structures.databases.LocalDatabase.class_table_schema.rst", "_as_gen/structures.databases.LocalDatabase.count.rst", "_as_gen/structures.databases.LocalDatabase.create_poisson_map.rst", "_as_gen/structures.databases.LocalDatabase.default_poisson_map.rst", "_as_gen/structures.databases.LocalDatabase.get_default_poisson_map.rst", "_as_gen/structures.databases.LocalDatabase.get_poisson_map.rst", "_as_gen/structures.databases.LocalDatabase.poisson_map.rst", "_as_gen/structures.databases.LocalDatabase.query_radius.rst", "_as_gen/structures.databases.LocalDatabase.random_sample_count.rst", "_as_gen/structures.databases.LocalDatabase.set_poisson_map.rst", "_as_gen/structures.databases.LocalDatabase.source_match.rst", "_as_gen/structures.databases.NED.rst", "_as_gen/structures.databases.NED.__init__.rst", "_as_gen/structures.databases.NED.add_sources_to_poisson.rst", "_as_gen/structures.databases.NED.class_table_schema.rst", "_as_gen/structures.databases.NED.count.rst", "_as_gen/structures.databases.NED.create_poisson_map.rst", "_as_gen/structures.databases.NED.default_poisson_map.rst", "_as_gen/structures.databases.NED.get_default_poisson_map.rst", "_as_gen/structures.databases.NED.get_poisson_map.rst", "_as_gen/structures.databases.NED.poisson_map.rst", "_as_gen/structures.databases.NED.query_radius.rst", "_as_gen/structures.databases.NED.random_sample_count.rst", "_as_gen/structures.databases.NED.set_poisson_map.rst", "_as_gen/structures.databases.NED.source_match.rst", "_as_gen/structures.databases.RemoteDatabase.rst", "_as_gen/structures.databases.RemoteDatabase.__init__.rst", "_as_gen/structures.databases.RemoteDatabase.add_sources_to_poisson.rst", "_as_gen/structures.databases.RemoteDatabase.class_table_schema.rst", "_as_gen/structures.databases.RemoteDatabase.count.rst", "_as_gen/structures.databases.RemoteDatabase.create_poisson_map.rst", "_as_gen/structures.databases.RemoteDatabase.default_poisson_map.rst", "_as_gen/structures.databases.RemoteDatabase.get_default_poisson_map.rst", "_as_gen/structures.databases.RemoteDatabase.get_poisson_map.rst", "_as_gen/structures.databases.RemoteDatabase.poisson_map.rst", "_as_gen/structures.databases.RemoteDatabase.query_radius.rst", "_as_gen/structures.databases.RemoteDatabase.random_sample_count.rst", "_as_gen/structures.databases.RemoteDatabase.set_poisson_map.rst", "_as_gen/structures.databases.RemoteDatabase.source_match.rst", "_as_gen/structures.databases.SIMBAD.rst", "_as_gen/structures.databases.SIMBAD.__init__.rst", "_as_gen/structures.databases.SIMBAD.add_sources_to_poisson.rst", "_as_gen/structures.databases.SIMBAD.class_table_schema.rst", "_as_gen/structures.databases.SIMBAD.count.rst", "_as_gen/structures.databases.SIMBAD.create_poisson_map.rst", "_as_gen/structures.databases.SIMBAD.default_poisson_map.rst", "_as_gen/structures.databases.SIMBAD.get_default_poisson_map.rst", "_as_gen/structures.databases.SIMBAD.get_poisson_map.rst", "_as_gen/structures.databases.SIMBAD.poisson_map.rst", "_as_gen/structures.databases.SIMBAD.query_radius.rst", "_as_gen/structures.databases.SIMBAD.random_sample_count.rst", "_as_gen/structures.databases.SIMBAD.set_poisson_map.rst", "_as_gen/structures.databases.SIMBAD.source_match.rst", "_as_gen/structures.databases.SourceDatabase.rst", "_as_gen/structures.databases.SourceDatabase.__init__.rst", "_as_gen/structures.databases.SourceDatabase.add_sources_to_poisson.rst", "_as_gen/structures.databases.SourceDatabase.class_table_schema.rst", "_as_gen/structures.databases.SourceDatabase.count.rst", "_as_gen/structures.databases.SourceDatabase.create_poisson_map.rst", "_as_gen/structures.databases.SourceDatabase.default_poisson_map.rst", "_as_gen/structures.databases.SourceDatabase.get_default_poisson_map.rst", "_as_gen/structures.databases.SourceDatabase.get_poisson_map.rst", "_as_gen/structures.databases.SourceDatabase.poisson_map.rst", "_as_gen/structures.databases.SourceDatabase.query_radius.rst", "_as_gen/structures.databases.SourceDatabase.random_sample_count.rst", "_as_gen/structures.databases.SourceDatabase.set_poisson_map.rst", "_as_gen/structures.databases.SourceDatabase.source_match.rst", "_as_gen/structures.map.rst", "_as_gen/structures.map.Map.rst", "_as_gen/structures.map.Map.__init__.rst", "_as_gen/structures.map.Map.coordinate_frame.rst", "_as_gen/structures.map.MapAtlas.rst", "_as_gen/structures.map.MapAtlas.__init__.rst", "_as_gen/structures.map.MapAtlas.coordinate_frame.rst", "_as_gen/structures.map.MapAtlas.generate.rst", "_as_gen/structures.map.MapAtlas.get_map.rst", "_as_gen/structures.map.MapAtlas.has_maps.rst", "_as_gen/structures.map.MapAtlas.hdus.rst", "_as_gen/structures.map.MapAtlas.map_names.rst", "_as_gen/structures.map.MapAtlas.pixel_positions.rst", "_as_gen/structures.map.MapAtlas.remove.rst", "_as_gen/structures.map.MapAtlas.reshape_healpix.rst", "_as_gen/structures.map.StatAtlas.rst", "_as_gen/structures.map.StatAtlas.__init__.rst", "_as_gen/structures.map.StatAtlas.append_to_fits.rst", "_as_gen/structures.map.StatAtlas.build_poisson_map.rst", "_as_gen/structures.map.StatAtlas.build_poisson_map_MAP.rst", "_as_gen/structures.map.StatAtlas.build_poisson_map_NNR.rst", "_as_gen/structures.map.StatAtlas.build_poisson_map_gp.rst", "_as_gen/structures.map.StatAtlas.build_poisson_maps.rst", "_as_gen/structures.map.StatAtlas.coordinate_frame.rst", "_as_gen/structures.map.StatAtlas.generate.rst", "_as_gen/structures.map.StatAtlas.get_map.rst", "_as_gen/structures.map.StatAtlas.get_points.rst", "_as_gen/structures.map.StatAtlas.has_maps.rst", "_as_gen/structures.map.StatAtlas.hdus.rst", "_as_gen/structures.map.StatAtlas.map_names.rst", "_as_gen/structures.map.StatAtlas.pixel_positions.rst", "_as_gen/structures.map.StatAtlas.remove.rst", "_as_gen/structures.map.StatAtlas.reset.rst", "_as_gen/structures.map.StatAtlas.reshape_healpix.rst", "_as_gen/structures.map.StatAtlas.sample_from_database.rst", "_as_gen/structures.table.rst", "_as_gen/structures.table.SourceTable.rst", "_as_gen/structures.table.SourceTable.ColumnClass.rst", "_as_gen/structures.table.SourceTable.__init__.rst", "_as_gen/structures.table.SourceTable.add_column.rst", "_as_gen/structures.table.SourceTable.add_columns.rst", "_as_gen/structures.table.SourceTable.add_index.rst", "_as_gen/structures.table.SourceTable.add_row.rst", "_as_gen/structures.table.SourceTable.append_to_fits.rst", "_as_gen/structures.table.SourceTable.append_to_sql.rst", "_as_gen/structures.table.SourceTable.argsort.rst", "_as_gen/structures.table.SourceTable.as_array.rst", "_as_gen/structures.table.SourceTable.colnames.rst", "_as_gen/structures.table.SourceTable.convert_bytestring_to_unicode.rst", "_as_gen/structures.table.SourceTable.convert_unicode_to_bytestring.rst", "_as_gen/structures.table.SourceTable.copy.rst", "_as_gen/structures.table.SourceTable.count_types.rst", "_as_gen/structures.table.SourceTable.dtype.rst", "_as_gen/structures.table.SourceTable.field.rst", "_as_gen/structures.table.SourceTable.filled.rst", "_as_gen/structures.table.SourceTable.from_pandas.rst", "_as_gen/structures.table.SourceTable.generate_schema.rst", "_as_gen/structures.table.SourceTable.get_coordinates.rst", "_as_gen/structures.table.SourceTable.group_by.rst", "_as_gen/structures.table.SourceTable.groups.rst", "_as_gen/structures.table.SourceTable.has_masked_columns.rst", "_as_gen/structures.table.SourceTable.has_masked_values.rst", "_as_gen/structures.table.SourceTable.has_mixin_columns.rst", "_as_gen/structures.table.SourceTable.iloc.rst", "_as_gen/structures.table.SourceTable.index_column.rst", "_as_gen/structures.table.SourceTable.index_mode.rst", "_as_gen/structures.table.SourceTable.indices.rst", "_as_gen/structures.table.SourceTable.info.rst", "_as_gen/structures.table.SourceTable.insert_row.rst", "_as_gen/structures.table.SourceTable.items.rst", "_as_gen/structures.table.SourceTable.itercols.rst", "_as_gen/structures.table.SourceTable.iterrows.rst", "_as_gen/structures.table.SourceTable.keep_columns.rst", "_as_gen/structures.table.SourceTable.keys.rst", "_as_gen/structures.table.SourceTable.lat.rst", "_as_gen/structures.table.SourceTable.loc.rst", "_as_gen/structures.table.SourceTable.loc_indices.rst", "_as_gen/structures.table.SourceTable.lon.rst", "_as_gen/structures.table.SourceTable.mask.rst", "_as_gen/structures.table.SourceTable.masked.rst", "_as_gen/structures.table.SourceTable.meta.rst", "_as_gen/structures.table.SourceTable.more.rst", "_as_gen/structures.table.SourceTable.name.rst", "_as_gen/structures.table.SourceTable.pformat.rst", "_as_gen/structures.table.SourceTable.pformat_all.rst", "_as_gen/structures.table.SourceTable.pprint.rst", "_as_gen/structures.table.SourceTable.pprint_all.rst", "_as_gen/structures.table.SourceTable.pprint_exclude_names.rst", "_as_gen/structures.table.SourceTable.pprint_include_names.rst", "_as_gen/structures.table.SourceTable.read.rst", "_as_gen/structures.table.SourceTable.redshift.rst", "_as_gen/structures.table.SourceTable.remove_column.rst", "_as_gen/structures.table.SourceTable.remove_columns.rst", "_as_gen/structures.table.SourceTable.remove_indices.rst", "_as_gen/structures.table.SourceTable.remove_row.rst", "_as_gen/structures.table.SourceTable.remove_rows.rst", "_as_gen/structures.table.SourceTable.rename_column.rst", "_as_gen/structures.table.SourceTable.rename_columns.rst", "_as_gen/structures.table.SourceTable.replace_column.rst", "_as_gen/structures.table.SourceTable.reverse.rst", "_as_gen/structures.table.SourceTable.round.rst", "_as_gen/structures.table.SourceTable.schema.rst", "_as_gen/structures.table.SourceTable.show_in_browser.rst", "_as_gen/structures.table.SourceTable.show_in_notebook.rst", "_as_gen/structures.table.SourceTable.sort.rst", "_as_gen/structures.table.SourceTable.to_pandas.rst", "_as_gen/structures.table.SourceTable.type.rst", "_as_gen/structures.table.SourceTable.type_native.rst", "_as_gen/structures.table.SourceTable.update.rst", "_as_gen/structures.table.SourceTable.values.rst", "_as_gen/structures.table.SourceTable.values_equal.rst", "_as_gen/structures.table.SourceTable.write.rst", "_as_gen/utilities.core.rst", "_as_gen/utilities.core.enforce_units.rst", "_as_gen/utilities.core.getFromDict.rst", "_as_gen/utilities.core.setInDict.rst", "_as_gen/utilities.mp_utils.rst", "_as_gen/utilities.mp_utils.split.rst", "_as_gen/utilities.text.rst", "_as_gen/utilities.text.Spinner.rst", "_as_gen/utilities.text.Spinner.__init__.rst", "_as_gen/utilities.text.Spinner.busy.rst", "_as_gen/utilities.text.Spinner.delay.rst", "_as_gen/utilities.text.Spinner.formatter.rst", "_as_gen/utilities.text.Spinner.process.rst", "_as_gen/utilities.text.Spinner.spinner_task.rst", "_as_gen/utilities.text.Spinner.spinning_cursor.rst", "_as_gen/utilities.text.Spinner.stream.rst", "api.rst", "data_structures.rst", "examples.rst", "getting_started.rst", "index.rst", "quickstart/install.rst", "user_guide.rst", "user_guides/cross_matching.rst", "user_guides/databases.rst"], "titles": ["schema", "schema.ReductionSchema", "schema.ReductionSchema.DBPATH", "schema.ReductionSchema.INSTRUMENTAL", "schema.ReductionSchema.INSTRUMENT_PARAMS", "schema.ReductionSchema.IO_PARAMS", "schema.ReductionSchema.OBJECT_PARAMS", "schema.ReductionSchema.OTYPES", "schema.ReductionSchema.POISSON", "schema.ReductionSchema.POISSON_PARAMS", "schema.ReductionSchema.PSF", "schema.ReductionSchema.REFDBS", "schema.ReductionSchema.RUN_PARAMS", "schema.ReductionSchema.__init__", "schema.ReductionSchema.clear", "schema.ReductionSchema.copy", "schema.ReductionSchema.from_file", "schema.ReductionSchema.fromkeys", "schema.ReductionSchema.get", "schema.ReductionSchema.isvalid", "schema.ReductionSchema.items", "schema.ReductionSchema.keys", "schema.ReductionSchema.pop", "schema.ReductionSchema.popitem", "schema.ReductionSchema.setdefault", "schema.ReductionSchema.update", "schema.ReductionSchema.values", "schema.Schema", "schema.Schema.__init__", "schema.Schema.clear", "schema.Schema.copy", "schema.Schema.from_file", "schema.Schema.fromkeys", "schema.Schema.get", "schema.Schema.isvalid", "schema.Schema.items", "schema.Schema.keys", "schema.Schema.pop", "schema.Schema.popitem", "schema.Schema.setdefault", "schema.Schema.update", "schema.Schema.values", "schema.SourceTableSchema", "schema.SourceTableSchema.__init__", "schema.SourceTableSchema.available_coordinate_frames", "schema.SourceTableSchema.clear", "schema.SourceTableSchema.column_map", "schema.SourceTableSchema.construct", "schema.SourceTableSchema.coordinate_columns", "schema.SourceTableSchema.coordinate_frame", "schema.SourceTableSchema.coordinate_system", "schema.SourceTableSchema.copy", "schema.SourceTableSchema.default_coord_system", "schema.SourceTableSchema.from_file", "schema.SourceTableSchema.fromkeys", "schema.SourceTableSchema.get", "schema.SourceTableSchema.inv_column_map", "schema.SourceTableSchema.isvalid", "schema.SourceTableSchema.items", "schema.SourceTableSchema.keys", "schema.SourceTableSchema.object_map", "schema.SourceTableSchema.pop", "schema.SourceTableSchema.popitem", "schema.SourceTableSchema.setdefault", "schema.SourceTableSchema.update", "schema.SourceTableSchema.values", "structures.databases", "structures.databases.DBRegistry", "structures.databases.DBRegistry.__init__", "structures.databases.DBRegistry.clear", "structures.databases.DBRegistry.copy", "structures.databases.DBRegistry.fromkeys", "structures.databases.DBRegistry.get", "structures.databases.DBRegistry.items", "structures.databases.DBRegistry.keys", "structures.databases.DBRegistry.pop", "structures.databases.DBRegistry.popitem", "structures.databases.DBRegistry.setdefault", "structures.databases.DBRegistry.update", "structures.databases.DBRegistry.values", "structures.databases.LocalDatabase", "structures.databases.LocalDatabase.__init__", "structures.databases.LocalDatabase.add_sources_to_poisson", "structures.databases.LocalDatabase.class_table_schema", "structures.databases.LocalDatabase.count", "structures.databases.LocalDatabase.create_poisson_map", "structures.databases.LocalDatabase.default_poisson_map", "structures.databases.LocalDatabase.get_default_poisson_map", "structures.databases.LocalDatabase.get_poisson_map", "structures.databases.LocalDatabase.poisson_map", "structures.databases.LocalDatabase.query_radius", "structures.databases.LocalDatabase.random_sample_count", "structures.databases.LocalDatabase.set_poisson_map", "structures.databases.LocalDatabase.source_match", "structures.databases.NED", "structures.databases.NED.__init__", "structures.databases.NED.add_sources_to_poisson", "structures.databases.NED.class_table_schema", "structures.databases.NED.count", "structures.databases.NED.create_poisson_map", "structures.databases.NED.default_poisson_map", "structures.databases.NED.get_default_poisson_map", "structures.databases.NED.get_poisson_map", "structures.databases.NED.poisson_map", "structures.databases.NED.query_radius", "structures.databases.NED.random_sample_count", "structures.databases.NED.set_poisson_map", "structures.databases.NED.source_match", "structures.databases.RemoteDatabase", "structures.databases.RemoteDatabase.__init__", "structures.databases.RemoteDatabase.add_sources_to_poisson", "structures.databases.RemoteDatabase.class_table_schema", "structures.databases.RemoteDatabase.count", "structures.databases.RemoteDatabase.create_poisson_map", "structures.databases.RemoteDatabase.default_poisson_map", "structures.databases.RemoteDatabase.get_default_poisson_map", "structures.databases.RemoteDatabase.get_poisson_map", "structures.databases.RemoteDatabase.poisson_map", "structures.databases.RemoteDatabase.query_radius", "structures.databases.RemoteDatabase.random_sample_count", "structures.databases.RemoteDatabase.set_poisson_map", "structures.databases.RemoteDatabase.source_match", "structures.databases.SIMBAD", "structures.databases.SIMBAD.__init__", "structures.databases.SIMBAD.add_sources_to_poisson", "structures.databases.SIMBAD.class_table_schema", "structures.databases.SIMBAD.count", "structures.databases.SIMBAD.create_poisson_map", "structures.databases.SIMBAD.default_poisson_map", "structures.databases.SIMBAD.get_default_poisson_map", "structures.databases.SIMBAD.get_poisson_map", "structures.databases.SIMBAD.poisson_map", "structures.databases.SIMBAD.query_radius", "structures.databases.SIMBAD.random_sample_count", "structures.databases.SIMBAD.set_poisson_map", "structures.databases.SIMBAD.source_match", "structures.databases.SourceDatabase", "structures.databases.SourceDatabase.__init__", "structures.databases.SourceDatabase.add_sources_to_poisson", "structures.databases.SourceDatabase.class_table_schema", "structures.databases.SourceDatabase.count", "structures.databases.SourceDatabase.create_poisson_map", "structures.databases.SourceDatabase.default_poisson_map", "structures.databases.SourceDatabase.get_default_poisson_map", "structures.databases.SourceDatabase.get_poisson_map", "structures.databases.SourceDatabase.poisson_map", "structures.databases.SourceDatabase.query_radius", "structures.databases.SourceDatabase.random_sample_count", "structures.databases.SourceDatabase.set_poisson_map", "structures.databases.SourceDatabase.source_match", "structures.map", "structures.map.Map", "structures.map.Map.__init__", "structures.map.Map.coordinate_frame", "structures.map.MapAtlas", "structures.map.MapAtlas.__init__", "structures.map.MapAtlas.coordinate_frame", "structures.map.MapAtlas.generate", "structures.map.MapAtlas.get_map", "structures.map.MapAtlas.has_maps", "structures.map.MapAtlas.hdus", "structures.map.MapAtlas.map_names", "structures.map.MapAtlas.pixel_positions", "structures.map.MapAtlas.remove", "structures.map.MapAtlas.reshape_healpix", "structures.map.StatAtlas", "structures.map.StatAtlas.__init__", "structures.map.StatAtlas.append_to_fits", "structures.map.StatAtlas.build_poisson_map", "structures.map.StatAtlas.build_poisson_map_MAP", "structures.map.StatAtlas.build_poisson_map_NNR", "structures.map.StatAtlas.build_poisson_map_gp", "structures.map.StatAtlas.build_poisson_maps", "structures.map.StatAtlas.coordinate_frame", "structures.map.StatAtlas.generate", "structures.map.StatAtlas.get_map", "structures.map.StatAtlas.get_points", "structures.map.StatAtlas.has_maps", "structures.map.StatAtlas.hdus", "structures.map.StatAtlas.map_names", "structures.map.StatAtlas.pixel_positions", "structures.map.StatAtlas.remove", "structures.map.StatAtlas.reset", "structures.map.StatAtlas.reshape_healpix", "structures.map.StatAtlas.sample_from_database", "structures.table", "structures.table.SourceTable", "structures.table.SourceTable.ColumnClass", "structures.table.SourceTable.__init__", "structures.table.SourceTable.add_column", "structures.table.SourceTable.add_columns", "structures.table.SourceTable.add_index", "structures.table.SourceTable.add_row", "structures.table.SourceTable.append_to_fits", "structures.table.SourceTable.append_to_sql", "structures.table.SourceTable.argsort", "structures.table.SourceTable.as_array", "structures.table.SourceTable.colnames", "structures.table.SourceTable.convert_bytestring_to_unicode", "structures.table.SourceTable.convert_unicode_to_bytestring", "structures.table.SourceTable.copy", "structures.table.SourceTable.count_types", "structures.table.SourceTable.dtype", "structures.table.SourceTable.field", "structures.table.SourceTable.filled", "structures.table.SourceTable.from_pandas", "structures.table.SourceTable.generate_schema", "structures.table.SourceTable.get_coordinates", "structures.table.SourceTable.group_by", "structures.table.SourceTable.groups", "structures.table.SourceTable.has_masked_columns", "structures.table.SourceTable.has_masked_values", "structures.table.SourceTable.has_mixin_columns", "structures.table.SourceTable.iloc", "structures.table.SourceTable.index_column", "structures.table.SourceTable.index_mode", "structures.table.SourceTable.indices", "structures.table.SourceTable.info", "structures.table.SourceTable.insert_row", "structures.table.SourceTable.items", "structures.table.SourceTable.itercols", "structures.table.SourceTable.iterrows", "structures.table.SourceTable.keep_columns", "structures.table.SourceTable.keys", "structures.table.SourceTable.lat", "structures.table.SourceTable.loc", "structures.table.SourceTable.loc_indices", "structures.table.SourceTable.lon", "structures.table.SourceTable.mask", "structures.table.SourceTable.masked", "structures.table.SourceTable.meta", "structures.table.SourceTable.more", "structures.table.SourceTable.name", "structures.table.SourceTable.pformat", "structures.table.SourceTable.pformat_all", "structures.table.SourceTable.pprint", "structures.table.SourceTable.pprint_all", "structures.table.SourceTable.pprint_exclude_names", "structures.table.SourceTable.pprint_include_names", "structures.table.SourceTable.read", "structures.table.SourceTable.redshift", "structures.table.SourceTable.remove_column", "structures.table.SourceTable.remove_columns", "structures.table.SourceTable.remove_indices", "structures.table.SourceTable.remove_row", "structures.table.SourceTable.remove_rows", "structures.table.SourceTable.rename_column", "structures.table.SourceTable.rename_columns", "structures.table.SourceTable.replace_column", "structures.table.SourceTable.reverse", "structures.table.SourceTable.round", "structures.table.SourceTable.schema", "structures.table.SourceTable.show_in_browser", "structures.table.SourceTable.show_in_notebook", "structures.table.SourceTable.sort", "structures.table.SourceTable.to_pandas", "structures.table.SourceTable.type", "structures.table.SourceTable.type_native", "structures.table.SourceTable.update", "structures.table.SourceTable.values", "structures.table.SourceTable.values_equal", "structures.table.SourceTable.write", "utilities.core", "utilities.core.enforce_units", "utilities.core.getFromDict", "utilities.core.setInDict", "utilities.mp_utils", "utilities.mp_utils.split", "utilities.text", "utilities.text.Spinner", "utilities.text.Spinner.__init__", "utilities.text.Spinner.busy", "utilities.text.Spinner.delay", "utilities.text.Spinner.formatter", "utilities.text.Spinner.process", "utilities.text.Spinner.spinner_task", "utilities.text.Spinner.spinning_cursor", "utilities.text.Spinner.stream", "API", "Data Structures", "Examples", "pyXMIP Quickstart Guide", "Features", "&lt;no title&gt;", "Reference", "Cross Matching", "Databases"], "terms": {"class": [0, 1, 13, 27, 28, 42, 43, 66, 67, 68, 80, 94, 108, 122, 136, 150, 151, 154, 165, 185, 186, 191, 233, 234, 248, 252, 253, 268, 269, 279, 285, 286], "backend": 0, "manag": [0, 215, 266, 285], "variou": [0, 279], "user": [0, 154, 168, 279, 281, 282, 285, 286], "face": 0, "data": [0, 44, 93, 107, 121, 135, 149, 154, 164, 165, 170, 171, 183, 184, 186, 188, 189, 190, 192, 200, 225, 245, 248, 252, 258, 285, 286], "map": [1, 13, 27, 28, 42, 43, 56, 67, 68, 192, 205, 218, 279, 285, 286], "sourc": [1, 27, 28, 31, 34, 42, 44, 47, 67, 68, 80, 90, 93, 94, 104, 107, 108, 118, 121, 122, 132, 135, 136, 138, 140, 141, 143, 144, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 182, 184, 186, 193, 194, 201, 206, 207, 263, 264, 265, 267, 269, 270, 275, 276, 282, 286], "method": [1, 25, 27, 40, 42, 64, 67, 78, 80, 94, 108, 122, 136, 151, 154, 165, 168, 172, 186, 190, 192, 221, 236, 253, 269, 282, 286], "attribut": [1, 42, 80, 94, 108, 122, 136, 151, 154, 165, 186, 192, 218, 237, 238, 246, 269], "none": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 24, 25, 29, 31, 32, 33, 39, 40, 45, 46, 52, 53, 54, 55, 60, 63, 64, 69, 71, 72, 77, 78, 82, 83, 86, 89, 91, 93, 96, 105, 107, 110, 111, 114, 117, 119, 121, 124, 133, 135, 138, 139, 142, 145, 147, 149, 164, 170, 171, 172, 174, 183, 184, 186, 188, 189, 190, 191, 192, 195, 196, 204, 205, 218, 230, 231, 233, 234, 235, 236, 252, 253, 254, 255, 269, 270, 274], "initi": [13, 28, 43, 68, 152, 155, 166, 170, 171, 192, 258], "gener": [13, 28, 43, 68, 80, 108, 136, 154, 168, 172, 205, 279], "paramet": [13, 16, 28, 31, 43, 47, 53, 68, 84, 90, 91, 93, 98, 104, 105, 107, 112, 118, 119, 121, 126, 132, 133, 135, 140, 146, 147, 149, 152, 154, 155, 157, 158, 164, 165, 166, 168, 170, 171, 172, 174, 175, 183, 184, 189, 190, 191, 192, 195, 196, 200, 204, 205, 208, 214, 215, 218, 221, 222, 231, 233, 234, 235, 236, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 258, 260, 285], "dict": [13, 23, 25, 27, 28, 38, 40, 43, 56, 62, 64, 68, 76, 78, 91, 93, 105, 107, 119, 121, 133, 135, 147, 149, 170, 171, 172, 192, 205, 218, 250, 252], "The": [13, 16, 27, 28, 31, 42, 43, 44, 47, 48, 49, 50, 53, 56, 68, 90, 91, 93, 104, 105, 107, 118, 119, 121, 132, 133, 135, 146, 147, 149, 152, 153, 154, 155, 156, 157, 158, 162, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 180, 183, 184, 189, 190, 192, 195, 200, 205, 208, 218, 221, 222, 233, 234, 235, 246, 248, 249, 253, 254, 255, 258, 279, 281, 282, 285, 286], "dictionari": [13, 17, 18, 24, 28, 32, 33, 39, 43, 54, 55, 63, 68, 71, 72, 77, 93, 107, 121, 135, 149, 192, 218, 258], "underli": [13, 28, 43, 68, 154, 164, 165, 183, 192, 200, 279], "thi": [13, 25, 27, 28, 40, 43, 44, 49, 64, 68, 78, 93, 107, 121, 135, 149, 154, 157, 158, 164, 168, 170, 171, 172, 174, 175, 183, 184, 189, 190, 191, 192, 195, 196, 198, 204, 205, 208, 210, 211, 215, 220, 221, 231, 236, 237, 238, 241, 242, 246, 252, 253, 254, 255, 258, 279, 281, 282, 285, 286], "remov": [14, 22, 23, 29, 37, 38, 45, 61, 62, 69, 75, 76, 222, 241, 242, 243, 244, 245], "all": [14, 16, 29, 31, 45, 53, 69, 90, 104, 118, 132, 146, 160, 172, 178, 192, 196, 204, 218, 221, 222, 233, 234, 235, 236, 243, 248, 250, 281, 282, 285], "item": [14, 29, 45, 69, 203, 233, 234, 235, 253], "from": [14, 16, 17, 25, 29, 31, 32, 40, 42, 45, 47, 53, 54, 56, 64, 69, 71, 78, 152, 154, 155, 157, 158, 165, 166, 168, 171, 174, 175, 184, 190, 192, 205, 233, 234, 235, 237, 238, 241, 242, 244, 245, 252, 253, 255, 258, 279, 282, 285, 286], "d": [14, 15, 20, 21, 22, 25, 26, 29, 30, 35, 36, 37, 40, 41, 45, 51, 58, 59, 61, 64, 65, 69, 70, 73, 74, 75, 78, 79, 125, 189, 190], "shallow": [15, 30, 51, 70], "classmethod": [16, 31, 47, 53, 82, 84, 85, 87, 88, 90, 91, 92, 93, 96, 98, 99, 101, 102, 104, 105, 106, 107, 110, 112, 113, 115, 116, 118, 119, 120, 121, 124, 126, 127, 129, 130, 132, 133, 134, 135, 138, 140, 141, 143, 144, 146, 147, 148, 149, 157, 174, 205], "path": [16, 31, 53, 92, 93, 106, 107, 120, 121, 134, 135, 148, 149, 151, 152, 155, 157, 166, 174, 193, 285], "format": [16, 19, 31, 34, 53, 57, 154, 165, 170, 171, 233, 234, 235, 236, 252, 253, 255], "load": [16, 31, 53, 152, 157, 174, 253], "instanc": [16, 31, 50, 53, 88, 91, 102, 105, 116, 119, 130, 133, 144, 147, 152, 154, 158, 175, 205, 248, 255, 258, 279, 286], "file": [16, 31, 53, 154, 155, 157, 165, 166, 168, 174, 199, 253, 285], "str": [16, 31, 50, 53, 93, 107, 121, 135, 149, 152, 155, 157, 158, 166, 168, 172, 174, 175, 189, 190, 191, 195, 204, 208, 214, 215, 222, 233, 234, 235, 236, 241, 242, 243, 246, 248, 252, 253, 254, 255, 285], "option": [16, 31, 53, 91, 93, 105, 107, 119, 121, 133, 135, 147, 149, 164, 168, 172, 183, 195, 196, 252, 253, 254, 279, 285], "being": [16, 31, 53, 172, 285], "read": [16, 31, 53, 155, 166, 281], "If": [16, 22, 25, 31, 37, 40, 50, 53, 61, 64, 75, 78, 91, 93, 105, 107, 119, 121, 133, 135, 147, 149, 157, 164, 168, 170, 171, 172, 174, 183, 189, 190, 191, 200, 204, 205, 233, 234, 235, 243, 250, 252, 253, 254, 255, 258, 285], "default": [16, 18, 22, 24, 31, 33, 37, 39, 42, 53, 55, 61, 63, 72, 75, 77, 168, 170, 171, 172, 189, 190, 191, 195, 196, 200, 205, 221, 231, 233, 234, 235, 236, 248, 252, 253, 254, 255, 279, 285], "i": [16, 18, 19, 22, 23, 24, 25, 27, 31, 33, 34, 37, 38, 39, 40, 50, 53, 55, 57, 61, 62, 63, 64, 72, 75, 76, 77, 78, 154, 157, 165, 168, 170, 171, 172, 174, 189, 190, 191, 192, 196, 198, 200, 204, 205, 208, 215, 218, 220, 221, 231, 233, 234, 235, 236, 237, 238, 243, 248, 249, 250, 252, 253, 255, 258, 279, 282, 285, 286], "determin": [16, 31, 47, 53, 154, 165, 233, 234, 235, 279, 285], "base": [16, 31, 53, 170, 171, 215, 279, 281, 285], "extens": [16, 31, 53], "current": [16, 31, 48, 49, 53, 88, 102, 116, 130, 144, 246, 253, 285], "yaml": [16, 31, 53, 285], "toml": [16, 31, 53], "json": [16, 31, 53], "ar": [16, 23, 27, 31, 38, 42, 53, 62, 76, 154, 157, 164, 172, 174, 183, 189, 190, 191, 196, 211, 212, 215, 221, 233, 234, 235, 236, 245, 249, 258, 279, 281, 285], "support": [16, 31, 53, 205, 231, 255], "valu": [17, 18, 22, 23, 24, 32, 33, 37, 38, 39, 50, 54, 55, 61, 62, 63, 71, 72, 75, 76, 77, 157, 170, 171, 174, 191, 192, 200, 204, 208, 210, 211, 215, 218, 220, 221, 226, 231, 233, 234, 235, 236, 237, 238, 250, 252, 260, 263, 265, 285], "creat": [17, 32, 54, 71, 154, 157, 165, 170, 171, 174, 189, 190, 192, 205, 214, 221, 222, 241, 242, 244, 245, 246, 247, 249, 250, 254, 255, 282, 285, 286], "new": [17, 32, 54, 71, 164, 183, 189, 190, 191, 192, 196, 204, 208, 218, 221, 243, 246, 247, 248, 252, 253, 254, 258, 281, 282], "kei": [17, 18, 22, 23, 24, 25, 32, 33, 37, 38, 39, 40, 42, 54, 55, 56, 61, 62, 63, 64, 71, 72, 75, 76, 77, 78, 170, 171, 184, 192, 195, 208, 218, 226, 231, 248, 254, 255, 279, 281, 286], "iter": [17, 25, 32, 40, 54, 64, 71, 78, 192, 218, 220, 221, 222, 242], "set": [17, 20, 21, 32, 35, 36, 42, 50, 54, 58, 59, 71, 73, 74, 84, 88, 97, 98, 102, 112, 116, 125, 126, 130, 140, 144, 170, 171, 195, 208, 233, 234, 235, 246, 252, 279, 281, 285], "return": [18, 19, 22, 23, 24, 33, 34, 37, 38, 39, 44, 47, 50, 55, 56, 57, 61, 62, 63, 72, 75, 76, 77, 84, 90, 91, 93, 98, 104, 105, 107, 112, 118, 119, 121, 126, 132, 133, 135, 140, 146, 147, 149, 157, 158, 160, 161, 164, 168, 174, 175, 178, 179, 183, 184, 195, 196, 200, 203, 204, 205, 208, 213, 214, 215, 216, 221, 225, 226, 233, 234, 254, 255, 260, 286], "els": [18, 24, 33, 39, 55, 63, 72, 77, 171], "true": [19, 34, 57, 82, 91, 93, 96, 105, 107, 110, 119, 121, 124, 133, 135, 138, 147, 149, 154, 164, 168, 170, 171, 172, 183, 186, 188, 189, 190, 196, 200, 210, 211, 212, 231, 233, 234, 235, 236, 248, 252, 253, 254, 255, 258, 260, 285], "valid": [19, 34, 57, 170, 171, 252, 253], "fals": [19, 34, 57, 157, 164, 168, 170, 171, 174, 183, 186, 188, 189, 190, 191, 192, 195, 196, 205, 231, 233, 234, 235, 236, 248, 252, 253, 254, 255, 260, 271, 285], "otherwis": [19, 22, 34, 37, 57, 61, 75, 170, 171, 189, 190, 200, 204], "like": [20, 21, 35, 36, 58, 59, 73, 74, 170, 171, 255, 258, 260, 285], "object": [20, 21, 26, 35, 36, 41, 42, 50, 58, 59, 65, 73, 74, 79, 84, 91, 97, 98, 105, 108, 112, 119, 126, 133, 140, 147, 154, 157, 165, 168, 172, 174, 189, 190, 192, 196, 208, 213, 216, 221, 225, 226, 233, 234, 239, 248, 252, 253, 255, 260, 261, 279, 285, 286], "provid": [20, 21, 26, 35, 36, 41, 58, 59, 65, 73, 74, 79, 170, 171, 221, 233, 234, 235, 236, 279, 281, 282, 285], "view": [20, 21, 26, 35, 36, 41, 58, 59, 65, 73, 74, 79, 252], "": [20, 21, 26, 35, 36, 41, 47, 58, 59, 65, 73, 74, 79, 125, 153, 154, 156, 165, 171, 173, 195, 198, 199, 205, 208, 254, 255, 273, 285, 286], "k": [22, 25, 37, 40, 61, 64, 75, 78, 285], "v": [22, 25, 37, 40, 61, 64, 75, 78, 97, 125, 190], "specifi": [22, 37, 42, 50, 61, 75, 90, 104, 118, 132, 146, 152, 154, 155, 158, 165, 166, 172, 175, 184, 189, 190, 192, 195, 205, 208, 218, 222, 242, 250, 255, 279, 285, 286], "correspond": [22, 37, 42, 49, 50, 61, 75, 158, 175, 190, 192, 208, 218, 226, 255, 279, 285], "found": [22, 37, 61, 75, 252, 285], "given": [22, 37, 44, 61, 75, 90, 104, 118, 132, 146, 157, 174, 189, 190, 218, 225, 226, 243, 250, 252, 253, 279, 282, 285, 286], "rais": [22, 23, 37, 38, 61, 62, 75, 76, 205, 255], "keyerror": [22, 23, 37, 38, 61, 62, 75, 76], "pair": [23, 38, 62, 76], "2": [23, 38, 62, 76, 154, 170, 171, 189, 190, 192, 205, 214, 220, 221, 222, 241, 242, 244, 245, 246, 247, 248, 255, 258, 260, 285], "tupl": [23, 38, 62, 76, 170, 171, 192, 218, 221, 233, 234, 235, 236, 237, 238, 247], "lifo": [23, 38, 62, 76], "last": [23, 38, 62, 76, 154, 165], "first": [23, 38, 62, 76, 254], "out": [23, 38, 62, 76, 125, 208, 282], "order": [23, 38, 62, 76, 170, 171, 192, 195, 196, 213, 218, 249, 254], "empti": [23, 38, 62, 76, 157, 172, 174], "insert": [24, 39, 63, 77, 189, 190, 191], "e": [25, 40, 64, 78, 192, 218, 221, 252], "f": [25, 40, 64, 78, 231], "present": [25, 40, 64, 78, 285], "ha": [25, 40, 64, 78, 154, 165, 170, 171, 196, 210, 211, 212, 231, 233, 234, 235, 236, 255, 285], "doe": [25, 40, 64, 78, 210, 252, 253, 254, 255], "lack": [25, 40, 64, 78], "In": [25, 40, 64, 78, 154, 165, 192, 205, 215, 255, 258, 279, 285], "either": [25, 40, 50, 64, 78, 191, 215], "case": [25, 40, 64, 78, 210, 255, 258, 262, 282], "follow": [25, 40, 64, 78, 279, 285], "an": [26, 41, 65, 79, 84, 98, 112, 126, 140, 151, 157, 158, 170, 171, 174, 175, 189, 192, 215, 218, 233, 234, 252, 253, 255, 282, 285, 286], "archetyp": 27, "effect": [27, 208, 285, 286], "wrapper": [27, 154], "type": [27, 42, 44, 47, 56, 84, 90, 91, 93, 97, 98, 104, 105, 107, 112, 118, 119, 121, 125, 126, 132, 133, 135, 140, 146, 147, 149, 157, 158, 160, 161, 164, 168, 170, 171, 172, 174, 175, 178, 179, 183, 184, 185, 191, 192, 195, 196, 204, 205, 208, 214, 218, 221, 233, 234, 250, 255, 279, 282, 285], "few": [27, 154, 165, 255], "addit": [27, 91, 93, 105, 107, 119, 121, 133, 135, 147, 149, 154, 165, 168, 170, 171, 172, 184, 205, 215, 255, 281, 285], "util": [27, 170, 171, 282, 285, 286], "most": [27, 243, 279, 282], "onli": [27, 221, 222, 225, 231, 233, 234, 235, 236, 242, 248, 255, 279, 285], "function": [27, 154, 195, 249, 262, 266, 285, 286], "sub": [27, 172], "repres": [42, 48, 154, 198, 279, 285], "tabl": [42, 47, 50, 84, 90, 91, 93, 98, 104, 105, 107, 112, 118, 119, 121, 126, 132, 133, 135, 140, 146, 147, 149, 154, 165, 167, 172, 184, 279, 281, 286], "name": [42, 50, 97, 125, 151, 152, 158, 161, 165, 168, 172, 175, 179, 186, 188, 189, 190, 191, 192, 195, 196, 205, 208, 214, 218, 221, 222, 231, 233, 234, 235, 236, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 258, 260, 273, 277, 279, 285], "convent": [42, 154, 279, 285], "sourcet": [42, 47, 90, 93, 104, 107, 118, 121, 132, 135, 146, 149], "inform": [42, 279, 281, 285], "special": [42, 56, 154, 165, 185, 253, 279, 285], "role": 42, "particular": [42, 168, 172, 192, 285], "column": [42, 47, 48, 50, 56, 189, 190, 191, 192, 195, 196, 198, 199, 203, 204, 205, 208, 210, 211, 212, 214, 215, 216, 218, 220, 221, 222, 225, 231, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 258, 260, 279, 285], "dataset": [42, 285], "addition": 42, "control": [42, 237, 238, 255, 285], "nativ": [42, 56, 154, 165, 196], "coordin": [42, 44, 48, 49, 50, 84, 90, 98, 104, 112, 118, 126, 132, 140, 146, 153, 154, 156, 165, 170, 171, 173, 255, 279, 286], "system": [42, 48, 49, 50, 153, 154, 156, 165, 173, 252, 279, 285], "simbad": [42, 285], "adopt": 42, "pyxmip": [42, 56, 86, 89, 100, 103, 114, 117, 128, 131, 142, 145, 150, 268, 279, 282, 285, 286], "contain": [42, 84, 98, 112, 126, 140, 154, 165, 170, 171, 172, 208, 260, 279, 282, 285], "3": [42, 190, 192, 205, 214, 221, 222, 241, 242, 244, 245, 246, 247, 248, 254, 255, 273], "top": 42, "level": 42, "header": [42, 154, 165, 231, 233, 234, 235, 236, 252, 285], "column_map": [42, 97, 125, 279], "equival": [42, 154, 165, 198], "z": [42, 97, 214, 221, 222, 241, 242, 244, 245, 279], "ra": [42, 97, 125, 255, 279, 286], "dec": [42, 97, 125, 255, 279, 286], "l": [42, 125, 279], "b": [42, 125, 189, 190, 192, 214, 221, 222, 231, 241, 242, 244, 245, 246, 247, 248, 250, 258, 260, 279], "default_coord_system": [42, 97, 125, 279], "frame": [42, 44, 50, 154, 279], "string": [42, 198, 199, 205, 208, 233, 234, 235, 236, 252, 253], "object_map": [42, 97, 125], "each": [42, 84, 91, 93, 98, 105, 107, 112, 119, 121, 126, 133, 135, 140, 147, 149, 170, 171, 172, 184, 189, 190, 198, 204, 211, 221, 285, 286], "possibl": [42, 252, 285], "us": [42, 50, 93, 107, 121, 135, 149, 154, 170, 171, 172, 189, 190, 191, 192, 195, 198, 199, 200, 204, 210, 213, 218, 220, 221, 225, 226, 233, 234, 235, 237, 238, 241, 242, 244, 252, 253, 254, 255, 258, 262, 279, 282, 285], "list": [44, 50, 84, 98, 112, 126, 140, 160, 161, 171, 172, 178, 179, 189, 190, 191, 192, 195, 196, 208, 218, 221, 233, 234, 235, 236, 247, 252, 253, 254, 260, 281], "avail": [44, 50, 160, 161, 172, 178, 179, 189, 258, 279, 285], "astropi": [44, 50, 90, 93, 104, 107, 118, 121, 132, 135, 146, 149, 153, 154, 156, 157, 173, 174, 184, 189, 190, 191, 204, 205, 208, 221, 233, 234, 235, 236, 239, 248, 252, 253, 255, 258, 261, 286], "genericfram": [44, 50, 153, 156, 173], "which": [44, 47, 90, 93, 104, 107, 108, 118, 121, 132, 135, 146, 149, 154, 157, 165, 168, 174, 189, 190, 195, 208, 211, 215, 252, 255, 279, 285, 286], "can": [44, 108, 154, 189, 190, 192, 208, 213, 218, 221, 225, 226, 233, 234, 235, 236, 241, 246, 252, 258, 279, 281, 282, 285, 286], "associ": [44, 154, 216], "best": [47, 285], "guess": [47, 170, 171], "deduc": 47, "mean": [47, 252, 253], "structur": [47, 281, 286], "final": 47, "properti": [48, 49, 50, 56, 153, 156, 159, 160, 161, 162, 173, 177, 178, 179, 180, 187, 197, 202, 209, 210, 211, 212, 213, 216, 224, 225, 226, 227, 228, 229, 232, 240, 246, 251, 256, 257, 279], "specif": [49, 50, 168, 170, 171, 245, 285], "anoth": [50, 252, 253, 258, 260], "mai": [50, 170, 171, 172, 199, 210, 211, 252, 253, 279, 285], "must": [50, 170, 171, 172, 191, 258, 279, 281, 285], "consist": 50, "colmap": 50, "correct": [50, 285], "invers": 56, "now": 56, "select": [56, 285], "modul": [66, 185], "x": [66, 97, 125, 170, 171, 189, 190, 205, 214, 221, 222, 241, 242, 244, 245, 282, 285], "match": [66, 93, 107, 121, 135, 149, 170, 171, 172, 189, 190, 192, 218, 258, 279, 282, 284, 286], "queri": [66, 84, 90, 91, 98, 104, 105, 108, 112, 118, 119, 126, 132, 133, 140, 146, 147, 184, 282, 286], "except": [66, 154, 165, 233, 234, 235, 236, 255], "registri": 68, "represent": [80, 108, 136, 151, 233, 234, 235, 236, 255], "local": [80, 252, 253], "point": [82, 91, 93, 96, 105, 107, 110, 119, 121, 124, 133, 135, 138, 147, 149, 170, 171, 184, 285], "radii": [82, 84, 91, 93, 96, 98, 105, 107, 110, 112, 119, 121, 124, 126, 133, 135, 138, 140, 147, 149], "thread": [82, 91, 93, 96, 105, 107, 110, 119, 121, 124, 133, 135, 138, 147, 149], "thread_kw": [82, 91, 93, 96, 105, 107, 110, 119, 121, 124, 133, 135, 138, 147, 149], "posit": [84, 90, 91, 98, 104, 105, 112, 118, 119, 126, 132, 133, 140, 146, 147, 162, 170, 171, 180, 189, 190, 214, 218, 286], "number": [84, 91, 98, 105, 112, 119, 126, 133, 140, 147, 154, 157, 165, 170, 171, 174, 184, 231, 233, 234, 235, 236, 250, 252, 253], "skycoord": [84, 90, 98, 104, 112, 118, 126, 132, 140, 146, 162, 180, 255, 286], "A": [84, 98, 112, 126, 140, 168, 205, 233, 234, 235, 236, 247, 252, 253, 255, 285], "sky": [84, 91, 98, 105, 112, 119, 126, 133, 140, 147, 154, 165, 282, 285], "unit": [84, 90, 91, 93, 98, 104, 105, 107, 112, 118, 119, 121, 126, 132, 133, 135, 140, 146, 147, 149, 157, 164, 174, 183, 184, 186, 188, 205, 231, 233, 234, 235, 236, 255, 286], "quantiti": [84, 90, 91, 93, 98, 104, 105, 107, 112, 118, 119, 121, 126, 132, 133, 135, 140, 146, 147, 149, 157, 164, 174, 183, 184, 255], "arrai": [84, 98, 112, 126, 140, 154, 170, 171, 192, 195, 196, 198, 199, 200, 205, 208, 245, 282], "same": [84, 98, 112, 126, 140, 168, 172, 192, 200, 208, 218, 231, 233, 234, 235, 236, 241, 242, 244, 248, 250, 253, 260, 285], "size": [84, 98, 112, 126, 140, 170, 171, 172, 236], "sampl": [84, 91, 98, 105, 112, 119, 126, 133, 140, 147, 165, 184, 285], "arg": [85, 99, 113, 127, 141, 168, 169, 170, 171, 172, 182, 184], "kwarg": [85, 91, 99, 105, 113, 119, 127, 133, 141, 147, 168, 169, 170, 171, 172, 182, 184, 186, 188], "home": [86, 89, 100, 103, 114, 117, 128, 131, 142, 145], "runner": [86, 89, 100, 103, 114, 117, 128, 131, 142, 145], "work": [86, 89, 100, 103, 114, 117, 128, 131, 142, 145, 225, 242, 281, 286], "bin": [86, 89, 100, 103, 114, 117, 128, 131, 142, 145], "psn_map": [86, 89, 100, 103, 114, 117, 128, 131, 142, 145], "get": [88, 102, 116, 130, 144, 189, 190, 214, 237, 238, 252, 253, 281], "poissonmap": [88, 102, 116, 130, 144], "radiu": [90, 104, 118, 132, 146, 164, 170, 183, 184, 285, 286], "remot": [90, 104, 108, 118, 132, 146], "pull": [90, 104, 118, 132, 146], "within": [90, 104, 118, 132, 146, 285, 286], "angular": [90, 104, 118, 132, 146, 184, 285], "area": [90, 91, 104, 105, 118, 119, 132, 133, 146, 147], "about": [90, 104, 118, 132, 146, 285], "count": [91, 105, 119, 133, 147, 172, 184], "random": [91, 105, 119, 133, 147, 165, 184, 253, 285], "int": [91, 105, 119, 133, 147, 170, 171, 184, 189, 190, 195, 214, 231, 233, 234, 235, 236, 244, 245, 250, 252, 253], "randomli": [91, 105, 119, 133, 147, 184, 285], "search": [91, 93, 105, 107, 119, 121, 133, 135, 147, 149, 170, 184, 252, 285, 286], "bool": [91, 93, 105, 107, 119, 121, 133, 135, 147, 149, 157, 164, 168, 170, 171, 172, 174, 183, 189, 190, 191, 195, 196, 200, 205, 231, 233, 234, 235, 236, 248, 252, 254, 255, 258, 260, 285], "dictat": [91, 105, 119, 133, 147, 285], "behavior": [91, 105, 119, 133, 147, 154, 165, 248, 285], "source_t": [93, 107, 121, 135, 149], "search_radii": [93, 107, 121, 135, 149], "1": [93, 107, 121, 135, 149, 170, 171, 189, 190, 192, 205, 214, 220, 221, 222, 234, 236, 241, 242, 244, 245, 246, 247, 248, 250, 255, 258, 260, 279, 285, 286], "arcmin": [93, 107, 121, 135, 149, 286], "against": [93, 107, 121, 135, 149, 282, 285, 286], "write": [93, 107, 121, 135, 149], "cross": [93, 107, 121, 135, 149, 170, 171, 279, 282, 284, 286], "multithread": [93, 107, 121, 135, 149], "keyword": [93, 107, 121, 135, 149, 168, 172], "instanti": [94, 122], "ipac": [94, 282], "caltech": 94, "redshift": [97, 279], "ass": 97, "As": [97, 125, 285], "cl": [97, 125], "blue": 97, "c": [97, 125, 189, 190, 192, 214, 221, 222, 241, 242, 244, 245, 246, 247, 250, 258, 260, 285], "emobj": 97, "flar": 97, "pe": [97, 125], "hii": [97, 125], "mcld": 97, "moc": [97, 125], "neb": 97, "gne": [97, 125], "nova": 97, "No": [97, 125], "pn": [97, 125], "psr": [97, 125], "red": 97, "rfn": 97, "pne": 97, "sn": [97, 125], "snr": [97, 125], "wd": [97, 125], "wr": [97, 125], "abl": 97, "ism": [97, 125], "eml": 97, "emlin": 97, "flare": 97, "g": [97, 125, 192, 218, 221, 252], "gclstr": 97, "clg": [97, 125], "ggroup": 97, "grg": [97, 125], "gpair": 97, "pag": [97, 125], "gtrpl": 97, "cgg": [97, 125], "g_len": 97, "gl": [97, 125], "gamma": 97, "gam": [97, 125], "ir": [97, 125, 285], "other": [97, 222, 233, 234, 235, 236, 252, 258, 260, 279, 285], "pofg": 97, "qgroup": 97, "agn": [97, 125], "qso": [97, 125], "q_len": 97, "leq": [97, 125], "radio": 97, "rad": [97, 125, 157, 174], "rne": [97, 125], "uv": [97, 125], "viss": 97, "opt": [97, 125], "xrai": 97, "exg": 97, "coordinate_unit": [97, 125], "deg": [97, 125, 170, 255, 286], "icr": [97, 125, 279], "poisson": [100, 103, 128, 131, 168, 170, 171, 172, 285], "fit": [100, 103, 128, 131, 154, 155, 157, 165, 166, 174], "host": 108, "main_id": 125, "otyp": [125, 285], "ab": 125, "ag": 125, "ae": 125, "bd": 125, "bh": 125, "bl": 125, "bll": 125, "BY": 125, "Be": 125, "bic": 125, "bla": 125, "bz": 125, "cgb": 125, "cv": 125, "ce": 125, "cld": 125, "dne": 125, "eb": 125, "el": 125, "em": 125, "emg": 125, "emo": 125, "er": 125, "ev": 125, "fir": 125, "gwe": 125, "gic": 125, "gig": 125, "gip": 125, "glc": 125, "gr": 125, "h2g": 125, "hb": 125, "hh": 125, "hi": 125, "h": [125, 231], "hv": 125, "hvc": 125, "hx": 125, "hxb": 125, "ig": 125, "li": 125, "lin": 125, "lm": 125, "lp": 125, "lsb": 125, "lx": 125, "lxb": 125, "le": [125, 154], "leg": 125, "lei": 125, "lev": 125, "mgr": 125, "mir": 125, "m": [125, 255], "ma": [125, 196], "mi": 125, "n": [125, 170, 171, 205, 231, 258, 267, 285], "nir": 125, "oh": 125, "opc": 125, "Or": 125, "pcg": 125, "pm": 125, "pl": 125, "poc": 125, "pog": 125, "pu": 125, "q": [125, 231, 255], "rb": 125, "rc": 125, "rg": 125, "rr": 125, "r": [125, 231, 285], "rv": 125, "ro": 125, "sb": 125, "sbg": 125, "sc": [125, 255], "scg": 125, "sfr": 125, "sr": 125, "sx": 125, "st": 125, "sy": 125, "sy1": 125, "sy2": 125, "syg": 125, "tt": 125, "ulx": 125, "ux": 125, "wv": 125, "xb": 125, "y": [125, 170, 171, 189, 190, 214, 221, 222, 241, 242, 244, 245, 285], "o": 125, "a2": 125, "bc": 125, "bcg": 125, "blu": 125, "bub": 125, "cc": 125, "cm": 125, "cor": 125, "err": 125, "flt": 125, "gb": 125, "gd": 125, "gle": 125, "glb": 125, "grv": 125, "mr": 125, "mm": 125, "mul": 125, "pa": 125, "reg": 125, "sg": 125, "sh": 125, "smm": 125, "var": 125, "vid": 125, "skymap": 150, "handler": 150, "callabl": 151, "healpix": [151, 154, 157, 162, 164, 165, 174, 180, 183], "atla": [151, 152, 153, 156, 158, 164, 168, 172, 173, 175, 183, 184], "hdu": [152, 154, 161, 165, 179], "locat": 152, "mapatla": [152, 165, 166], "filepath": [154, 155, 165, 166], "design": 154, "store": [154, 237, 238], "note": [154, 165, 189, 190, 225, 245, 252, 253], "On": [154, 165, 281, 286], "surfac": [154, 165], "standard": [154, 165, 221, 254, 279, 285], "detail": [154, 165, 282], "regard": [154, 165], "primari": [154, 165, 191, 243, 254, 255], "geometri": [154, 165], "npix": [154, 165], "pixel": [154, 162, 165, 180], "grid": [154, 157, 164, 165, 174, 183], "nside": [154, 165], "csy": [154, 165], "cdate": [154, 165], "date": [154, 165, 205], "wa": [154, 165, 192, 285], "edat": [154, 165], "edit": [154, 165], "re": [154, 165, 252, 253], "resolut": [154, 157, 164, 165, 174, 183], "differ": [154, 189, 190, 208, 250, 279], "than": [154, 221, 279], "spheric": 154, "0": [154, 170, 171, 189, 190, 205, 214, 221, 222, 233, 234, 235, 236, 241, 242, 244, 245, 248, 250, 255, 258, 272, 285], "phi": [154, 170, 171, 285], "pi": [154, 170, 171, 285], "theta": [154, 170, 171, 285], "measur": 154, "north": 154, "pole": 154, "never": 154, "interact": [154, 231, 286], "when": [154, 164, 183, 199, 215, 221, 252, 253], "packag": [154, 262, 279, 281, 282, 285], "automat": [154, 285], "convert": [154, 170, 171, 189, 190, 198, 199, 205, 255, 258, 285], "lon": [154, 170, 171], "lat": [154, 170, 171], "time": [154, 205, 241, 244, 253, 255], "These": [154, 279, 285], "so": [154, 198, 215, 236, 237, 238, 252, 279, 282], "call": [154, 189, 190, 195, 253], "base_coordin": 154, "yet": 154, "ti": 154, "ani": [154, 172, 189, 190, 196, 210, 212, 252, 281, 285, 286], "physic": [154, 279, 285], "context": [154, 215], "entri": [154, 192, 204], "those": [154, 279, 285], "interpret": 154, "aforement": 154, "veri": [154, 189], "imag": 154, "1xnpix": 154, "some": [154, 252], "need": [154, 221, 252, 253, 279, 282, 286], "identifi": [154, 285], "ismap": 154, "overwrit": [157, 168, 172, 174], "skyatla": [157, 174], "save": [157, 174], "pass": [157, 170, 171, 172, 174, 184, 252], "assum": [157, 174], "allow": [157, 168, 170, 171, 172, 174, 198, 233, 234, 235, 236, 252, 286], "obtain": [158, 175], "forc": [164, 183], "reshap": [164, 183], "result": [164, 170, 171, 172, 183, 260], "delet": [164, 183], "instead": [164, 183, 236], "fail": [164, 170, 171, 183], "thei": [164, 183, 190, 213, 279], "encount": [164, 183], "subclass": [165, 205, 212, 279], "wrap": 165, "databas": [165, 174, 184, 281, 282, 285], "dbname": 165, "hudl": [167, 193], "object_typ": [168, 172], "gp": [168, 170, 171], "inplac": 168, "build": [168, 170, 171], "poissonatla": 168, "calcul": [168, 285], "pre": [168, 172, 184, 285], "exist": [168, 172, 184, 189, 190, 192, 247, 248, 252, 253, 254], "written": 168, "directli": [168, 246, 285], "argument": [168, 170, 171, 172, 184, 191, 192, 218, 249, 255, 258], "object_id": 169, "training_kw": [170, 171], "parallel_kw": [170, 171], "haversin": [170, 171], "knn": 170, "approach": [170, 189], "done": [170, 171, 241, 246], "gaussian": [170, 171, 285], "process": [170, 171, 172, 266], "regress": [170, 171], "correctli": [170, 171], "comput": [170, 171], "distanc": [170, 171, 285], "between": [170, 171, 190, 285], "sphere": [170, 171], "entir": [170, 171, 204, 234, 236, 285], "erron": [170, 171], "densiti": [170, 171, 285], "behind": [170, 171], "scene": [170, 171], "log": [170, 171], "avoid": [170, 171, 252, 253, 285], "issu": [170, 171, 252, 255], "regressor": [170, 171], "neg": [170, 171, 233, 234, 235, 252], "It": [170, 171, 279], "rectifi": [170, 171], "after": [170, 171], "been": [170, 171], "train": [170, 171], "word": [170, 171, 184], "ml": [170, 171], "algorithm": [170, 171, 195, 254, 285], "descript": [170, 171, 186, 188, 279, 285], "expect": [170, 171], "training_proport": [170, 171], "proport": [170, 171], "float": [170, 171, 248, 255], "cv_group": [170, 171], "group": [170, 171, 208], "split": [170, 171, 208], "5": [170, 171, 192, 221, 246, 247, 250, 255, 260], "radius_bound": 170, "bound": [170, 171], "characterist": [170, 171], "knnr": 170, "scale": [170, 171], "10": [170, 245], "parallel": [170, 171], "capabl": [170, 171], "multiprocess": [170, 171], "multi": [170, 171, 255, 266], "core": [170, 171, 285, 286], "enabl": [170, 171, 285], "singl": [170, 171, 172, 191, 225, 242, 255], "nproc": [170, 171], "processor": [170, 171], "cannot": [170, 171, 192, 233, 234, 235, 285], "exce": [170, 171], "n_cpu": [170, 171], "methodologi": [171, 282], "length_scal": 171, "kernel": 171, "length": [171, 172, 189, 190, 192, 205, 208, 218, 258, 260], "length_scale_bound": 171, "1e": 171, "1e2": 171, "alpha_cv": 171, "alpha": 171, "compar": [171, 260], "dure": [171, 285], "linearli": 171, "space": [171, 231], "individu": [171, 172, 204], "8": [171, 192, 198, 199, 255, 260, 277], "1e0": 171, "build_arg": 172, "build_kwarg": 172, "construct": [172, 285], "subset": [172, 221], "procedur": [172, 285], "By": [172, 196], "append": [172, 189, 190], "element": [172, 255, 260], "also": [172, 189, 190, 192, 218, 241, 242, 246, 285], "arbitrari": 172, "similar": [172, 220], "along": 172, "left": [172, 233, 234, 235, 236, 285], "unspecifi": 172, "npoint": 184, "search_radiu": [184, 286], "meta": [184, 186, 188, 200, 237, 238, 248, 258], "add": [184, 189, 190, 192, 218, 281, 285], "around": [184, 286], "through": 184, "custom": 185, "mask": [186, 188, 192, 196, 204, 210, 211, 218, 255], "dtype": [186, 188, 192, 198, 199, 205, 218, 231, 233, 234, 235, 236], "copi": [186, 188, 189, 190, 192, 196, 204, 208, 215, 248, 252, 258], "row": [186, 188, 192, 208, 213, 218, 221, 225, 226, 231, 233, 234, 235, 236, 244, 245, 249, 252, 253], "copy_indic": [186, 188], "col": [189, 190, 215, 220, 248], "index": [189, 190, 191, 205, 213, 214, 215, 218, 225, 226, 243, 244, 252, 253, 254, 255], "rename_dupl": [189, 190], "default_nam": 189, "input": [189, 190, 204, 208, 248], "suppli": [189, 190, 191, 204, 233, 234, 235], "befor": [189, 190, 218], "end": [189, 190, 192, 231], "accept": [189, 190], "includ": [189, 190, 196, 205, 231, 233, 234, 235, 236, 279, 281, 282, 285], "mixin": [189, 190, 210, 212, 248, 255], "scalar": [189, 190, 260], "broadcast": [189, 190], "To": [189, 220, 221, 241, 244, 282], "sever": [189, 241, 242, 244], "onc": [189, 190], "simpli": [189, 195, 285], "one": [189, 191, 192, 195, 215, 231, 233, 234, 235, 236, 254, 258, 260, 279, 285], "There": [189, 279], "littl": [189, 190], "perform": [189, 190, 258, 285], "two": [189, 190, 285], "uniquifi": [189, 190], "alreadi": [189, 252, 253, 281, 285], "make": [189, 190, 191, 215, 248, 253], "both": [189, 225, 236], "info": [189, 246], "number_of_column": 189, "exampl": [189, 190, 192, 205, 214, 220, 221, 222, 241, 242, 244, 245, 246, 247, 248, 249, 250, 254, 255, 258, 260, 281, 282, 285], "third": 189, "t": [189, 190, 192, 214, 220, 221, 222, 241, 242, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 258, 285], "col_c": [189, 190], "print": [189, 190, 192, 205, 214, 220, 221, 222, 231, 235, 236, 237, 238, 241, 242, 244, 245, 246, 247, 249, 250, 253, 254, 255], "second": [189, 190], "b_1": [189, 190], "unnam": [189, 190], "explicit": [189, 190], "overridden": [189, 190], "col2": 189, "origin": [190, 248, 258, 285], "perspect": 190, "loop": 190, "over": [190, 220, 221], "duplic": [190, 252], "ones": 190, "hstack": [190, 248, 258], "updat": [190, 248], "replace_column": [190, 258], "them": [190, 250, 285, 286], "col_d": 190, "u": [190, 198, 199, 255], "col_b": 190, "4": [190, 192, 198, 205, 246, 247, 250, 260], "col0": [190, 220, 221], "colnam": [191, 243], "engin": [191, 194], "uniqu": [191, 208, 233, 234, 252, 253], "among": 191, "more": [191, 195, 233, 234, 235, 236, 254, 279, 285], "indic": [191, 195, 215, 225, 226, 243, 252, 285], "sortedarrai": 191, "bst": 191, "scengin": 191, "whether": [191, 258, 285], "val": [192, 218], "sequenc": [192, 218, 248], "miss": [192, 218, 255], "fill": [192, 218], "np": [192, 196, 205, 218, 255], "zero": [192, 218], "requir": [192, 211, 252, 285], "own": 192, "should": [192, 218, 258, 279, 285], "give": [192, 218, 242], "desir": [192, 199, 218], "three": [192, 214, 221, 222, 241, 242, 244, 245, 246, 247, 249, 250], "7": [192, 255, 258, 260], "ad": [192, 243, 252, 253, 258, 281, 285], "6": [192, 246, 247, 255], "9": [192, 273], "kind": [195, 198, 199, 254], "revers": [195, 254], "would": 195, "sort": [195, 208, 252, 253], "accord": [195, 208, 254], "numpi": [195, 196, 205, 208, 248, 254], "quicksort": [195, 254], "mergesort": [195, 254], "heapsort": [195, 254], "stabl": [195, 254], "index_arrai": 195, "ndarrai": [195, 196, 248], "keep_byteord": 196, "form": 196, "maskedarrai": 196, "appropri": 196, "byte": [196, 198], "howev": [196, 285], "preserv": [196, 215], "non": [196, 250], "table_arrai": 196, "unmask": 196, "bytestr": [198, 199], "unicod": [198, 199], "utf": [198, 199, 277], "encod": [198, 199, 255, 277], "intern": 198, "chang": [198, 279, 281], "charact": [198, 231, 233, 234, 235, 236], "uc": 198, "ineffici": 198, "memori": [198, 252], "script": 198, "manipul": 198, "natur": [198, 285], "syntax": [198, 258], "export": [199, 252], "copy_data": 200, "alwai": [200, 285], "deepcopi": 200, "regardless": 200, "recarrai": 203, "compat": 203, "fill_valu": 204, "self": [204, 233, 234, 252, 253], "defin": [204, 212, 231, 233, 234, 235, 236, 285], "filled_t": 204, "datafram": [205, 255], "panda": [205, 255], "numer": [205, 250], "convers": 205, "delta": 205, "timedelta": [205, 255], "respect": [205, 233, 234, 235, 236], "have": [205, 210, 253, 255, 279, 286], "importerror": [205, 255], "instal": [205, 255], "here": [205, 255, 285], "we": [205, 255, 281, 285, 286], "qtabl": [205, 255], "import": [205, 255, 279, 281, 286], "pd": [205, 255], "seri": 205, "1998": [205, 255], "01": [205, 255], "2002": [205, 255], "datetime64": [205, 255], "dt": [205, 255], "300": 205, "timedelta64": [205, 255], "df": [205, 255], "option_context": [205, 255], "displai": [205, 252, 253, 255], "max_column": [205, 255], "20": [205, 245, 255], "dai": [205, 255], "00": [205, 255], "05": [205, 272], "float64": [205, 258], "01t00": 205, "000": 205, "output": [208, 231, 233, 234, 235, 236, 237, 238], "tablegroup": 208, "wai": 208, "homogen": 208, "maskedcolumn": [210, 255], "check": [210, 211, 282], "has_masked_valu": 210, "rel": [211, 285], "slow": 211, "larg": [211, 285], "tableiloc": 213, "retriev": [213, 225, 226, 253], "appear": [213, 285], "mode": [215, 255, 277], "freez": 215, "copy_on_getitem": 215, "discard_on_copi": 215, "whenev": 215, "modifi": 215, "exit": 215, "refresh": [215, 231], "themselv": 215, "intend": 215, "scenario": 215, "mani": [215, 255, 282], "modif": 215, "take": [215, 285], "slice": [215, 245], "well": [215, 285], "i0": 215, "i1": 215, "tableindic": 216, "col1": 220, "syntact": 220, "prefer": 220, "especi": 221, "substanti": 221, "faster": 221, "tbl": 221, "sinc": [221, 252], "access": [221, 253, 279], "slower": 221, "wise": [221, 260, 285], "keep": 222, "tableloc": 225, "rang": 225, "iloc": 225, "tablelocindic": 226, "max_lin": [231, 233, 234, 235, 236, 252], "max_width": [231, 233, 234, 235, 236], "show_nam": [231, 233, 234, 235, 236], "show_unit": [231, 233, 234, 235, 236], "show_dtyp": [231, 233, 234, 235, 236], "brows": 231, "page": [231, 253, 281, 286], "interfac": 231, "forward": 231, "back": 231, "next": [231, 285], "p": [231, 285], "previou": 231, "go": [231, 285], "begin": [231, 281], "quit": 231, "help": [231, 285], "maximum": [231, 233, 234, 235, 236, 252], "line": [231, 233, 234, 235, 236], "width": [231, 233, 234, 235, 236], "show": [231, 233, 234, 235, 236, 252, 253, 260], "html": [233, 234, 252, 253], "tableid": [233, 234, 252, 253], "align": [233, 234, 235, 236], "tableclass": [233, 234], "height": [233, 234, 235], "screen": [233, 234, 235, 236], "termin": [233, 234, 235, 236], "taken": [233, 234, 235], "configur": [233, 234, 235, 253, 281], "conf": [233, 234, 235], "limit": [233, 234, 235, 252, 253], "appli": [233, 234, 235, 279], "id": [233, 234, 252, 253], "tag": [233, 234, 252, 253], "where": [233, 234, 252, 253, 285], "integ": [233, 234, 252, 253, 255], "right": [233, 234, 235, 236, 285], "center": [233, 234, 235, 236], "pad": [233, 234, 235, 236], "multipl": [233, 234, 235, 236, 247, 253], "css": [233, 234, 252, 253], "pprint": 236, "restrict": [236, 285], "maintain": [237, 238], "visibl": [237, 238], "descriptor": [237, 238], "inherit": [237, 238, 285], "metaattribut": [237, 238], "__attributes__": [237, 238], "pprint_include_nam": 237, "pprint_exclude_nam": 238, "connect": [239, 261, 279], "tableread": 239, "del": 241, "involv": 243, "recent": 243, "remain": [243, 250], "row_specifi": 245, "warn": [245, 255], "oper": [245, 254], "extend": 245, "outsid": 245, "new_nam": [246, 247], "renam": [246, 247], "aa": [246, 247], "bb": 247, "replac": [248, 258], "deep": [248, 282], "For": [248, 255], "add_column": [248, 258], "version": [248, 252, 253, 255], "itself": [248, 252, 253], "float_a": 248, "astyp": 248, "place": [249, 250, 258], "max": [249, 254], "jo": [249, 254], "john": [249, 254], "miller": [249, 254], "jackson": [249, 254], "12": [249, 250, 254], "15": [249, 254], "18": [249, 254], "firstnam": [249, 254], "tel": [249, 254], "decim": 250, "ignor": [250, 252, 253], "25": 250, "55": 250, "123": 250, "85": 250, "26": 250, "certain": 250, "5000": 252, "jsviewer": [252, 253], "browser": [252, 253], "jskwarg": 252, "use_local_fil": 252, "table_class": [252, 253], "compact": 252, "show_row_index": [252, 253], "idx": [252, 253], "render": [252, 253], "web": 252, "low": 252, "prepend": 252, "javascript": [252, 253], "datat": [252, 253], "legal": 252, "firefox": 252, "chrome": 252, "safari": 252, "mac": 252, "you": [252, 253, 279, 281, 282, 285, 286], "open": 252, "applic": 252, "googl": 252, "app": 252, "init": 252, "librari": 252, "serv": 252, "style": [252, 253, 258], "http": 252, "www": 252, "net": 252, "manual": 252, "declar": [252, 253], "default_css": 252, "evalu": [252, 253], "even": [252, 253], "display_length": 253, "50": 253, "ipython": 253, "notebook": 253, "xxx": 253, "conflict": 253, "default_notebook_table_class": 253, "bootstrap": 253, "see": [253, 255, 282, 285], "default_css_nb": 253, "unlik": 253, "show_in_brows": 253, "onlin": 253, "code": [253, 282], "repositori": 253, "due": [253, 285], "modern": 253, "henc": 253, "while": 253, "offlin": 253, "don": 253, "cach": 253, "jqueri": 253, "featur": [253, 285], "argsort": 254, "rule": 254, "use_nullable_int": 255, "vanilla": 255, "analog": 255, "below": 255, "nullabl": 255, "24": 255, "nan": 255, "valueerror": 255, "dimension": 255, "tm": 255, "jyear": 255, "200": 255, "03": 255, "merg": 258, "metadata": 258, "someth": 258, "possibli": 258, "altern": 258, "refer": [258, 282], "t1": [258, 260], "foo": 258, "bar": 258, "t2": [258, 260], "11": 258, "str3": 258, "comparison": 260, "boolean": 260, "tablewrit": 261, "ubiquit": 262, "pyx": 262, "preferred_unit": 263, "datadict": [264, 265], "maplist": [264, 265], "task": [266, 279], "textual": 268, "cli": 268, "delai": [269, 270], "levelnam": 273, "asctim": 273, "messag": 273, "static": 276, "_io": 277, "textiowrapp": 277, "stderr": 277, "w": 277, "abstract": 279, "attach": 279, "catalog": [279, 282], "etc": [279, 285], "varieti": [279, 281, 282], "throughout": 279, "awar": 279, "sourcetableschema": 279, "raw": 279, "interest": [279, 282], "practic": 279, "job": 279, "your": [279, 281, 286], "do": [279, 282], "NOT": 279, "everi": [279, 282, 286], "least": 279, "complet": [279, 282], "galact": 279, "latitud": 279, "longitud": 279, "fly": 279, "coordinate_system": 279, "tell": 279, "what": [279, 285], "actual": 279, "find": [281, 282, 285], "start": 281, "section": [281, 285], "concern": 281, "basic": 281, "yourself": 281, "readi": 281, "roll": 281, "instruct": 281, "environ": 281, "devic": 281, "learn": 281, "how": [281, 285, 286], "built": 281, "summar": 281, "understand": 281, "python": 282, "identif": 282, "astronom": [282, 286], "softwar": 282, "referenc": [282, 285, 286], "known": [282, 286], "statist": 282, "tool": 282, "quantifi": 282, "confid": [282, 285], "autom": 282, "common": [282, 285], "survei": 282, "mission": 282, "wide": 282, "model": [282, 285], "distribut": 282, "produc": 282, "probabl": [282, 285], "mock": 282, "ned": [282, 285, 286], "come": [282, 285], "soon": 282, "quickstart": 282, "guid": 282, "our": 282, "easi": 282, "worth": 282, "brief": 282, "overview": 282, "critic": 282, "topic": 282, "relat": [282, 285], "develop": [282, 285], "api": 282, "dive": 282, "look": 282, "contribut": 282, "comprehens": [282, 285], "hint": 282, "might": 282, "poisson_map": 284, "schema": 284, "naiv": 285, "subject": 285, "chosen": 285, "doesn": 285, "pai": 285, "attent": 285, "further": 285, "sens": 285, "decis": 285, "could": 285, "improv": 285, "fidel": 285, "furthermor": 285, "just": 285, "step": 285, "run": [285, 286], "legitim": 285, "spuriou": 285, "complex": 285, "significantli": 285, "cost": 285, "minim": 285, "framework": 285, "subprocess": 285, "exactli": 285, "interv": 285, "perfect": 285, "assign": 285, "weight": 285, "fine": 285, "tune": 285, "potenti": 285, "collect": 285, "total": 285, "across": 285, "c_i": 285, "sum_": 285, "alpha_i": 285, "th": 285, "reflect": 285, "success": 285, "instrument": 285, "implement": 285, "instrument_param": 285, "head": 285, "ongo": 285, "underwai": 285, "qualiti": 285, "sophist": 285, "psf": 285, "reason": 285, "down": 285, "fall": 285, "telescop": 285, "covari": 285, "sigma": 285, "thu": 285, "c_": 285, "mathrm": 285, "sqrt": 285, "delta_": 285, "xy": 285, "object_param": 285, "intent": 285, "constrain": 285, "permit": 285, "definit": 285, "depend": 285, "feasabl": 285, "hierarch": 285, "parent": 285, "classif": 285, "subtyp": 285, "poisson_param": 285, "abund": 285, "particularli": 285, "preval": 285, "star": 285, "background": 285, "galaxi": 285, "partial": 285, "protocol": 285, "robust": 285, "enforc": 285, "benefit": 285, "poorli": 285, "describ": [285, 286], "classifi": 285, "2mass": 285, "sdss": 285, "observ": 285, "too": 285, "dismiss": 285, "still": 285, "want": 285, "spurious": 285, "familiar": 285, "essenc": 285, "prior": 285, "estim": 285, "frequenc": 285, "circl": 285, "lambda": 285, "exp": 285, "candid": 285, "occur": 285, "chanc": 285, "p_": 285, "phi_i": 285, "theta_i": 285, "proxi": 285, "cornerston": 285, "runtim": 285, "layout": 285, "ecosystem": 285, "consid": 285, "io_param": 285, "io": 285, "dbpath": 285, "disabl": 285, "catpath": 285, "sourcedatabas": 286, "corner": 286, "stone": 286, "ll": 286, "meet": 286, "scientif": 286, "remotedatabas": 286, "localdatabas": 286, "simplifi": 286, "astroqueri": 286, "url": 286, "query_radiu": 286, "necessari": 286, "83": 286, "63": 286, "22": 286, "0144": 286, "conduct": 286, "output_t": 286}, "objects": {"": [[0, 0, 0, "-", "schema"]], "schema": [[1, 1, 1, "", "ReductionSchema"], [27, 1, 1, "", "Schema"], [42, 1, 1, "", "SourceTableSchema"]], "schema.ReductionSchema": [[2, 2, 1, "", "DBPATH"], [3, 2, 1, "", "INSTRUMENTAL"], [4, 2, 1, "", "INSTRUMENT_PARAMS"], [5, 2, 1, "", "IO_PARAMS"], [6, 2, 1, "", "OBJECT_PARAMS"], [7, 2, 1, "", "OTYPES"], [8, 2, 1, "", "POISSON"], [9, 2, 1, "", "POISSON_PARAMS"], [10, 2, 1, "", "PSF"], [11, 2, 1, "", "REFDBS"], [12, 2, 1, "", "RUN_PARAMS"], [13, 3, 1, "", "__init__"], [14, 3, 1, "", "clear"], [15, 3, 1, "", "copy"], [16, 3, 1, "", "from_file"], [17, 3, 1, "", "fromkeys"], [18, 3, 1, "", "get"], [19, 3, 1, "", "isvalid"], [20, 3, 1, "", "items"], [21, 3, 1, "", "keys"], [22, 3, 1, "", "pop"], [23, 3, 1, "", "popitem"], [24, 3, 1, "", "setdefault"], [25, 3, 1, "", "update"], [26, 3, 1, "", "values"]], "schema.Schema": [[28, 3, 1, "", "__init__"], [29, 3, 1, "", "clear"], [30, 3, 1, "", "copy"], [31, 3, 1, "", "from_file"], [32, 3, 1, "", "fromkeys"], [33, 3, 1, "", "get"], [34, 3, 1, "", "isvalid"], [35, 3, 1, "", "items"], [36, 3, 1, "", "keys"], [37, 3, 1, "", "pop"], [38, 3, 1, "", "popitem"], [39, 3, 1, "", "setdefault"], [40, 3, 1, "", "update"], [41, 3, 1, "", "values"]], "schema.SourceTableSchema": [[43, 3, 1, "", "__init__"], [44, 3, 1, "", "available_coordinate_frames"], [45, 3, 1, "", "clear"], [46, 2, 1, "", "column_map"], [47, 3, 1, "", "construct"], [48, 4, 1, "", "coordinate_columns"], [49, 4, 1, "", "coordinate_frame"], [50, 4, 1, "", "coordinate_system"], [51, 3, 1, "", "copy"], [52, 2, 1, "", "default_coord_system"], [53, 3, 1, "", "from_file"], [54, 3, 1, "", "fromkeys"], [55, 3, 1, "", "get"], [56, 4, 1, "", "inv_column_map"], [57, 3, 1, "", "isvalid"], [58, 3, 1, "", "items"], [59, 3, 1, "", "keys"], [60, 2, 1, "", "object_map"], [61, 3, 1, "", "pop"], [62, 3, 1, "", "popitem"], [63, 3, 1, "", "setdefault"], [64, 3, 1, "", "update"], [65, 3, 1, "", "values"]], "structures": [[66, 0, 0, "-", "databases"], [150, 0, 0, "-", "map"], [185, 0, 0, "-", "table"]], "structures.databases": [[67, 1, 1, "", "DBRegistry"], [80, 1, 1, "", "LocalDatabase"], [94, 1, 1, "", "NED"], [108, 1, 1, "", "RemoteDatabase"], [122, 1, 1, "", "SIMBAD"], [136, 1, 1, "", "SourceDatabase"]], "structures.databases.DBRegistry": [[68, 3, 1, "", "__init__"], [69, 3, 1, "", "clear"], [70, 3, 1, "", "copy"], [71, 3, 1, "", "fromkeys"], [72, 3, 1, "", "get"], [73, 3, 1, "", "items"], [74, 3, 1, "", "keys"], [75, 3, 1, "", "pop"], [76, 3, 1, "", "popitem"], [77, 3, 1, "", "setdefault"], [78, 3, 1, "", "update"], [79, 3, 1, "", "values"]], "structures.databases.LocalDatabase": [[81, 3, 1, "", "__init__"], [82, 3, 1, "", "add_sources_to_poisson"], [83, 2, 1, "", "class_table_schema"], [84, 3, 1, "", "count"], [85, 3, 1, "", "create_poisson_map"], [86, 2, 1, "", "default_poisson_map"], [87, 3, 1, "", "get_default_poisson_map"], [88, 3, 1, "", "get_poisson_map"], [89, 2, 1, "", "poisson_map"], [90, 3, 1, "", "query_radius"], [91, 3, 1, "", "random_sample_count"], [92, 3, 1, "", "set_poisson_map"], [93, 3, 1, "", "source_match"]], "structures.databases.NED": [[95, 3, 1, "", "__init__"], [96, 3, 1, "", "add_sources_to_poisson"], [97, 2, 1, "", "class_table_schema"], [98, 3, 1, "", "count"], [99, 3, 1, "", "create_poisson_map"], [100, 2, 1, "", "default_poisson_map"], [101, 3, 1, "", "get_default_poisson_map"], [102, 3, 1, "", "get_poisson_map"], [103, 2, 1, "", "poisson_map"], [104, 3, 1, "", "query_radius"], [105, 3, 1, "", "random_sample_count"], [106, 3, 1, "", "set_poisson_map"], [107, 3, 1, "", "source_match"]], "structures.databases.RemoteDatabase": [[109, 3, 1, "", "__init__"], [110, 3, 1, "", "add_sources_to_poisson"], [111, 2, 1, "", "class_table_schema"], [112, 3, 1, "", "count"], [113, 3, 1, "", "create_poisson_map"], [114, 2, 1, "", "default_poisson_map"], [115, 3, 1, "", "get_default_poisson_map"], [116, 3, 1, "", "get_poisson_map"], [117, 2, 1, "", "poisson_map"], [118, 3, 1, "", "query_radius"], [119, 3, 1, "", "random_sample_count"], [120, 3, 1, "", "set_poisson_map"], [121, 3, 1, "", "source_match"]], "structures.databases.SIMBAD": [[123, 3, 1, "", "__init__"], [124, 3, 1, "", "add_sources_to_poisson"], [125, 2, 1, "", "class_table_schema"], [126, 3, 1, "", "count"], [127, 3, 1, "", "create_poisson_map"], [128, 2, 1, "", "default_poisson_map"], [129, 3, 1, "", "get_default_poisson_map"], [130, 3, 1, "", "get_poisson_map"], [131, 2, 1, "", "poisson_map"], [132, 3, 1, "", "query_radius"], [133, 3, 1, "", "random_sample_count"], [134, 3, 1, "", "set_poisson_map"], [135, 3, 1, "", "source_match"]], "structures.databases.SourceDatabase": [[137, 3, 1, "", "__init__"], [138, 3, 1, "", "add_sources_to_poisson"], [139, 2, 1, "", "class_table_schema"], [140, 3, 1, "", "count"], [141, 3, 1, "", "create_poisson_map"], [142, 2, 1, "", "default_poisson_map"], [143, 3, 1, "", "get_default_poisson_map"], [144, 3, 1, "", "get_poisson_map"], [145, 2, 1, "", "poisson_map"], [146, 3, 1, "", "query_radius"], [147, 3, 1, "", "random_sample_count"], [148, 3, 1, "", "set_poisson_map"], [149, 3, 1, "", "source_match"]], "structures.map": [[151, 1, 1, "", "Map"], [154, 1, 1, "", "MapAtlas"], [165, 1, 1, "", "StatAtlas"]], "structures.map.Map": [[152, 3, 1, "", "__init__"], [153, 4, 1, "", "coordinate_frame"]], "structures.map.MapAtlas": [[155, 3, 1, "", "__init__"], [156, 4, 1, "", "coordinate_frame"], [157, 3, 1, "", "generate"], [158, 3, 1, "", "get_map"], [159, 4, 1, "", "has_maps"], [160, 4, 1, "", "hdus"], [161, 4, 1, "", "map_names"], [162, 4, 1, "", "pixel_positions"], [163, 3, 1, "", "remove"], [164, 3, 1, "", "reshape_healpix"]], "structures.map.StatAtlas": [[166, 3, 1, "", "__init__"], [167, 3, 1, "", "append_to_fits"], [168, 3, 1, "", "build_poisson_map"], [169, 3, 1, "", "build_poisson_map_MAP"], [170, 3, 1, "", "build_poisson_map_NNR"], [171, 3, 1, "", "build_poisson_map_gp"], [172, 3, 1, "", "build_poisson_maps"], [173, 4, 1, "", "coordinate_frame"], [174, 3, 1, "", "generate"], [175, 3, 1, "", "get_map"], [176, 3, 1, "", "get_points"], [177, 4, 1, "", "has_maps"], [178, 4, 1, "", "hdus"], [179, 4, 1, "", "map_names"], [180, 4, 1, "", "pixel_positions"], [181, 3, 1, "", "remove"], [182, 3, 1, "", "reset"], [183, 3, 1, "", "reshape_healpix"], [184, 3, 1, "", "sample_from_database"]], "structures.table": [[186, 1, 1, "", "SourceTable"]], "structures.table.SourceTable": [[187, 4, 1, "", "ColumnClass"], [188, 3, 1, "", "__init__"], [189, 3, 1, "", "add_column"], [190, 3, 1, "", "add_columns"], [191, 3, 1, "", "add_index"], [192, 3, 1, "", "add_row"], [193, 3, 1, "", "append_to_fits"], [194, 3, 1, "", "append_to_sql"], [195, 3, 1, "", "argsort"], [196, 3, 1, "", "as_array"], [197, 4, 1, "", "colnames"], [198, 3, 1, "", "convert_bytestring_to_unicode"], [199, 3, 1, "", "convert_unicode_to_bytestring"], [200, 3, 1, "", "copy"], [201, 3, 1, "", "count_types"], [202, 4, 1, "", "dtype"], [203, 3, 1, "", "field"], [204, 3, 1, "", "filled"], [205, 3, 1, "", "from_pandas"], [206, 3, 1, "", "generate_schema"], [207, 3, 1, "", "get_coordinates"], [208, 3, 1, "", "group_by"], [209, 4, 1, "", "groups"], [210, 4, 1, "", "has_masked_columns"], [211, 4, 1, "", "has_masked_values"], [212, 4, 1, "", "has_mixin_columns"], [213, 4, 1, "", "iloc"], [214, 3, 1, "", "index_column"], [215, 3, 1, "", "index_mode"], [216, 4, 1, "", "indices"], [217, 2, 1, "", "info"], [218, 3, 1, "", "insert_row"], [219, 3, 1, "", "items"], [220, 3, 1, "", "itercols"], [221, 3, 1, "", "iterrows"], [222, 3, 1, "", "keep_columns"], [223, 3, 1, "", "keys"], [224, 4, 1, "", "lat"], [225, 4, 1, "", "loc"], [226, 4, 1, "", "loc_indices"], [227, 4, 1, "", "lon"], [228, 4, 1, "", "mask"], [229, 4, 1, "", "masked"], [230, 2, 1, "", "meta"], [231, 3, 1, "", "more"], [232, 4, 1, "", "name"], [233, 3, 1, "", "pformat"], [234, 3, 1, "", "pformat_all"], [235, 3, 1, "", "pprint"], [236, 3, 1, "", "pprint_all"], [237, 2, 1, "", "pprint_exclude_names"], [238, 2, 1, "", "pprint_include_names"], [239, 2, 1, "", "read"], [240, 4, 1, "", "redshift"], [241, 3, 1, "", "remove_column"], [242, 3, 1, "", "remove_columns"], [243, 3, 1, "", "remove_indices"], [244, 3, 1, "", "remove_row"], [245, 3, 1, "", "remove_rows"], [246, 3, 1, "", "rename_column"], [247, 3, 1, "", "rename_columns"], [248, 3, 1, "", "replace_column"], [249, 3, 1, "", "reverse"], [250, 3, 1, "", "round"], [251, 4, 1, "", "schema"], [252, 3, 1, "", "show_in_browser"], [253, 3, 1, "", "show_in_notebook"], [254, 3, 1, "", "sort"], [255, 3, 1, "", "to_pandas"], [256, 4, 1, "", "type"], [257, 4, 1, "", "type_native"], [258, 3, 1, "", "update"], [259, 3, 1, "", "values"], [260, 3, 1, "", "values_equal"], [261, 2, 1, "", "write"]], "utilities": [[262, 0, 0, "-", "core"], [266, 0, 0, "-", "mp_utils"], [268, 0, 0, "-", "text"]], "utilities.core": [[263, 5, 1, "", "enforce_units"], [264, 5, 1, "", "getFromDict"], [265, 5, 1, "", "setInDict"]], "utilities.mp_utils": [[267, 5, 1, "", "split"]], "utilities.text": [[269, 1, 1, "", "Spinner"]], "utilities.text.Spinner": [[270, 3, 1, "", "__init__"], [271, 2, 1, "", "busy"], [272, 2, 1, "", "delay"], [273, 2, 1, "", "formatter"], [274, 2, 1, "", "process"], [275, 3, 1, "", "spinner_task"], [276, 3, 1, "", "spinning_cursor"], [277, 2, 1, "", "stream"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"schema": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 251, 279, 285], "reductionschema": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "dbpath": 2, "instrument": 3, "instrument_param": 4, "io_param": 5, "object_param": 6, "otyp": 7, "poisson": 8, "poisson_param": 9, "psf": 10, "refdb": 11, "run_param": [12, 285], "__init__": [13, 28, 43, 68, 81, 95, 109, 123, 137, 152, 155, 166, 188, 270], "clear": [14, 29, 45, 69], "copi": [15, 30, 51, 70, 200], "from_fil": [16, 31, 53], "fromkei": [17, 32, 54, 71], "get": [18, 33, 55, 72, 284], "isvalid": [19, 34, 57], "item": [20, 35, 58, 73, 219], "kei": [21, 36, 59, 74, 223], "pop": [22, 37, 61, 75], "popitem": [23, 38, 62, 76], "setdefault": [24, 39, 63, 77], "updat": [25, 40, 64, 78, 258], "valu": [26, 41, 65, 79, 259], "sourcetableschema": [42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "format": [42, 279, 285], "available_coordinate_fram": 44, "column_map": 46, "construct": 47, "coordinate_column": 48, "coordinate_fram": [49, 153, 156, 173], "coordinate_system": 50, "default_coord_system": 52, "inv_column_map": 56, "object_map": 60, "structur": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 278, 279], "databas": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 279, 286], "dbregistri": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "localdatabas": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "add_sources_to_poisson": [82, 96, 110, 124, 138], "class_table_schema": [83, 97, 111, 125, 139], "count": [84, 98, 112, 126, 140], "create_poisson_map": [85, 99, 113, 127, 141], "default_poisson_map": [86, 100, 114, 128, 142], "get_default_poisson_map": [87, 101, 115, 129, 143], "get_poisson_map": [88, 102, 116, 130, 144], "poisson_map": [89, 103, 117, 131, 145], "query_radiu": [90, 104, 118, 132, 146], "random_sample_count": [91, 105, 119, 133, 147], "set_poisson_map": [92, 106, 120, 134, 148], "source_match": [93, 107, 121, 135, 149], "ned": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "remotedatabas": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121], "simbad": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "sourcedatabas": [136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "map": [150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184], "mapatla": [154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "gener": [157, 174, 285], "get_map": [158, 175], "has_map": [159, 177], "hdu": [160, 178], "map_nam": [161, 179], "pixel_posit": [162, 180], "remov": [163, 181], "reshape_healpix": [164, 183], "statatla": [165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184], "append_to_fit": [167, 193], "build_poisson_map": [168, 172], "build_poisson_map_map": 169, "build_poisson_map_nnr": 170, "build_poisson_map_gp": 171, "get_point": 176, "reset": 182, "sample_from_databas": 184, "tabl": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 285], "sourcet": [186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "columnclass": 187, "add_column": [189, 190], "add_index": 191, "add_row": 192, "append_to_sql": 194, "argsort": 195, "as_arrai": 196, "colnam": 197, "convert_bytestring_to_unicod": 198, "convert_unicode_to_bytestr": 199, "count_typ": 201, "dtype": 202, "field": 203, "fill": 204, "from_panda": 205, "generate_schema": 206, "get_coordin": 207, "group_bi": 208, "group": 209, "has_masked_column": 210, "has_masked_valu": 211, "has_mixin_column": 212, "iloc": 213, "index_column": 214, "index_mod": 215, "indic": 216, "info": 217, "insert_row": 218, "itercol": 220, "iterrow": 221, "keep_column": 222, "lat": 224, "loc": 225, "loc_indic": 226, "lon": 227, "mask": [228, 229], "meta": 230, "more": 231, "name": 232, "pformat": 233, "pformat_al": 234, "pprint": 235, "pprint_al": 236, "pprint_exclude_nam": 237, "pprint_include_nam": 238, "read": 239, "redshift": 240, "remove_column": [241, 242], "remove_indic": 243, "remove_row": [244, 245], "rename_column": [246, 247], "replace_column": 248, "revers": 249, "round": 250, "show_in_brows": 252, "show_in_notebook": 253, "sort": 254, "to_panda": 255, "type": 256, "type_n": 257, "values_equ": 260, "write": 261, "util": [262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "core": [262, 263, 264, 265], "enforce_unit": 263, "getfromdict": 264, "setindict": 265, "mp_util": [266, 267], "split": 267, "text": [268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "spinner": [269, 270, 271, 272, 273, 274, 275, 276, 277], "busi": 271, "delai": 272, "formatt": 273, "process": [274, 285], "spinner_task": 275, "spinning_cursor": 276, "stream": 277, "api": 278, "statist": [278, 284], "other": 278, "data": 279, "sky": 279, "collect": 279, "exampl": 280, "pyxmip": 281, "quickstart": 281, "guid": 281, "instal": [281, 284], "setup": 281, "critic": 281, "compon": 281, "featur": 282, "resourc": 282, "page": 282, "refer": 284, "start": 284, "basic": [284, 286], "usag": 284, "creat": 284, "plot": 284, "backend": 284, "cross": 285, "match": 285, "load": 285, "your": 285, "catalog": 285, "sourc": 285, "reduct": 285, "mathemat": 285, "overview": 285, "sub": 285, "titl": 285, "inform": 286}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"schema": [[0, "module-schema"]], "schema.ReductionSchema": [[1, "schema-reductionschema"]], "schema.ReductionSchema.DBPATH": [[2, "schema-reductionschema-dbpath"]], "schema.ReductionSchema.INSTRUMENTAL": [[3, "schema-reductionschema-instrumental"]], "schema.ReductionSchema.INSTRUMENT_PARAMS": [[4, "schema-reductionschema-instrument-params"]], "schema.ReductionSchema.IO_PARAMS": [[5, "schema-reductionschema-io-params"]], "schema.ReductionSchema.OBJECT_PARAMS": [[6, "schema-reductionschema-object-params"]], "schema.ReductionSchema.OTYPES": [[7, "schema-reductionschema-otypes"]], "schema.ReductionSchema.POISSON": [[8, "schema-reductionschema-poisson"]], "schema.ReductionSchema.POISSON_PARAMS": [[9, "schema-reductionschema-poisson-params"]], "schema.ReductionSchema.PSF": [[10, "schema-reductionschema-psf"]], "schema.ReductionSchema.REFDBS": [[11, "schema-reductionschema-refdbs"]], "schema.ReductionSchema.RUN_PARAMS": [[12, "schema-reductionschema-run-params"]], "schema.ReductionSchema.__init__": [[13, "schema-reductionschema-init"]], "schema.ReductionSchema.clear": [[14, "schema-reductionschema-clear"]], "schema.ReductionSchema.copy": [[15, "schema-reductionschema-copy"]], "schema.ReductionSchema.from_file": [[16, "schema-reductionschema-from-file"]], "schema.ReductionSchema.fromkeys": [[17, "schema-reductionschema-fromkeys"]], "schema.ReductionSchema.get": [[18, "schema-reductionschema-get"]], "schema.ReductionSchema.isvalid": [[19, "schema-reductionschema-isvalid"]], "schema.ReductionSchema.items": [[20, "schema-reductionschema-items"]], "schema.ReductionSchema.keys": [[21, "schema-reductionschema-keys"]], "schema.ReductionSchema.pop": [[22, "schema-reductionschema-pop"]], "schema.ReductionSchema.popitem": [[23, "schema-reductionschema-popitem"]], "schema.ReductionSchema.setdefault": [[24, "schema-reductionschema-setdefault"]], "schema.ReductionSchema.update": [[25, "schema-reductionschema-update"]], "schema.ReductionSchema.values": [[26, "schema-reductionschema-values"]], "schema.Schema": [[27, "schema-schema"]], "schema.Schema.__init__": [[28, "schema-schema-init"]], "schema.Schema.clear": [[29, "schema-schema-clear"]], "schema.Schema.copy": [[30, "schema-schema-copy"]], "schema.Schema.from_file": [[31, "schema-schema-from-file"]], "schema.Schema.fromkeys": [[32, "schema-schema-fromkeys"]], "schema.Schema.get": [[33, "schema-schema-get"]], "schema.Schema.isvalid": [[34, "schema-schema-isvalid"]], "schema.Schema.items": [[35, "schema-schema-items"]], "schema.Schema.keys": [[36, "schema-schema-keys"]], "schema.Schema.pop": [[37, "schema-schema-pop"]], "schema.Schema.popitem": [[38, "schema-schema-popitem"]], "schema.Schema.setdefault": [[39, "schema-schema-setdefault"]], "schema.Schema.update": [[40, "schema-schema-update"]], "schema.Schema.values": [[41, "schema-schema-values"]], "schema.SourceTableSchema": [[42, "schema-sourcetableschema"]], "Format": [[42, null]], "schema.SourceTableSchema.__init__": [[43, "schema-sourcetableschema-init"]], "schema.SourceTableSchema.available_coordinate_frames": [[44, "schema-sourcetableschema-available-coordinate-frames"]], "schema.SourceTableSchema.clear": [[45, "schema-sourcetableschema-clear"]], "schema.SourceTableSchema.column_map": [[46, "schema-sourcetableschema-column-map"]], "schema.SourceTableSchema.construct": [[47, "schema-sourcetableschema-construct"]], "schema.SourceTableSchema.coordinate_columns": [[48, "schema-sourcetableschema-coordinate-columns"]], "schema.SourceTableSchema.coordinate_frame": [[49, "schema-sourcetableschema-coordinate-frame"]], "schema.SourceTableSchema.coordinate_system": [[50, "schema-sourcetableschema-coordinate-system"]], "schema.SourceTableSchema.copy": [[51, "schema-sourcetableschema-copy"]], "schema.SourceTableSchema.default_coord_system": [[52, "schema-sourcetableschema-default-coord-system"]], "schema.SourceTableSchema.from_file": [[53, "schema-sourcetableschema-from-file"]], "schema.SourceTableSchema.fromkeys": [[54, "schema-sourcetableschema-fromkeys"]], "schema.SourceTableSchema.get": [[55, "schema-sourcetableschema-get"]], "schema.SourceTableSchema.inv_column_map": [[56, "schema-sourcetableschema-inv-column-map"]], "schema.SourceTableSchema.isvalid": [[57, "schema-sourcetableschema-isvalid"]], "schema.SourceTableSchema.items": [[58, "schema-sourcetableschema-items"]], "schema.SourceTableSchema.keys": [[59, "schema-sourcetableschema-keys"]], "schema.SourceTableSchema.object_map": [[60, "schema-sourcetableschema-object-map"]], "schema.SourceTableSchema.pop": [[61, "schema-sourcetableschema-pop"]], "schema.SourceTableSchema.popitem": [[62, "schema-sourcetableschema-popitem"]], "schema.SourceTableSchema.setdefault": [[63, "schema-sourcetableschema-setdefault"]], "schema.SourceTableSchema.update": [[64, "schema-sourcetableschema-update"]], "schema.SourceTableSchema.values": [[65, "schema-sourcetableschema-values"]], "structures.databases": [[66, "module-structures.databases"]], "structures.databases.DBRegistry": [[67, "structures-databases-dbregistry"]], "structures.databases.DBRegistry.__init__": [[68, "structures-databases-dbregistry-init"]], "structures.databases.DBRegistry.clear": [[69, "structures-databases-dbregistry-clear"]], "structures.databases.DBRegistry.copy": [[70, "structures-databases-dbregistry-copy"]], "structures.databases.DBRegistry.fromkeys": [[71, "structures-databases-dbregistry-fromkeys"]], "structures.databases.DBRegistry.get": [[72, "structures-databases-dbregistry-get"]], "structures.databases.DBRegistry.items": [[73, "structures-databases-dbregistry-items"]], "structures.databases.DBRegistry.keys": [[74, "structures-databases-dbregistry-keys"]], "structures.databases.DBRegistry.pop": [[75, "structures-databases-dbregistry-pop"]], "structures.databases.DBRegistry.popitem": [[76, "structures-databases-dbregistry-popitem"]], "structures.databases.DBRegistry.setdefault": [[77, "structures-databases-dbregistry-setdefault"]], "structures.databases.DBRegistry.update": [[78, "structures-databases-dbregistry-update"]], "structures.databases.DBRegistry.values": [[79, "structures-databases-dbregistry-values"]], "structures.databases.LocalDatabase": [[80, "structures-databases-localdatabase"]], "structures.databases.LocalDatabase.__init__": [[81, "structures-databases-localdatabase-init"]], "structures.databases.LocalDatabase.add_sources_to_poisson": [[82, "structures-databases-localdatabase-add-sources-to-poisson"]], "structures.databases.LocalDatabase.class_table_schema": [[83, "structures-databases-localdatabase-class-table-schema"]], "structures.databases.LocalDatabase.count": [[84, "structures-databases-localdatabase-count"]], "structures.databases.LocalDatabase.create_poisson_map": [[85, "structures-databases-localdatabase-create-poisson-map"]], "structures.databases.LocalDatabase.default_poisson_map": [[86, "structures-databases-localdatabase-default-poisson-map"]], "structures.databases.LocalDatabase.get_default_poisson_map": [[87, "structures-databases-localdatabase-get-default-poisson-map"]], "structures.databases.LocalDatabase.get_poisson_map": [[88, "structures-databases-localdatabase-get-poisson-map"]], "structures.databases.LocalDatabase.poisson_map": [[89, "structures-databases-localdatabase-poisson-map"]], "structures.databases.LocalDatabase.query_radius": [[90, "structures-databases-localdatabase-query-radius"]], "structures.databases.LocalDatabase.random_sample_count": [[91, "structures-databases-localdatabase-random-sample-count"]], "structures.databases.LocalDatabase.set_poisson_map": [[92, "structures-databases-localdatabase-set-poisson-map"]], "structures.databases.LocalDatabase.source_match": [[93, "structures-databases-localdatabase-source-match"]], "structures.databases.NED": [[94, "structures-databases-ned"]], "structures.databases.NED.__init__": [[95, "structures-databases-ned-init"]], "structures.databases.NED.add_sources_to_poisson": [[96, "structures-databases-ned-add-sources-to-poisson"]], "structures.databases.NED.class_table_schema": [[97, "structures-databases-ned-class-table-schema"]], "structures.databases.NED.count": [[98, "structures-databases-ned-count"]], "structures.databases.NED.create_poisson_map": [[99, "structures-databases-ned-create-poisson-map"]], "structures.databases.NED.default_poisson_map": [[100, "structures-databases-ned-default-poisson-map"]], "structures.databases.NED.get_default_poisson_map": [[101, "structures-databases-ned-get-default-poisson-map"]], "structures.databases.NED.get_poisson_map": [[102, "structures-databases-ned-get-poisson-map"]], "structures.databases.NED.poisson_map": [[103, "structures-databases-ned-poisson-map"]], "structures.databases.NED.query_radius": [[104, "structures-databases-ned-query-radius"]], "structures.databases.NED.random_sample_count": [[105, "structures-databases-ned-random-sample-count"]], "structures.databases.NED.set_poisson_map": [[106, "structures-databases-ned-set-poisson-map"]], "structures.databases.NED.source_match": [[107, "structures-databases-ned-source-match"]], "structures.databases.RemoteDatabase": [[108, "structures-databases-remotedatabase"]], "structures.databases.RemoteDatabase.__init__": [[109, "structures-databases-remotedatabase-init"]], "structures.databases.RemoteDatabase.add_sources_to_poisson": [[110, "structures-databases-remotedatabase-add-sources-to-poisson"]], "structures.databases.RemoteDatabase.class_table_schema": [[111, "structures-databases-remotedatabase-class-table-schema"]], "structures.databases.RemoteDatabase.count": [[112, "structures-databases-remotedatabase-count"]], "structures.databases.RemoteDatabase.create_poisson_map": [[113, "structures-databases-remotedatabase-create-poisson-map"]], "structures.databases.RemoteDatabase.default_poisson_map": [[114, "structures-databases-remotedatabase-default-poisson-map"]], "structures.databases.RemoteDatabase.get_default_poisson_map": [[115, "structures-databases-remotedatabase-get-default-poisson-map"]], "structures.databases.RemoteDatabase.get_poisson_map": [[116, "structures-databases-remotedatabase-get-poisson-map"]], "structures.databases.RemoteDatabase.poisson_map": [[117, "structures-databases-remotedatabase-poisson-map"]], "structures.databases.RemoteDatabase.query_radius": [[118, "structures-databases-remotedatabase-query-radius"]], "structures.databases.RemoteDatabase.random_sample_count": [[119, "structures-databases-remotedatabase-random-sample-count"]], "structures.databases.RemoteDatabase.set_poisson_map": [[120, "structures-databases-remotedatabase-set-poisson-map"]], "structures.databases.RemoteDatabase.source_match": [[121, "structures-databases-remotedatabase-source-match"]], "structures.databases.SIMBAD": [[122, "structures-databases-simbad"]], "structures.databases.SIMBAD.__init__": [[123, "structures-databases-simbad-init"]], "structures.databases.SIMBAD.add_sources_to_poisson": [[124, "structures-databases-simbad-add-sources-to-poisson"]], "structures.databases.SIMBAD.class_table_schema": [[125, "structures-databases-simbad-class-table-schema"]], "structures.databases.SIMBAD.count": [[126, "structures-databases-simbad-count"]], "structures.databases.SIMBAD.create_poisson_map": [[127, "structures-databases-simbad-create-poisson-map"]], "structures.databases.SIMBAD.default_poisson_map": [[128, "structures-databases-simbad-default-poisson-map"]], "structures.databases.SIMBAD.get_default_poisson_map": [[129, "structures-databases-simbad-get-default-poisson-map"]], "structures.databases.SIMBAD.get_poisson_map": [[130, "structures-databases-simbad-get-poisson-map"]], "structures.databases.SIMBAD.poisson_map": [[131, "structures-databases-simbad-poisson-map"]], "structures.databases.SIMBAD.query_radius": [[132, "structures-databases-simbad-query-radius"]], "structures.databases.SIMBAD.random_sample_count": [[133, "structures-databases-simbad-random-sample-count"]], "structures.databases.SIMBAD.set_poisson_map": [[134, "structures-databases-simbad-set-poisson-map"]], "structures.databases.SIMBAD.source_match": [[135, "structures-databases-simbad-source-match"]], "structures.databases.SourceDatabase": [[136, "structures-databases-sourcedatabase"]], "structures.databases.SourceDatabase.__init__": [[137, "structures-databases-sourcedatabase-init"]], "structures.databases.SourceDatabase.add_sources_to_poisson": [[138, "structures-databases-sourcedatabase-add-sources-to-poisson"]], "structures.databases.SourceDatabase.class_table_schema": [[139, "structures-databases-sourcedatabase-class-table-schema"]], "structures.databases.SourceDatabase.count": [[140, "structures-databases-sourcedatabase-count"]], "structures.databases.SourceDatabase.create_poisson_map": [[141, "structures-databases-sourcedatabase-create-poisson-map"]], "structures.databases.SourceDatabase.default_poisson_map": [[142, "structures-databases-sourcedatabase-default-poisson-map"]], "structures.databases.SourceDatabase.get_default_poisson_map": [[143, "structures-databases-sourcedatabase-get-default-poisson-map"]], "structures.databases.SourceDatabase.get_poisson_map": [[144, "structures-databases-sourcedatabase-get-poisson-map"]], "structures.databases.SourceDatabase.poisson_map": [[145, "structures-databases-sourcedatabase-poisson-map"]], "structures.databases.SourceDatabase.query_radius": [[146, "structures-databases-sourcedatabase-query-radius"]], "structures.databases.SourceDatabase.random_sample_count": [[147, "structures-databases-sourcedatabase-random-sample-count"]], "structures.databases.SourceDatabase.set_poisson_map": [[148, "structures-databases-sourcedatabase-set-poisson-map"]], "structures.databases.SourceDatabase.source_match": [[149, "structures-databases-sourcedatabase-source-match"]], "structures.map": [[150, "module-structures.map"]], "structures.map.Map": [[151, "structures-map-map"]], "structures.map.Map.__init__": [[152, "structures-map-map-init"]], "structures.map.Map.coordinate_frame": [[153, "structures-map-map-coordinate-frame"]], "structures.map.MapAtlas": [[154, "structures-map-mapatlas"]], "structures.map.MapAtlas.__init__": [[155, "structures-map-mapatlas-init"]], "structures.map.MapAtlas.coordinate_frame": [[156, "structures-map-mapatlas-coordinate-frame"]], "structures.map.MapAtlas.generate": [[157, "structures-map-mapatlas-generate"]], "structures.map.MapAtlas.get_map": [[158, "structures-map-mapatlas-get-map"]], "structures.map.MapAtlas.has_maps": [[159, "structures-map-mapatlas-has-maps"]], "structures.map.MapAtlas.hdus": [[160, "structures-map-mapatlas-hdus"]], "structures.map.MapAtlas.map_names": [[161, "structures-map-mapatlas-map-names"]], "structures.map.MapAtlas.pixel_positions": [[162, "structures-map-mapatlas-pixel-positions"]], "structures.map.MapAtlas.remove": [[163, "structures-map-mapatlas-remove"]], "structures.map.MapAtlas.reshape_healpix": [[164, "structures-map-mapatlas-reshape-healpix"]], "structures.map.StatAtlas": [[165, "structures-map-statatlas"]], "structures.map.StatAtlas.__init__": [[166, "structures-map-statatlas-init"]], "structures.map.StatAtlas.append_to_fits": [[167, "structures-map-statatlas-append-to-fits"]], "structures.map.StatAtlas.build_poisson_map": [[168, "structures-map-statatlas-build-poisson-map"]], "structures.map.StatAtlas.build_poisson_map_MAP": [[169, "structures-map-statatlas-build-poisson-map-map"]], "structures.map.StatAtlas.build_poisson_map_NNR": [[170, "structures-map-statatlas-build-poisson-map-nnr"]], "structures.map.StatAtlas.build_poisson_map_gp": [[171, "structures-map-statatlas-build-poisson-map-gp"]], "structures.map.StatAtlas.build_poisson_maps": [[172, "structures-map-statatlas-build-poisson-maps"]], "structures.map.StatAtlas.coordinate_frame": [[173, "structures-map-statatlas-coordinate-frame"]], "structures.map.StatAtlas.generate": [[174, "structures-map-statatlas-generate"]], "structures.map.StatAtlas.get_map": [[175, "structures-map-statatlas-get-map"]], "structures.map.StatAtlas.get_points": [[176, "structures-map-statatlas-get-points"]], "structures.map.StatAtlas.has_maps": [[177, "structures-map-statatlas-has-maps"]], "structures.map.StatAtlas.hdus": [[178, "structures-map-statatlas-hdus"]], "structures.map.StatAtlas.map_names": [[179, "structures-map-statatlas-map-names"]], "structures.map.StatAtlas.pixel_positions": [[180, "structures-map-statatlas-pixel-positions"]], "structures.map.StatAtlas.remove": [[181, "structures-map-statatlas-remove"]], "structures.map.StatAtlas.reset": [[182, "structures-map-statatlas-reset"]], "structures.map.StatAtlas.reshape_healpix": [[183, "structures-map-statatlas-reshape-healpix"]], "structures.map.StatAtlas.sample_from_database": [[184, "structures-map-statatlas-sample-from-database"]], "structures.table": [[185, "module-structures.table"]], "structures.table.SourceTable": [[186, "structures-table-sourcetable"]], "structures.table.SourceTable.ColumnClass": [[187, "structures-table-sourcetable-columnclass"]], "structures.table.SourceTable.__init__": [[188, "structures-table-sourcetable-init"]], "structures.table.SourceTable.add_column": [[189, "structures-table-sourcetable-add-column"]], "structures.table.SourceTable.add_columns": [[190, "structures-table-sourcetable-add-columns"]], "structures.table.SourceTable.add_index": [[191, "structures-table-sourcetable-add-index"]], "structures.table.SourceTable.add_row": [[192, "structures-table-sourcetable-add-row"]], "structures.table.SourceTable.append_to_fits": [[193, "structures-table-sourcetable-append-to-fits"]], "structures.table.SourceTable.append_to_sql": [[194, "structures-table-sourcetable-append-to-sql"]], "structures.table.SourceTable.argsort": [[195, "structures-table-sourcetable-argsort"]], "structures.table.SourceTable.as_array": [[196, "structures-table-sourcetable-as-array"]], "structures.table.SourceTable.colnames": [[197, "structures-table-sourcetable-colnames"]], "structures.table.SourceTable.convert_bytestring_to_unicode": [[198, "structures-table-sourcetable-convert-bytestring-to-unicode"]], "structures.table.SourceTable.convert_unicode_to_bytestring": [[199, "structures-table-sourcetable-convert-unicode-to-bytestring"]], "structures.table.SourceTable.copy": [[200, "structures-table-sourcetable-copy"]], "structures.table.SourceTable.count_types": [[201, "structures-table-sourcetable-count-types"]], "structures.table.SourceTable.dtype": [[202, "structures-table-sourcetable-dtype"]], "structures.table.SourceTable.field": [[203, "structures-table-sourcetable-field"]], "structures.table.SourceTable.filled": [[204, "structures-table-sourcetable-filled"]], "structures.table.SourceTable.from_pandas": [[205, "structures-table-sourcetable-from-pandas"]], "structures.table.SourceTable.generate_schema": [[206, "structures-table-sourcetable-generate-schema"]], "structures.table.SourceTable.get_coordinates": [[207, "structures-table-sourcetable-get-coordinates"]], "structures.table.SourceTable.group_by": [[208, "structures-table-sourcetable-group-by"]], "structures.table.SourceTable.groups": [[209, "structures-table-sourcetable-groups"]], "structures.table.SourceTable.has_masked_columns": [[210, "structures-table-sourcetable-has-masked-columns"]], "structures.table.SourceTable.has_masked_values": [[211, "structures-table-sourcetable-has-masked-values"]], "structures.table.SourceTable.has_mixin_columns": [[212, "structures-table-sourcetable-has-mixin-columns"]], "structures.table.SourceTable.iloc": [[213, "structures-table-sourcetable-iloc"]], "structures.table.SourceTable.index_column": [[214, "structures-table-sourcetable-index-column"]], "structures.table.SourceTable.index_mode": [[215, "structures-table-sourcetable-index-mode"]], "structures.table.SourceTable.indices": [[216, "structures-table-sourcetable-indices"]], "structures.table.SourceTable.info": [[217, "structures-table-sourcetable-info"]], "structures.table.SourceTable.insert_row": [[218, "structures-table-sourcetable-insert-row"]], "structures.table.SourceTable.items": [[219, "structures-table-sourcetable-items"]], "structures.table.SourceTable.itercols": [[220, "structures-table-sourcetable-itercols"]], "structures.table.SourceTable.iterrows": [[221, "structures-table-sourcetable-iterrows"]], "structures.table.SourceTable.keep_columns": [[222, "structures-table-sourcetable-keep-columns"]], "structures.table.SourceTable.keys": [[223, "structures-table-sourcetable-keys"]], "structures.table.SourceTable.lat": [[224, "structures-table-sourcetable-lat"]], "structures.table.SourceTable.loc": [[225, "structures-table-sourcetable-loc"]], "structures.table.SourceTable.loc_indices": [[226, "structures-table-sourcetable-loc-indices"]], "structures.table.SourceTable.lon": [[227, "structures-table-sourcetable-lon"]], "structures.table.SourceTable.mask": [[228, "structures-table-sourcetable-mask"]], "structures.table.SourceTable.masked": [[229, "structures-table-sourcetable-masked"]], "structures.table.SourceTable.meta": [[230, "structures-table-sourcetable-meta"]], "structures.table.SourceTable.more": [[231, "structures-table-sourcetable-more"]], "structures.table.SourceTable.name": [[232, "structures-table-sourcetable-name"]], "structures.table.SourceTable.pformat": [[233, "structures-table-sourcetable-pformat"]], "structures.table.SourceTable.pformat_all": [[234, "structures-table-sourcetable-pformat-all"]], "structures.table.SourceTable.pprint": [[235, "structures-table-sourcetable-pprint"]], "structures.table.SourceTable.pprint_all": [[236, "structures-table-sourcetable-pprint-all"]], "structures.table.SourceTable.pprint_exclude_names": [[237, "structures-table-sourcetable-pprint-exclude-names"]], "structures.table.SourceTable.pprint_include_names": [[238, "structures-table-sourcetable-pprint-include-names"]], "structures.table.SourceTable.read": [[239, "structures-table-sourcetable-read"]], "structures.table.SourceTable.redshift": [[240, "structures-table-sourcetable-redshift"]], "structures.table.SourceTable.remove_column": [[241, "structures-table-sourcetable-remove-column"]], "structures.table.SourceTable.remove_columns": [[242, "structures-table-sourcetable-remove-columns"]], "structures.table.SourceTable.remove_indices": [[243, "structures-table-sourcetable-remove-indices"]], "structures.table.SourceTable.remove_row": [[244, "structures-table-sourcetable-remove-row"]], "structures.table.SourceTable.remove_rows": [[245, "structures-table-sourcetable-remove-rows"]], "structures.table.SourceTable.rename_column": [[246, "structures-table-sourcetable-rename-column"]], "structures.table.SourceTable.rename_columns": [[247, "structures-table-sourcetable-rename-columns"]], "structures.table.SourceTable.replace_column": [[248, "structures-table-sourcetable-replace-column"]], "structures.table.SourceTable.reverse": [[249, "structures-table-sourcetable-reverse"]], "structures.table.SourceTable.round": [[250, "structures-table-sourcetable-round"]], "structures.table.SourceTable.schema": [[251, "structures-table-sourcetable-schema"]], "structures.table.SourceTable.show_in_browser": [[252, "structures-table-sourcetable-show-in-browser"]], "structures.table.SourceTable.show_in_notebook": [[253, "structures-table-sourcetable-show-in-notebook"]], "structures.table.SourceTable.sort": [[254, "structures-table-sourcetable-sort"]], "structures.table.SourceTable.to_pandas": [[255, "structures-table-sourcetable-to-pandas"]], "structures.table.SourceTable.type": [[256, "structures-table-sourcetable-type"]], "structures.table.SourceTable.type_native": [[257, "structures-table-sourcetable-type-native"]], "structures.table.SourceTable.update": [[258, "structures-table-sourcetable-update"]], "structures.table.SourceTable.values": [[259, "structures-table-sourcetable-values"]], "structures.table.SourceTable.values_equal": [[260, "structures-table-sourcetable-values-equal"]], "structures.table.SourceTable.write": [[261, "structures-table-sourcetable-write"]], "utilities.core": [[262, "module-utilities.core"]], "utilities.core.enforce_units": [[263, "utilities-core-enforce-units"]], "utilities.core.getFromDict": [[264, "utilities-core-getfromdict"]], "utilities.core.setInDict": [[265, "utilities-core-setindict"]], "utilities.mp_utils": [[266, "module-utilities.mp_utils"]], "utilities.mp_utils.split": [[267, "utilities-mp-utils-split"]], "utilities.text": [[268, "module-utilities.text"]], "utilities.text.Spinner": [[269, "utilities-text-spinner"]], "utilities.text.Spinner.__init__": [[270, "utilities-text-spinner-init"]], "utilities.text.Spinner.busy": [[271, "utilities-text-spinner-busy"]], "utilities.text.Spinner.delay": [[272, "utilities-text-spinner-delay"]], "utilities.text.Spinner.formatter": [[273, "utilities-text-spinner-formatter"]], "utilities.text.Spinner.process": [[274, "utilities-text-spinner-process"]], "utilities.text.Spinner.spinner_task": [[275, "utilities-text-spinner-spinner-task"]], "utilities.text.Spinner.spinning_cursor": [[276, "utilities-text-spinner-spinning-cursor"]], "utilities.text.Spinner.stream": [[277, "utilities-text-spinner-stream"]], "API": [[278, "api"]], "Statistics": [[278, "statistics"], [284, "statistics"]], "Structures": [[278, "structures"]], "Other": [[278, "other"]], "Data Structures": [[279, "data-structures"]], "DATABASES": [[279, "databases"]], "SCHEMAS": [[279, "schemas"]], "Sky Collection Schema": [[279, "sky-collection-schema"]], "Formatting": [[279, "formatting"]], "Examples": [[280, "examples"]], "pyXMIP Quickstart Guide": [[281, "pyxmip-quickstart-guide"]], "Installation + Setup": [[281, "installation-setup"]], "Critical Components": [[281, "critical-components"]], "Features": [[282, "features"]], "Resources": [[282, "resources"]], "Pages": [[282, "pages"]], "Reference": [[284, "reference"]], "Getting Started": [[284, "getting-started"]], "Installation": [[284, "installation"]], "Basic Usage": [[284, "basic-usage"]], "Creating Plots": [[284, "creating-plots"]], "Backend": [[284, "backend"]], "Cross Matching": [[285, "cross-matching"]], "Loading Your Catalog": [[285, "loading-your-catalog"]], "Matching Sources": [[285, "matching-sources"]], "Match Reduction": [[285, "match-reduction"]], "Mathematical Overview": [[285, "mathematical-overview"]], "Sub-Process Overview": [[285, "sub-process-overview"]], "Reduction Schema": [[285, "reduction-schema"]], "General Formatting": [[285, "general-formatting"]], "RUN_PARAM table": [[285, "id2"]], "Table Title": [[285, "id3"]], "Databases": [[286, "databases"]], "Basic Information": [[286, "basic-information"]]}, "indexentries": {"module": [[0, "module-schema"], [66, "module-structures.databases"], [150, "module-structures.map"], [185, "module-structures.table"], [262, "module-utilities.core"], [266, "module-utilities.mp_utils"], [268, "module-utilities.text"]], "schema": [[0, "module-schema"]], "reductionschema (class in schema)": [[1, "schema.ReductionSchema"]], "dbpath (schema.reductionschema attribute)": [[2, "schema.ReductionSchema.DBPATH"]], "instrumental (schema.reductionschema attribute)": [[3, "schema.ReductionSchema.INSTRUMENTAL"]], "instrument_params (schema.reductionschema attribute)": [[4, "schema.ReductionSchema.INSTRUMENT_PARAMS"]], "io_params (schema.reductionschema attribute)": [[5, "schema.ReductionSchema.IO_PARAMS"]], "object_params (schema.reductionschema attribute)": [[6, "schema.ReductionSchema.OBJECT_PARAMS"]], "otypes (schema.reductionschema attribute)": [[7, "schema.ReductionSchema.OTYPES"]], "poisson (schema.reductionschema attribute)": [[8, "schema.ReductionSchema.POISSON"]], "poisson_params (schema.reductionschema attribute)": [[9, "schema.ReductionSchema.POISSON_PARAMS"]], "psf (schema.reductionschema attribute)": [[10, "schema.ReductionSchema.PSF"]], "refdbs (schema.reductionschema attribute)": [[11, "schema.ReductionSchema.REFDBS"]], "run_params (schema.reductionschema attribute)": [[12, "schema.ReductionSchema.RUN_PARAMS"]], "__init__() (schema.reductionschema method)": [[13, "schema.ReductionSchema.__init__"]], "clear() (schema.reductionschema method)": [[14, "schema.ReductionSchema.clear"]], "copy() (schema.reductionschema method)": [[15, "schema.ReductionSchema.copy"]], "from_file() (schema.reductionschema class method)": [[16, "schema.ReductionSchema.from_file"]], "fromkeys() (schema.reductionschema method)": [[17, "schema.ReductionSchema.fromkeys"]], "get() (schema.reductionschema method)": [[18, "schema.ReductionSchema.get"]], "isvalid() (schema.reductionschema method)": [[19, "schema.ReductionSchema.isvalid"]], "items() (schema.reductionschema method)": [[20, "schema.ReductionSchema.items"]], "keys() (schema.reductionschema method)": [[21, "schema.ReductionSchema.keys"]], "pop() (schema.reductionschema method)": [[22, "schema.ReductionSchema.pop"]], "popitem() (schema.reductionschema method)": [[23, "schema.ReductionSchema.popitem"]], "setdefault() (schema.reductionschema method)": [[24, "schema.ReductionSchema.setdefault"]], "update() (schema.reductionschema method)": [[25, "schema.ReductionSchema.update"]], "values() (schema.reductionschema method)": [[26, "schema.ReductionSchema.values"]], "schema (class in schema)": [[27, "schema.Schema"]], "__init__() (schema.schema method)": [[28, "schema.Schema.__init__"]], "clear() (schema.schema method)": [[29, "schema.Schema.clear"]], "copy() (schema.schema method)": [[30, "schema.Schema.copy"]], "from_file() (schema.schema class method)": [[31, "schema.Schema.from_file"]], "fromkeys() (schema.schema method)": [[32, "schema.Schema.fromkeys"]], "get() (schema.schema method)": [[33, "schema.Schema.get"]], "isvalid() (schema.schema method)": [[34, "schema.Schema.isvalid"]], "items() (schema.schema method)": [[35, "schema.Schema.items"]], "keys() (schema.schema method)": [[36, "schema.Schema.keys"]], "pop() (schema.schema method)": [[37, "schema.Schema.pop"]], "popitem() (schema.schema method)": [[38, "schema.Schema.popitem"]], "setdefault() (schema.schema method)": [[39, "schema.Schema.setdefault"]], "update() (schema.schema method)": [[40, "schema.Schema.update"]], "values() (schema.schema method)": [[41, "schema.Schema.values"]], "sourcetableschema (class in schema)": [[42, "schema.SourceTableSchema"]], "__init__() (schema.sourcetableschema method)": [[43, "schema.SourceTableSchema.__init__"]], "available_coordinate_frames() (schema.sourcetableschema method)": [[44, "schema.SourceTableSchema.available_coordinate_frames"]], "clear() (schema.sourcetableschema method)": [[45, "schema.SourceTableSchema.clear"]], "column_map (schema.sourcetableschema attribute)": [[46, "schema.SourceTableSchema.column_map"]], "construct() (schema.sourcetableschema class method)": [[47, "schema.SourceTableSchema.construct"]], "coordinate_columns (schema.sourcetableschema property)": [[48, "schema.SourceTableSchema.coordinate_columns"]], "coordinate_frame (schema.sourcetableschema property)": [[49, "schema.SourceTableSchema.coordinate_frame"]], "coordinate_system (schema.sourcetableschema property)": [[50, "schema.SourceTableSchema.coordinate_system"]], "copy() (schema.sourcetableschema method)": [[51, "schema.SourceTableSchema.copy"]], "default_coord_system (schema.sourcetableschema attribute)": [[52, "schema.SourceTableSchema.default_coord_system"]], "from_file() (schema.sourcetableschema class method)": [[53, "schema.SourceTableSchema.from_file"]], "fromkeys() (schema.sourcetableschema method)": [[54, "schema.SourceTableSchema.fromkeys"]], "get() (schema.sourcetableschema method)": [[55, "schema.SourceTableSchema.get"]], "inv_column_map (schema.sourcetableschema property)": [[56, "schema.SourceTableSchema.inv_column_map"]], "isvalid() (schema.sourcetableschema method)": [[57, "schema.SourceTableSchema.isvalid"]], "items() (schema.sourcetableschema method)": [[58, "schema.SourceTableSchema.items"]], "keys() (schema.sourcetableschema method)": [[59, "schema.SourceTableSchema.keys"]], "object_map (schema.sourcetableschema attribute)": [[60, "schema.SourceTableSchema.object_map"]], "pop() (schema.sourcetableschema method)": [[61, "schema.SourceTableSchema.pop"]], "popitem() (schema.sourcetableschema method)": [[62, "schema.SourceTableSchema.popitem"]], "setdefault() (schema.sourcetableschema method)": [[63, "schema.SourceTableSchema.setdefault"]], "update() (schema.sourcetableschema method)": [[64, "schema.SourceTableSchema.update"]], "values() (schema.sourcetableschema method)": [[65, "schema.SourceTableSchema.values"]], "structures.databases": [[66, "module-structures.databases"]], "dbregistry (class in structures.databases)": [[67, "structures.databases.DBRegistry"]], "__init__() (structures.databases.dbregistry method)": [[68, "structures.databases.DBRegistry.__init__"]], "clear() (structures.databases.dbregistry method)": [[69, "structures.databases.DBRegistry.clear"]], "copy() (structures.databases.dbregistry method)": [[70, "structures.databases.DBRegistry.copy"]], "fromkeys() (structures.databases.dbregistry method)": [[71, "structures.databases.DBRegistry.fromkeys"]], "get() (structures.databases.dbregistry method)": [[72, "structures.databases.DBRegistry.get"]], "items() (structures.databases.dbregistry method)": [[73, "structures.databases.DBRegistry.items"]], "keys() (structures.databases.dbregistry method)": [[74, "structures.databases.DBRegistry.keys"]], "pop() (structures.databases.dbregistry method)": [[75, "structures.databases.DBRegistry.pop"]], "popitem() (structures.databases.dbregistry method)": [[76, "structures.databases.DBRegistry.popitem"]], "setdefault() (structures.databases.dbregistry method)": [[77, "structures.databases.DBRegistry.setdefault"]], "update() (structures.databases.dbregistry method)": [[78, "structures.databases.DBRegistry.update"]], "values() (structures.databases.dbregistry method)": [[79, "structures.databases.DBRegistry.values"]], "localdatabase (class in structures.databases)": [[80, "structures.databases.LocalDatabase"]], "__init__() (structures.databases.localdatabase method)": [[81, "structures.databases.LocalDatabase.__init__"]], "add_sources_to_poisson() (structures.databases.localdatabase class method)": [[82, "structures.databases.LocalDatabase.add_sources_to_poisson"]], "class_table_schema (structures.databases.localdatabase attribute)": [[83, "structures.databases.LocalDatabase.class_table_schema"]], "count() (structures.databases.localdatabase class method)": [[84, "structures.databases.LocalDatabase.count"]], "create_poisson_map() (structures.databases.localdatabase class method)": [[85, "structures.databases.LocalDatabase.create_poisson_map"]], "default_poisson_map (structures.databases.localdatabase attribute)": [[86, "structures.databases.LocalDatabase.default_poisson_map"]], "get_default_poisson_map() (structures.databases.localdatabase class method)": [[87, "structures.databases.LocalDatabase.get_default_poisson_map"]], "get_poisson_map() (structures.databases.localdatabase class method)": [[88, "structures.databases.LocalDatabase.get_poisson_map"]], "poisson_map (structures.databases.localdatabase attribute)": [[89, "structures.databases.LocalDatabase.poisson_map"]], "query_radius() (structures.databases.localdatabase class method)": [[90, "structures.databases.LocalDatabase.query_radius"]], "random_sample_count() (structures.databases.localdatabase class method)": [[91, "structures.databases.LocalDatabase.random_sample_count"]], "set_poisson_map() (structures.databases.localdatabase class method)": [[92, "structures.databases.LocalDatabase.set_poisson_map"]], "source_match() (structures.databases.localdatabase class method)": [[93, "structures.databases.LocalDatabase.source_match"]], "ned (class in structures.databases)": [[94, "structures.databases.NED"]], "__init__() (structures.databases.ned method)": [[95, "structures.databases.NED.__init__"]], "add_sources_to_poisson() (structures.databases.ned class method)": [[96, "structures.databases.NED.add_sources_to_poisson"]], "class_table_schema (structures.databases.ned attribute)": [[97, "structures.databases.NED.class_table_schema"]], "count() (structures.databases.ned class method)": [[98, "structures.databases.NED.count"]], "create_poisson_map() (structures.databases.ned class method)": [[99, "structures.databases.NED.create_poisson_map"]], "default_poisson_map (structures.databases.ned attribute)": [[100, "structures.databases.NED.default_poisson_map"]], "get_default_poisson_map() (structures.databases.ned class method)": [[101, "structures.databases.NED.get_default_poisson_map"]], "get_poisson_map() (structures.databases.ned class method)": [[102, "structures.databases.NED.get_poisson_map"]], "poisson_map (structures.databases.ned attribute)": [[103, "structures.databases.NED.poisson_map"]], "query_radius() (structures.databases.ned class method)": [[104, "structures.databases.NED.query_radius"]], "random_sample_count() (structures.databases.ned class method)": [[105, "structures.databases.NED.random_sample_count"]], "set_poisson_map() (structures.databases.ned class method)": [[106, "structures.databases.NED.set_poisson_map"]], "source_match() (structures.databases.ned class method)": [[107, "structures.databases.NED.source_match"]], "remotedatabase (class in structures.databases)": [[108, "structures.databases.RemoteDatabase"]], "__init__() (structures.databases.remotedatabase method)": [[109, "structures.databases.RemoteDatabase.__init__"]], "add_sources_to_poisson() (structures.databases.remotedatabase class method)": [[110, "structures.databases.RemoteDatabase.add_sources_to_poisson"]], "class_table_schema (structures.databases.remotedatabase attribute)": [[111, "structures.databases.RemoteDatabase.class_table_schema"]], "count() (structures.databases.remotedatabase class method)": [[112, "structures.databases.RemoteDatabase.count"]], "create_poisson_map() (structures.databases.remotedatabase class method)": [[113, "structures.databases.RemoteDatabase.create_poisson_map"]], "default_poisson_map (structures.databases.remotedatabase attribute)": [[114, "structures.databases.RemoteDatabase.default_poisson_map"]], "get_default_poisson_map() (structures.databases.remotedatabase class method)": [[115, "structures.databases.RemoteDatabase.get_default_poisson_map"]], "get_poisson_map() (structures.databases.remotedatabase class method)": [[116, "structures.databases.RemoteDatabase.get_poisson_map"]], "poisson_map (structures.databases.remotedatabase attribute)": [[117, "structures.databases.RemoteDatabase.poisson_map"]], "query_radius() (structures.databases.remotedatabase class method)": [[118, "structures.databases.RemoteDatabase.query_radius"]], "random_sample_count() (structures.databases.remotedatabase class method)": [[119, "structures.databases.RemoteDatabase.random_sample_count"]], "set_poisson_map() (structures.databases.remotedatabase class method)": [[120, "structures.databases.RemoteDatabase.set_poisson_map"]], "source_match() (structures.databases.remotedatabase class method)": [[121, "structures.databases.RemoteDatabase.source_match"]], "simbad (class in structures.databases)": [[122, "structures.databases.SIMBAD"]], "__init__() (structures.databases.simbad method)": [[123, "structures.databases.SIMBAD.__init__"]], "add_sources_to_poisson() (structures.databases.simbad class method)": [[124, "structures.databases.SIMBAD.add_sources_to_poisson"]], "class_table_schema (structures.databases.simbad attribute)": [[125, "structures.databases.SIMBAD.class_table_schema"]], "count() (structures.databases.simbad class method)": [[126, "structures.databases.SIMBAD.count"]], "create_poisson_map() (structures.databases.simbad class method)": [[127, "structures.databases.SIMBAD.create_poisson_map"]], "default_poisson_map (structures.databases.simbad attribute)": [[128, "structures.databases.SIMBAD.default_poisson_map"]], "get_default_poisson_map() (structures.databases.simbad class method)": [[129, "structures.databases.SIMBAD.get_default_poisson_map"]], "get_poisson_map() (structures.databases.simbad class method)": [[130, "structures.databases.SIMBAD.get_poisson_map"]], "poisson_map (structures.databases.simbad attribute)": [[131, "structures.databases.SIMBAD.poisson_map"]], "query_radius() (structures.databases.simbad class method)": [[132, "structures.databases.SIMBAD.query_radius"]], "random_sample_count() (structures.databases.simbad class method)": [[133, "structures.databases.SIMBAD.random_sample_count"]], "set_poisson_map() (structures.databases.simbad class method)": [[134, "structures.databases.SIMBAD.set_poisson_map"]], "source_match() (structures.databases.simbad class method)": [[135, "structures.databases.SIMBAD.source_match"]], "sourcedatabase (class in structures.databases)": [[136, "structures.databases.SourceDatabase"]], "__init__() (structures.databases.sourcedatabase method)": [[137, "structures.databases.SourceDatabase.__init__"]], "add_sources_to_poisson() (structures.databases.sourcedatabase class method)": [[138, "structures.databases.SourceDatabase.add_sources_to_poisson"]], "class_table_schema (structures.databases.sourcedatabase attribute)": [[139, "structures.databases.SourceDatabase.class_table_schema"]], "count() (structures.databases.sourcedatabase class method)": [[140, "structures.databases.SourceDatabase.count"]], "create_poisson_map() (structures.databases.sourcedatabase class method)": [[141, "structures.databases.SourceDatabase.create_poisson_map"]], "default_poisson_map (structures.databases.sourcedatabase attribute)": [[142, "structures.databases.SourceDatabase.default_poisson_map"]], "get_default_poisson_map() (structures.databases.sourcedatabase class method)": [[143, "structures.databases.SourceDatabase.get_default_poisson_map"]], "get_poisson_map() (structures.databases.sourcedatabase class method)": [[144, "structures.databases.SourceDatabase.get_poisson_map"]], "poisson_map (structures.databases.sourcedatabase attribute)": [[145, "structures.databases.SourceDatabase.poisson_map"]], "query_radius() (structures.databases.sourcedatabase class method)": [[146, "structures.databases.SourceDatabase.query_radius"]], "random_sample_count() (structures.databases.sourcedatabase class method)": [[147, "structures.databases.SourceDatabase.random_sample_count"]], "set_poisson_map() (structures.databases.sourcedatabase class method)": [[148, "structures.databases.SourceDatabase.set_poisson_map"]], "source_match() (structures.databases.sourcedatabase class method)": [[149, "structures.databases.SourceDatabase.source_match"]], "structures.map": [[150, "module-structures.map"]], "map (class in structures.map)": [[151, "structures.map.Map"]], "__init__() (structures.map.map method)": [[152, "structures.map.Map.__init__"]], "coordinate_frame (structures.map.map property)": [[153, "structures.map.Map.coordinate_frame"]], "mapatlas (class in structures.map)": [[154, "structures.map.MapAtlas"]], "__init__() (structures.map.mapatlas method)": [[155, "structures.map.MapAtlas.__init__"]], "coordinate_frame (structures.map.mapatlas property)": [[156, "structures.map.MapAtlas.coordinate_frame"]], "generate() (structures.map.mapatlas class method)": [[157, "structures.map.MapAtlas.generate"]], "get_map() (structures.map.mapatlas method)": [[158, "structures.map.MapAtlas.get_map"]], "has_maps (structures.map.mapatlas property)": [[159, "structures.map.MapAtlas.has_maps"]], "hdus (structures.map.mapatlas property)": [[160, "structures.map.MapAtlas.hdus"]], "map_names (structures.map.mapatlas property)": [[161, "structures.map.MapAtlas.map_names"]], "pixel_positions (structures.map.mapatlas property)": [[162, "structures.map.MapAtlas.pixel_positions"]], "remove() (structures.map.mapatlas method)": [[163, "structures.map.MapAtlas.remove"]], "reshape_healpix() (structures.map.mapatlas method)": [[164, "structures.map.MapAtlas.reshape_healpix"]], "statatlas (class in structures.map)": [[165, "structures.map.StatAtlas"]], "__init__() (structures.map.statatlas method)": [[166, "structures.map.StatAtlas.__init__"]], "append_to_fits() (structures.map.statatlas method)": [[167, "structures.map.StatAtlas.append_to_fits"]], "build_poisson_map() (structures.map.statatlas method)": [[168, "structures.map.StatAtlas.build_poisson_map"]], "build_poisson_map_map() (structures.map.statatlas method)": [[169, "structures.map.StatAtlas.build_poisson_map_MAP"]], "build_poisson_map_nnr() (structures.map.statatlas method)": [[170, "structures.map.StatAtlas.build_poisson_map_NNR"]], "build_poisson_map_gp() (structures.map.statatlas method)": [[171, "structures.map.StatAtlas.build_poisson_map_gp"]], "build_poisson_maps() (structures.map.statatlas method)": [[172, "structures.map.StatAtlas.build_poisson_maps"]], "coordinate_frame (structures.map.statatlas property)": [[173, "structures.map.StatAtlas.coordinate_frame"]], "generate() (structures.map.statatlas class method)": [[174, "structures.map.StatAtlas.generate"]], "get_map() (structures.map.statatlas method)": [[175, "structures.map.StatAtlas.get_map"]], "get_points() (structures.map.statatlas method)": [[176, "structures.map.StatAtlas.get_points"]], "has_maps (structures.map.statatlas property)": [[177, "structures.map.StatAtlas.has_maps"]], "hdus (structures.map.statatlas property)": [[178, "structures.map.StatAtlas.hdus"]], "map_names (structures.map.statatlas property)": [[179, "structures.map.StatAtlas.map_names"]], "pixel_positions (structures.map.statatlas property)": [[180, "structures.map.StatAtlas.pixel_positions"]], "remove() (structures.map.statatlas method)": [[181, "structures.map.StatAtlas.remove"]], "reset() (structures.map.statatlas method)": [[182, "structures.map.StatAtlas.reset"]], "reshape_healpix() (structures.map.statatlas method)": [[183, "structures.map.StatAtlas.reshape_healpix"]], "sample_from_database() (structures.map.statatlas method)": [[184, "structures.map.StatAtlas.sample_from_database"]], "structures.table": [[185, "module-structures.table"]], "sourcetable (class in structures.table)": [[186, "structures.table.SourceTable"]], "columnclass (structures.table.sourcetable property)": [[187, "structures.table.SourceTable.ColumnClass"]], "__init__() (structures.table.sourcetable method)": [[188, "structures.table.SourceTable.__init__"]], "add_column() (structures.table.sourcetable method)": [[189, "structures.table.SourceTable.add_column"]], "add_columns() (structures.table.sourcetable method)": [[190, "structures.table.SourceTable.add_columns"]], "add_index() (structures.table.sourcetable method)": [[191, "structures.table.SourceTable.add_index"]], "add_row() (structures.table.sourcetable method)": [[192, "structures.table.SourceTable.add_row"]], "append_to_fits() (structures.table.sourcetable method)": [[193, "structures.table.SourceTable.append_to_fits"]], "append_to_sql() (structures.table.sourcetable method)": [[194, "structures.table.SourceTable.append_to_sql"]], "argsort() (structures.table.sourcetable method)": [[195, "structures.table.SourceTable.argsort"]], "as_array() (structures.table.sourcetable method)": [[196, "structures.table.SourceTable.as_array"]], "colnames (structures.table.sourcetable property)": [[197, "structures.table.SourceTable.colnames"]], "convert_bytestring_to_unicode() (structures.table.sourcetable method)": [[198, "structures.table.SourceTable.convert_bytestring_to_unicode"]], "convert_unicode_to_bytestring() (structures.table.sourcetable method)": [[199, "structures.table.SourceTable.convert_unicode_to_bytestring"]], "copy() (structures.table.sourcetable method)": [[200, "structures.table.SourceTable.copy"]], "count_types() (structures.table.sourcetable method)": [[201, "structures.table.SourceTable.count_types"]], "dtype (structures.table.sourcetable property)": [[202, "structures.table.SourceTable.dtype"]], "field() (structures.table.sourcetable method)": [[203, "structures.table.SourceTable.field"]], "filled() (structures.table.sourcetable method)": [[204, "structures.table.SourceTable.filled"]], "from_pandas() (structures.table.sourcetable class method)": [[205, "structures.table.SourceTable.from_pandas"]], "generate_schema() (structures.table.sourcetable method)": [[206, "structures.table.SourceTable.generate_schema"]], "get_coordinates() (structures.table.sourcetable method)": [[207, "structures.table.SourceTable.get_coordinates"]], "group_by() (structures.table.sourcetable method)": [[208, "structures.table.SourceTable.group_by"]], "groups (structures.table.sourcetable property)": [[209, "structures.table.SourceTable.groups"]], "has_masked_columns (structures.table.sourcetable property)": [[210, "structures.table.SourceTable.has_masked_columns"]], "has_masked_values (structures.table.sourcetable property)": [[211, "structures.table.SourceTable.has_masked_values"]], "has_mixin_columns (structures.table.sourcetable property)": [[212, "structures.table.SourceTable.has_mixin_columns"]], "iloc (structures.table.sourcetable property)": [[213, "structures.table.SourceTable.iloc"]], "index_column() (structures.table.sourcetable method)": [[214, "structures.table.SourceTable.index_column"]], "index_mode() (structures.table.sourcetable method)": [[215, "structures.table.SourceTable.index_mode"]], "indices (structures.table.sourcetable property)": [[216, "structures.table.SourceTable.indices"]], "info (structures.table.sourcetable attribute)": [[217, "structures.table.SourceTable.info"]], "insert_row() (structures.table.sourcetable method)": [[218, "structures.table.SourceTable.insert_row"]], "items() (structures.table.sourcetable method)": [[219, "structures.table.SourceTable.items"]], "itercols() (structures.table.sourcetable method)": [[220, "structures.table.SourceTable.itercols"]], "iterrows() (structures.table.sourcetable method)": [[221, "structures.table.SourceTable.iterrows"]], "keep_columns() (structures.table.sourcetable method)": [[222, "structures.table.SourceTable.keep_columns"]], "keys() (structures.table.sourcetable method)": [[223, "structures.table.SourceTable.keys"]], "lat (structures.table.sourcetable property)": [[224, "structures.table.SourceTable.lat"]], "loc (structures.table.sourcetable property)": [[225, "structures.table.SourceTable.loc"]], "loc_indices (structures.table.sourcetable property)": [[226, "structures.table.SourceTable.loc_indices"]], "lon (structures.table.sourcetable property)": [[227, "structures.table.SourceTable.lon"]], "mask (structures.table.sourcetable property)": [[228, "structures.table.SourceTable.mask"]], "masked (structures.table.sourcetable property)": [[229, "structures.table.SourceTable.masked"]], "meta (structures.table.sourcetable attribute)": [[230, "structures.table.SourceTable.meta"]], "more() (structures.table.sourcetable method)": [[231, "structures.table.SourceTable.more"]], "name (structures.table.sourcetable property)": [[232, "structures.table.SourceTable.name"]], "pformat() (structures.table.sourcetable method)": [[233, "structures.table.SourceTable.pformat"]], "pformat_all() (structures.table.sourcetable method)": [[234, "structures.table.SourceTable.pformat_all"]], "pprint() (structures.table.sourcetable method)": [[235, "structures.table.SourceTable.pprint"]], "pprint_all() (structures.table.sourcetable method)": [[236, "structures.table.SourceTable.pprint_all"]], "pprint_exclude_names (structures.table.sourcetable attribute)": [[237, "structures.table.SourceTable.pprint_exclude_names"]], "pprint_include_names (structures.table.sourcetable attribute)": [[238, "structures.table.SourceTable.pprint_include_names"]], "read (structures.table.sourcetable attribute)": [[239, "structures.table.SourceTable.read"]], "redshift (structures.table.sourcetable property)": [[240, "structures.table.SourceTable.redshift"]], "remove_column() (structures.table.sourcetable method)": [[241, "structures.table.SourceTable.remove_column"]], "remove_columns() (structures.table.sourcetable method)": [[242, "structures.table.SourceTable.remove_columns"]], "remove_indices() (structures.table.sourcetable method)": [[243, "structures.table.SourceTable.remove_indices"]], "remove_row() (structures.table.sourcetable method)": [[244, "structures.table.SourceTable.remove_row"]], "remove_rows() (structures.table.sourcetable method)": [[245, "structures.table.SourceTable.remove_rows"]], "rename_column() (structures.table.sourcetable method)": [[246, "structures.table.SourceTable.rename_column"]], "rename_columns() (structures.table.sourcetable method)": [[247, "structures.table.SourceTable.rename_columns"]], "replace_column() (structures.table.sourcetable method)": [[248, "structures.table.SourceTable.replace_column"]], "reverse() (structures.table.sourcetable method)": [[249, "structures.table.SourceTable.reverse"]], "round() (structures.table.sourcetable method)": [[250, "structures.table.SourceTable.round"]], "schema (structures.table.sourcetable property)": [[251, "structures.table.SourceTable.schema"]], "show_in_browser() (structures.table.sourcetable method)": [[252, "structures.table.SourceTable.show_in_browser"]], "show_in_notebook() (structures.table.sourcetable method)": [[253, "structures.table.SourceTable.show_in_notebook"]], "sort() (structures.table.sourcetable method)": [[254, "structures.table.SourceTable.sort"]], "to_pandas() (structures.table.sourcetable method)": [[255, "structures.table.SourceTable.to_pandas"]], "type (structures.table.sourcetable property)": [[256, "structures.table.SourceTable.type"]], "type_native (structures.table.sourcetable property)": [[257, "structures.table.SourceTable.type_native"]], "update() (structures.table.sourcetable method)": [[258, "structures.table.SourceTable.update"]], "values() (structures.table.sourcetable method)": [[259, "structures.table.SourceTable.values"]], "values_equal() (structures.table.sourcetable method)": [[260, "structures.table.SourceTable.values_equal"]], "write (structures.table.sourcetable attribute)": [[261, "structures.table.SourceTable.write"]], "utilities.core": [[262, "module-utilities.core"]], "enforce_units() (in module utilities.core)": [[263, "utilities.core.enforce_units"]], "getfromdict() (in module utilities.core)": [[264, "utilities.core.getFromDict"]], "setindict() (in module utilities.core)": [[265, "utilities.core.setInDict"]], "utilities.mp_utils": [[266, "module-utilities.mp_utils"]], "split() (in module utilities.mp_utils)": [[267, "utilities.mp_utils.split"]], "utilities.text": [[268, "module-utilities.text"]], "spinner (class in utilities.text)": [[269, "utilities.text.Spinner"]], "__init__() (utilities.text.spinner method)": [[270, "utilities.text.Spinner.__init__"]], "busy (utilities.text.spinner attribute)": [[271, "utilities.text.Spinner.busy"]], "delay (utilities.text.spinner attribute)": [[272, "utilities.text.Spinner.delay"]], "formatter (utilities.text.spinner attribute)": [[273, "utilities.text.Spinner.formatter"]], "process (utilities.text.spinner attribute)": [[274, "utilities.text.Spinner.process"]], "spinner_task() (utilities.text.spinner method)": [[275, "utilities.text.Spinner.spinner_task"]], "spinning_cursor() (utilities.text.spinner static method)": [[276, "utilities.text.Spinner.spinning_cursor"]], "stream (utilities.text.spinner attribute)": [[277, "utilities.text.Spinner.stream"]]}})